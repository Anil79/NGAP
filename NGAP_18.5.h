#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <semaphore.h>
#include <string.h>
#include <time.h>
#include <sys/time.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdarg.h>
#include <unistd.h>
#include <signal.h>
#include <limits.h>
#include <poll.h>
#include <sys/epoll.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <error.h>
#include <errno.h>
#include <sys/ioctl.h>
#include <net/if.h> 

#include "sirik_core.h"
#include "libAsn.h"

#ifndef SIRIK_NGAP_18_5_ASN_H
#define SIRIK_NGAP_18_5_ASN_H

#pragma pack(push,4)


#define __si_amf__id_AMFConfigurationUpdate_ProcedureCode                                            0
#define __si_amf__id_AMFStatusIndication_ProcedureCode                                               1
#define __si_amf__id_CellTrafficTrace_ProcedureCode                                                  2
#define __si_amf__id_DeactivateTrace_ProcedureCode                                                   3
#define __si_amf__id_DownlinkNASTransport_ProcedureCode                                              4
#define __si_amf__id_DownlinkNonUEAssociatedNRPPaTransport_ProcedureCode                             5
#define __si_amf__id_DownlinkRANConfigurationTransfer_ProcedureCode                                  6
#define __si_amf__id_DownlinkRANStatusTransfer_ProcedureCode                                         7
#define __si_amf__id_DownlinkUEAssociatedNRPPaTransport_ProcedureCode                                8
#define __si_amf__id_ErrorIndication_ProcedureCode                                                   9
#define __si_amf__id_HandoverCancel_ProcedureCode                                                    10
#define __si_amf__id_HandoverNotification_ProcedureCode                                              11
#define __si_amf__id_HandoverPreparation_ProcedureCode                                               12
#define __si_amf__id_HandoverResourceAllocation_ProcedureCode                                        13
#define __si_amf__id_InitialContextSetup_ProcedureCode                                               14
#define __si_amf__id_InitialUEMessage_ProcedureCode                                                  15
#define __si_amf__id_LocationReportingControl_ProcedureCode                                          16
#define __si_amf__id_LocationReportingFailureIndication_ProcedureCode                                17
#define __si_amf__id_LocationReport_ProcedureCode                                                    18
#define __si_amf__id_NASNonDeliveryIndication_ProcedureCode                                          19
#define __si_amf__id_NGReset_ProcedureCode                                                           20
#define __si_amf__id_NGSetup_ProcedureCode                                                           21
#define __si_amf__id_OverloadStart_ProcedureCode                                                     22
#define __si_amf__id_OverloadStop_ProcedureCode                                                      23
#define __si_amf__id_Paging_ProcedureCode                                                            24
#define __si_amf__id_PathSwitchRequest_ProcedureCode                                                 25
#define __si_amf__id_PDUSessionResourceModify_ProcedureCode                                          26
#define __si_amf__id_PDUSessionResourceModifyIndication_ProcedureCode                                27
#define __si_amf__id_PDUSessionResourceRelease_ProcedureCode                                         28
#define __si_amf__id_PDUSessionResourceSetup_ProcedureCode                                           29
#define __si_amf__id_PDUSessionResourceNotify_ProcedureCode                                          30
#define __si_amf__id_PrivateMessage_ProcedureCode                                                    31
#define __si_amf__id_PWSCancel_ProcedureCode                                                         32
#define __si_amf__id_PWSFailureIndication_ProcedureCode                                              33
#define __si_amf__id_PWSRestartIndication_ProcedureCode                                              34
#define __si_amf__id_RANConfigurationUpdate_ProcedureCode                                            35
#define __si_amf__id_RerouteNASRequest_ProcedureCode                                                 36
#define __si_amf__id_RRCInactiveTransitionReport_ProcedureCode                                       37
#define __si_amf__id_TraceFailureIndication_ProcedureCode                                            38
#define __si_amf__id_TraceStart_ProcedureCode                                                        39
#define __si_amf__id_UEContextModification_ProcedureCode                                             40
#define __si_amf__id_UEContextRelease_ProcedureCode                                                  41
#define __si_amf__id_UEContextReleaseRequest_ProcedureCode                                           42
#define __si_amf__id_UERadioCapabilityCheck_ProcedureCode                                            43
#define __si_amf__id_UERadioCapabilityInfoIndication_ProcedureCode                                   44
#define __si_amf__id_UETNLABindingRelease_ProcedureCode                                              45
#define __si_amf__id_UplinkNASTransport_ProcedureCode                                                46
#define __si_amf__id_UplinkNonUEAssociatedNRPPaTransport_ProcedureCode                               47
#define __si_amf__id_UplinkRANConfigurationTransfer_ProcedureCode                                    48
#define __si_amf__id_UplinkRANStatusTransfer_ProcedureCode                                           49
#define __si_amf__id_UplinkUEAssociatedNRPPaTransport_ProcedureCode                                  50
#define __si_amf__id_WriteReplaceWarning_ProcedureCode                                               51
#define __si_amf__id_SecondaryRATDataUsageReport_ProcedureCode                                       52
#define __si_amf__id_UplinkRIMInformationTransfer_ProcedureCode                                      53
#define __si_amf__id_DownlinkRIMInformationTransfer_ProcedureCode                                    54
#define __si_amf__id_RetrieveUEInformation_ProcedureCode                                             55
#define __si_amf__id_UEInformationTransfer_ProcedureCode                                             56
#define __si_amf__id_RANCPRelocationIndication_ProcedureCode                                         57
#define __si_amf__id_UEContextResume_ProcedureCode                                                   58
#define __si_amf__id_UEContextSuspend_ProcedureCode                                                  59
#define __si_amf__id_UERadioCapabilityIDMapping_ProcedureCode                                        60
#define __si_amf__id_HandoverSuccess_ProcedureCode                                                   61
#define __si_amf__id_UplinkRANEarlyStatusTransfer_ProcedureCode                                      62
#define __si_amf__id_DownlinkRANEarlyStatusTransfer_ProcedureCode                                    63
#define __si_amf__id_AMFCPRelocationIndication_ProcedureCode                                         64
#define __si_amf__id_ConnectionEstablishmentIndication_ProcedureCode                                 65
#define __si_amf__id_BroadcastSessionModification_ProcedureCode                                      66
#define __si_amf__id_BroadcastSessionRelease_ProcedureCode                                           67
#define __si_amf__id_BroadcastSessionSetup_ProcedureCode                                             68
#define __si_amf__id_DistributionSetup_ProcedureCode                                                 69
#define __si_amf__id_DistributionRelease_ProcedureCode                                               70
#define __si_amf__id_MulticastSessionActivation_ProcedureCode                                        71
#define __si_amf__id_MulticastSessionDeactivation_ProcedureCode                                      72
#define __si_amf__id_MulticastSessionUpdate_ProcedureCode                                            73
#define __si_amf__id_MulticastGroupPaging_ProcedureCode                                              74
#define __si_amf__id_BroadcastSessionReleaseRequired_ProcedureCode                                   75
#define __si_amf__id_TimingSynchronisationStatus_ProcedureCode                                       76
#define __si_amf__id_TimingSynchronisationStatusReport_ProcedureCode                                 77
#define __si_amf__id_MTCommunicationHandling_ProcedureCode                                           78
#define __si_amf__id_RANPagingRequest_ProcedureCode                                                  79
#define __si_amf__id_BroadcastSessionTransport_ProcedureCode                                         80



#define id_AMFConfigurationUpdate_ProcedureCode                                                      0
#define id_AMFStatusIndication_ProcedureCode                                                         1
#define id_CellTrafficTrace_ProcedureCode                                                            2
#define id_DeactivateTrace_ProcedureCode                                                             3
#define id_DownlinkNASTransport_ProcedureCode                                                        4
#define id_DownlinkNonUEAssociatedNRPPaTransport_ProcedureCode                                       5
#define id_DownlinkRANConfigurationTransfer_ProcedureCode                                            6
#define id_DownlinkRANStatusTransfer_ProcedureCode                                                   7
#define id_DownlinkUEAssociatedNRPPaTransport_ProcedureCode                                          8
#define id_ErrorIndication_ProcedureCode                                                             9
#define id_HandoverCancel_ProcedureCode                                                              10
#define id_HandoverNotification_ProcedureCode                                                        11
#define id_HandoverPreparation_ProcedureCode                                                         12
#define id_HandoverResourceAllocation_ProcedureCode                                                  13
#define id_InitialContextSetup_ProcedureCode                                                         14
#define id_InitialUEMessage_ProcedureCode                                                            15
#define id_LocationReportingControl_ProcedureCode                                                    16
#define id_LocationReportingFailureIndication_ProcedureCode                                          17
#define id_LocationReport_ProcedureCode                                                              18
#define id_NASNonDeliveryIndication_ProcedureCode                                                    19
#define id_NGReset_ProcedureCode                                                                     20
#define id_NGSetup_ProcedureCode                                                                     21
#define id_OverloadStart_ProcedureCode                                                               22
#define id_OverloadStop_ProcedureCode                                                                23
#define id_Paging_ProcedureCode                                                                      24
#define id_PathSwitchRequest_ProcedureCode                                                           25
#define id_PDUSessionResourceModify_ProcedureCode                                                    26
#define id_PDUSessionResourceModifyIndication_ProcedureCode                                          27
#define id_PDUSessionResourceRelease_ProcedureCode                                                   28
#define id_PDUSessionResourceSetup_ProcedureCode                                                     29
#define id_PDUSessionResourceNotify_ProcedureCode                                                    30
#define id_PrivateMessage_ProcedureCode                                                              31
#define id_PWSCancel_ProcedureCode                                                                   32
#define id_PWSFailureIndication_ProcedureCode                                                        33
#define id_PWSRestartIndication_ProcedureCode                                                        34
#define id_RANConfigurationUpdate_ProcedureCode                                                      35
#define id_RerouteNASRequest_ProcedureCode                                                           36
#define id_RRCInactiveTransitionReport_ProcedureCode                                                 37
#define id_TraceFailureIndication_ProcedureCode                                                      38
#define id_TraceStart_ProcedureCode                                                                  39
#define id_UEContextModification_ProcedureCode                                                       40
#define id_UEContextRelease_ProcedureCode                                                            41
#define id_UEContextReleaseRequest_ProcedureCode                                                     42
#define id_UERadioCapabilityCheck_ProcedureCode                                                      43
#define id_UERadioCapabilityInfoIndication_ProcedureCode                                             44
#define id_UETNLABindingRelease_ProcedureCode                                                        45
#define id_UplinkNASTransport_ProcedureCode                                                          46
#define id_UplinkNonUEAssociatedNRPPaTransport_ProcedureCode                                         47
#define id_UplinkRANConfigurationTransfer_ProcedureCode                                              48
#define id_UplinkRANStatusTransfer_ProcedureCode                                                     49
#define id_UplinkUEAssociatedNRPPaTransport_ProcedureCode                                            50
#define id_WriteReplaceWarning_ProcedureCode                                                         51
#define id_SecondaryRATDataUsageReport_ProcedureCode                                                 52
#define id_UplinkRIMInformationTransfer_ProcedureCode                                                53
#define id_DownlinkRIMInformationTransfer_ProcedureCode                                              54
#define id_RetrieveUEInformation_ProcedureCode                                                       55
#define id_UEInformationTransfer_ProcedureCode                                                       56
#define id_RANCPRelocationIndication_ProcedureCode                                                   57
#define id_UEContextResume_ProcedureCode                                                             58
#define id_UEContextSuspend_ProcedureCode                                                            59
#define id_UERadioCapabilityIDMapping_ProcedureCode                                                  60
#define id_HandoverSuccess_ProcedureCode                                                             61
#define id_UplinkRANEarlyStatusTransfer_ProcedureCode                                                62
#define id_DownlinkRANEarlyStatusTransfer_ProcedureCode                                              63
#define id_AMFCPRelocationIndication_ProcedureCode                                                   64
#define id_ConnectionEstablishmentIndication_ProcedureCode                                           65
#define id_BroadcastSessionModification_ProcedureCode                                                66
#define id_BroadcastSessionRelease_ProcedureCode                                                     67
#define id_BroadcastSessionSetup_ProcedureCode                                                       68
#define id_DistributionSetup_ProcedureCode                                                           69
#define id_DistributionRelease_ProcedureCode                                                         70
#define id_MulticastSessionActivation_ProcedureCode                                                  71
#define id_MulticastSessionDeactivation_ProcedureCode                                                72
#define id_MulticastSessionUpdate_ProcedureCode                                                      73
#define id_MulticastGroupPaging_ProcedureCode                                                        74
#define id_BroadcastSessionReleaseRequired_ProcedureCode                                             75
#define id_TimingSynchronisationStatus_ProcedureCode                                                 76
#define id_TimingSynchronisationStatusReport_ProcedureCode                                           77
#define id_MTCommunicationHandling_ProcedureCode                                                     78
#define id_RANPagingRequest_ProcedureCode                                                            79
#define id_BroadcastSessionTransport_ProcedureCode                                                   80



#define __si_amf__id_AllowedNSSAI_ProtocolIEs                                                        0
#define __si_amf__id_AMFName_ProtocolIEs                                                             1
#define __si_amf__id_AMFOverloadResponse_ProtocolIEs                                                 2
#define __si_amf__id_AMFSetID_ProtocolIEs                                                            3
#define __si_amf__id_AMF_TNLAssociationFailedToSetupList_ProtocolIEs                                 4
#define __si_amf__id_AMF_TNLAssociationSetupList_ProtocolIEs                                         5
#define __si_amf__id_AMF_TNLAssociationToAddList_ProtocolIEs                                         6
#define __si_amf__id_AMF_TNLAssociationToRemoveList_ProtocolIEs                                      7
#define __si_amf__id_AMF_TNLAssociationToUpdateList_ProtocolIEs                                      8
#define __si_amf__id_AMFTrafficLoadReductionIndication_ProtocolIEs                                   9
#define __si_amf__id_AMF_UE_NGAP_ID_ProtocolIEs                                                      10
#define __si_amf__id_AssistanceDataForPaging_ProtocolIEs                                             11
#define __si_amf__id_BroadcastCancelledAreaList_ProtocolIEs                                          12
#define __si_amf__id_BroadcastCompletedAreaList_ProtocolIEs                                          13
#define __si_amf__id_CancelAllWarningMessages_ProtocolIEs                                            14
#define __si_amf__id_Cause_ProtocolIEs                                                               15
#define __si_amf__id_CellIDListForRestart_ProtocolIEs                                                16
#define __si_amf__id_ConcurrentWarningMessageInd_ProtocolIEs                                         17
#define __si_amf__id_CoreNetworkAssistanceInformationForInactive_ProtocolIEs                         18
#define __si_amf__id_CriticalityDiagnostics_ProtocolIEs                                              19
#define __si_amf__id_DataCodingScheme_ProtocolIEs                                                    20
#define __si_amf__id_DefaultPagingDRX_ProtocolIEs                                                    21
#define __si_amf__id_DirectForwardingPathAvailability_ProtocolIEs                                    22
#define __si_amf__id_EmergencyAreaIDListForRestart_ProtocolIEs                                       23
#define __si_amf__id_EmergencyFallbackIndicator_ProtocolIEs                                          24
#define __si_amf__id_EUTRA_CGI_ProtocolIEs                                                           25
#define __si_amf__id_FiveG_S_TMSI_ProtocolIEs                                                        26
#define __si_amf__id_GlobalRANNodeID_ProtocolIEs                                                     27
#define __si_amf__id_GUAMI_ProtocolIEs                                                               28
#define __si_amf__id_HandoverType_ProtocolIEs                                                        29
#define __si_amf__id_IMSVoiceSupportIndicator_ProtocolIEs                                            30
#define __si_amf__id_IndexToRFSP_ProtocolIEs                                                         31
#define __si_amf__id_InfoOnRecommendedCellsAndRANNodesForPaging_ProtocolIEs                          32
#define __si_amf__id_LocationReportingRequestType_ProtocolIEs                                        33
#define __si_amf__id_MaskedIMEISV_ProtocolIEs                                                        34
#define __si_amf__id_MessageIdentifier_ProtocolIEs                                                   35
#define __si_amf__id_MobilityRestrictionList_ProtocolIEs                                             36
#define __si_amf__id_NASC_ProtocolIEs                                                                37
#define __si_amf__id_NAS_PDU_ProtocolIEs                                                             38
#define __si_amf__id_NASSecurityParametersFromNGRAN_ProtocolIEs                                      39
#define __si_amf__id_NewAMF_UE_NGAP_ID_ProtocolIEs                                                   40
#define __si_amf__id_NewSecurityContextInd_ProtocolIEs                                               41
#define __si_amf__id_NGAP_Message_ProtocolIEs                                                        42
#define __si_amf__id_NGRAN_CGI_ProtocolIEs                                                           43
#define __si_amf__id_NGRANTraceID_ProtocolIEs                                                        44
#define __si_amf__id_NR_CGI_ProtocolIEs                                                              45
#define __si_amf__id_NRPPa_PDU_ProtocolIEs                                                           46
#define __si_amf__id_NumberOfBroadcastsRequested_ProtocolIEs                                         47
#define __si_amf__id_OldAMF_ProtocolIEs                                                              48
#define __si_amf__id_OverloadStartNSSAIList_ProtocolIEs                                              49
#define __si_amf__id_PagingDRX_ProtocolIEs                                                           50
#define __si_amf__id_PagingOrigin_ProtocolIEs                                                        51
#define __si_amf__id_PagingPriority_ProtocolIEs                                                      52
#define __si_amf__id_PDUSessionResourceAdmittedList_ProtocolIEs                                      53
#define __si_amf__id_PDUSessionResourceFailedToModifyListModRes_ProtocolIEs                          54
#define __si_amf__id_PDUSessionResourceFailedToSetupListCxtRes_ProtocolIEs                           55
#define __si_amf__id_PDUSessionResourceFailedToSetupListHOAck_ProtocolIEs                            56
#define __si_amf__id_PDUSessionResourceFailedToSetupListPSReq_ProtocolIEs                            57
#define __si_amf__id_PDUSessionResourceFailedToSetupListSURes_ProtocolIEs                            58
#define __si_amf__id_PDUSessionResourceHandoverList_ProtocolIEs                                      59
#define __si_amf__id_PDUSessionResourceListCxtRelCpl_ProtocolIEs                                     60
#define __si_amf__id_PDUSessionResourceListHORqd_ProtocolIEs                                         61
#define __si_amf__id_PDUSessionResourceModifyListModCfm_ProtocolIEs                                  62
#define __si_amf__id_PDUSessionResourceModifyListModInd_ProtocolIEs                                  63
#define __si_amf__id_PDUSessionResourceModifyListModReq_ProtocolIEs                                  64
#define __si_amf__id_PDUSessionResourceModifyListModRes_ProtocolIEs                                  65
#define __si_amf__id_PDUSessionResourceNotifyList_ProtocolIEs                                        66
#define __si_amf__id_PDUSessionResourceReleasedListNot_ProtocolIEs                                   67
#define __si_amf__id_PDUSessionResourceReleasedListPSAck_ProtocolIEs                                 68
#define __si_amf__id_PDUSessionResourceReleasedListPSFail_ProtocolIEs                                69
#define __si_amf__id_PDUSessionResourceReleasedListRelRes_ProtocolIEs                                70
#define __si_amf__id_PDUSessionResourceSetupListCxtReq_ProtocolIEs                                   71
#define __si_amf__id_PDUSessionResourceSetupListCxtRes_ProtocolIEs                                   72
#define __si_amf__id_PDUSessionResourceSetupListHOReq_ProtocolIEs                                    73
#define __si_amf__id_PDUSessionResourceSetupListSUReq_ProtocolIEs                                    74
#define __si_amf__id_PDUSessionResourceSetupListSURes_ProtocolIEs                                    75
#define __si_amf__id_PDUSessionResourceToBeSwitchedDLList_ProtocolIEs                                76
#define __si_amf__id_PDUSessionResourceSwitchedList_ProtocolIEs                                      77
#define __si_amf__id_PDUSessionResourceToReleaseListHOCmd_ProtocolIEs                                78
#define __si_amf__id_PDUSessionResourceToReleaseListRelCmd_ProtocolIEs                               79
#define __si_amf__id_PLMNSupportList_ProtocolIEs                                                     80
#define __si_amf__id_PWSFailedCellIDList_ProtocolIEs                                                 81
#define __si_amf__id_RANNodeName_ProtocolIEs                                                         82
#define __si_amf__id_RANPagingPriority_ProtocolIEs                                                   83
#define __si_amf__id_RANStatusTransfer_TransparentContainer_ProtocolIEs                              84
#define __si_amf__id_RAN_UE_NGAP_ID_ProtocolIEs                                                      85
#define __si_amf__id_RelativeAMFCapacity_ProtocolIEs                                                 86
#define __si_amf__id_RepetitionPeriod_ProtocolIEs                                                    87
#define __si_amf__id_ResetType_ProtocolIEs                                                           88
#define __si_amf__id_RoutingID_ProtocolIEs                                                           89
#define __si_amf__id_RRCEstablishmentCause_ProtocolIEs                                               90
#define __si_amf__id_RRCInactiveTransitionReportRequest_ProtocolIEs                                  91
#define __si_amf__id_RRCState_ProtocolIEs                                                            92
#define __si_amf__id_SecurityContext_ProtocolIEs                                                     93
#define __si_amf__id_SecurityKey_ProtocolIEs                                                         94
#define __si_amf__id_SerialNumber_ProtocolIEs                                                        95
#define __si_amf__id_ServedGUAMIList_ProtocolIEs                                                     96
#define __si_amf__id_SliceSupportList_ProtocolIEs                                                    97
#define __si_amf__id_SONConfigurationTransferDL_ProtocolIEs                                          98
#define __si_amf__id_SONConfigurationTransferUL_ProtocolIEs                                          99
#define __si_amf__id_SourceAMF_UE_NGAP_ID_ProtocolIEs                                                100
#define __si_amf__id_SourceToTarget_TransparentContainer_ProtocolIEs                                 101
#define __si_amf__id_SupportedTAList_ProtocolIEs                                                     102
#define __si_amf__id_TAIListForPaging_ProtocolIEs                                                    103
#define __si_amf__id_TAIListForRestart_ProtocolIEs                                                   104
#define __si_amf__id_TargetID_ProtocolIEs                                                            105
#define __si_amf__id_TargetToSource_TransparentContainer_ProtocolIEs                                 106
#define __si_amf__id_TimeToWait_ProtocolIEs                                                          107
#define __si_amf__id_TraceActivation_ProtocolIEs                                                     108
#define __si_amf__id_TraceCollectionEntityIPAddress_ProtocolIEs                                      109
#define __si_amf__id_UEAggregateMaximumBitRate_ProtocolIEs                                           110
#define __si_amf__id_UE_associatedLogicalNG_connectionList_ProtocolIEs                               111
#define __si_amf__id_UEContextRequest_ProtocolIEs                                                    112
#define __si_amf__id_UE_NGAP_IDs_ProtocolIEs                                                         114
#define __si_amf__id_UEPagingIdentity_ProtocolIEs                                                    115
#define __si_amf__id_UEPresenceInAreaOfInterestList_ProtocolIEs                                      116
#define __si_amf__id_UERadioCapability_ProtocolIEs                                                   117
#define __si_amf__id_UERadioCapabilityForPaging_ProtocolIEs                                          118
#define __si_amf__id_UESecurityCapabilities_ProtocolIEs                                              119
#define __si_amf__id_UnavailableGUAMIList_ProtocolIEs                                                120
#define __si_amf__id_UserLocationInformation_ProtocolIEs                                             121
#define __si_amf__id_WarningAreaList_ProtocolIEs                                                     122
#define __si_amf__id_WarningMessageContents_ProtocolIEs                                              123
#define __si_amf__id_WarningSecurityInfo_ProtocolIEs                                                 124
#define __si_amf__id_WarningType_ProtocolIEs                                                         125
#define __si_amf__id_AdditionalUL_NGU_UP_TNLInformation_ProtocolIEs                                  126
#define __si_amf__id_DataForwardingNotPossible_ProtocolIEs                                           127
#define __si_amf__id_DL_NGU_UP_TNLInformation_ProtocolIEs                                            128
#define __si_amf__id_NetworkInstance_ProtocolIEs                                                     129
#define __si_amf__id_PDUSessionAggregateMaximumBitRate_ProtocolIEs                                   130
#define __si_amf__id_PDUSessionResourceFailedToModifyListModCfm_ProtocolIEs                          131
#define __si_amf__id_PDUSessionResourceFailedToSetupListCxtFail_ProtocolIEs                          132
#define __si_amf__id_PDUSessionResourceListCxtRelReq_ProtocolIEs                                     133
#define __si_amf__id_PDUSessionType_ProtocolIEs                                                      134
#define __si_amf__id_QosFlowAddOrModifyRequestList_ProtocolIEs                                       135
#define __si_amf__id_QosFlowSetupRequestList_ProtocolIEs                                             136
#define __si_amf__id_QosFlowToReleaseList_ProtocolIEs                                                137
#define __si_amf__id_SecurityIndication_ProtocolIEs                                                  138
#define __si_amf__id_UL_NGU_UP_TNLInformation_ProtocolIEs                                            139
#define __si_amf__id_UL_NGU_UP_TNLModifyList_ProtocolIEs                                             140
#define __si_amf__id_WarningAreaCoordinates_ProtocolIEs                                              141
#define __si_amf__id_PDUSessionResourceSecondaryRATUsageList_ProtocolIEs                             142
#define __si_amf__id_HandoverFlag_ProtocolIEs                                                        143
#define __si_amf__id_SecondaryRATUsageInformation_ProtocolIEs                                        144
#define __si_amf__id_PDUSessionResourceReleaseResponseTransfer_ProtocolIEs                           145
#define __si_amf__id_RedirectionVoiceFallback_ProtocolIEs                                            146
#define __si_amf__id_UERetentionInformation_ProtocolIEs                                              147
#define __si_amf__id_S_NSSAI_ProtocolIEs                                                             148
#define __si_amf__id_PSCellInformation_ProtocolIEs                                                   149
#define __si_amf__id_LastEUTRAN_PLMNIdentity_ProtocolIEs                                             150
#define __si_amf__id_MaximumIntegrityProtectedDataRate_DL_ProtocolIEs                                151
#define __si_amf__id_AdditionalDLForwardingUPTNLInformation_ProtocolIEs                              152
#define __si_amf__id_AdditionalDLUPTNLInformationForHOList_ProtocolIEs                               153
#define __si_amf__id_AdditionalNGU_UP_TNLInformation_ProtocolIEs                                     154
#define __si_amf__id_AdditionalDLQosFlowPerTNLInformation_ProtocolIEs                                155
#define __si_amf__id_SecurityResult_ProtocolIEs                                                      156
#define __si_amf__id_ENDC_SONConfigurationTransferDL_ProtocolIEs                                     157
#define __si_amf__id_ENDC_SONConfigurationTransferUL_ProtocolIEs                                     158
#define __si_amf__id_OldAssociatedQosFlowList_ULendmarkerexpected_ProtocolIEs                        159
#define __si_amf__id_CNTypeRestrictionsForEquivalent_ProtocolIEs                                     160
#define __si_amf__id_CNTypeRestrictionsForServing_ProtocolIEs                                        161
#define __si_amf__id_NewGUAMI_ProtocolIEs                                                            162
#define __si_amf__id_ULForwarding_ProtocolIEs                                                        163
#define __si_amf__id_ULForwardingUP_TNLInformation_ProtocolIEs                                       164
#define __si_amf__id_CNAssistedRANTuning_ProtocolIEs                                                 165
#define __si_amf__id_CommonNetworkInstance_ProtocolIEs                                               166
#define __si_amf__id_NGRAN_TNLAssociationToRemoveList_ProtocolIEs                                    167
#define __si_amf__id_TNLAssociationTransportLayerAddressNGRAN_ProtocolIEs                            168
#define __si_amf__id_EndpointIPAddressAndPort_ProtocolIEs                                            169
#define __si_amf__id_LocationReportingAdditionalInfo_ProtocolIEs                                     170
#define __si_amf__id_SourceToTarget_AMFInformationReroute_ProtocolIEs                                171
#define __si_amf__id_AdditionalULForwardingUPTNLInformation_ProtocolIEs                              172
#define __si_amf__id_SCTP_TLAs_ProtocolIEs                                                           173
#define __si_amf__id_SelectedPLMNIdentity_ProtocolIEs                                                174
#define __si_amf__id_RIMInformationTransfer_ProtocolIEs                                              175
#define __si_amf__id_GUAMIType_ProtocolIEs                                                           176
#define __si_amf__id_SRVCCOperationPossible_ProtocolIEs                                              177
#define __si_amf__id_TargetRNC_ID_ProtocolIEs                                                        178
#define __si_amf__id_RAT_Information_ProtocolIEs                                                     179
#define __si_amf__id_ExtendedRATRestrictionInformation_ProtocolIEs                                   180
#define __si_amf__id_QosMonitoringRequest_ProtocolIEs                                                181
#define __si_amf__id_SgNB_UE_X2AP_ID_ProtocolIEs                                                     182
#define __si_amf__id_AdditionalRedundantDL_NGU_UP_TNLInformation_ProtocolIEs                         183
#define __si_amf__id_AdditionalRedundantDLQosFlowPerTNLInformation_ProtocolIEs                       184
#define __si_amf__id_AdditionalRedundantNGU_UP_TNLInformation_ProtocolIEs                            185
#define __si_amf__id_AdditionalRedundantUL_NGU_UP_TNLInformation_ProtocolIEs                         186
#define __si_amf__id_CNPacketDelayBudgetDL_ProtocolIEs                                               187
#define __si_amf__id_CNPacketDelayBudgetUL_ProtocolIEs                                               188
#define __si_amf__id_ExtendedPacketDelayBudget_ProtocolIEs                                           189
#define __si_amf__id_RedundantCommonNetworkInstance_ProtocolIEs                                      190
#define __si_amf__id_RedundantDL_NGU_TNLInformationReused_ProtocolIEs                                191
#define __si_amf__id_RedundantDL_NGU_UP_TNLInformation_ProtocolIEs                                   192
#define __si_amf__id_RedundantDLQosFlowPerTNLInformation_ProtocolIEs                                 193
#define __si_amf__id_RedundantQosFlowIndicator_ProtocolIEs                                           194
#define __si_amf__id_RedundantUL_NGU_UP_TNLInformation_ProtocolIEs                                   195
#define __si_amf__id_TSCTrafficCharacteristics_ProtocolIEs                                           196
#define __si_amf__id_RedundantPDUSessionInformation_ProtocolIEs                                      197
#define __si_amf__id_UsedRSNInformation_ProtocolIEs                                                  198
#define __si_amf__id_IAB_Authorized_ProtocolIEs                                                      199
#define __si_amf__id_IAB_Supported_ProtocolIEs                                                       200
#define __si_amf__id_IABNodeIndication_ProtocolIEs                                                   201
#define __si_amf__id_NB_IoT_PagingDRX_ProtocolIEs                                                    202
#define __si_amf__id_NB_IoT_Paging_eDRXInfo_ProtocolIEs                                              203
#define __si_amf__id_NB_IoT_DefaultPagingDRX_ProtocolIEs                                             204
#define __si_amf__id_Enhanced_CoverageRestriction_ProtocolIEs                                        205
#define __si_amf__id_Extended_ConnectedTime_ProtocolIEs                                              206
#define __si_amf__id_PagingAssisDataforCEcapabUE_ProtocolIEs                                         207
#define __si_amf__id_WUS_Assistance_Information_ProtocolIEs                                          208
#define __si_amf__id_UE_DifferentiationInfo_ProtocolIEs                                              209
#define __si_amf__id_NB_IoT_UEPriority_ProtocolIEs                                                   210
#define __si_amf__id_UL_CP_SecurityInformation_ProtocolIEs                                           211
#define __si_amf__id_DL_CP_SecurityInformation_ProtocolIEs                                           212
#define __si_amf__id_TAI_ProtocolIEs                                                                 213
#define __si_amf__id_UERadioCapabilityForPagingOfNB_IoT_ProtocolIEs                                  214
#define __si_amf__id_LTEV2XServicesAuthorized_ProtocolIEs                                            215
#define __si_amf__id_NRV2XServicesAuthorized_ProtocolIEs                                             216
#define __si_amf__id_LTEUESidelinkAggregateMaximumBitrate_ProtocolIEs                                217
#define __si_amf__id_NRUESidelinkAggregateMaximumBitrate_ProtocolIEs                                 218
#define __si_amf__id_PC5QoSParameters_ProtocolIEs                                                    219
#define __si_amf__id_AlternativeQoSParaSetList_ProtocolIEs                                           220
#define __si_amf__id_CurrentQoSParaSetIndex_ProtocolIEs                                              221
#define __si_amf__id_CEmodeBrestricted_ProtocolIEs                                                   222
#define __si_amf__id_EUTRA_PagingeDRXInformation_ProtocolIEs                                         223
#define __si_amf__id_CEmodeBSupport_Indicator_ProtocolIEs                                            224
#define __si_amf__id_LTEM_Indication_ProtocolIEs                                                     225
#define __si_amf__id_EndIndication_ProtocolIEs                                                       226
#define __si_amf__id_EDT_Session_ProtocolIEs                                                         227
#define __si_amf__id_UECapabilityInfoRequest_ProtocolIEs                                             228
#define __si_amf__id_PDUSessionResourceFailedToResumeListRESReq_ProtocolIEs                          229
#define __si_amf__id_PDUSessionResourceFailedToResumeListRESRes_ProtocolIEs                          230
#define __si_amf__id_PDUSessionResourceSuspendListSUSReq_ProtocolIEs                                 231
#define __si_amf__id_PDUSessionResourceResumeListRESReq_ProtocolIEs                                  232
#define __si_amf__id_PDUSessionResourceResumeListRESRes_ProtocolIEs                                  233
#define __si_amf__id_UE_UP_CIoT_Support_ProtocolIEs                                                  234
#define __si_amf__id_Suspend_Request_Indication_ProtocolIEs                                          235
#define __si_amf__id_Suspend_Response_Indication_ProtocolIEs                                         236
#define __si_amf__id_RRC_Resume_Cause_ProtocolIEs                                                    237
#define __si_amf__id_RGLevelWirelineAccessCharacteristics_ProtocolIEs                                238
#define __si_amf__id_W_AGFIdentityInformation_ProtocolIEs                                            239
#define __si_amf__id_GlobalTNGF_ID_ProtocolIEs                                                       240
#define __si_amf__id_GlobalTWIF_ID_ProtocolIEs                                                       241
#define __si_amf__id_GlobalW_AGF_ID_ProtocolIEs                                                      242
#define __si_amf__id_UserLocationInformationW_AGF_ProtocolIEs                                        243
#define __si_amf__id_UserLocationInformationTNGF_ProtocolIEs                                         244
#define __si_amf__id_AuthenticatedIndication_ProtocolIEs                                             245
#define __si_amf__id_TNGFIdentityInformation_ProtocolIEs                                             246
#define __si_amf__id_TWIFIdentityInformation_ProtocolIEs                                             247
#define __si_amf__id_UserLocationInformationTWIF_ProtocolIEs                                         248
#define __si_amf__id_DataForwardingResponseERABList_ProtocolIEs                                      249
#define __si_amf__id_IntersystemSONConfigurationTransferDL_ProtocolIEs                               250
#define __si_amf__id_IntersystemSONConfigurationTransferUL_ProtocolIEs                               251
#define __si_amf__id_SONInformationReport_ProtocolIEs                                                252
#define __si_amf__id_UEHistoryInformationFromTheUE_ProtocolIEs                                       253
#define __si_amf__id_ManagementBasedMDTPLMNList_ProtocolIEs                                          254
#define __si_amf__id_MDTConfiguration_ProtocolIEs                                                    255
#define __si_amf__id_PrivacyIndicator_ProtocolIEs                                                    256
#define __si_amf__id_TraceCollectionEntityURI_ProtocolIEs                                            257
#define __si_amf__id_NPN_Support_ProtocolIEs                                                         258
#define __si_amf__id_NPN_AccessInformation_ProtocolIEs                                               259
#define __si_amf__id_NPN_PagingAssistanceInformation_ProtocolIEs                                     260
#define __si_amf__id_NPN_MobilityInformation_ProtocolIEs                                             261
#define __si_amf__id_TargettoSource_Failure_TransparentContainer_ProtocolIEs                         262
#define __si_amf__id_NID_ProtocolIEs                                                                 263
#define __si_amf__id_UERadioCapabilityID_ProtocolIEs                                                 264
#define __si_amf__id_UERadioCapability_EUTRA_Format_ProtocolIEs                                      265
#define __si_amf__id_DAPSRequestInfo_ProtocolIEs                                                     266
#define __si_amf__id_DAPSResponseInfoList_ProtocolIEs                                                267
#define __si_amf__id_EarlyStatusTransfer_TransparentContainer_ProtocolIEs                            268
#define __si_amf__id_NotifySourceNGRANNode_ProtocolIEs                                               269
#define __si_amf__id_ExtendedSliceSupportList_ProtocolIEs                                            270
#define __si_amf__id_ExtendedTAISliceSupportList_ProtocolIEs                                         271
#define __si_amf__id_ConfiguredTACIndication_ProtocolIEs                                             272
#define __si_amf__id_Extended_RANNodeName_ProtocolIEs                                                273
#define __si_amf__id_Extended_AMFName_ProtocolIEs                                                    274
#define __si_amf__id_GlobalCable_ID_ProtocolIEs                                                      275
#define __si_amf__id_QosMonitoringReportingFrequency_ProtocolIEs                                     276
#define __si_amf__id_QosFlowParametersList_ProtocolIEs                                               277
#define __si_amf__id_QosFlowFeedbackList_ProtocolIEs                                                 278
#define __si_amf__id_BurstArrivalTimeDownlink_ProtocolIEs                                            279
#define __si_amf__id_ExtendedUEIdentityIndexValue_ProtocolIEs                                        280
#define __si_amf__id_PduSessionExpectedUEActivityBehaviour_ProtocolIEs                               281
#define __si_amf__id_MicoAllPLMN_ProtocolIEs                                                         282
#define __si_amf__id_QosFlowFailedToSetupList_ProtocolIEs                                            283
#define __si_amf__id_SourceTNLAddrInfo_ProtocolIEs                                                   284
#define __si_amf__id_ExtendedReportIntervalMDT_ProtocolIEs                                           285
#define __si_amf__id_SourceNodeID_ProtocolIEs                                                        286
#define __si_amf__id_NRNTNTAIInformation_ProtocolIEs                                                 287
#define __si_amf__id_UEContextReferenceAtSource_ProtocolIEs                                          288
#define __si_amf__id_LastVisitedPSCellList_ProtocolIEs                                               289
#define __si_amf__id_IntersystemSONInformationRequest_ProtocolIEs                                    290
#define __si_amf__id_IntersystemSONInformationReply_ProtocolIEs                                      291
#define __si_amf__id_EnergySavingIndication_ProtocolIEs                                              292
#define __si_amf__id_IntersystemResourceStatusUpdate_ProtocolIEs                                     293
#define __si_amf__id_SuccessfulHandoverReportList_ProtocolIEs                                        294
#define __si_amf__id_MBS_AreaSessionID_ProtocolIEs                                                   295
#define __si_amf__id_MBS_QoSFlowsToBeSetupList_ProtocolIEs                                           296
#define __si_amf__id_MBS_QoSFlowsToBeSetupModList_ProtocolIEs                                        297
#define __si_amf__id_MBS_ServiceArea_ProtocolIEs                                                     298
#define __si_amf__id_MBS_SessionID_ProtocolIEs                                                       299
#define __si_amf__id_MBS_DistributionReleaseRequestTransfer_ProtocolIEs                              300
#define __si_amf__id_MBS_DistributionSetupRequestTransfer_ProtocolIEs                                301
#define __si_amf__id_MBS_DistributionSetupResponseTransfer_ProtocolIEs                               302
#define __si_amf__id_MBS_DistributionSetupUnsuccessfulTransfer_ProtocolIEs                           303
#define __si_amf__id_MulticastSessionActivationRequestTransfer_ProtocolIEs                           304
#define __si_amf__id_MulticastSessionDeactivationRequestTransfer_ProtocolIEs                         305
#define __si_amf__id_MulticastSessionUpdateRequestTransfer_ProtocolIEs                               306
#define __si_amf__id_MulticastGroupPagingAreaList_ProtocolIEs                                        307
#define __si_amf__id_MBS_SupportIndicator_ProtocolIEs                                                309
#define __si_amf__id_MBSSessionFailedtoSetupList_ProtocolIEs                                         310
#define __si_amf__id_MBSSessionFailedtoSetuporModifyList_ProtocolIEs                                 311
#define __si_amf__id_MBSSessionSetupResponseList_ProtocolIEs                                         312
#define __si_amf__id_MBSSessionSetuporModifyResponseList_ProtocolIEs                                 313
#define __si_amf__id_MBSSessionSetupFailureTransfer_ProtocolIEs                                      314
#define __si_amf__id_MBSSessionSetupRequestTransfer_ProtocolIEs                                      315
#define __si_amf__id_MBSSessionSetupResponseTransfer_ProtocolIEs                                     316
#define __si_amf__id_MBSSessionToReleaseList_ProtocolIEs                                             317
#define __si_amf__id_MBSSessionSetupRequestList_ProtocolIEs                                          318
#define __si_amf__id_MBSSessionSetuporModifyRequestList_ProtocolIEs                                  319
#define __si_amf__id_MBS_ActiveSessionInformation_SourcetoTargetList_ProtocolIEs                     323
#define __si_amf__id_MBS_ActiveSessionInformation_TargettoSourceList_ProtocolIEs                     324
#define __si_amf__id_OnboardingSupport_ProtocolIEs                                                   325
#define __si_amf__id_TimeSyncAssistanceInfo_ProtocolIEs                                              326
#define __si_amf__id_SurvivalTime_ProtocolIEs                                                        327
#define __si_amf__id_QMCConfigInfo_ProtocolIEs                                                       328
#define __si_amf__id_QMCDeactivation_ProtocolIEs                                                     329
#define __si_amf__id_PDUSessionPairID_ProtocolIEs                                                    331
#define __si_amf__id_NR_PagingeDRXInformation_ProtocolIEs                                            332
#define __si_amf__id_RedCapIndication_ProtocolIEs                                                    333
#define __si_amf__id_TargetNSSAIInformation_ProtocolIEs                                              334
#define __si_amf__id_UESliceMaximumBitRateList_ProtocolIEs                                           335
#define __si_amf__id_M4ReportAmount_ProtocolIEs                                                      336
#define __si_amf__id_M5ReportAmount_ProtocolIEs                                                      337
#define __si_amf__id_M6ReportAmount_ProtocolIEs                                                      338
#define __si_amf__id_M7ReportAmount_ProtocolIEs                                                      339
#define __si_amf__id_IncludeBeamMeasurementsIndication_ProtocolIEs                                   340
#define __si_amf__id_ExcessPacketDelayThresholdConfiguration_ProtocolIEs                             341
#define __si_amf__id_PagingCause_ProtocolIEs                                                         342
#define __si_amf__id_PagingCauseIndicationForVoiceService_ProtocolIEs                                343
#define __si_amf__id_PEIPSassistanceInformation_ProtocolIEs                                          344
#define __si_amf__id_FiveG_ProSeAuthorized_ProtocolIEs                                               345
#define __si_amf__id_FiveG_ProSeUEPC5AggregateMaximumBitRate_ProtocolIEs                             346
#define __si_amf__id_FiveG_ProSePC5QoSParameters_ProtocolIEs                                         347
#define __si_amf__id_MBSSessionModificationFailureTransfer_ProtocolIEs                               348
#define __si_amf__id_MBSSessionModificationRequestTransfer_ProtocolIEs                               349
#define __si_amf__id_MBSSessionModificationResponseTransfer_ProtocolIEs                              350
#define __si_amf__id_MBS_QoSFlowToReleaseList_ProtocolIEs                                            351
#define __si_amf__id_MBS_SessionTNLInfo5GC_ProtocolIEs                                               352
#define __si_amf__id_TAINSAGSupportList_ProtocolIEs                                                  353
#define __si_amf__id_SourceNodeTNLAddrInfo_ProtocolIEs                                               354
#define __si_amf__id_NGAPIESupportInformationRequestList_ProtocolIEs                                 355
#define __si_amf__id_NGAPIESupportInformationResponseList_ProtocolIEs                                356
#define __si_amf__id_MBS_SessionFSAIDList_ProtocolIEs                                                357
#define __si_amf__id_MBSSessionReleaseResponseTransfer_ProtocolIEs                                   358
#define __si_amf__id_ManagementBasedMDTPLMNModificationList_ProtocolIEs                              359
#define __si_amf__id_EarlyMeasurement_ProtocolIEs                                                    360
#define __si_amf__id_BeamMeasurementsReportConfiguration_ProtocolIEs                                 361
#define __si_amf__id_HFCNode_ID_new_ProtocolIEs                                                      362
#define __si_amf__id_GlobalCable_ID_new_ProtocolIEs                                                  363
#define __si_amf__id_TargetHomeENB_ID_ProtocolIEs                                                    364
#define __si_amf__id_HashedUEIdentityIndexValue_ProtocolIEs                                          365
#define __si_amf__id_ExtendedMobilityInformation_ProtocolIEs                                         366
#define __si_amf__id_NetworkControlledRepeaterAuthorized_ProtocolIEs                                 367
#define __si_amf__id_AdditionalCancelledlocationReportingReferenceIDList_ProtocolIEs                 368
#define __si_amf__id_Selected_Target_SNPN_Identity_ProtocolIEs                                       369
#define __si_amf__id_EquivalentSNPNsList_ProtocolIEs                                                 370
#define __si_amf__id_SelectedNID_ProtocolIEs                                                         371
#define __si_amf__id_SupportedUETypeList_ProtocolIEs                                                 372
#define __si_amf__id_AerialUEsubscriptionInformation_ProtocolIEs                                     373
#define __si_amf__id_NR_A2X_ServicesAuthorized_ProtocolIEs                                           374
#define __si_amf__id_LTE_A2X_ServicesAuthorized_ProtocolIEs                                          375
#define __si_amf__id_NR_A2X_UE_PC5_AggregateMaximumBitRate_ProtocolIEs                               376
#define __si_amf__id_LTE_A2X_UE_PC5_AggregateMaximumBitRate_ProtocolIEs                              377
#define __si_amf__id_A2X_PC5_QoS_Parameters_ProtocolIEs                                              378
#define __si_amf__id_FiveGProSeLayer2Multipath_ProtocolIEs                                           379
#define __si_amf__id_FiveGProSeLayer2UEtoUERelay_ProtocolIEs                                         380
#define __si_amf__id_FiveGProSeLayer2UEtoUERemote_ProtocolIEs                                        381
#define __si_amf__id_CandidateRelayUEInformationList_ProtocolIEs                                     382
#define __si_amf__id_SuccessfulPSCellChangeReportList_ProtocolIEs                                    383
#define __si_amf__id_IntersystemMobilityFailureforVoiceFallback_ProtocolIEs                          384
#define __si_amf__id_TargetCellCRNTI_ProtocolIEs                                                     385
#define __si_amf__id_TimeSinceFailure_ProtocolIEs                                                    386
#define __si_amf__id_RANTimingSynchronisationStatusInfo_ProtocolIEs                                  387
#define __si_amf__id_RAN_TSSRequestType_ProtocolIEs                                                  388
#define __si_amf__id_RAN_TSSScope_ProtocolIEs                                                        389
#define __si_amf__id_ClockQualityReportingControlInfo_ProtocolIEs                                    390
#define __si_amf__id_RANfeedbacktype_ProtocolIEs                                                     391
#define __si_amf__id_QoSFlowTSCList_ProtocolIEs                                                      392
#define __si_amf__id_TSCTrafficCharacteristicsFeedback_ProtocolIEs                                   393
#define __si_amf__id_DownlinkTLContainer_ProtocolIEs                                                 394
#define __si_amf__id_UplinkTLContainer_ProtocolIEs                                                   395
#define __si_amf__id_ANPacketDelayBudgetUL_ProtocolIEs                                               396
#define __si_amf__id_QosFlowAdditionalInfoList_ProtocolIEs                                           397
#define __si_amf__id_AssistanceInformationQoE_Meas_ProtocolIEs                                       398
#define __si_amf__id_MBSCommServiceType_ProtocolIEs                                                  399
#define __si_amf__id_MobileIAB_Authorized_ProtocolIEs                                                400
#define __si_amf__id_MobileIAB_MTUserLocationInformation_ProtocolIEs                                 401
#define __si_amf__id_MobileIABNodeIndication_ProtocolIEs                                             402
#define __si_amf__id_NoPDUSessionIndication_ProtocolIEs                                              403
#define __si_amf__id_MobileIAB_Supported_ProtocolIEs                                                 404
#define __si_amf__id_CN_MT_CommunicationHandling_ProtocolIEs                                         405
#define __si_amf__id_FiveGCAction_ProtocolIEs                                                        406
#define __si_amf__id_PagingPolicyDifferentiation_ProtocolIEs                                         407
#define __si_amf__id_DL_Signalling_ProtocolIEs                                                       408
#define __si_amf__id_PNI_NPN_AreaScopeofMDT_ProtocolIEs                                              409
#define __si_amf__id_PNI_NPNBasedMDT_ProtocolIEs                                                     410
#define __si_amf__id_SNPN_CellBasedMDT_ProtocolIEs                                                   411
#define __si_amf__id_SNPN_TAIBasedMDT_ProtocolIEs                                                    412
#define __si_amf__id_SNPN_BasedMDT_ProtocolIEs                                                       413
#define __si_amf__id_Partially_Allowed_NSSAI_ProtocolIEs                                             414
#define __si_amf__id_AssociatedSessionID_ProtocolIEs                                                 415
#define __si_amf__id_MBS_AssistanceInformation_ProtocolIEs                                           416
#define __si_amf__id_BroadcastTransportFailureTransfer_ProtocolIEs                                   417
#define __si_amf__id_BroadcastTransportRequestTransfer_ProtocolIEs                                   418
#define __si_amf__id_BroadcastTransportResponseTransfer_ProtocolIEs                                  419
#define __si_amf__id_TimeBasedHandoverInformation_ProtocolIEs                                        420
#define __si_amf__id_DLDiscarding_ProtocolIEs                                                        421
#define __si_amf__id_PDUsetQoSParameters_ProtocolIEs                                                 422
#define __si_amf__id_PDUSetbasedHandlingIndicator_ProtocolIEs                                        423
#define __si_amf__id_N6JitterInformation_ProtocolIEs                                                 424
#define __si_amf__id_ECNMarkingorCongestionInformationReportingRequest_ProtocolIEs                   425
#define __si_amf__id_ECNMarkingorCongestionInformationReportingStatus_ProtocolIEs                    426
#define __si_amf__id_ERedCapIndication_ProtocolIEs                                                   427
#define __si_amf__id_XrDeviceWith2Rx_ProtocolIEs                                                     428
#define __si_amf__id_UserPlaneErrorIndicator_ProtocolIEs                                             429
#define __si_amf__id_SLPositioningRangingServiceInfo_ProtocolIEs                                     430
#define __si_amf__id_PDUSessionListMTCommHReq_ProtocolIEs                                            431
#define __si_amf__id_MaximumDataBurstVolume_ProtocolIEs                                              432
#define __si_amf__id_MN_only_MDT_collection_ProtocolIEs                                              433
#define __si_amf__id_MBS_NGUFailureIndication_ProtocolIEs                                            434
#define __si_amf__id_UserPlaneFailureIndication_ProtocolIEs                                          435
#define __si_amf__id_UserPlaneFailureIndicationReport_ProtocolIEs                                    436
#define __si_amf__id_SourceSN_to_TargetSN_QMCInfo_ProtocolIEs                                        437
#define __si_amf__id_QoERVQoEReportingPaths_ProtocolIEs                                              438
#define __si_amf__id_UserLocationInformationN3IWF_without_PortNumber_ProtocolIEs                     439
#define __si_amf__id_AUN3DeviceAccessInfo_ProtocolIEs                                                440



#define id_AllowedNSSAI_ProtocolIEs                                                                  0
#define id_AMFName_ProtocolIEs                                                                       1
#define id_AMFOverloadResponse_ProtocolIEs                                                           2
#define id_AMFSetID_ProtocolIEs                                                                      3
#define id_AMF_TNLAssociationFailedToSetupList_ProtocolIEs                                           4
#define id_AMF_TNLAssociationSetupList_ProtocolIEs                                                   5
#define id_AMF_TNLAssociationToAddList_ProtocolIEs                                                   6
#define id_AMF_TNLAssociationToRemoveList_ProtocolIEs                                                7
#define id_AMF_TNLAssociationToUpdateList_ProtocolIEs                                                8
#define id_AMFTrafficLoadReductionIndication_ProtocolIEs                                             9
#define id_AMF_UE_NGAP_ID_ProtocolIEs                                                                10
#define id_AssistanceDataForPaging_ProtocolIEs                                                       11
#define id_BroadcastCancelledAreaList_ProtocolIEs                                                    12
#define id_BroadcastCompletedAreaList_ProtocolIEs                                                    13
#define id_CancelAllWarningMessages_ProtocolIEs                                                      14
#define id_Cause_ProtocolIEs                                                                         15
#define id_CellIDListForRestart_ProtocolIEs                                                          16
#define id_ConcurrentWarningMessageInd_ProtocolIEs                                                   17
#define id_CoreNetworkAssistanceInformationForInactive_ProtocolIEs                                   18
#define id_CriticalityDiagnostics_ProtocolIEs                                                        19
#define id_DataCodingScheme_ProtocolIEs                                                              20
#define id_DefaultPagingDRX_ProtocolIEs                                                              21
#define id_DirectForwardingPathAvailability_ProtocolIEs                                              22
#define id_EmergencyAreaIDListForRestart_ProtocolIEs                                                 23
#define id_EmergencyFallbackIndicator_ProtocolIEs                                                    24
#define id_EUTRA_CGI_ProtocolIEs                                                                     25
#define id_FiveG_S_TMSI_ProtocolIEs                                                                  26
#define id_GlobalRANNodeID_ProtocolIEs                                                               27
#define id_GUAMI_ProtocolIEs                                                                         28
#define id_HandoverType_ProtocolIEs                                                                  29
#define id_IMSVoiceSupportIndicator_ProtocolIEs                                                      30
#define id_IndexToRFSP_ProtocolIEs                                                                   31
#define id_InfoOnRecommendedCellsAndRANNodesForPaging_ProtocolIEs                                    32
#define id_LocationReportingRequestType_ProtocolIEs                                                  33
#define id_MaskedIMEISV_ProtocolIEs                                                                  34
#define id_MessageIdentifier_ProtocolIEs                                                             35
#define id_MobilityRestrictionList_ProtocolIEs                                                       36
#define id_NASC_ProtocolIEs                                                                          37
#define id_NAS_PDU_ProtocolIEs                                                                       38
#define id_NASSecurityParametersFromNGRAN_ProtocolIEs                                                39
#define id_NewAMF_UE_NGAP_ID_ProtocolIEs                                                             40
#define id_NewSecurityContextInd_ProtocolIEs                                                         41
#define id_NGAP_Message_ProtocolIEs                                                                  42
#define id_NGRAN_CGI_ProtocolIEs                                                                     43
#define id_NGRANTraceID_ProtocolIEs                                                                  44
#define id_NR_CGI_ProtocolIEs                                                                        45
#define id_NRPPa_PDU_ProtocolIEs                                                                     46
#define id_NumberOfBroadcastsRequested_ProtocolIEs                                                   47
#define id_OldAMF_ProtocolIEs                                                                        48
#define id_OverloadStartNSSAIList_ProtocolIEs                                                        49
#define id_PagingDRX_ProtocolIEs                                                                     50
#define id_PagingOrigin_ProtocolIEs                                                                  51
#define id_PagingPriority_ProtocolIEs                                                                52
#define id_PDUSessionResourceAdmittedList_ProtocolIEs                                                53
#define id_PDUSessionResourceFailedToModifyListModRes_ProtocolIEs                                    54
#define id_PDUSessionResourceFailedToSetupListCxtRes_ProtocolIEs                                     55
#define id_PDUSessionResourceFailedToSetupListHOAck_ProtocolIEs                                      56
#define id_PDUSessionResourceFailedToSetupListPSReq_ProtocolIEs                                      57
#define id_PDUSessionResourceFailedToSetupListSURes_ProtocolIEs                                      58
#define id_PDUSessionResourceHandoverList_ProtocolIEs                                                59
#define id_PDUSessionResourceListCxtRelCpl_ProtocolIEs                                               60
#define id_PDUSessionResourceListHORqd_ProtocolIEs                                                   61
#define id_PDUSessionResourceModifyListModCfm_ProtocolIEs                                            62
#define id_PDUSessionResourceModifyListModInd_ProtocolIEs                                            63
#define id_PDUSessionResourceModifyListModReq_ProtocolIEs                                            64
#define id_PDUSessionResourceModifyListModRes_ProtocolIEs                                            65
#define id_PDUSessionResourceNotifyList_ProtocolIEs                                                  66
#define id_PDUSessionResourceReleasedListNot_ProtocolIEs                                             67
#define id_PDUSessionResourceReleasedListPSAck_ProtocolIEs                                           68
#define id_PDUSessionResourceReleasedListPSFail_ProtocolIEs                                          69
#define id_PDUSessionResourceReleasedListRelRes_ProtocolIEs                                          70
#define id_PDUSessionResourceSetupListCxtReq_ProtocolIEs                                             71
#define id_PDUSessionResourceSetupListCxtRes_ProtocolIEs                                             72
#define id_PDUSessionResourceSetupListHOReq_ProtocolIEs                                              73
#define id_PDUSessionResourceSetupListSUReq_ProtocolIEs                                              74
#define id_PDUSessionResourceSetupListSURes_ProtocolIEs                                              75
#define id_PDUSessionResourceToBeSwitchedDLList_ProtocolIEs                                          76
#define id_PDUSessionResourceSwitchedList_ProtocolIEs                                                77
#define id_PDUSessionResourceToReleaseListHOCmd_ProtocolIEs                                          78
#define id_PDUSessionResourceToReleaseListRelCmd_ProtocolIEs                                         79
#define id_PLMNSupportList_ProtocolIEs                                                               80
#define id_PWSFailedCellIDList_ProtocolIEs                                                           81
#define id_RANNodeName_ProtocolIEs                                                                   82
#define id_RANPagingPriority_ProtocolIEs                                                             83
#define id_RANStatusTransfer_TransparentContainer_ProtocolIEs                                        84
#define id_RAN_UE_NGAP_ID_ProtocolIEs                                                                85
#define id_RelativeAMFCapacity_ProtocolIEs                                                           86
#define id_RepetitionPeriod_ProtocolIEs                                                              87
#define id_ResetType_ProtocolIEs                                                                     88
#define id_RoutingID_ProtocolIEs                                                                     89
#define id_RRCEstablishmentCause_ProtocolIEs                                                         90
#define id_RRCInactiveTransitionReportRequest_ProtocolIEs                                            91
#define id_RRCState_ProtocolIEs                                                                      92
#define id_SecurityContext_ProtocolIEs                                                               93
#define id_SecurityKey_ProtocolIEs                                                                   94
#define id_SerialNumber_ProtocolIEs                                                                  95
#define id_ServedGUAMIList_ProtocolIEs                                                               96
#define id_SliceSupportList_ProtocolIEs                                                              97
#define id_SONConfigurationTransferDL_ProtocolIEs                                                    98
#define id_SONConfigurationTransferUL_ProtocolIEs                                                    99
#define id_SourceAMF_UE_NGAP_ID_ProtocolIEs                                                          100
#define id_SourceToTarget_TransparentContainer_ProtocolIEs                                           101
#define id_SupportedTAList_ProtocolIEs                                                               102
#define id_TAIListForPaging_ProtocolIEs                                                              103
#define id_TAIListForRestart_ProtocolIEs                                                             104
#define id_TargetID_ProtocolIEs                                                                      105
#define id_TargetToSource_TransparentContainer_ProtocolIEs                                           106
#define id_TimeToWait_ProtocolIEs                                                                    107
#define id_TraceActivation_ProtocolIEs                                                               108
#define id_TraceCollectionEntityIPAddress_ProtocolIEs                                                109
#define id_UEAggregateMaximumBitRate_ProtocolIEs                                                     110
#define id_UE_associatedLogicalNG_connectionList_ProtocolIEs                                         111
#define id_UEContextRequest_ProtocolIEs                                                              112
#define id_UE_NGAP_IDs_ProtocolIEs                                                                   114
#define id_UEPagingIdentity_ProtocolIEs                                                              115
#define id_UEPresenceInAreaOfInterestList_ProtocolIEs                                                116
#define id_UERadioCapability_ProtocolIEs                                                             117
#define id_UERadioCapabilityForPaging_ProtocolIEs                                                    118
#define id_UESecurityCapabilities_ProtocolIEs                                                        119
#define id_UnavailableGUAMIList_ProtocolIEs                                                          120
#define id_UserLocationInformation_ProtocolIEs                                                       121
#define id_WarningAreaList_ProtocolIEs                                                               122
#define id_WarningMessageContents_ProtocolIEs                                                        123
#define id_WarningSecurityInfo_ProtocolIEs                                                           124
#define id_WarningType_ProtocolIEs                                                                   125
#define id_AdditionalUL_NGU_UP_TNLInformation_ProtocolIEs                                            126
#define id_DataForwardingNotPossible_ProtocolIEs                                                     127
#define id_DL_NGU_UP_TNLInformation_ProtocolIEs                                                      128
#define id_NetworkInstance_ProtocolIEs                                                               129
#define id_PDUSessionAggregateMaximumBitRate_ProtocolIEs                                             130
#define id_PDUSessionResourceFailedToModifyListModCfm_ProtocolIEs                                    131
#define id_PDUSessionResourceFailedToSetupListCxtFail_ProtocolIEs                                    132
#define id_PDUSessionResourceListCxtRelReq_ProtocolIEs                                               133
#define id_PDUSessionType_ProtocolIEs                                                                134
#define id_QosFlowAddOrModifyRequestList_ProtocolIEs                                                 135
#define id_QosFlowSetupRequestList_ProtocolIEs                                                       136
#define id_QosFlowToReleaseList_ProtocolIEs                                                          137
#define id_SecurityIndication_ProtocolIEs                                                            138
#define id_UL_NGU_UP_TNLInformation_ProtocolIEs                                                      139
#define id_UL_NGU_UP_TNLModifyList_ProtocolIEs                                                       140
#define id_WarningAreaCoordinates_ProtocolIEs                                                        141
#define id_PDUSessionResourceSecondaryRATUsageList_ProtocolIEs                                       142
#define id_HandoverFlag_ProtocolIEs                                                                  143
#define id_SecondaryRATUsageInformation_ProtocolIEs                                                  144
#define id_PDUSessionResourceReleaseResponseTransfer_ProtocolIEs                                     145
#define id_RedirectionVoiceFallback_ProtocolIEs                                                      146
#define id_UERetentionInformation_ProtocolIEs                                                        147
#define id_S_NSSAI_ProtocolIEs                                                                       148
#define id_PSCellInformation_ProtocolIEs                                                             149
#define id_LastEUTRAN_PLMNIdentity_ProtocolIEs                                                       150
#define id_MaximumIntegrityProtectedDataRate_DL_ProtocolIEs                                          151
#define id_AdditionalDLForwardingUPTNLInformation_ProtocolIEs                                        152
#define id_AdditionalDLUPTNLInformationForHOList_ProtocolIEs                                         153
#define id_AdditionalNGU_UP_TNLInformation_ProtocolIEs                                               154
#define id_AdditionalDLQosFlowPerTNLInformation_ProtocolIEs                                          155
#define id_SecurityResult_ProtocolIEs                                                                156
#define id_ENDC_SONConfigurationTransferDL_ProtocolIEs                                               157
#define id_ENDC_SONConfigurationTransferUL_ProtocolIEs                                               158
#define id_OldAssociatedQosFlowList_ULendmarkerexpected_ProtocolIEs                                  159
#define id_CNTypeRestrictionsForEquivalent_ProtocolIEs                                               160
#define id_CNTypeRestrictionsForServing_ProtocolIEs                                                  161
#define id_NewGUAMI_ProtocolIEs                                                                      162
#define id_ULForwarding_ProtocolIEs                                                                  163
#define id_ULForwardingUP_TNLInformation_ProtocolIEs                                                 164
#define id_CNAssistedRANTuning_ProtocolIEs                                                           165
#define id_CommonNetworkInstance_ProtocolIEs                                                         166
#define id_NGRAN_TNLAssociationToRemoveList_ProtocolIEs                                              167
#define id_TNLAssociationTransportLayerAddressNGRAN_ProtocolIEs                                      168
#define id_EndpointIPAddressAndPort_ProtocolIEs                                                      169
#define id_LocationReportingAdditionalInfo_ProtocolIEs                                               170
#define id_SourceToTarget_AMFInformationReroute_ProtocolIEs                                          171
#define id_AdditionalULForwardingUPTNLInformation_ProtocolIEs                                        172
#define id_SCTP_TLAs_ProtocolIEs                                                                     173
#define id_SelectedPLMNIdentity_ProtocolIEs                                                          174
#define id_RIMInformationTransfer_ProtocolIEs                                                        175
#define id_GUAMIType_ProtocolIEs                                                                     176
#define id_SRVCCOperationPossible_ProtocolIEs                                                        177
#define id_TargetRNC_ID_ProtocolIEs                                                                  178
#define id_RAT_Information_ProtocolIEs                                                               179
#define id_ExtendedRATRestrictionInformation_ProtocolIEs                                             180
#define id_QosMonitoringRequest_ProtocolIEs                                                          181
#define id_SgNB_UE_X2AP_ID_ProtocolIEs                                                               182
#define id_AdditionalRedundantDL_NGU_UP_TNLInformation_ProtocolIEs                                   183
#define id_AdditionalRedundantDLQosFlowPerTNLInformation_ProtocolIEs                                 184
#define id_AdditionalRedundantNGU_UP_TNLInformation_ProtocolIEs                                      185
#define id_AdditionalRedundantUL_NGU_UP_TNLInformation_ProtocolIEs                                   186
#define id_CNPacketDelayBudgetDL_ProtocolIEs                                                         187
#define id_CNPacketDelayBudgetUL_ProtocolIEs                                                         188
#define id_ExtendedPacketDelayBudget_ProtocolIEs                                                     189
#define id_RedundantCommonNetworkInstance_ProtocolIEs                                                190
#define id_RedundantDL_NGU_TNLInformationReused_ProtocolIEs                                          191
#define id_RedundantDL_NGU_UP_TNLInformation_ProtocolIEs                                             192
#define id_RedundantDLQosFlowPerTNLInformation_ProtocolIEs                                           193
#define id_RedundantQosFlowIndicator_ProtocolIEs                                                     194
#define id_RedundantUL_NGU_UP_TNLInformation_ProtocolIEs                                             195
#define id_TSCTrafficCharacteristics_ProtocolIEs                                                     196
#define id_RedundantPDUSessionInformation_ProtocolIEs                                                197
#define id_UsedRSNInformation_ProtocolIEs                                                            198
#define id_IAB_Authorized_ProtocolIEs                                                                199
#define id_IAB_Supported_ProtocolIEs                                                                 200
#define id_IABNodeIndication_ProtocolIEs                                                             201
#define id_NB_IoT_PagingDRX_ProtocolIEs                                                              202
#define id_NB_IoT_Paging_eDRXInfo_ProtocolIEs                                                        203
#define id_NB_IoT_DefaultPagingDRX_ProtocolIEs                                                       204
#define id_Enhanced_CoverageRestriction_ProtocolIEs                                                  205
#define id_Extended_ConnectedTime_ProtocolIEs                                                        206
#define id_PagingAssisDataforCEcapabUE_ProtocolIEs                                                   207
#define id_WUS_Assistance_Information_ProtocolIEs                                                    208
#define id_UE_DifferentiationInfo_ProtocolIEs                                                        209
#define id_NB_IoT_UEPriority_ProtocolIEs                                                             210
#define id_UL_CP_SecurityInformation_ProtocolIEs                                                     211
#define id_DL_CP_SecurityInformation_ProtocolIEs                                                     212
#define id_TAI_ProtocolIEs                                                                           213
#define id_UERadioCapabilityForPagingOfNB_IoT_ProtocolIEs                                            214
#define id_LTEV2XServicesAuthorized_ProtocolIEs                                                      215
#define id_NRV2XServicesAuthorized_ProtocolIEs                                                       216
#define id_LTEUESidelinkAggregateMaximumBitrate_ProtocolIEs                                          217
#define id_NRUESidelinkAggregateMaximumBitrate_ProtocolIEs                                           218
#define id_PC5QoSParameters_ProtocolIEs                                                              219
#define id_AlternativeQoSParaSetList_ProtocolIEs                                                     220
#define id_CurrentQoSParaSetIndex_ProtocolIEs                                                        221
#define id_CEmodeBrestricted_ProtocolIEs                                                             222
#define id_EUTRA_PagingeDRXInformation_ProtocolIEs                                                   223
#define id_CEmodeBSupport_Indicator_ProtocolIEs                                                      224
#define id_LTEM_Indication_ProtocolIEs                                                               225
#define id_EndIndication_ProtocolIEs                                                                 226
#define id_EDT_Session_ProtocolIEs                                                                   227
#define id_UECapabilityInfoRequest_ProtocolIEs                                                       228
#define id_PDUSessionResourceFailedToResumeListRESReq_ProtocolIEs                                    229
#define id_PDUSessionResourceFailedToResumeListRESRes_ProtocolIEs                                    230
#define id_PDUSessionResourceSuspendListSUSReq_ProtocolIEs                                           231
#define id_PDUSessionResourceResumeListRESReq_ProtocolIEs                                            232
#define id_PDUSessionResourceResumeListRESRes_ProtocolIEs                                            233
#define id_UE_UP_CIoT_Support_ProtocolIEs                                                            234
#define id_Suspend_Request_Indication_ProtocolIEs                                                    235
#define id_Suspend_Response_Indication_ProtocolIEs                                                   236
#define id_RRC_Resume_Cause_ProtocolIEs                                                              237
#define id_RGLevelWirelineAccessCharacteristics_ProtocolIEs                                          238
#define id_W_AGFIdentityInformation_ProtocolIEs                                                      239
#define id_GlobalTNGF_ID_ProtocolIEs                                                                 240
#define id_GlobalTWIF_ID_ProtocolIEs                                                                 241
#define id_GlobalW_AGF_ID_ProtocolIEs                                                                242
#define id_UserLocationInformationW_AGF_ProtocolIEs                                                  243
#define id_UserLocationInformationTNGF_ProtocolIEs                                                   244
#define id_AuthenticatedIndication_ProtocolIEs                                                       245
#define id_TNGFIdentityInformation_ProtocolIEs                                                       246
#define id_TWIFIdentityInformation_ProtocolIEs                                                       247
#define id_UserLocationInformationTWIF_ProtocolIEs                                                   248
#define id_DataForwardingResponseERABList_ProtocolIEs                                                249
#define id_IntersystemSONConfigurationTransferDL_ProtocolIEs                                         250
#define id_IntersystemSONConfigurationTransferUL_ProtocolIEs                                         251
#define id_SONInformationReport_ProtocolIEs                                                          252
#define id_UEHistoryInformationFromTheUE_ProtocolIEs                                                 253
#define id_ManagementBasedMDTPLMNList_ProtocolIEs                                                    254
#define id_MDTConfiguration_ProtocolIEs                                                              255
#define id_PrivacyIndicator_ProtocolIEs                                                              256
#define id_TraceCollectionEntityURI_ProtocolIEs                                                      257
#define id_NPN_Support_ProtocolIEs                                                                   258
#define id_NPN_AccessInformation_ProtocolIEs                                                         259
#define id_NPN_PagingAssistanceInformation_ProtocolIEs                                               260
#define id_NPN_MobilityInformation_ProtocolIEs                                                       261
#define id_TargettoSource_Failure_TransparentContainer_ProtocolIEs                                   262
#define id_NID_ProtocolIEs                                                                           263
#define id_UERadioCapabilityID_ProtocolIEs                                                           264
#define id_UERadioCapability_EUTRA_Format_ProtocolIEs                                                265
#define id_DAPSRequestInfo_ProtocolIEs                                                               266
#define id_DAPSResponseInfoList_ProtocolIEs                                                          267
#define id_EarlyStatusTransfer_TransparentContainer_ProtocolIEs                                      268
#define id_NotifySourceNGRANNode_ProtocolIEs                                                         269
#define id_ExtendedSliceSupportList_ProtocolIEs                                                      270
#define id_ExtendedTAISliceSupportList_ProtocolIEs                                                   271
#define id_ConfiguredTACIndication_ProtocolIEs                                                       272
#define id_Extended_RANNodeName_ProtocolIEs                                                          273
#define id_Extended_AMFName_ProtocolIEs                                                              274
#define id_GlobalCable_ID_ProtocolIEs                                                                275
#define id_QosMonitoringReportingFrequency_ProtocolIEs                                               276
#define id_QosFlowParametersList_ProtocolIEs                                                         277
#define id_QosFlowFeedbackList_ProtocolIEs                                                           278
#define id_BurstArrivalTimeDownlink_ProtocolIEs                                                      279
#define id_ExtendedUEIdentityIndexValue_ProtocolIEs                                                  280
#define id_PduSessionExpectedUEActivityBehaviour_ProtocolIEs                                         281
#define id_MicoAllPLMN_ProtocolIEs                                                                   282
#define id_QosFlowFailedToSetupList_ProtocolIEs                                                      283
#define id_SourceTNLAddrInfo_ProtocolIEs                                                             284
#define id_ExtendedReportIntervalMDT_ProtocolIEs                                                     285
#define id_SourceNodeID_ProtocolIEs                                                                  286
#define id_NRNTNTAIInformation_ProtocolIEs                                                           287
#define id_UEContextReferenceAtSource_ProtocolIEs                                                    288
#define id_LastVisitedPSCellList_ProtocolIEs                                                         289
#define id_IntersystemSONInformationRequest_ProtocolIEs                                              290
#define id_IntersystemSONInformationReply_ProtocolIEs                                                291
#define id_EnergySavingIndication_ProtocolIEs                                                        292
#define id_IntersystemResourceStatusUpdate_ProtocolIEs                                               293
#define id_SuccessfulHandoverReportList_ProtocolIEs                                                  294
#define id_MBS_AreaSessionID_ProtocolIEs                                                             295
#define id_MBS_QoSFlowsToBeSetupList_ProtocolIEs                                                     296
#define id_MBS_QoSFlowsToBeSetupModList_ProtocolIEs                                                  297
#define id_MBS_ServiceArea_ProtocolIEs                                                               298
#define id_MBS_SessionID_ProtocolIEs                                                                 299
#define id_MBS_DistributionReleaseRequestTransfer_ProtocolIEs                                        300
#define id_MBS_DistributionSetupRequestTransfer_ProtocolIEs                                          301
#define id_MBS_DistributionSetupResponseTransfer_ProtocolIEs                                         302
#define id_MBS_DistributionSetupUnsuccessfulTransfer_ProtocolIEs                                     303
#define id_MulticastSessionActivationRequestTransfer_ProtocolIEs                                     304
#define id_MulticastSessionDeactivationRequestTransfer_ProtocolIEs                                   305
#define id_MulticastSessionUpdateRequestTransfer_ProtocolIEs                                         306
#define id_MulticastGroupPagingAreaList_ProtocolIEs                                                  307
#define id_MBS_SupportIndicator_ProtocolIEs                                                          309
#define id_MBSSessionFailedtoSetupList_ProtocolIEs                                                   310
#define id_MBSSessionFailedtoSetuporModifyList_ProtocolIEs                                           311
#define id_MBSSessionSetupResponseList_ProtocolIEs                                                   312
#define id_MBSSessionSetuporModifyResponseList_ProtocolIEs                                           313
#define id_MBSSessionSetupFailureTransfer_ProtocolIEs                                                314
#define id_MBSSessionSetupRequestTransfer_ProtocolIEs                                                315
#define id_MBSSessionSetupResponseTransfer_ProtocolIEs                                               316
#define id_MBSSessionToReleaseList_ProtocolIEs                                                       317
#define id_MBSSessionSetupRequestList_ProtocolIEs                                                    318
#define id_MBSSessionSetuporModifyRequestList_ProtocolIEs                                            319
#define id_MBS_ActiveSessionInformation_SourcetoTargetList_ProtocolIEs                               323
#define id_MBS_ActiveSessionInformation_TargettoSourceList_ProtocolIEs                               324
#define id_OnboardingSupport_ProtocolIEs                                                             325
#define id_TimeSyncAssistanceInfo_ProtocolIEs                                                        326
#define id_SurvivalTime_ProtocolIEs                                                                  327
#define id_QMCConfigInfo_ProtocolIEs                                                                 328
#define id_QMCDeactivation_ProtocolIEs                                                               329
#define id_PDUSessionPairID_ProtocolIEs                                                              331
#define id_NR_PagingeDRXInformation_ProtocolIEs                                                      332
#define id_RedCapIndication_ProtocolIEs                                                              333
#define id_TargetNSSAIInformation_ProtocolIEs                                                        334
#define id_UESliceMaximumBitRateList_ProtocolIEs                                                     335
#define id_M4ReportAmount_ProtocolIEs                                                                336
#define id_M5ReportAmount_ProtocolIEs                                                                337
#define id_M6ReportAmount_ProtocolIEs                                                                338
#define id_M7ReportAmount_ProtocolIEs                                                                339
#define id_IncludeBeamMeasurementsIndication_ProtocolIEs                                             340
#define id_ExcessPacketDelayThresholdConfiguration_ProtocolIEs                                       341
#define id_PagingCause_ProtocolIEs                                                                   342
#define id_PagingCauseIndicationForVoiceService_ProtocolIEs                                          343
#define id_PEIPSassistanceInformation_ProtocolIEs                                                    344
#define id_FiveG_ProSeAuthorized_ProtocolIEs                                                         345
#define id_FiveG_ProSeUEPC5AggregateMaximumBitRate_ProtocolIEs                                       346
#define id_FiveG_ProSePC5QoSParameters_ProtocolIEs                                                   347
#define id_MBSSessionModificationFailureTransfer_ProtocolIEs                                         348
#define id_MBSSessionModificationRequestTransfer_ProtocolIEs                                         349
#define id_MBSSessionModificationResponseTransfer_ProtocolIEs                                        350
#define id_MBS_QoSFlowToReleaseList_ProtocolIEs                                                      351
#define id_MBS_SessionTNLInfo5GC_ProtocolIEs                                                         352
#define id_TAINSAGSupportList_ProtocolIEs                                                            353
#define id_SourceNodeTNLAddrInfo_ProtocolIEs                                                         354
#define id_NGAPIESupportInformationRequestList_ProtocolIEs                                           355
#define id_NGAPIESupportInformationResponseList_ProtocolIEs                                          356
#define id_MBS_SessionFSAIDList_ProtocolIEs                                                          357
#define id_MBSSessionReleaseResponseTransfer_ProtocolIEs                                             358
#define id_ManagementBasedMDTPLMNModificationList_ProtocolIEs                                        359
#define id_EarlyMeasurement_ProtocolIEs                                                              360
#define id_BeamMeasurementsReportConfiguration_ProtocolIEs                                           361
#define id_HFCNode_ID_new_ProtocolIEs                                                                362
#define id_GlobalCable_ID_new_ProtocolIEs                                                            363
#define id_TargetHomeENB_ID_ProtocolIEs                                                              364
#define id_HashedUEIdentityIndexValue_ProtocolIEs                                                    365
#define id_ExtendedMobilityInformation_ProtocolIEs                                                   366
#define id_NetworkControlledRepeaterAuthorized_ProtocolIEs                                           367
#define id_AdditionalCancelledlocationReportingReferenceIDList_ProtocolIEs                           368
#define id_Selected_Target_SNPN_Identity_ProtocolIEs                                                 369
#define id_EquivalentSNPNsList_ProtocolIEs                                                           370
#define id_SelectedNID_ProtocolIEs                                                                   371
#define id_SupportedUETypeList_ProtocolIEs                                                           372
#define id_AerialUEsubscriptionInformation_ProtocolIEs                                               373
#define id_NR_A2X_ServicesAuthorized_ProtocolIEs                                                     374
#define id_LTE_A2X_ServicesAuthorized_ProtocolIEs                                                    375
#define id_NR_A2X_UE_PC5_AggregateMaximumBitRate_ProtocolIEs                                         376
#define id_LTE_A2X_UE_PC5_AggregateMaximumBitRate_ProtocolIEs                                        377
#define id_A2X_PC5_QoS_Parameters_ProtocolIEs                                                        378
#define id_FiveGProSeLayer2Multipath_ProtocolIEs                                                     379
#define id_FiveGProSeLayer2UEtoUERelay_ProtocolIEs                                                   380
#define id_FiveGProSeLayer2UEtoUERemote_ProtocolIEs                                                  381
#define id_CandidateRelayUEInformationList_ProtocolIEs                                               382
#define id_SuccessfulPSCellChangeReportList_ProtocolIEs                                              383
#define id_IntersystemMobilityFailureforVoiceFallback_ProtocolIEs                                    384
#define id_TargetCellCRNTI_ProtocolIEs                                                               385
#define id_TimeSinceFailure_ProtocolIEs                                                              386
#define id_RANTimingSynchronisationStatusInfo_ProtocolIEs                                            387
#define id_RAN_TSSRequestType_ProtocolIEs                                                            388
#define id_RAN_TSSScope_ProtocolIEs                                                                  389
#define id_ClockQualityReportingControlInfo_ProtocolIEs                                              390
#define id_RANfeedbacktype_ProtocolIEs                                                               391
#define id_QoSFlowTSCList_ProtocolIEs                                                                392
#define id_TSCTrafficCharacteristicsFeedback_ProtocolIEs                                             393
#define id_DownlinkTLContainer_ProtocolIEs                                                           394
#define id_UplinkTLContainer_ProtocolIEs                                                             395
#define id_ANPacketDelayBudgetUL_ProtocolIEs                                                         396
#define id_QosFlowAdditionalInfoList_ProtocolIEs                                                     397
#define id_AssistanceInformationQoE_Meas_ProtocolIEs                                                 398
#define id_MBSCommServiceType_ProtocolIEs                                                            399
#define id_MobileIAB_Authorized_ProtocolIEs                                                          400
#define id_MobileIAB_MTUserLocationInformation_ProtocolIEs                                           401
#define id_MobileIABNodeIndication_ProtocolIEs                                                       402
#define id_NoPDUSessionIndication_ProtocolIEs                                                        403
#define id_MobileIAB_Supported_ProtocolIEs                                                           404
#define id_CN_MT_CommunicationHandling_ProtocolIEs                                                   405
#define id_FiveGCAction_ProtocolIEs                                                                  406
#define id_PagingPolicyDifferentiation_ProtocolIEs                                                   407
#define id_DL_Signalling_ProtocolIEs                                                                 408
#define id_PNI_NPN_AreaScopeofMDT_ProtocolIEs                                                        409
#define id_PNI_NPNBasedMDT_ProtocolIEs                                                               410
#define id_SNPN_CellBasedMDT_ProtocolIEs                                                             411
#define id_SNPN_TAIBasedMDT_ProtocolIEs                                                              412
#define id_SNPN_BasedMDT_ProtocolIEs                                                                 413
#define id_Partially_Allowed_NSSAI_ProtocolIEs                                                       414
#define id_AssociatedSessionID_ProtocolIEs                                                           415
#define id_MBS_AssistanceInformation_ProtocolIEs                                                     416
#define id_BroadcastTransportFailureTransfer_ProtocolIEs                                             417
#define id_BroadcastTransportRequestTransfer_ProtocolIEs                                             418
#define id_BroadcastTransportResponseTransfer_ProtocolIEs                                            419
#define id_TimeBasedHandoverInformation_ProtocolIEs                                                  420
#define id_DLDiscarding_ProtocolIEs                                                                  421
#define id_PDUsetQoSParameters_ProtocolIEs                                                           422
#define id_PDUSetbasedHandlingIndicator_ProtocolIEs                                                  423
#define id_N6JitterInformation_ProtocolIEs                                                           424
#define id_ECNMarkingorCongestionInformationReportingRequest_ProtocolIEs                             425
#define id_ECNMarkingorCongestionInformationReportingStatus_ProtocolIEs                              426
#define id_ERedCapIndication_ProtocolIEs                                                             427
#define id_XrDeviceWith2Rx_ProtocolIEs                                                               428
#define id_UserPlaneErrorIndicator_ProtocolIEs                                                       429
#define id_SLPositioningRangingServiceInfo_ProtocolIEs                                               430
#define id_PDUSessionListMTCommHReq_ProtocolIEs                                                      431
#define id_MaximumDataBurstVolume_ProtocolIEs                                                        432
#define id_MN_only_MDT_collection_ProtocolIEs                                                        433
#define id_MBS_NGUFailureIndication_ProtocolIEs                                                      434
#define id_UserPlaneFailureIndication_ProtocolIEs                                                    435
#define id_UserPlaneFailureIndicationReport_ProtocolIEs                                              436
#define id_SourceSN_to_TargetSN_QMCInfo_ProtocolIEs                                                  437
#define id_QoERVQoEReportingPaths_ProtocolIEs                                                        438
#define id_UserLocationInformationN3IWF_without_PortNumber_ProtocolIEs                               439
#define id_AUN3DeviceAccessInfo_ProtocolIEs                                                          440



#define __si_amf__maxPrivateIEs_const                                                                65535
#define __si_amf__maxProtocolExtensions_const                                                        65535
#define __si_amf__maxProtocolIEs_const                                                               65535
#define __si_amf__maxnoofAllowedAreas_const                                                          16
#define __si_amf__maxnoofAllowedCAGsperPLMN_const                                                    256
#define __si_amf__maxnoofAllowedS_NSSAIs_const                                                       8
#define __si_amf__maxnoofBluetoothName_const                                                         4
#define __si_amf__maxnoofBPLMNs_const                                                                12
#define __si_amf__maxnoofCAGSperCell_const                                                           64
#define __si_amf__maxnoofCellIDforMDT_const                                                          32
#define __si_amf__maxnoofCellIDforWarning_const                                                      65535
#define __si_amf__maxnoofCellinAoI_const                                                             256
#define __si_amf__maxnoofCellinEAI_const                                                             65535
#define __si_amf__maxnoofCellinTAI_const                                                             65535
#define __si_amf__maxnoofCellsforMBS_const                                                           8192
#define __si_amf__maxnoofCellsingNB_const                                                            16384
#define __si_amf__maxnoofCellsinngeNB_const                                                          256
#define __si_amf__maxnoofCellsinNGRANNode_const                                                      16384
#define __si_amf__maxnoofCellsinUEHistoryInfo_const                                                  16
#define __si_amf__maxnoofCellsUEMovingTrajectory_const                                               16
#define __si_amf__maxnoofDRBs_const                                                                  32
#define __si_amf__maxnoofEmergencyAreaID_const                                                       65535
#define __si_amf__maxnoofEAIforRestart_const                                                         256
#define __si_amf__maxnoofEPLMNs_const                                                                15
#define __si_amf__maxnoofEPLMNsPlusOne_const                                                         16
#define __si_amf__maxnoofE_RABs_const                                                                256
#define __si_amf__maxnoofErrors_const                                                                256
#define __si_amf__maxnoofExtSliceItems_const                                                         65535
#define __si_amf__maxnoofForbTACs_const                                                              4096
#define __si_amf__maxnoofFreqforMDT_const                                                            8
#define __si_amf__maxnoofMBSAreaSessionIDs_const                                                     256
#define __si_amf__maxnoofMBSFSAs_const                                                               64
#define __si_amf__maxnoofMBSQoSFlows_const                                                           64
#define __si_amf__maxnoofMBSSessions_const                                                           32
#define __si_amf__maxnoofMBSSessionsofUE_const                                                       256
#define __si_amf__maxnoofMBSServiceAreaInformation_const                                             256
#define __si_amf__maxnoofMDTPLMNs_const                                                              16
#define __si_amf__maxnoofMRBs_const                                                                  32
#define __si_amf__maxnoofMultiConnectivity_const                                                     4
#define __si_amf__maxnoofMultiConnectivityMinusOne_const                                             3
#define __si_amf__maxnoofNeighPCIforMDT_const                                                        32
#define __si_amf__maxnoofNGAPIESupportInfo_const                                                     32
#define __si_amf__maxnoofNGConnectionsToReset_const                                                  65536
#define __si_amf__maxnoofNRCellBands_const                                                           32
#define __si_amf__maxnoofNSAGs_const                                                                 256
#define __si_amf__maxnoofPagingAreas_const                                                           64
#define __si_amf__maxnoofPC5QoSFlows_const                                                           2048
#define __si_amf__maxnoofPDUSessions_const                                                           256
#define __si_amf__maxnoofPLMNs_const                                                                 12
#define __si_amf__maxnoofPSCellsPerPrimaryCellinUEHistoryInfo_const                                  8
#define __si_amf__maxnoofQosFlows_const                                                              64
#define __si_amf__maxnoofQosParaSets_const                                                           8
#define __si_amf__maxnoofRANNodeinAoI_const                                                          64
#define __si_amf__maxnoofRecommendedCells_const                                                      16
#define __si_amf__maxnoofRecommendedRANNodes_const                                                   16
#define __si_amf__maxnoofAoI_const                                                                   64
#define __si_amf__maxnoofAoIMinusOne_const                                                           63
#define __si_amf__maxnoofReportedCells_const                                                         256
#define __si_amf__maxnoofSensorName_const                                                            3
#define __si_amf__maxnoofServedGUAMIs_const                                                          256
#define __si_amf__maxnoofSliceItems_const                                                            1024
#define __si_amf__maxnoofSuccessfulHOReports_const                                                   64
#define __si_amf__maxnoofTACs_const                                                                  256
#define __si_amf__maxnoofTACsinNTN_const                                                             12
#define __si_amf__maxnoofTAforMDT_const                                                              8
#define __si_amf__maxnoofTAIforInactive_const                                                        16
#define __si_amf__maxnoofTAIforMBS_const                                                             1024
#define __si_amf__maxnoofTAIforPaging_const                                                          16
#define __si_amf__maxnoofTAIforRestart_const                                                         2048
#define __si_amf__maxnoofTAIforWarning_const                                                         65535
#define __si_amf__maxnoofTAIinAoI_const                                                              16
#define __si_amf__maxnoofTimePeriods_const                                                           2
#define __si_amf__maxnoofTNLAssociations_const                                                       32
#define __si_amf__maxnoofUEsforPaging_const                                                          4096
#define __si_amf__maxnoofUETypes_const                                                               8
#define __si_amf__maxnoofWLANName_const                                                              4
#define __si_amf__maxnoofXnExtTLAs_const                                                             16
#define __si_amf__maxnoofXnGTP_TLAs_const                                                            16
#define __si_amf__maxnoofXnTLAs_const                                                                2
#define __si_amf__maxnoofCandidateCells_const                                                        32
#define __si_amf__maxnoofTargetS_NSSAIs_const                                                        8
#define __si_amf__maxNRARFCN_const                                                                   3279165
#define __si_amf__maxnoofCellIDforQMC_const                                                          32
#define __si_amf__maxnoofPLMNforQMC_const                                                            16
#define __si_amf__maxnoofUEAppLayerMeas_const                                                        16
#define __si_amf__maxnoofSNSSAIforQMC_const                                                          16
#define __si_amf__maxnoofTAforQMC_const                                                              8
#define __si_amf__maxnoofThresholdsForExcessPacketDelay_const                                        255
#define __si_amf__maxnoofESNPNs_const                                                                15
#define __si_amf__maxnoofCandidateRelayUEs_const                                                     32
#define __si_amf__maxnoofSuccessfulPSCellChangeReports_const                                         64
#define __si_amf__maxnoofCellsTSS_const                                                              16384
#define __si_amf__maxnoofPeriodicities_const                                                         8
#define __si_amf__maxnoofCAGforMDT_const                                                             256
#define __si_amf__maxnoofMDTSNPNs_const                                                              16
#define __si_amf__maxnoofPartiallyAllowedS_NSSAIs_const                                              8
#define __si_amf__maxnoofRSPPQoSFlows_const                                                          2048



#define maxPrivateIEs_const                                                                          65535
#define maxProtocolExtensions_const                                                                  65535
#define maxProtocolIEs_const                                                                         65535
#define maxnoofAllowedAreas_const                                                                    16
#define maxnoofAllowedCAGsperPLMN_const                                                              256
#define maxnoofAllowedS_NSSAIs_const                                                                 8
#define maxnoofBluetoothName_const                                                                   4
#define maxnoofBPLMNs_const                                                                          12
#define maxnoofCAGSperCell_const                                                                     64
#define maxnoofCellIDforMDT_const                                                                    32
#define maxnoofCellIDforWarning_const                                                                65535
#define maxnoofCellinAoI_const                                                                       256
#define maxnoofCellinEAI_const                                                                       65535
#define maxnoofCellinTAI_const                                                                       65535
#define maxnoofCellsforMBS_const                                                                     8192
#define maxnoofCellsingNB_const                                                                      16384
#define maxnoofCellsinngeNB_const                                                                    256
#define maxnoofCellsinNGRANNode_const                                                                16384
#define maxnoofCellsinUEHistoryInfo_const                                                            16
#define maxnoofCellsUEMovingTrajectory_const                                                         16
#define maxnoofDRBs_const                                                                            32
#define maxnoofEmergencyAreaID_const                                                                 65535
#define maxnoofEAIforRestart_const                                                                   256
#define maxnoofEPLMNs_const                                                                          15
#define maxnoofEPLMNsPlusOne_const                                                                   16
#define maxnoofE_RABs_const                                                                          256
#define maxnoofErrors_const                                                                          256
#define maxnoofExtSliceItems_const                                                                   65535
#define maxnoofForbTACs_const                                                                        4096
#define maxnoofFreqforMDT_const                                                                      8
#define maxnoofMBSAreaSessionIDs_const                                                               256
#define maxnoofMBSFSAs_const                                                                         64
#define maxnoofMBSQoSFlows_const                                                                     64
#define maxnoofMBSSessions_const                                                                     32
#define maxnoofMBSSessionsofUE_const                                                                 256
#define maxnoofMBSServiceAreaInformation_const                                                       256
#define maxnoofMDTPLMNs_const                                                                        16
#define maxnoofMRBs_const                                                                            32
#define maxnoofMultiConnectivity_const                                                               4
#define maxnoofMultiConnectivityMinusOne_const                                                       3
#define maxnoofNeighPCIforMDT_const                                                                  32
#define maxnoofNGAPIESupportInfo_const                                                               32
#define maxnoofNGConnectionsToReset_const                                                            65536
#define maxnoofNRCellBands_const                                                                     32
#define maxnoofNSAGs_const                                                                           256
#define maxnoofPagingAreas_const                                                                     64
#define maxnoofPC5QoSFlows_const                                                                     2048
#define maxnoofPDUSessions_const                                                                     256
#define maxnoofPLMNs_const                                                                           12
#define maxnoofPSCellsPerPrimaryCellinUEHistoryInfo_const                                            8
#define maxnoofQosFlows_const                                                                        64
#define maxnoofQosParaSets_const                                                                     8
#define maxnoofRANNodeinAoI_const                                                                    64
#define maxnoofRecommendedCells_const                                                                16
#define maxnoofRecommendedRANNodes_const                                                             16
#define maxnoofAoI_const                                                                             64
#define maxnoofAoIMinusOne_const                                                                     63
#define maxnoofReportedCells_const                                                                   256
#define maxnoofSensorName_const                                                                      3
#define maxnoofServedGUAMIs_const                                                                    256
#define maxnoofSliceItems_const                                                                      1024
#define maxnoofSuccessfulHOReports_const                                                             64
#define maxnoofTACs_const                                                                            256
#define maxnoofTACsinNTN_const                                                                       12
#define maxnoofTAforMDT_const                                                                        8
#define maxnoofTAIforInactive_const                                                                  16
#define maxnoofTAIforMBS_const                                                                       1024
#define maxnoofTAIforPaging_const                                                                    16
#define maxnoofTAIforRestart_const                                                                   2048
#define maxnoofTAIforWarning_const                                                                   65535
#define maxnoofTAIinAoI_const                                                                        16
#define maxnoofTimePeriods_const                                                                     2
#define maxnoofTNLAssociations_const                                                                 32
#define maxnoofUEsforPaging_const                                                                    4096
#define maxnoofUETypes_const                                                                         8
#define maxnoofWLANName_const                                                                        4
#define maxnoofXnExtTLAs_const                                                                       16
#define maxnoofXnGTP_TLAs_const                                                                      16
#define maxnoofXnTLAs_const                                                                          2
#define maxnoofCandidateCells_const                                                                  32
#define maxnoofTargetS_NSSAIs_const                                                                  8
#define maxNRARFCN_const                                                                             3279165
#define maxnoofCellIDforQMC_const                                                                    32
#define maxnoofPLMNforQMC_const                                                                      16
#define maxnoofUEAppLayerMeas_const                                                                  16
#define maxnoofSNSSAIforQMC_const                                                                    16
#define maxnoofTAforQMC_const                                                                        8
#define maxnoofThresholdsForExcessPacketDelay_const                                                  255
#define maxnoofESNPNs_const                                                                          15
#define maxnoofCandidateRelayUEs_const                                                               32
#define maxnoofSuccessfulPSCellChangeReports_const                                                   64
#define maxnoofCellsTSS_const                                                                        16384
#define maxnoofPeriodicities_const                                                                   8
#define maxnoofCAGforMDT_const                                                                       256
#define maxnoofMDTSNPNs_const                                                                        16
#define maxnoofPartiallyAllowedS_NSSAIs_const                                                        8
#define maxnoofRSPPQoSFlows_const                                                                    2048



#define __si_amf__UPTransportLayerInformation_gTPTunnel_val                      0
#define __si_amf__UPTransportLayerInformation_choice_Extensions_val              1

#define UPTransportLayerInformation_gTPTunnel_val                                0
#define UPTransportLayerInformation_choice_Extensions_val                        1

#define __si_amf__CPTransportLayerInformation_endpointIPAddress_val              0
#define __si_amf__CPTransportLayerInformation_choice_Extensions_val              1

#define CPTransportLayerInformation_endpointIPAddress_val                        0
#define CPTransportLayerInformation_choice_Extensions_val                        1

#define __si_amf__NPN_PagingAssistanceInformation_pNI_NPN_PagingAssistance_val   0
#define __si_amf__NPN_PagingAssistanceInformation_choice_Extensions_val          1

#define NPN_PagingAssistanceInformation_pNI_NPN_PagingAssistance_val             0
#define NPN_PagingAssistanceInformation_choice_Extensions_val                    1

#define __si_amf__NPN_Support_sNPN_val                                           0
#define __si_amf__NPN_Support_choice_Extensions_val                              1

#define NPN_Support_sNPN_val                                                     0
#define NPN_Support_choice_Extensions_val                                        1

#define __si_amf__TNGF_ID_tNGF_ID_val                                            0
#define __si_amf__TNGF_ID_choice_Extensions_val                                  1

#define TNGF_ID_tNGF_ID_val                                                      0
#define TNGF_ID_choice_Extensions_val                                            1

#define __si_amf__TWIF_ID_tWIF_ID_val                                            0
#define __si_amf__TWIF_ID_choice_Extensions_val                                  1

#define TWIF_ID_tWIF_ID_val                                                      0
#define TWIF_ID_choice_Extensions_val                                            1

#define __si_amf__W_AGF_ID_w_AGF_ID_val                                          0
#define __si_amf__W_AGF_ID_choice_Extensions_val                                 1

#define W_AGF_ID_w_AGF_ID_val                                                    0
#define W_AGF_ID_choice_Extensions_val                                           1

#define __si_amf__GNB_ID_gNB_ID_val                                              0
#define __si_amf__GNB_ID_choice_Extensions_val                                   1

#define GNB_ID_gNB_ID_val                                                        0
#define GNB_ID_choice_Extensions_val                                             1

#define __si_amf__NgENB_ID_macroNgENB_ID_val                                     0
#define __si_amf__NgENB_ID_shortMacroNgENB_ID_val                                1
#define __si_amf__NgENB_ID_longMacroNgENB_ID_val                                 2
#define __si_amf__NgENB_ID_choice_Extensions_val                                 3

#define NgENB_ID_macroNgENB_ID_val                                               0
#define NgENB_ID_shortMacroNgENB_ID_val                                          1
#define NgENB_ID_longMacroNgENB_ID_val                                           2
#define NgENB_ID_choice_Extensions_val                                           3

#define __si_amf__N3IWF_ID_n3IWF_ID_val                                          0
#define __si_amf__N3IWF_ID_choice_Extensions_val                                 1

#define N3IWF_ID_n3IWF_ID_val                                                    0
#define N3IWF_ID_choice_Extensions_val                                           1

#define __si_amf__GlobalRANNodeID_globalGNB_ID_val                               0
#define __si_amf__GlobalRANNodeID_globalNgENB_ID_val                             1
#define __si_amf__GlobalRANNodeID_globalN3IWF_ID_val                             2
#define __si_amf__GlobalRANNodeID_choice_Extensions_val                          3

#define GlobalRANNodeID_globalGNB_ID_val                                         0
#define GlobalRANNodeID_globalNgENB_ID_val                                       1
#define GlobalRANNodeID_globalN3IWF_ID_val                                       2
#define GlobalRANNodeID_choice_Extensions_val                                    3

#define __si_amf__ReportingSystem_eUTRAN_val                                     0
#define __si_amf__ReportingSystem_nGRAN_val                                      1
#define __si_amf__ReportingSystem_noReporting_val                                2
#define __si_amf__ReportingSystem_choice_Extensions_val                          3

#define ReportingSystem_eUTRAN_val                                               0
#define ReportingSystem_nGRAN_val                                                1
#define ReportingSystem_noReporting_val                                          2
#define ReportingSystem_choice_Extensions_val                                    3

#define __si_amf__ReportType_eventBasedReporting_val                             0
#define __si_amf__ReportType_periodicReporting_val                               1
#define __si_amf__ReportType_choice_Extensions_val                               2

#define ReportType_eventBasedReporting_val                                       0
#define ReportType_periodicReporting_val                                         1
#define ReportType_choice_Extensions_val                                         2

#define __si_amf__IntersystemSONInformationRequest_nGRAN_CellActivation_val      0
#define __si_amf__IntersystemSONInformationRequest_resourceStatus_val            1
#define __si_amf__IntersystemSONInformationRequest_choice_Extensions_val         2

#define IntersystemSONInformationRequest_nGRAN_CellActivation_val                0
#define IntersystemSONInformationRequest_resourceStatus_val                      1
#define IntersystemSONInformationRequest_choice_Extensions_val                   2

#define __si_amf__IntersystemSONInformationReply_nGRAN_CellActivation_val        0
#define __si_amf__IntersystemSONInformationReply_resourceStatus_val              1
#define __si_amf__IntersystemSONInformationReply_choice_Extensions_val           2

#define IntersystemSONInformationReply_nGRAN_CellActivation_val                  0
#define IntersystemSONInformationReply_resourceStatus_val                        1
#define IntersystemSONInformationReply_choice_Extensions_val                     2

#define __si_amf__ResourceStatusReportingSystem_eUTRAN_ReportingStatus_val       0
#define __si_amf__ResourceStatusReportingSystem_nGRAN_ReportingStatus_val        1
#define __si_amf__ResourceStatusReportingSystem_choice_Extensions_val            2

#define ResourceStatusReportingSystem_eUTRAN_ReportingStatus_val                 0
#define ResourceStatusReportingSystem_nGRAN_ReportingStatus_val                  1
#define ResourceStatusReportingSystem_choice_Extensions_val                      2

#define __si_amf__NGRAN_CGI_nR_CGI_val                                           0
#define __si_amf__NGRAN_CGI_eUTRA_CGI_val                                        1
#define __si_amf__NGRAN_CGI_choice_Extensions_val                                2

#define NGRAN_CGI_nR_CGI_val                                                     0
#define NGRAN_CGI_eUTRA_CGI_val                                                  1
#define NGRAN_CGI_choice_Extensions_val                                          2

#define __si_amf__UERLFReportContainer_nR_val                                    0
#define __si_amf__UERLFReportContainer_lTE_val                                   1
#define __si_amf__UERLFReportContainer_choice_Extensions_val                     2

#define UERLFReportContainer_nR_val                                              0
#define UERLFReportContainer_lTE_val                                             1
#define UERLFReportContainer_choice_Extensions_val                               2

#define __si_amf__NPN_MobilityInformation_sNPN_MobilityInformation_val           0
#define __si_amf__NPN_MobilityInformation_pNI_NPN_MobilityInformation_val        1
#define __si_amf__NPN_MobilityInformation_choice_Extensions_val                  2

#define NPN_MobilityInformation_sNPN_MobilityInformation_val                     0
#define NPN_MobilityInformation_pNI_NPN_MobilityInformation_val                  1
#define NPN_MobilityInformation_choice_Extensions_val                            2

#define __si_amf__ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtRANRequest_val 0
#define __si_amf__ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtUPFRequest_val 1
#define __si_amf__ECNMarkingorCongestionInformationReportingRequest_congestionInformationRequest_val 2
#define __si_amf__ECNMarkingorCongestionInformationReportingRequest_choice_Extensions_val 3

#define ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtRANRequest_val 0
#define ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtUPFRequest_val 1
#define ECNMarkingorCongestionInformationReportingRequest_congestionInformationRequest_val 2
#define ECNMarkingorCongestionInformationReportingRequest_choice_Extensions_val  3

#define __si_amf__Cause_radioNetwork_val                                         0
#define __si_amf__Cause_transport_val                                            1
#define __si_amf__Cause_nas_val                                                  2
#define __si_amf__Cause_protocol_val                                             3
#define __si_amf__Cause_misc_val                                                 4
#define __si_amf__Cause_choice_Extensions_val                                    5

#define Cause_radioNetwork_val                                                   0
#define Cause_transport_val                                                      1
#define Cause_nas_val                                                            2
#define Cause_protocol_val                                                       3
#define Cause_misc_val                                                           4
#define Cause_choice_Extensions_val                                              5

#define __si_amf__SONInformationReport_failureIndicationInformation_val          0
#define __si_amf__SONInformationReport_hOReportInformation_val                   1
#define __si_amf__SONInformationReport_choice_Extensions_val                     2

#define SONInformationReport_failureIndicationInformation_val                    0
#define SONInformationReport_hOReportInformation_val                             1
#define SONInformationReport_choice_Extensions_val                               2

#define __si_amf__UEHistoryInformationFromTheUE_nR_val                           0
#define __si_amf__UEHistoryInformationFromTheUE_choice_Extensions_val            1

#define UEHistoryInformationFromTheUE_nR_val                                     0
#define UEHistoryInformationFromTheUE_choice_Extensions_val                      1

#define __si_amf__SourceNodeID_sourceengNB_ID_val                                0
#define __si_amf__SourceNodeID_choice_Extensions_val                             1

#define SourceNodeID_sourceengNB_ID_val                                          0
#define SourceNodeID_choice_Extensions_val                                       1

#define __si_amf__ClockQualityDetailLevel_clockQualityMetrics_val                0
#define __si_amf__ClockQualityDetailLevel_clockQualityAcceptanceIndication_val   1
#define __si_amf__ClockQualityDetailLevel_choice_extensions_val                  2

#define ClockQualityDetailLevel_clockQualityMetrics_val                          0
#define ClockQualityDetailLevel_clockQualityAcceptanceIndication_val             1
#define ClockQualityDetailLevel_choice_extensions_val                            2

#define __si_amf__AreaScopeOfMDT_NR_cellBased_val                                0
#define __si_amf__AreaScopeOfMDT_NR_tABased_val                                  1
#define __si_amf__AreaScopeOfMDT_NR_pLMNWide_val                                 2
#define __si_amf__AreaScopeOfMDT_NR_tAIBased_val                                 3
#define __si_amf__AreaScopeOfMDT_NR_choice_Extensions_val                        4

#define AreaScopeOfMDT_NR_cellBased_val                                          0
#define AreaScopeOfMDT_NR_tABased_val                                            1
#define AreaScopeOfMDT_NR_pLMNWide_val                                           2
#define AreaScopeOfMDT_NR_tAIBased_val                                           3
#define AreaScopeOfMDT_NR_choice_Extensions_val                                  4

#define __si_amf__M1ThresholdType_threshold_RSRP_val                             0
#define __si_amf__M1ThresholdType_threshold_RSRQ_val                             1
#define __si_amf__M1ThresholdType_threshold_SINR_val                             2
#define __si_amf__M1ThresholdType_choice_Extensions_val                          3

#define M1ThresholdType_threshold_RSRP_val                                       0
#define M1ThresholdType_threshold_RSRQ_val                                       1
#define M1ThresholdType_threshold_SINR_val                                       2
#define M1ThresholdType_choice_Extensions_val                                    3

#define __si_amf__MeasurementThresholdL1LoggedMDT_threshold_RSRP_val             0
#define __si_amf__MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val             1
#define __si_amf__MeasurementThresholdL1LoggedMDT_choice_Extensions_val          2

#define MeasurementThresholdL1LoggedMDT_threshold_RSRP_val                       0
#define MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val                       1
#define MeasurementThresholdL1LoggedMDT_choice_Extensions_val                    2

#define __si_amf__EventTrigger_outOfCoverage_val                                 0
#define __si_amf__EventTrigger_eventL1LoggedMDTConfig_val                        1
#define __si_amf__EventTrigger_choice_Extensions_val                             2

#define EventTrigger_outOfCoverage_val                                           0
#define EventTrigger_eventL1LoggedMDTConfig_val                                  1
#define EventTrigger_choice_Extensions_val                                       2

#define __si_amf__LoggedMDTTrigger_periodical_val                                0
#define __si_amf__LoggedMDTTrigger_eventTrigger_val                              1
#define __si_amf__LoggedMDTTrigger_choice_Extensions_val                         2

#define LoggedMDTTrigger_periodical_val                                          0
#define LoggedMDTTrigger_eventTrigger_val                                        1
#define LoggedMDTTrigger_choice_Extensions_val                                   2

#define __si_amf__MDTModeNr_immediateMDTNr_val                                   0
#define __si_amf__MDTModeNr_loggedMDTNr_val                                      1
#define __si_amf__MDTModeNr_choice_Extensions_val                                2

#define MDTModeNr_immediateMDTNr_val                                             0
#define MDTModeNr_loggedMDTNr_val                                                1
#define MDTModeNr_choice_Extensions_val                                          2

#define __si_amf__AreaScopeOfMDT_EUTRA_cellBased_val                             0
#define __si_amf__AreaScopeOfMDT_EUTRA_tABased_val                               1
#define __si_amf__AreaScopeOfMDT_EUTRA_pLMNWide_val                              2
#define __si_amf__AreaScopeOfMDT_EUTRA_tAIBased_val                              3
#define __si_amf__AreaScopeOfMDT_EUTRA_choice_Extensions_val                     4

#define AreaScopeOfMDT_EUTRA_cellBased_val                                       0
#define AreaScopeOfMDT_EUTRA_tABased_val                                         1
#define AreaScopeOfMDT_EUTRA_pLMNWide_val                                        2
#define AreaScopeOfMDT_EUTRA_tAIBased_val                                        3
#define AreaScopeOfMDT_EUTRA_choice_Extensions_val                               4

#define __si_amf__PeriodicityRange_periodicityBound_val                          0
#define __si_amf__PeriodicityRange_periodicityList_val                           1
#define __si_amf__PeriodicityRange_choice_extensions_val                         2

#define PeriodicityRange_periodicityBound_val                                    0
#define PeriodicityRange_periodicityList_val                                     1
#define PeriodicityRange_choice_extensions_val                                   2

#define __si_amf__RANfeedbacktype_proactive_val                                  0
#define __si_amf__RANfeedbacktype_reactive_val                                   1
#define __si_amf__RANfeedbacktype_choice_extensions_val                          2

#define RANfeedbacktype_proactive_val                                            0
#define RANfeedbacktype_reactive_val                                             1
#define RANfeedbacktype_choice_extensions_val                                    2

#define __si_amf__UserLocationInformationW_AGF_globalLine_ID_val                 0
#define __si_amf__UserLocationInformationW_AGF_hFCNode_ID_val                    1
#define __si_amf__UserLocationInformationW_AGF_choice_Extensions_val             2

#define UserLocationInformationW_AGF_globalLine_ID_val                           0
#define UserLocationInformationW_AGF_hFCNode_ID_val                              1
#define UserLocationInformationW_AGF_choice_Extensions_val                       2

#define __si_amf__UserLocationInformation_userLocationInformationEUTRA_val       0
#define __si_amf__UserLocationInformation_userLocationInformationNR_val          1
#define __si_amf__UserLocationInformation_userLocationInformationN3IWF_with_PortNumber_val 2
#define __si_amf__UserLocationInformation_choice_Extensions_val                  3

#define UserLocationInformation_userLocationInformationEUTRA_val                 0
#define UserLocationInformation_userLocationInformationNR_val                    1
#define UserLocationInformation_userLocationInformationN3IWF_with_PortNumber_val 2
#define UserLocationInformation_choice_Extensions_val                            3

#define __si_amf__UEIdentityIndexValue_indexLength10_val                         0
#define __si_amf__UEIdentityIndexValue_choice_Extensions_val                     1

#define UEIdentityIndexValue_indexLength10_val                                   0
#define UEIdentityIndexValue_choice_Extensions_val                               1

#define __si_amf__UE_NGAP_IDs_uE_NGAP_ID_pair_val                                0
#define __si_amf__UE_NGAP_IDs_aMF_UE_NGAP_ID_val                                 1
#define __si_amf__UE_NGAP_IDs_choice_Extensions_val                              2

#define UE_NGAP_IDs_uE_NGAP_ID_pair_val                                          0
#define UE_NGAP_IDs_aMF_UE_NGAP_ID_val                                           1
#define UE_NGAP_IDs_choice_Extensions_val                                        2

#define __si_amf__TargetID_targetRANNodeID_val                                   0
#define __si_amf__TargetID_targeteNB_ID_val                                      1
#define __si_amf__TargetID_choice_Extensions_val                                 2

#define TargetID_targetRANNodeID_val                                             0
#define TargetID_targeteNB_ID_val                                                1
#define TargetID_choice_Extensions_val                                           2

#define __si_amf__NPN_AccessInformation_pNI_NPN_Access_Information_val           0
#define __si_amf__NPN_AccessInformation_choice_Extensions_val                    1

#define NPN_AccessInformation_pNI_NPN_Access_Information_val                     0
#define NPN_AccessInformation_choice_Extensions_val                              1

#define __si_amf__ProcedureStageChoice_first_dl_count_val                        0
#define __si_amf__ProcedureStageChoice_choice_Extensions_val                     1

#define ProcedureStageChoice_first_dl_count_val                                  0
#define ProcedureStageChoice_choice_Extensions_val                               1

#define __si_amf__UEPagingIdentity_fiveG_S_TMSI_val                              0
#define __si_amf__UEPagingIdentity_choice_Extensions_val                         1

#define UEPagingIdentity_fiveG_S_TMSI_val                                        0
#define UEPagingIdentity_choice_Extensions_val                                   1

#define __si_amf__ResetType_nG_Interface_val                                     0
#define __si_amf__ResetType_partOfNG_Interface_val                               1
#define __si_amf__ResetType_choice_Extensions_val                                2

#define ResetType_nG_Interface_val                                               0
#define ResetType_partOfNG_Interface_val                                         1
#define ResetType_choice_Extensions_val                                          2

#define __si_amf__OverloadResponse_overloadAction_val                            0
#define __si_amf__OverloadResponse_choice_Extensions_val                         1

#define OverloadResponse_overloadAction_val                                      0
#define OverloadResponse_choice_Extensions_val                                   1

#define __si_amf__SONInformation_sONInformationRequest_val                       0
#define __si_amf__SONInformation_sONInformationReply_val                         1
#define __si_amf__SONInformation_choice_Extensions_val                           2

#define SONInformation_sONInformationRequest_val                                 0
#define SONInformation_sONInformationReply_val                                   1
#define SONInformation_choice_Extensions_val                                     2

#define __si_amf__ENB_ID_macroENB_ID_val                                         0
#define __si_amf__ENB_ID_homeENB_ID_val                                          1
#define __si_amf__ENB_ID_short_macroENB_ID_val                                   2
#define __si_amf__ENB_ID_long_macroENB_ID_val                                    3
#define __si_amf__ENB_ID_choice_Extensions_val                                   4

#define ENB_ID_macroENB_ID_val                                                   0
#define ENB_ID_homeENB_ID_val                                                    1
#define ENB_ID_short_macroENB_ID_val                                             2
#define ENB_ID_long_macroENB_ID_val                                              3
#define ENB_ID_choice_Extensions_val                                             4

#define __si_amf__IntersystemSONTransferType_fromEUTRANtoNGRAN_val               0
#define __si_amf__IntersystemSONTransferType_fromNGRANtoEUTRAN_val               1
#define __si_amf__IntersystemSONTransferType_choice_Extensions_val               2

#define IntersystemSONTransferType_fromEUTRANtoNGRAN_val                         0
#define IntersystemSONTransferType_fromNGRANtoEUTRAN_val                         1
#define IntersystemSONTransferType_choice_Extensions_val                         2

#define __si_amf__InterSystemHandoverReportType_tooearlyIntersystemHO_val        0
#define __si_amf__InterSystemHandoverReportType_intersystemUnnecessaryHO_val     1
#define __si_amf__InterSystemHandoverReportType_choice_Extensions_val            2

#define InterSystemHandoverReportType_tooearlyIntersystemHO_val                  0
#define InterSystemHandoverReportType_intersystemUnnecessaryHO_val               1
#define InterSystemHandoverReportType_choice_Extensions_val                      2

#define __si_amf__IntersystemSONInformationReport_hOReportInformation_val        0
#define __si_amf__IntersystemSONInformationReport_failureIndicationInformation_val 1
#define __si_amf__IntersystemSONInformationReport_choice_Extensions_val          2

#define IntersystemSONInformationReport_hOReportInformation_val                  0
#define IntersystemSONInformationReport_failureIndicationInformation_val         1
#define IntersystemSONInformationReport_choice_Extensions_val                    2

#define __si_amf__IntersystemSONInformation_intersystemSONInformationReport_val  0
#define __si_amf__IntersystemSONInformation_choice_Extensions_val                1

#define IntersystemSONInformation_intersystemSONInformationReport_val            0
#define IntersystemSONInformation_choice_Extensions_val                          1

#define __si_amf__WarningAreaList_eUTRA_CGIListForWarning_val                    0
#define __si_amf__WarningAreaList_nR_CGIListForWarning_val                       1
#define __si_amf__WarningAreaList_tAIListForWarning_val                          2
#define __si_amf__WarningAreaList_emergencyAreaIDList_val                        3
#define __si_amf__WarningAreaList_choice_Extensions_val                          4

#define WarningAreaList_eUTRA_CGIListForWarning_val                              0
#define WarningAreaList_nR_CGIListForWarning_val                                 1
#define WarningAreaList_tAIListForWarning_val                                    2
#define WarningAreaList_emergencyAreaIDList_val                                  3
#define WarningAreaList_choice_Extensions_val                                    4

#define __si_amf__BroadcastCompletedAreaList_cellIDBroadcastEUTRA_val            0
#define __si_amf__BroadcastCompletedAreaList_tAIBroadcastEUTRA_val               1
#define __si_amf__BroadcastCompletedAreaList_emergencyAreaIDBroadcastEUTRA_val   2
#define __si_amf__BroadcastCompletedAreaList_cellIDBroadcastNR_val               3
#define __si_amf__BroadcastCompletedAreaList_tAIBroadcastNR_val                  4
#define __si_amf__BroadcastCompletedAreaList_emergencyAreaIDBroadcastNR_val      5
#define __si_amf__BroadcastCompletedAreaList_choice_Extensions_val               6

#define BroadcastCompletedAreaList_cellIDBroadcastEUTRA_val                      0
#define BroadcastCompletedAreaList_tAIBroadcastEUTRA_val                         1
#define BroadcastCompletedAreaList_emergencyAreaIDBroadcastEUTRA_val             2
#define BroadcastCompletedAreaList_cellIDBroadcastNR_val                         3
#define BroadcastCompletedAreaList_tAIBroadcastNR_val                            4
#define BroadcastCompletedAreaList_emergencyAreaIDBroadcastNR_val                5
#define BroadcastCompletedAreaList_choice_Extensions_val                         6

#define __si_amf__BroadcastCancelledAreaList_cellIDCancelledEUTRA_val            0
#define __si_amf__BroadcastCancelledAreaList_tAICancelledEUTRA_val               1
#define __si_amf__BroadcastCancelledAreaList_emergencyAreaIDCancelledEUTRA_val   2
#define __si_amf__BroadcastCancelledAreaList_cellIDCancelledNR_val               3
#define __si_amf__BroadcastCancelledAreaList_tAICancelledNR_val                  4
#define __si_amf__BroadcastCancelledAreaList_emergencyAreaIDCancelledNR_val      5
#define __si_amf__BroadcastCancelledAreaList_choice_Extensions_val               6

#define BroadcastCancelledAreaList_cellIDCancelledEUTRA_val                      0
#define BroadcastCancelledAreaList_tAICancelledEUTRA_val                         1
#define BroadcastCancelledAreaList_emergencyAreaIDCancelledEUTRA_val             2
#define BroadcastCancelledAreaList_cellIDCancelledNR_val                         3
#define BroadcastCancelledAreaList_tAICancelledNR_val                            4
#define BroadcastCancelledAreaList_emergencyAreaIDCancelledNR_val                5
#define BroadcastCancelledAreaList_choice_Extensions_val                         6

#define __si_amf__CellIDListForRestart_eUTRA_CGIListforRestart_val               0
#define __si_amf__CellIDListForRestart_nR_CGIListforRestart_val                  1
#define __si_amf__CellIDListForRestart_choice_Extensions_val                     2

#define CellIDListForRestart_eUTRA_CGIListforRestart_val                         0
#define CellIDListForRestart_nR_CGIListforRestart_val                            1
#define CellIDListForRestart_choice_Extensions_val                               2

#define __si_amf__PWSFailedCellIDList_eUTRA_CGI_PWSFailedList_val                0
#define __si_amf__PWSFailedCellIDList_nR_CGI_PWSFailedList_val                   1
#define __si_amf__PWSFailedCellIDList_choice_Extensions_val                      2

#define PWSFailedCellIDList_eUTRA_CGI_PWSFailedList_val                          0
#define PWSFailedCellIDList_nR_CGI_PWSFailedList_val                             1
#define PWSFailedCellIDList_choice_Extensions_val                                2

#define __si_amf__MBS_ServiceArea_locationindependent_val                        0
#define __si_amf__MBS_ServiceArea_locationdependent_val                          1
#define __si_amf__MBS_ServiceArea_choice_Extensions_val                          2

#define MBS_ServiceArea_locationindependent_val                                  0
#define MBS_ServiceArea_locationdependent_val                                    1
#define MBS_ServiceArea_choice_Extensions_val                                    2

#define __si_amf__ClockAccuracy_clockAccuracyValue_val                           0
#define __si_amf__ClockAccuracy_clockAccuracyIndex_val                           1
#define __si_amf__ClockAccuracy_choice_Extensions_val                            2

#define ClockAccuracy_clockAccuracyValue_val                                     0
#define ClockAccuracy_clockAccuracyIndex_val                                     1
#define ClockAccuracy_choice_Extensions_val                                      2

#define __si_amf__RAN_TSSScope_rANNodeLevel_val                                  0
#define __si_amf__RAN_TSSScope_cellListLevel_val                                 1
#define __si_amf__RAN_TSSScope_choice_Extensions_val                             2

#define RAN_TSSScope_rANNodeLevel_val                                            0
#define RAN_TSSScope_cellListLevel_val                                           1
#define RAN_TSSScope_choice_Extensions_val                                       2

#define __si_amf__FiveGCAction_hLComActivate_val                                 0
#define __si_amf__FiveGCAction_hLComDeactivate_val                               1
#define __si_amf__FiveGCAction_choice_Extensions_val                             2

#define FiveGCAction_hLComActivate_val                                           0
#define FiveGCAction_hLComDeactivate_val                                         1
#define FiveGCAction_choice_Extensions_val                                       2

#define __si_amf__MBS_SessionTNLInfo5GC_locationindependent_val                  0
#define __si_amf__MBS_SessionTNLInfo5GC_locationdependent_val                    1
#define __si_amf__MBS_SessionTNLInfo5GC_choice_Extensions_val                    2

#define MBS_SessionTNLInfo5GC_locationindependent_val                            0
#define MBS_SessionTNLInfo5GC_locationdependent_val                              1
#define MBS_SessionTNLInfo5GC_choice_Extensions_val                              2

#define __si_amf__MBS_NGUFailureIndication_locationindependent_val               0
#define __si_amf__MBS_NGUFailureIndication_locationdependent_val                 1
#define __si_amf__MBS_NGUFailureIndication_choice_Extensions_val                 2

#define MBS_NGUFailureIndication_locationindependent_val                         0
#define MBS_NGUFailureIndication_locationdependent_val                           1
#define MBS_NGUFailureIndication_choice_Extensions_val                           2



// L:5162
typedef struct __si_amf_dt_PrivateIEID_local SI_AMF_DT_PrivateIEID_local;

// L:5162
typedef struct __si_amf_dt_ProcedureCode SI_AMF_DT_ProcedureCode;
// L:5162
typedef struct __si_amf_dt_ProtocolExtensionID SI_AMF_DT_ProtocolExtensionID;
// L:5162
typedef struct __si_amf_dt_ProtocolIE_ID SI_AMF_DT_ProtocolIE_ID;

// L:5162
typedef struct __si_amf_dt_NULL SI_AMF_DT_NULL;
// L:1201
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOList SI_AMF_DT_AdditionalDLUPTNLInformationForHOList;
// L:387
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOItem SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem;


// L:387
typedef struct __si_amf_dt_A2X_PC5_FlowBitRates SI_AMF_DT_A2X_PC5_FlowBitRates;
// L:1201
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_List SI_AMF_DT_A2X_PC5_QoS_Flow_List;
// L:5162
typedef struct __si_amf_dt_A2XPC5QoSFlowItem_a2X_PQI SI_AMF_DT_A2XPC5QoSFlowItem_a2X_PQI;

// L:387
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_Item SI_AMF_DT_A2X_PC5_QoS_Flow_Item;
// L:387
typedef struct __si_amf_dt_A2X_PC5_QoS_Parameters SI_AMF_DT_A2X_PC5_QoS_Parameters;
// L:1201
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDList SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList;
// L:387
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDItem SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem;
// L:387
typedef struct __si_amf_dt_AllocationAndRetentionPriority SI_AMF_DT_AllocationAndRetentionPriority;
// L:1201
typedef struct __si_amf_dt_Allowed_CAG_List_per_PLMN SI_AMF_DT_Allowed_CAG_List_per_PLMN;
// L:1201
typedef struct __si_amf_dt_AllowedNSSAI SI_AMF_DT_AllowedNSSAI;
// L:387
typedef struct __si_amf_dt_AllowedNSSAI_Item SI_AMF_DT_AllowedNSSAI_Item;
// L:1201
typedef struct __si_amf_dt_Allowed_PNI_NPN_List SI_AMF_DT_Allowed_PNI_NPN_List;

// L:387
typedef struct __si_amf_dt_Allowed_PNI_NPN_Item SI_AMF_DT_Allowed_PNI_NPN_Item;
// L:1201
typedef struct __si_amf_dt_AllowedTACs SI_AMF_DT_AllowedTACs;
// L:5162
typedef struct __si_amf_dt_AlternativeQoSParaSetIndex SI_AMF_DT_AlternativeQoSParaSetIndex;
// L:5162
typedef struct __si_amf_dt_AlternativeQoSParaSetNotifyIndex SI_AMF_DT_AlternativeQoSParaSetNotifyIndex;
// L:1201
typedef struct __si_amf_dt_AlternativeQoSParaSetList SI_AMF_DT_AlternativeQoSParaSetList;
// L:387
typedef struct __si_amf_dt_AlternativeQoSParaSetItem SI_AMF_DT_AlternativeQoSParaSetItem;
// L:5162
typedef struct __si_amf_dt_AssistanceInformationQoE_Meas SI_AMF_DT_AssistanceInformationQoE_Meas;
// L:5594
typedef struct __si_amf_dt_AMFName SI_AMF_DT_AMFName;
// L:5594
typedef struct __si_amf_dt_AMFNameVisibleString SI_AMF_DT_AMFNameVisibleString;
// L:5594
typedef struct __si_amf_dt_AMFNameUTF8String SI_AMF_DT_AMFNameUTF8String;

// L:4706
typedef struct __si_amf_dt_AMFPointer SI_AMF_DT_AMFPointer;
// L:4706
typedef struct __si_amf_dt_AMFRegionID SI_AMF_DT_AMFRegionID;
// L:4706
typedef struct __si_amf_dt_AMFSetID SI_AMF_DT_AMFSetID;
// L:1201
typedef struct __si_amf_dt_AMF_TNLAssociationSetupList SI_AMF_DT_AMF_TNLAssociationSetupList;
// L:387
typedef struct __si_amf_dt_AMF_TNLAssociationSetupItem SI_AMF_DT_AMF_TNLAssociationSetupItem;
// L:1201
typedef struct __si_amf_dt_AMF_TNLAssociationToAddList SI_AMF_DT_AMF_TNLAssociationToAddList;
// L:387
typedef struct __si_amf_dt_AMF_TNLAssociationToAddItem SI_AMF_DT_AMF_TNLAssociationToAddItem;
// L:1201
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveList SI_AMF_DT_AMF_TNLAssociationToRemoveList;
// L:387
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveItem SI_AMF_DT_AMF_TNLAssociationToRemoveItem;
// L:1201
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateList SI_AMF_DT_AMF_TNLAssociationToUpdateList;
// L:387
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateItem SI_AMF_DT_AMF_TNLAssociationToUpdateItem;
// L:5162
typedef struct __si_amf_dt_AMF_UE_NGAP_ID SI_AMF_DT_AMF_UE_NGAP_ID;
// L:387
typedef struct __si_amf_dt_AreaOfInterest SI_AMF_DT_AreaOfInterest;
// L:1201
typedef struct __si_amf_dt_AreaOfInterestCellList SI_AMF_DT_AreaOfInterestCellList;
// L:387
typedef struct __si_amf_dt_AreaOfInterestCellItem SI_AMF_DT_AreaOfInterestCellItem;
// L:1201
typedef struct __si_amf_dt_AreaOfInterestList SI_AMF_DT_AreaOfInterestList;
// L:387
typedef struct __si_amf_dt_AreaOfInterestItem SI_AMF_DT_AreaOfInterestItem;
// L:1201
typedef struct __si_amf_dt_AreaOfInterestRANNodeList SI_AMF_DT_AreaOfInterestRANNodeList;
// L:387
typedef struct __si_amf_dt_AreaOfInterestRANNodeItem SI_AMF_DT_AreaOfInterestRANNodeItem;
// L:1201
typedef struct __si_amf_dt_AreaOfInterestTAIList SI_AMF_DT_AreaOfInterestTAIList;
// L:387
typedef struct __si_amf_dt_AreaOfInterestTAIItem SI_AMF_DT_AreaOfInterestTAIItem;
// L:387
typedef struct __si_amf_dt_AssistanceDataForPaging SI_AMF_DT_AssistanceDataForPaging;
// L:387
typedef struct __si_amf_dt_AssistanceDataForRecommendedCells SI_AMF_DT_AssistanceDataForRecommendedCells;
// L:1201
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestList SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList;
// L:387
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestItem SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem;
// L:1201
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestList SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList;
// L:387
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestItem SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem;
// L:1201
typedef struct __si_amf_dt_AssociatedQosFlowList SI_AMF_DT_AssociatedQosFlowList;

// L:387
typedef struct __si_amf_dt_AssociatedQosFlowItem SI_AMF_DT_AssociatedQosFlowItem;
// L:4231
typedef struct __si_amf_dt_AssociatedSessionID SI_AMF_DT_AssociatedSessionID;


// L:387
typedef struct __si_amf_dt_AUN3DeviceAccessInfo SI_AMF_DT_AUN3DeviceAccessInfo;

// L:5162
typedef struct __si_amf_dt_AveragingWindow SI_AMF_DT_AveragingWindow;


// L:1201
typedef struct __si_amf_dt_AreaScopeOfNeighCellsList SI_AMF_DT_AreaScopeOfNeighCellsList;
// L:387
typedef struct __si_amf_dt_AreaScopeOfNeighCellsItem SI_AMF_DT_AreaScopeOfNeighCellsItem;



// L:387
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics SI_AMF_DT_AvailableRANVisibleQoEMetrics;
// L:387
typedef struct __si_amf_dt_BeamMeasurementsReportConfiguration SI_AMF_DT_BeamMeasurementsReportConfiguration;



// L:387
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity SI_AMF_DT_BeamMeasurementsReportQuantity;
// L:5162
typedef struct __si_amf_dt_BitRate SI_AMF_DT_BitRate;


// L:1201
typedef struct __si_amf_dt_BroadcastPLMNList SI_AMF_DT_BroadcastPLMNList;
// L:387
typedef struct __si_amf_dt_BroadcastPLMNItem SI_AMF_DT_BroadcastPLMNItem;
// L:387
typedef struct __si_amf_dt_BroadcastTransportFailureTransfer SI_AMF_DT_BroadcastTransportFailureTransfer;
// L:387
typedef struct __si_amf_dt_BroadcastTransportRequestTransfer SI_AMF_DT_BroadcastTransportRequestTransfer;
// L:387
typedef struct __si_amf_dt_BroadcastTransportResponseTransfer SI_AMF_DT_BroadcastTransportResponseTransfer;

// L:387
typedef struct __si_amf_dt_BluetoothMeasurementConfiguration SI_AMF_DT_BluetoothMeasurementConfiguration;
// L:1201
typedef struct __si_amf_dt_BluetoothMeasConfigNameList SI_AMF_DT_BluetoothMeasConfigNameList;
// L:387
typedef struct __si_amf_dt_BluetoothMeasConfigNameItem SI_AMF_DT_BluetoothMeasConfigNameItem;

// L:4231
typedef struct __si_amf_dt_BluetoothName SI_AMF_DT_BluetoothName;
// L:4231
typedef struct __si_amf_dt_BurstArrivalTime SI_AMF_DT_BurstArrivalTime;
// L:5162
typedef struct __si_amf_dt_BurstArrivalTimeWindow_burstArrivalTimeWindowStart SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowStart;
// L:5162
typedef struct __si_amf_dt_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd;
// L:387
typedef struct __si_amf_dt_BurstArrivalTimeWindow SI_AMF_DT_BurstArrivalTimeWindow;
// L:4706
typedef struct __si_amf_dt_CAG_ID SI_AMF_DT_CAG_ID;
// L:1201
typedef struct __si_amf_dt_CandidateRelayUEInformationList SI_AMF_DT_CandidateRelayUEInformationList;
// L:387
typedef struct __si_amf_dt_CandidateRelayUEInformationItem SI_AMF_DT_CandidateRelayUEInformationItem;
// L:4706
typedef struct __si_amf_dt_CandidateRelayUE_ID SI_AMF_DT_CandidateRelayUE_ID;

// L:1201
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA SI_AMF_DT_CancelledCellsInEAI_EUTRA;
// L:387
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA_Item SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CancelledCellsInEAI_NR SI_AMF_DT_CancelledCellsInEAI_NR;
// L:387
typedef struct __si_amf_dt_CancelledCellsInEAI_NR_Item SI_AMF_DT_CancelledCellsInEAI_NR_Item;
// L:1201
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA SI_AMF_DT_CancelledCellsInTAI_EUTRA;
// L:387
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA_Item SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CancelledCellsInTAI_NR SI_AMF_DT_CancelledCellsInTAI_NR;
// L:387
typedef struct __si_amf_dt_CancelledCellsInTAI_NR_Item SI_AMF_DT_CancelledCellsInTAI_NR_Item;
// L:1201
typedef struct __si_amf_dt_CandidateCellList SI_AMF_DT_CandidateCellList;
// L:387
typedef struct __si_amf_dt_CandidateCellItem SI_AMF_DT_CandidateCellItem;

// L:387
typedef struct __si_amf_dt_CandidateCellID SI_AMF_DT_CandidateCellID;
// L:5162
typedef struct __si_amf_dt_CandidatePCI_candidatePCI SI_AMF_DT_CandidatePCI_candidatePCI;
// L:5162
typedef struct __si_amf_dt_CandidatePCI_candidateNRARFCN SI_AMF_DT_CandidatePCI_candidateNRARFCN;
// L:387
typedef struct __si_amf_dt_CandidatePCI SI_AMF_DT_CandidatePCI;






// L:387
typedef struct __si_amf_dt_Cell_CAGInformation SI_AMF_DT_Cell_CAGInformation;
// L:1201
typedef struct __si_amf_dt_CellCAGList SI_AMF_DT_CellCAGList;
// L:1201
typedef struct __si_amf_dt_CellIDBroadcastEUTRA SI_AMF_DT_CellIDBroadcastEUTRA;
// L:387
typedef struct __si_amf_dt_CellIDBroadcastEUTRA_Item SI_AMF_DT_CellIDBroadcastEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CellIDBroadcastNR SI_AMF_DT_CellIDBroadcastNR;
// L:387
typedef struct __si_amf_dt_CellIDBroadcastNR_Item SI_AMF_DT_CellIDBroadcastNR_Item;
// L:1201
typedef struct __si_amf_dt_CellIDCancelledEUTRA SI_AMF_DT_CellIDCancelledEUTRA;
// L:387
typedef struct __si_amf_dt_CellIDCancelledEUTRA_Item SI_AMF_DT_CellIDCancelledEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CellIDCancelledNR SI_AMF_DT_CellIDCancelledNR;
// L:387
typedef struct __si_amf_dt_CellIDCancelledNR_Item SI_AMF_DT_CellIDCancelledNR_Item;


// L:387
typedef struct __si_amf_dt_CellType SI_AMF_DT_CellType;


// L:5162
typedef struct __si_amf_dt_ClockAccuracy_clockAccuracyValue SI_AMF_DT_ClockAccuracy_clockAccuracyValue;
// L:5162
typedef struct __si_amf_dt_ClockAccuracy_clockAccuracyIndex SI_AMF_DT_ClockAccuracy_clockAccuracyIndex;

// L:387
typedef struct __si_amf_dt_ClockQualityAcceptanceIndication SI_AMF_DT_ClockQualityAcceptanceIndication;
// L:4706
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_synchronisationState SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState;


// L:4706
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_clockFrequencyStability SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability;
// L:5162
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_clockAccuracy SI_AMF_DT_ClockQualityAcceptanceCriteria_clockAccuracy;
// L:4706
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_parentTImeSource SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource;
// L:387
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria SI_AMF_DT_ClockQualityAcceptanceCriteria;
// L:387
typedef struct __si_amf_dt_ClockQualityReportingControlInfo SI_AMF_DT_ClockQualityReportingControlInfo;

// L:387
typedef struct __si_amf_dt_CNAssistedRANTuning SI_AMF_DT_CNAssistedRANTuning;
// L:5162
typedef struct __si_amf_dt_CNsubgroupID SI_AMF_DT_CNsubgroupID;
// L:1201
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalent SI_AMF_DT_CNTypeRestrictionsForEquivalent;

// L:387
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalentItem SI_AMF_DT_CNTypeRestrictionsForEquivalentItem;

// L:4231
typedef struct __si_amf_dt_CommonNetworkInstance SI_AMF_DT_CommonNetworkInstance;
// L:1201
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA SI_AMF_DT_CompletedCellsInEAI_EUTRA;
// L:387
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA_Item SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CompletedCellsInEAI_NR SI_AMF_DT_CompletedCellsInEAI_NR;
// L:387
typedef struct __si_amf_dt_CompletedCellsInEAI_NR_Item SI_AMF_DT_CompletedCellsInEAI_NR_Item;
// L:1201
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA SI_AMF_DT_CompletedCellsInTAI_EUTRA;
// L:387
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA_Item SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item;
// L:1201
typedef struct __si_amf_dt_CompletedCellsInTAI_NR SI_AMF_DT_CompletedCellsInTAI_NR;
// L:387
typedef struct __si_amf_dt_CompletedCellsInTAI_NR_Item SI_AMF_DT_CompletedCellsInTAI_NR_Item;




// L:387
typedef struct __si_amf_dt_CoreNetworkAssistanceInformationForInactive SI_AMF_DT_CoreNetworkAssistanceInformationForInactive;

// L:5162
typedef struct __si_amf_dt_COUNTValueForPDCPSN12_pDCP_SN12 SI_AMF_DT_COUNTValueForPDCPSN12_pDCP_SN12;
// L:5162
typedef struct __si_amf_dt_COUNTValueForPDCPSN12_hFN_PDCP_SN12 SI_AMF_DT_COUNTValueForPDCPSN12_hFN_PDCP_SN12;
// L:387
typedef struct __si_amf_dt_COUNTValueForPDCP_SN12 SI_AMF_DT_COUNTValueForPDCP_SN12;
// L:5162
typedef struct __si_amf_dt_COUNTValueForPDCPSN18_pDCP_SN18 SI_AMF_DT_COUNTValueForPDCPSN18_pDCP_SN18;
// L:5162
typedef struct __si_amf_dt_COUNTValueForPDCPSN18_hFN_PDCP_SN18 SI_AMF_DT_COUNTValueForPDCPSN18_hFN_PDCP_SN18;
// L:387
typedef struct __si_amf_dt_COUNTValueForPDCP_SN18 SI_AMF_DT_COUNTValueForPDCP_SN18;
// L:4231
typedef struct __si_amf_dt_CoverageEnhancementLevel SI_AMF_DT_CoverageEnhancementLevel;

// L:387
typedef struct __si_amf_dt_CriticalityDiagnostics SI_AMF_DT_CriticalityDiagnostics;
// L:1201
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_List SI_AMF_DT_CriticalityDiagnostics_IE_List;
// L:387
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_Item SI_AMF_DT_CriticalityDiagnostics_IE_Item;
// L:4706
typedef struct __si_amf_dt_C_RNTI SI_AMF_DT_C_RNTI;
// L:387
typedef struct __si_amf_dt_CellBasedMDT_NR SI_AMF_DT_CellBasedMDT_NR;
// L:1201
typedef struct __si_amf_dt_CellIdListforMDT_NR SI_AMF_DT_CellIdListforMDT_NR;
// L:387
typedef struct __si_amf_dt_CellBasedMDT_EUTRA SI_AMF_DT_CellBasedMDT_EUTRA;
// L:387
typedef struct __si_amf_dt_CellBasedQMC SI_AMF_DT_CellBasedQMC;
// L:1201
typedef struct __si_amf_dt_CellIdListforQMC SI_AMF_DT_CellIdListforQMC;
// L:1201
typedef struct __si_amf_dt_CellIdListforMDT_EUTRA SI_AMF_DT_CellIdListforMDT_EUTRA;
// L:1201
typedef struct __si_amf_dt_CAGListforMDT SI_AMF_DT_CAGListforMDT;
// L:387
typedef struct __si_amf_dt_CAGListforMDTItem SI_AMF_DT_CAGListforMDTItem;
// L:4706
typedef struct __si_amf_dt_DataCodingScheme SI_AMF_DT_DataCodingScheme;


// L:1201
typedef struct __si_amf_dt_DataForwardingResponseDRBList SI_AMF_DT_DataForwardingResponseDRBList;
// L:387
typedef struct __si_amf_dt_DataForwardingResponseDRBItem SI_AMF_DT_DataForwardingResponseDRBItem;

// L:387
typedef struct __si_amf_dt_DAPSRequestInfo SI_AMF_DT_DAPSRequestInfo;
// L:1201
typedef struct __si_amf_dt_DAPSResponseInfoList SI_AMF_DT_DAPSResponseInfoList;
// L:387
typedef struct __si_amf_dt_DAPSResponseInfoItem SI_AMF_DT_DAPSResponseInfoItem;

// L:387
typedef struct __si_amf_dt_DAPSResponseInfo SI_AMF_DT_DAPSResponseInfo;
// L:1201
typedef struct __si_amf_dt_DataForwardingResponseERABList SI_AMF_DT_DataForwardingResponseERABList;
// L:387
typedef struct __si_amf_dt_DataForwardingResponseERABListItem SI_AMF_DT_DataForwardingResponseERABListItem;

// L:387
typedef struct __si_amf_dt_DL_CP_SecurityInformation SI_AMF_DT_DL_CP_SecurityInformation;

// L:4706
typedef struct __si_amf_dt_DL_NAS_MAC SI_AMF_DT_DL_NAS_MAC;



// L:5162
typedef struct __si_amf_dt_DRB_ID SI_AMF_DT_DRB_ID;
// L:1201
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferList SI_AMF_DT_DRBsSubjectToStatusTransferList;
// L:387
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferItem SI_AMF_DT_DRBsSubjectToStatusTransferItem;

// L:387
typedef struct __si_amf_dt_DRBStatusDL12 SI_AMF_DT_DRBStatusDL12;
// L:387
typedef struct __si_amf_dt_DRBStatusDL18 SI_AMF_DT_DRBStatusDL18;

// L:4706
typedef struct __si_amf_dt_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs;
// L:387
typedef struct __si_amf_dt_DRBStatusUL12 SI_AMF_DT_DRBStatusUL12;
// L:4706
typedef struct __si_amf_dt_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs;
// L:387
typedef struct __si_amf_dt_DRBStatusUL18 SI_AMF_DT_DRBStatusUL18;
// L:1201
typedef struct __si_amf_dt_DRBsToQosFlowsMappingList SI_AMF_DT_DRBsToQosFlowsMappingList;
// L:387
typedef struct __si_amf_dt_DRBsToQosFlowsMappingItem SI_AMF_DT_DRBsToQosFlowsMappingItem;
// L:387
typedef struct __si_amf_dt_Dynamic5QIDescriptor SI_AMF_DT_Dynamic5QIDescriptor;

// L:387
typedef struct __si_amf_dt_EarlyStatusTransfer_TransparentContainer SI_AMF_DT_EarlyStatusTransfer_TransparentContainer;

// L:387
typedef struct __si_amf_dt_DLDiscarding SI_AMF_DT_DLDiscarding;
// L:1201
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_List SI_AMF_DT_DRBsSubjectToDLDiscarding_List;
// L:387
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_Item SI_AMF_DT_DRBsSubjectToDLDiscarding_Item;

// L:387
typedef struct __si_amf_dt_FirstDLCount SI_AMF_DT_FirstDLCount;
// L:1201
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_List SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List;
// L:387
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_Item SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item;




// L:1201
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus;
// L:387
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus_Item SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item;


// L:4231
typedef struct __si_amf_dt_EmergencyAreaID SI_AMF_DT_EmergencyAreaID;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA;
// L:387
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA_Item SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR SI_AMF_DT_EmergencyAreaIDBroadcastNR;
// L:387
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR_Item SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA SI_AMF_DT_EmergencyAreaIDCancelledEUTRA;
// L:387
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA_Item SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR SI_AMF_DT_EmergencyAreaIDCancelledNR;
// L:387
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR_Item SI_AMF_DT_EmergencyAreaIDCancelledNR_Item;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDList SI_AMF_DT_EmergencyAreaIDList;
// L:1201
typedef struct __si_amf_dt_EmergencyAreaIDListForRestart SI_AMF_DT_EmergencyAreaIDListForRestart;
// L:387
typedef struct __si_amf_dt_EmergencyFallbackIndicator SI_AMF_DT_EmergencyFallbackIndicator;


// L:4706
typedef struct __si_amf_dt_ENBID_macroENB_ID SI_AMF_DT_ENBID_macroENB_ID;
// L:4706
typedef struct __si_amf_dt_ENBID_homeENB_ID SI_AMF_DT_ENBID_homeENB_ID;
// L:4706
typedef struct __si_amf_dt_ENBID_short_macroENB_ID SI_AMF_DT_ENBID_short_macroENB_ID;
// L:4706
typedef struct __si_amf_dt_ENBID_long_macroENB_ID SI_AMF_DT_ENBID_long_macroENB_ID;


// L:5162
typedef struct __si_amf_dt_Extended_ConnectedTime SI_AMF_DT_Extended_ConnectedTime;
// L:4231
typedef struct __si_amf_dt_EN_DCSONConfigurationTransfer SI_AMF_DT_EN_DCSONConfigurationTransfer;
// L:387
typedef struct __si_amf_dt_EndpointIPAddressAndPort SI_AMF_DT_EndpointIPAddressAndPort;

// L:1201
typedef struct __si_amf_dt_EquivalentPLMNs SI_AMF_DT_EquivalentPLMNs;
// L:4231
typedef struct __si_amf_dt_EPS_TAC SI_AMF_DT_EPS_TAC;
// L:387
typedef struct __si_amf_dt_EPS_TAI SI_AMF_DT_EPS_TAI;
// L:5162
typedef struct __si_amf_dt_E_RAB_ID SI_AMF_DT_E_RAB_ID;
// L:1201
typedef struct __si_amf_dt_E_RABInformationList SI_AMF_DT_E_RABInformationList;
// L:387
typedef struct __si_amf_dt_E_RABInformationItem SI_AMF_DT_E_RABInformationItem;

// L:4706
typedef struct __si_amf_dt_EUTRACellIdentity SI_AMF_DT_EUTRACellIdentity;
// L:387
typedef struct __si_amf_dt_EUTRA_CGI SI_AMF_DT_EUTRA_CGI;
// L:1201
typedef struct __si_amf_dt_EUTRA_CGIList SI_AMF_DT_EUTRA_CGIList;
// L:1201
typedef struct __si_amf_dt_EUTRA_CGIListForWarning SI_AMF_DT_EUTRA_CGIListForWarning;
// L:387
typedef struct __si_amf_dt_EUTRA_PagingeDRXInformation SI_AMF_DT_EUTRA_PagingeDRXInformation;


// L:4706
typedef struct __si_amf_dt_EUTRAencryptionAlgorithms SI_AMF_DT_EUTRAencryptionAlgorithms;
// L:4706
typedef struct __si_amf_dt_EUTRAintegrityProtectionAlgorithms SI_AMF_DT_EUTRAintegrityProtectionAlgorithms;

// L:1201
typedef struct __si_amf_dt_ExcessPacketDelayThresholdConfiguration SI_AMF_DT_ExcessPacketDelayThresholdConfiguration;
// L:387
typedef struct __si_amf_dt_ExcessPacketDelayThresholdItem SI_AMF_DT_ExcessPacketDelayThresholdItem;

// L:5162
typedef struct __si_amf_dt_ExpectedActivityPeriod SI_AMF_DT_ExpectedActivityPeriod;

// L:5162
typedef struct __si_amf_dt_ExpectedIdlePeriod SI_AMF_DT_ExpectedIdlePeriod;
// L:387
typedef struct __si_amf_dt_ExpectedUEActivityBehaviour SI_AMF_DT_ExpectedUEActivityBehaviour;
// L:387
typedef struct __si_amf_dt_ExpectedUEBehaviour SI_AMF_DT_ExpectedUEBehaviour;

// L:1201
typedef struct __si_amf_dt_ExpectedUEMovingTrajectory SI_AMF_DT_ExpectedUEMovingTrajectory;
// L:5162
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem_timeStayedInCell SI_AMF_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell;
// L:387
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem SI_AMF_DT_ExpectedUEMovingTrajectoryItem;
// L:387
typedef struct __si_amf_dt_Extended_AMFName SI_AMF_DT_Extended_AMFName;
// L:5162
typedef struct __si_amf_dt_ExtendedPacketDelayBudget SI_AMF_DT_ExtendedPacketDelayBudget;
// L:387
typedef struct __si_amf_dt_Extended_RANNodeName SI_AMF_DT_Extended_RANNodeName;
// L:4706
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_primaryRATRestriction SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction;
// L:4706
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_secondaryRATRestriction SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction;
// L:387
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation SI_AMF_DT_ExtendedRATRestrictionInformation;
// L:5162
typedef struct __si_amf_dt_ExtendedRNC_ID SI_AMF_DT_ExtendedRNC_ID;
// L:1201
typedef struct __si_amf_dt_ExtendedSliceSupportList SI_AMF_DT_ExtendedSliceSupportList;
// L:4706
typedef struct __si_amf_dt_ExtendedUEIdentityIndexValue SI_AMF_DT_ExtendedUEIdentityIndexValue;


// L:387
typedef struct __si_amf_dt_EventL1LoggedMDTConfig SI_AMF_DT_EventL1LoggedMDTConfig;

// L:1201
typedef struct __si_amf_dt_EquivalentSNPNsList SI_AMF_DT_EquivalentSNPNsList;
// L:387
typedef struct __si_amf_dt_EquivalentSNPNsItem SI_AMF_DT_EquivalentSNPNsItem;
// L:387
typedef struct __si_amf_dt_FailureIndication SI_AMF_DT_FailureIndication;

// L:387
typedef struct __si_amf_dt_FiveG_ProSeAuthorized SI_AMF_DT_FiveG_ProSeAuthorized;








// L:387
typedef struct __si_amf_dt_FiveG_ProSePC5QoSParameters SI_AMF_DT_FiveG_ProSePC5QoSParameters;
// L:1201
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowList SI_AMF_DT_FiveGProSePC5QoSFlowList;
// L:387
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowItem SI_AMF_DT_FiveGProSePC5QoSFlowItem;
// L:387
typedef struct __si_amf_dt_FiveGProSePC5FlowBitRates SI_AMF_DT_FiveGProSePC5FlowBitRates;
// L:387
typedef struct __si_amf_dt_FiveG_S_TMSI SI_AMF_DT_FiveG_S_TMSI;
// L:4231
typedef struct __si_amf_dt_FiveG_TMSI SI_AMF_DT_FiveG_TMSI;
// L:5162
typedef struct __si_amf_dt_FiveQI SI_AMF_DT_FiveQI;
// L:1201
typedef struct __si_amf_dt_ForbiddenAreaInformation SI_AMF_DT_ForbiddenAreaInformation;
// L:387
typedef struct __si_amf_dt_ForbiddenAreaInformation_Item SI_AMF_DT_ForbiddenAreaInformation_Item;
// L:1201
typedef struct __si_amf_dt_ForbiddenTACs SI_AMF_DT_ForbiddenTACs;
// L:387
typedef struct __si_amf_dt_FromEUTRANtoNGRAN SI_AMF_DT_FromEUTRANtoNGRAN;
// L:387
typedef struct __si_amf_dt_FromNGRANtoEUTRAN SI_AMF_DT_FromNGRANtoEUTRAN;
// L:387
typedef struct __si_amf_dt_GBR_QosInformation SI_AMF_DT_GBR_QosInformation;
// L:4231
typedef struct __si_amf_dt_GlobalCable_ID SI_AMF_DT_GlobalCable_ID;
// L:387
typedef struct __si_amf_dt_GlobalCable_ID_new SI_AMF_DT_GlobalCable_ID_new;
// L:387
typedef struct __si_amf_dt_GlobalENB_ID SI_AMF_DT_GlobalENB_ID;
// L:387
typedef struct __si_amf_dt_GlobalGNB_ID SI_AMF_DT_GlobalGNB_ID;
// L:387
typedef struct __si_amf_dt_GlobalN3IWF_ID SI_AMF_DT_GlobalN3IWF_ID;
// L:387
typedef struct __si_amf_dt_GlobalLine_ID SI_AMF_DT_GlobalLine_ID;
// L:4231
typedef struct __si_amf_dt_GlobalLineIdentity SI_AMF_DT_GlobalLineIdentity;
// L:387
typedef struct __si_amf_dt_GlobalNgENB_ID SI_AMF_DT_GlobalNgENB_ID;

// L:387
typedef struct __si_amf_dt_GlobalTNGF_ID SI_AMF_DT_GlobalTNGF_ID;
// L:387
typedef struct __si_amf_dt_GlobalTWIF_ID SI_AMF_DT_GlobalTWIF_ID;
// L:387
typedef struct __si_amf_dt_GlobalW_AGF_ID SI_AMF_DT_GlobalW_AGF_ID;
// L:4706
typedef struct __si_amf_dt_GNBID_gNB_ID SI_AMF_DT_GNBID_gNB_ID;

// L:4231
typedef struct __si_amf_dt_GTP_TEID SI_AMF_DT_GTP_TEID;
// L:387
typedef struct __si_amf_dt_GTPTunnel SI_AMF_DT_GTPTunnel;
// L:387
typedef struct __si_amf_dt_GUAMI SI_AMF_DT_GUAMI;

// L:387
typedef struct __si_amf_dt_HandoverCommandTransfer SI_AMF_DT_HandoverCommandTransfer;

// L:387
typedef struct __si_amf_dt_HandoverPreparationUnsuccessfulTransfer SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_HandoverRequestAcknowledgeTransfer SI_AMF_DT_HandoverRequestAcknowledgeTransfer;
// L:387
typedef struct __si_amf_dt_HandoverRequiredTransfer SI_AMF_DT_HandoverRequiredTransfer;
// L:387
typedef struct __si_amf_dt_HandoverResourceAllocationUnsuccessfulTransfer SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer;

// L:4706
typedef struct __si_amf_dt_HashedUEIdentityIndexValue SI_AMF_DT_HashedUEIdentityIndexValue;
// L:4231
typedef struct __si_amf_dt_HFCNode_ID SI_AMF_DT_HFCNode_ID;
// L:387
typedef struct __si_amf_dt_HFCNode_ID_new SI_AMF_DT_HFCNode_ID_new;
// L:387
typedef struct __si_amf_dt_HLComActivate SI_AMF_DT_HLComActivate;

// L:387
typedef struct __si_amf_dt_HLComDeactivate SI_AMF_DT_HLComDeactivate;

// L:4706
typedef struct __si_amf_dt_HOReport_sourcecellC_RNTI SI_AMF_DT_HOReport_sourcecellC_RNTI;
// L:387
typedef struct __si_amf_dt_HOReport SI_AMF_DT_HOReport;
// L:5162
typedef struct __si_amf_dt_Hysteresis SI_AMF_DT_Hysteresis;

// L:387
typedef struct __si_amf_dt_MobileIAB_MTUserLocationInformation SI_AMF_DT_MobileIAB_MTUserLocationInformation;



// L:5162
typedef struct __si_amf_dt_IndexToRFSP SI_AMF_DT_IndexToRFSP;
// L:387
typedef struct __si_amf_dt_InfoOnRecommendedCellsAndRANNodesForPaging SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging;


// L:5162
typedef struct __si_amf_dt_IntendedNumberOfPagingAttempts SI_AMF_DT_IntendedNumberOfPagingAttempts;
// L:4706
typedef struct __si_amf_dt_InterfacesToTrace SI_AMF_DT_InterfacesToTrace;
// L:387
typedef struct __si_amf_dt_ImmediateMDTNr SI_AMF_DT_ImmediateMDTNr;
// L:387
typedef struct __si_amf_dt_InterSystemFailureIndication SI_AMF_DT_InterSystemFailureIndication;
// L:387
typedef struct __si_amf_dt_IntersystemSONConfigurationTransfer SI_AMF_DT_IntersystemSONConfigurationTransfer;

// L:387
typedef struct __si_amf_dt_IntersystemSONeNBID SI_AMF_DT_IntersystemSONeNBID;
// L:387
typedef struct __si_amf_dt_IntersystemSONNGRANnodeID SI_AMF_DT_IntersystemSONNGRANnodeID;


// L:5162
typedef struct __si_amf_dt_IntersystemCellActivationRequest_activationID SI_AMF_DT_IntersystemCellActivationRequest_activationID;
// L:387
typedef struct __si_amf_dt_IntersystemCellActivationRequest SI_AMF_DT_IntersystemCellActivationRequest;
// L:1201
typedef struct __si_amf_dt_CellsToActivateList SI_AMF_DT_CellsToActivateList;
// L:387
typedef struct __si_amf_dt_IntersystemResourceStatusRequest SI_AMF_DT_IntersystemResourceStatusRequest;

// L:387
typedef struct __si_amf_dt_EUTRAN_ReportingSystemIEs SI_AMF_DT_EUTRAN_ReportingSystemIEs;
// L:387
typedef struct __si_amf_dt_NGRAN_ReportingSystemIEs SI_AMF_DT_NGRAN_ReportingSystemIEs;
// L:1201
typedef struct __si_amf_dt_EUTRAN_CellToReportList SI_AMF_DT_EUTRAN_CellToReportList;
// L:387
typedef struct __si_amf_dt_EUTRAN_CellToReportItem SI_AMF_DT_EUTRAN_CellToReportItem;
// L:1201
typedef struct __si_amf_dt_NGRAN_CellToReportList SI_AMF_DT_NGRAN_CellToReportList;
// L:387
typedef struct __si_amf_dt_NGRAN_CellToReportItem SI_AMF_DT_NGRAN_CellToReportItem;
// L:4706
typedef struct __si_amf_dt_ReportCharacteristics SI_AMF_DT_ReportCharacteristics;

// L:387
typedef struct __si_amf_dt_EventBasedReportingIEs SI_AMF_DT_EventBasedReportingIEs;
// L:5162
typedef struct __si_amf_dt_IntersystemResourceThreshold SI_AMF_DT_IntersystemResourceThreshold;

// L:387
typedef struct __si_amf_dt_PeriodicReportingIEs SI_AMF_DT_PeriodicReportingIEs;


// L:5162
typedef struct __si_amf_dt_IntersystemCellActivationReply_activation_ID SI_AMF_DT_IntersystemCellActivationReply_activation_ID;
// L:387
typedef struct __si_amf_dt_IntersystemCellActivationReply SI_AMF_DT_IntersystemCellActivationReply;
// L:1201
typedef struct __si_amf_dt_ActivatedCellList SI_AMF_DT_ActivatedCellList;
// L:387
typedef struct __si_amf_dt_IntersystemResourceStatusReply SI_AMF_DT_IntersystemResourceStatusReply;

// L:387
typedef struct __si_amf_dt_IntersystemCellStateIndication SI_AMF_DT_IntersystemCellStateIndication;
// L:1201
typedef struct __si_amf_dt_NotificationCellList SI_AMF_DT_NotificationCellList;

// L:387
typedef struct __si_amf_dt_NotificationCell_Item SI_AMF_DT_NotificationCell_Item;
// L:387
typedef struct __si_amf_dt_IntersystemResourceStatusReport SI_AMF_DT_IntersystemResourceStatusReport;

// L:387
typedef struct __si_amf_dt_EUTRAN_ReportingStatusIEs SI_AMF_DT_EUTRAN_ReportingStatusIEs;
// L:1201
typedef struct __si_amf_dt_EUTRAN_CellReportList SI_AMF_DT_EUTRAN_CellReportList;
// L:387
typedef struct __si_amf_dt_EUTRAN_CellReportItem SI_AMF_DT_EUTRAN_CellReportItem;
// L:387
typedef struct __si_amf_dt_EUTRAN_CompositeAvailableCapacityGroup SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup;
// L:5162
typedef struct __si_amf_dt_CompositeAvailableCapacity_cellCapacityClassValue SI_AMF_DT_CompositeAvailableCapacity_cellCapacityClassValue;
// L:5162
typedef struct __si_amf_dt_CompositeAvailableCapacity_capacityValue SI_AMF_DT_CompositeAvailableCapacity_capacityValue;
// L:387
typedef struct __si_amf_dt_CompositeAvailableCapacity SI_AMF_DT_CompositeAvailableCapacity;
// L:5162
typedef struct __si_amf_dt_EUTRAN_NumberOfActiveUEs SI_AMF_DT_EUTRAN_NumberOfActiveUEs;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_GBR_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_dL_GBR_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_GBR_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_uL_GBR_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_Total_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_dL_Total_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_Total_PRB_usage SI_AMF_DT_EUTRANRadioResourceStatus_uL_Total_PRB_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage SI_AMF_DT_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage;
// L:5162
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage SI_AMF_DT_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage;
// L:387
typedef struct __si_amf_dt_EUTRAN_RadioResourceStatus SI_AMF_DT_EUTRAN_RadioResourceStatus;
// L:387
typedef struct __si_amf_dt_NGRAN_ReportingStatusIEs SI_AMF_DT_NGRAN_ReportingStatusIEs;
// L:1201
typedef struct __si_amf_dt_NGRAN_CellReportList SI_AMF_DT_NGRAN_CellReportList;
// L:387
typedef struct __si_amf_dt_NGRAN_CellReportItem SI_AMF_DT_NGRAN_CellReportItem;
// L:5162
typedef struct __si_amf_dt_NGRAN_NumberOfActiveUEs SI_AMF_DT_NGRAN_NumberOfActiveUEs;
// L:5162
typedef struct __si_amf_dt_NGRAN_NoofRRCConnections SI_AMF_DT_NGRAN_NoofRRCConnections;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO;
// L:5162
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO SI_AMF_DT_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO;
// L:387
typedef struct __si_amf_dt_NGRAN_RadioResourceStatus SI_AMF_DT_NGRAN_RadioResourceStatus;
// L:387
typedef struct __si_amf_dt_InterSystemHOReport SI_AMF_DT_InterSystemHOReport;

// L:387
typedef struct __si_amf_dt_IntersystemMobilityFailureforVoiceFallback SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback;

// L:387
typedef struct __si_amf_dt_IntersystemUnnecessaryHO SI_AMF_DT_IntersystemUnnecessaryHO;
// L:4231
typedef struct __si_amf_dt_LAC SI_AMF_DT_LAC;
// L:387
typedef struct __si_amf_dt_LAI SI_AMF_DT_LAI;

// L:387
typedef struct __si_amf_dt_LastVisitedCellItem SI_AMF_DT_LastVisitedCellItem;
// L:4231
typedef struct __si_amf_dt_LastVisitedEUTRANCellInformation SI_AMF_DT_LastVisitedEUTRANCellInformation;
// L:4231
typedef struct __si_amf_dt_LastVisitedGERANCellInformation SI_AMF_DT_LastVisitedGERANCellInformation;
// L:387
typedef struct __si_amf_dt_LastVisitedNGRANCellInformation SI_AMF_DT_LastVisitedNGRANCellInformation;
// L:1201
typedef struct __si_amf_dt_LastVisitedPSCellList SI_AMF_DT_LastVisitedPSCellList;
// L:5162
typedef struct __si_amf_dt_LastVisitedPSCellInformation_timeStay SI_AMF_DT_LastVisitedPSCellInformation_timeStay;
// L:387
typedef struct __si_amf_dt_LastVisitedPSCellInformation SI_AMF_DT_LastVisitedPSCellInformation;
// L:4231
typedef struct __si_amf_dt_LastVisitedUTRANCellInformation SI_AMF_DT_LastVisitedUTRANCellInformation;


// L:5162
typedef struct __si_amf_dt_LocationReportingReferenceID SI_AMF_DT_LocationReportingReferenceID;
// L:387
typedef struct __si_amf_dt_LocationReportingRequestType SI_AMF_DT_LocationReportingRequestType;
// L:387
typedef struct __si_amf_dt_LoggedMDTNr SI_AMF_DT_LoggedMDTNr;





// L:4231
typedef struct __si_amf_dt_LTEUERLFReportContainer SI_AMF_DT_LTEUERLFReportContainer;
// L:387
typedef struct __si_amf_dt_LTEV2XServicesAuthorized SI_AMF_DT_LTEV2XServicesAuthorized;
// L:387
typedef struct __si_amf_dt_LTEUESidelinkAggregateMaximumBitrate SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate;


// L:387
typedef struct __si_amf_dt_LTE_A2X_ServicesAuthorized SI_AMF_DT_LTE_A2X_ServicesAuthorized;
// L:4706
typedef struct __si_amf_dt_MaskedIMEISV SI_AMF_DT_MaskedIMEISV;
// L:5162
typedef struct __si_amf_dt_MaximumDataBurstVolume SI_AMF_DT_MaximumDataBurstVolume;
// L:4706
typedef struct __si_amf_dt_MessageIdentifier SI_AMF_DT_MessageIdentifier;

// L:5162
typedef struct __si_amf_dt_MBS_AreaSessionID SI_AMF_DT_MBS_AreaSessionID;

// L:1201
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBList SI_AMF_DT_MBS_DataForwardingResponseMRBList;
// L:387
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBItem SI_AMF_DT_MBS_DataForwardingResponseMRBItem;
// L:1201
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestList SI_AMF_DT_MBS_MappingandDataForwardingRequestList;
// L:387
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestItem SI_AMF_DT_MBS_MappingandDataForwardingRequestItem;
// L:1201
typedef struct __si_amf_dt_MBS_QoSFlowList SI_AMF_DT_MBS_QoSFlowList;
// L:5162
typedef struct __si_amf_dt_MRBProgressInformation_pDCP_SN_Length12 SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length12;
// L:5162
typedef struct __si_amf_dt_MRBProgressInformation_pDCP_SN_Length18 SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length18;

// L:1201
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupList SI_AMF_DT_MBS_QoSFlowsToBeSetupList;
// L:387
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupItem SI_AMF_DT_MBS_QoSFlowsToBeSetupItem;

// L:1201
typedef struct __si_amf_dt_MBS_ServiceAreaInformationList SI_AMF_DT_MBS_ServiceAreaInformationList;
// L:387
typedef struct __si_amf_dt_MBS_ServiceAreaInformationItem SI_AMF_DT_MBS_ServiceAreaInformationItem;
// L:387
typedef struct __si_amf_dt_MBS_ServiceAreaInformation SI_AMF_DT_MBS_ServiceAreaInformation;
// L:1201
typedef struct __si_amf_dt_MBS_ServiceAreaCellList SI_AMF_DT_MBS_ServiceAreaCellList;
// L:1201
typedef struct __si_amf_dt_MBS_ServiceAreaTAIList SI_AMF_DT_MBS_ServiceAreaTAIList;
// L:387
typedef struct __si_amf_dt_MBS_SessionID SI_AMF_DT_MBS_SessionID;
// L:1201
typedef struct __si_amf_dt_MBSSessionFailedtoSetupList SI_AMF_DT_MBSSessionFailedtoSetupList;
// L:387
typedef struct __si_amf_dt_MBSSessionFailedtoSetupItem SI_AMF_DT_MBSSessionFailedtoSetupItem;
// L:1201
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetList SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList;
// L:387
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetItem SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem;
// L:1201
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceList SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList;
// L:387
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceItem SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem;

// L:387
typedef struct __si_amf_dt_MBSSessionSetupOrModFailureTransfer SI_AMF_DT_MBSSessionSetupOrModFailureTransfer;
// L:1201
typedef struct __si_amf_dt_MBSSessionSetupResponseList SI_AMF_DT_MBSSessionSetupResponseList;
// L:387
typedef struct __si_amf_dt_MBSSessionSetupResponseItem SI_AMF_DT_MBSSessionSetupResponseItem;
// L:1201
typedef struct __si_amf_dt_SupportedUETypeList SI_AMF_DT_SupportedUETypeList;

// L:1201
typedef struct __si_amf_dt_MBS_SessionFSAIDList SI_AMF_DT_MBS_SessionFSAIDList;
// L:4231
typedef struct __si_amf_dt_MBS_SessionFSAID SI_AMF_DT_MBS_SessionFSAID;
// L:387
typedef struct __si_amf_dt_MBSSessionReleaseResponseTransfer SI_AMF_DT_MBSSessionReleaseResponseTransfer;
// L:387
typedef struct __si_amf_dt_MBSSessionSetupOrModResponseTransfer SI_AMF_DT_MBSSessionSetupOrModResponseTransfer;


// L:1201
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCList SI_AMF_DT_MBS_SessionTNLInfo5GCList;
// L:387
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCItem SI_AMF_DT_MBS_SessionTNLInfo5GCItem;

// L:1201
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANList SI_AMF_DT_MBS_SessionTNLInfoNGRANList;
// L:387
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANItem SI_AMF_DT_MBS_SessionTNLInfoNGRANItem;
// L:387
typedef struct __si_amf_dt_MBS_DistributionReleaseRequestTransfer SI_AMF_DT_MBS_DistributionReleaseRequestTransfer;
// L:387
typedef struct __si_amf_dt_MBS_DistributionSetupRequestTransfer SI_AMF_DT_MBS_DistributionSetupRequestTransfer;
// L:387
typedef struct __si_amf_dt_MBS_DistributionSetupResponseTransfer SI_AMF_DT_MBS_DistributionSetupResponseTransfer;
// L:387
typedef struct __si_amf_dt_MBS_DistributionSetupUnsuccessfulTransfer SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer;

// L:1201
typedef struct __si_amf_dt_MBS_UP_FailureIndicationList SI_AMF_DT_MBS_UP_FailureIndicationList;
// L:387
typedef struct __si_amf_dt_MBS_UP_FailureIndicationItem SI_AMF_DT_MBS_UP_FailureIndicationItem;

// L:1201
typedef struct __si_amf_dt_MBSSessionSetupRequestList SI_AMF_DT_MBSSessionSetupRequestList;
// L:387
typedef struct __si_amf_dt_MBSSessionSetupRequestItem SI_AMF_DT_MBSSessionSetupRequestItem;
// L:1201
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestList SI_AMF_DT_MBSSessionSetuporModifyRequestList;
// L:387
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestItem SI_AMF_DT_MBSSessionSetuporModifyRequestItem;
// L:1201
typedef struct __si_amf_dt_MBSSessionToReleaseList SI_AMF_DT_MBSSessionToReleaseList;
// L:387
typedef struct __si_amf_dt_MBSSessionToReleaseItem SI_AMF_DT_MBSSessionToReleaseItem;



// L:4706
typedef struct __si_amf_dt_MobilityInformation SI_AMF_DT_MobilityInformation;
// L:4706
typedef struct __si_amf_dt_ExtendedMobilityInformation SI_AMF_DT_ExtendedMobilityInformation;
// L:387
typedef struct __si_amf_dt_MobilityRestrictionList SI_AMF_DT_MobilityRestrictionList;

// L:1201
typedef struct __si_amf_dt_MDTPLMNList SI_AMF_DT_MDTPLMNList;
// L:1201
typedef struct __si_amf_dt_MDTPLMNModificationList SI_AMF_DT_MDTPLMNModificationList;
// L:387
typedef struct __si_amf_dt_MDT_Configuration SI_AMF_DT_MDT_Configuration;

// L:387
typedef struct __si_amf_dt_MDT_Configuration_NR SI_AMF_DT_MDT_Configuration_NR;
// L:387
typedef struct __si_amf_dt_MDT_Configuration_EUTRA SI_AMF_DT_MDT_Configuration_EUTRA;


// L:4231
typedef struct __si_amf_dt_MDTModeEutra SI_AMF_DT_MDTModeEutra;
// L:4706
typedef struct __si_amf_dt_MeasurementsToActivate SI_AMF_DT_MeasurementsToActivate;



// L:5162
typedef struct __si_amf_dt_MRB_ID SI_AMF_DT_MRB_ID;
// L:387
typedef struct __si_amf_dt_MulticastSessionActivationRequestTransfer SI_AMF_DT_MulticastSessionActivationRequestTransfer;
// L:387
typedef struct __si_amf_dt_MulticastSessionDeactivationRequestTransfer SI_AMF_DT_MulticastSessionDeactivationRequestTransfer;
// L:1201
typedef struct __si_amf_dt_MulticastGroupPagingAreaList SI_AMF_DT_MulticastGroupPagingAreaList;
// L:387
typedef struct __si_amf_dt_MulticastGroupPagingAreaItem SI_AMF_DT_MulticastGroupPagingAreaItem;
// L:1201
typedef struct __si_amf_dt_MBS_AreaTAIList SI_AMF_DT_MBS_AreaTAIList;
// L:387
typedef struct __si_amf_dt_MulticastGroupPagingArea SI_AMF_DT_MulticastGroupPagingArea;
// L:1201
typedef struct __si_amf_dt_UE_PagingList SI_AMF_DT_UE_PagingList;
// L:387
typedef struct __si_amf_dt_UE_PagingItem SI_AMF_DT_UE_PagingItem;
// L:387
typedef struct __si_amf_dt_M1Configuration SI_AMF_DT_M1Configuration;

// L:5162
typedef struct __si_amf_dt_MaxNrofRS_IndexesToReport SI_AMF_DT_MaxNrofRS_IndexesToReport;

// L:387
typedef struct __si_amf_dt_M1ThresholdEventA2 SI_AMF_DT_M1ThresholdEventA2;

// L:387
typedef struct __si_amf_dt_M1PeriodicReporting SI_AMF_DT_M1PeriodicReporting;
// L:387
typedef struct __si_amf_dt_M4Configuration SI_AMF_DT_M4Configuration;


// L:387
typedef struct __si_amf_dt_M5Configuration SI_AMF_DT_M5Configuration;


// L:387
typedef struct __si_amf_dt_M6Configuration SI_AMF_DT_M6Configuration;


// L:387
typedef struct __si_amf_dt_M7Configuration SI_AMF_DT_M7Configuration;

// L:5162
typedef struct __si_amf_dt_M7period SI_AMF_DT_M7period;
// L:387
typedef struct __si_amf_dt_MDT_Location_Info SI_AMF_DT_MDT_Location_Info;
// L:4706
typedef struct __si_amf_dt_MDT_Location_Information SI_AMF_DT_MDT_Location_Information;
// L:4706
typedef struct __si_amf_dt_N3IWFID_n3IWF_ID SI_AMF_DT_N3IWFID_n3IWF_ID;

// L:5162
typedef struct __si_amf_dt_N6JitterInformation_n6JitterLowerBound SI_AMF_DT_N6JitterInformation_n6JitterLowerBound;
// L:5162
typedef struct __si_amf_dt_N6JitterInformation_n6JitterUpperBound SI_AMF_DT_N6JitterInformation_n6JitterUpperBound;
// L:387
typedef struct __si_amf_dt_N6JitterInformation SI_AMF_DT_N6JitterInformation;
// L:4231
typedef struct __si_amf_dt_NAS_PDU SI_AMF_DT_NAS_PDU;
// L:4231
typedef struct __si_amf_dt_NASSecurityParametersFromNGRAN SI_AMF_DT_NASSecurityParametersFromNGRAN;




// L:387
typedef struct __si_amf_dt_NB_IoT_Paging_eDRXInfo SI_AMF_DT_NB_IoT_Paging_eDRXInfo;
// L:5162
typedef struct __si_amf_dt_NB_IoT_UEPriority SI_AMF_DT_NB_IoT_UEPriority;

// L:5162
typedef struct __si_amf_dt_NetworkInstance SI_AMF_DT_NetworkInstance;

// L:5162
typedef struct __si_amf_dt_NextHopChainingCount SI_AMF_DT_NextHopChainingCount;

// L:1201
typedef struct __si_amf_dt_NGAPIESupportInformationRequestList SI_AMF_DT_NGAPIESupportInformationRequestList;
// L:387
typedef struct __si_amf_dt_NGAPIESupportInformationRequestItem SI_AMF_DT_NGAPIESupportInformationRequestItem;
// L:1201
typedef struct __si_amf_dt_NGAPIESupportInformationResponseList SI_AMF_DT_NGAPIESupportInformationResponseList;


// L:387
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem SI_AMF_DT_NGAPIESupportInformationResponseItem;
// L:4706
typedef struct __si_amf_dt_NgENBID_macroNgENB_ID SI_AMF_DT_NgENBID_macroNgENB_ID;
// L:4706
typedef struct __si_amf_dt_NgENBID_shortMacroNgENB_ID SI_AMF_DT_NgENBID_shortMacroNgENB_ID;
// L:4706
typedef struct __si_amf_dt_NgENBID_longMacroNgENB_ID SI_AMF_DT_NgENBID_longMacroNgENB_ID;



// L:1201
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveList SI_AMF_DT_NGRAN_TNLAssociationToRemoveList;
// L:387
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveItem SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem;
// L:4231
typedef struct __si_amf_dt_NGRANTraceID SI_AMF_DT_NGRANTraceID;
// L:4706
typedef struct __si_amf_dt_NID SI_AMF_DT_NID;
// L:387
typedef struct __si_amf_dt_NonDynamic5QIDescriptor SI_AMF_DT_NonDynamic5QIDescriptor;

// L:1201
typedef struct __si_amf_dt_NotAllowedTACs SI_AMF_DT_NotAllowedTACs;






// L:4706
typedef struct __si_amf_dt_NRCellIdentity SI_AMF_DT_NRCellIdentity;
// L:387
typedef struct __si_amf_dt_NR_CGI SI_AMF_DT_NR_CGI;
// L:1201
typedef struct __si_amf_dt_NR_CGIList SI_AMF_DT_NR_CGIList;
// L:1201
typedef struct __si_amf_dt_NR_CGIListForWarning SI_AMF_DT_NR_CGIListForWarning;
// L:387
typedef struct __si_amf_dt_NR_PagingeDRXInformation SI_AMF_DT_NR_PagingeDRXInformation;

// L:387
typedef struct __si_amf_dt_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE;



// L:4706
typedef struct __si_amf_dt_NRencryptionAlgorithms SI_AMF_DT_NRencryptionAlgorithms;
// L:4706
typedef struct __si_amf_dt_NRintegrityProtectionAlgorithms SI_AMF_DT_NRintegrityProtectionAlgorithms;
// L:4231
typedef struct __si_amf_dt_NRMobilityHistoryReport SI_AMF_DT_NRMobilityHistoryReport;
// L:4231
typedef struct __si_amf_dt_NRPPa_PDU SI_AMF_DT_NRPPa_PDU;
// L:4231
typedef struct __si_amf_dt_NRUERLFReportContainer SI_AMF_DT_NRUERLFReportContainer;
// L:387
typedef struct __si_amf_dt_NRNTNTAIInformation SI_AMF_DT_NRNTNTAIInformation;
// L:5162
typedef struct __si_amf_dt_NumberOfBroadcasts SI_AMF_DT_NumberOfBroadcasts;
// L:5162
typedef struct __si_amf_dt_NumberOfBroadcastsRequested SI_AMF_DT_NumberOfBroadcastsRequested;
// L:5162
typedef struct __si_amf_dt_NRARFCN SI_AMF_DT_NRARFCN;
// L:5162
typedef struct __si_amf_dt_NRFrequencyBand SI_AMF_DT_NRFrequencyBand;
// L:1201
typedef struct __si_amf_dt_NRFrequencyBand_List SI_AMF_DT_NRFrequencyBand_List;
// L:387
typedef struct __si_amf_dt_NRFrequencyBandItem SI_AMF_DT_NRFrequencyBandItem;
// L:387
typedef struct __si_amf_dt_NRFrequencyInfo SI_AMF_DT_NRFrequencyInfo;
// L:5162
typedef struct __si_amf_dt_NR_PCI SI_AMF_DT_NR_PCI;
// L:387
typedef struct __si_amf_dt_NRV2XServicesAuthorized SI_AMF_DT_NRV2XServicesAuthorized;


// L:387
typedef struct __si_amf_dt_NRUESidelinkAggregateMaximumBitrate SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate;
// L:5162
typedef struct __si_amf_dt_NSAG_ID SI_AMF_DT_NSAG_ID;


// L:387
typedef struct __si_amf_dt_NR_A2X_ServicesAuthorized SI_AMF_DT_NR_A2X_ServicesAuthorized;



// L:1201
typedef struct __si_amf_dt_OverloadStartNSSAIList SI_AMF_DT_OverloadStartNSSAIList;
// L:387
typedef struct __si_amf_dt_OverloadStartNSSAIItem SI_AMF_DT_OverloadStartNSSAIItem;
// L:5162
typedef struct __si_amf_dt_PacketDelayBudget SI_AMF_DT_PacketDelayBudget;
// L:5162
typedef struct __si_amf_dt_PacketErrorRate_pERScalar SI_AMF_DT_PacketErrorRate_pERScalar;
// L:5162
typedef struct __si_amf_dt_PacketErrorRate_pERExponent SI_AMF_DT_PacketErrorRate_pERExponent;
// L:387
typedef struct __si_amf_dt_PacketErrorRate SI_AMF_DT_PacketErrorRate;
// L:5162
typedef struct __si_amf_dt_PacketLossRate SI_AMF_DT_PacketLossRate;
// L:387
typedef struct __si_amf_dt_PagingAssisDataforCEcapabUE SI_AMF_DT_PagingAssisDataforCEcapabUE;
// L:387
typedef struct __si_amf_dt_PagingAttemptInformation SI_AMF_DT_PagingAttemptInformation;
// L:5162
typedef struct __si_amf_dt_PagingAttemptCount SI_AMF_DT_PagingAttemptCount;




// L:387
typedef struct __si_amf_dt_PagingPolicyDifferentiation SI_AMF_DT_PagingPolicyDifferentiation;
// L:1201
typedef struct __si_amf_dt_PDUSessionForPagingList SI_AMF_DT_PDUSessionForPagingList;
// L:387
typedef struct __si_amf_dt_PDUSessionForPagingItem SI_AMF_DT_PDUSessionForPagingItem;
// L:1201
typedef struct __si_amf_dt_PagingPolicyDifferentiationList SI_AMF_DT_PagingPolicyDifferentiationList;
// L:5162
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem_dl_DataSize SI_AMF_DT_PagingPolicyDifferentiationItem_dl_DataSize;
// L:387
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem SI_AMF_DT_PagingPolicyDifferentiationItem;
// L:5162
typedef struct __si_amf_dt_PagingPolicyIndicator SI_AMF_DT_PagingPolicyIndicator;



// L:1201
typedef struct __si_amf_dt_Partially_Allowed_NSSAI SI_AMF_DT_Partially_Allowed_NSSAI;
// L:387
typedef struct __si_amf_dt_PartiallyAllowedNSSAI_Item SI_AMF_DT_PartiallyAllowedNSSAI_Item;
// L:387
typedef struct __si_amf_dt_PathSwitchRequestAcknowledgeTransfer SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer;
// L:387
typedef struct __si_amf_dt_PathSwitchRequestSetupFailedTransfer SI_AMF_DT_PathSwitchRequestSetupFailedTransfer;
// L:387
typedef struct __si_amf_dt_PathSwitchRequestTransfer SI_AMF_DT_PathSwitchRequestTransfer;
// L:387
typedef struct __si_amf_dt_PathSwitchRequestUnsuccessfulTransfer SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PC5QoSParameters SI_AMF_DT_PC5QoSParameters;
// L:1201
typedef struct __si_amf_dt_PC5QoSFlowList SI_AMF_DT_PC5QoSFlowList;
// L:387
typedef struct __si_amf_dt_PC5QoSFlowItem SI_AMF_DT_PC5QoSFlowItem;
// L:387
typedef struct __si_amf_dt_PC5FlowBitRates SI_AMF_DT_PC5FlowBitRates;
// L:1201
typedef struct __si_amf_dt_PCIListForMDT SI_AMF_DT_PCIListForMDT;

// L:387
typedef struct __si_amf_dt_PDUSessionAggregateMaximumBitRate SI_AMF_DT_PDUSessionAggregateMaximumBitRate;
// L:5162
typedef struct __si_amf_dt_PDUSessionID SI_AMF_DT_PDUSessionID;
// L:5162
typedef struct __si_amf_dt_PDUSessionPairID SI_AMF_DT_PDUSessionPairID;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceAdmittedList SI_AMF_DT_PDUSessionResourceAdmittedList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem SI_AMF_DT_PDUSessionResourceAdmittedItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyListModCfm SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyListModRes SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeListRESReq SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESReq SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeListRESRes SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESRes SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListCxtFail SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListCxtRes SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListHOAck SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListPSReq SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListSURes SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceHandoverList SI_AMF_DT_PDUSessionResourceHandoverList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem_handoverCommandTransfer SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem SI_AMF_DT_PDUSessionResourceHandoverItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceInformationList SI_AMF_DT_PDUSessionResourceInformationList;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceInformationItem SI_AMF_DT_PDUSessionResourceInformationItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceListCxtRelCpl SI_AMF_DT_PDUSessionResourceListCxtRelCpl;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl SI_AMF_DT_PDUSessionResourceItemCxtRelCpl;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceListCxtRelReq SI_AMF_DT_PDUSessionResourceListCxtRelReq;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelReq SI_AMF_DT_PDUSessionResourceItemCxtRelReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceListHORqd SI_AMF_DT_PDUSessionResourceListHORqd;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd_handoverRequiredTransfer SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd SI_AMF_DT_PDUSessionResourceItemHORqd;
// L:1201
typedef struct __si_amf_dt_PDUSessionListMTCommHReq SI_AMF_DT_PDUSessionListMTCommHReq;
// L:387
typedef struct __si_amf_dt_PDUSessionListMTCommHReq_Item SI_AMF_DT_PDUSessionListMTCommHReq_Item;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirmTransfer SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyResponseTransfer SI_AMF_DT_PDUSessionResourceModifyResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationTransfer SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceModifyListModCfm SI_AMF_DT_PDUSessionResourceModifyListModCfm;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm SI_AMF_DT_PDUSessionResourceModifyItemModCfm;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceModifyListModInd SI_AMF_DT_PDUSessionResourceModifyListModInd;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd SI_AMF_DT_PDUSessionResourceModifyItemModInd;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceModifyListModReq SI_AMF_DT_PDUSessionResourceModifyListModReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq SI_AMF_DT_PDUSessionResourceModifyItemModReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceModifyListModRes SI_AMF_DT_PDUSessionResourceModifyListModRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes SI_AMF_DT_PDUSessionResourceModifyItemModRes;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceModifyUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceNotifyList SI_AMF_DT_PDUSessionResourceNotifyList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem SI_AMF_DT_PDUSessionResourceNotifyItem;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceNotifyReleasedTransfer SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer;

// L:387
typedef struct __si_amf_dt_PDUSessionResourceNotifyTransfer SI_AMF_DT_PDUSessionResourceNotifyTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommandTransfer SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceReleasedListNot SI_AMF_DT_PDUSessionResourceReleasedListNot;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot SI_AMF_DT_PDUSessionResourceReleasedItemNot;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceReleasedListPSAck SI_AMF_DT_PDUSessionResourceReleasedListPSAck;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck SI_AMF_DT_PDUSessionResourceReleasedItemPSAck;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceReleasedListPSFail SI_AMF_DT_PDUSessionResourceReleasedListPSFail;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail SI_AMF_DT_PDUSessionResourceReleasedItemPSFail;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceReleasedListRelRes SI_AMF_DT_PDUSessionResourceReleasedListRelRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes SI_AMF_DT_PDUSessionResourceReleasedItemRelRes;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponseTransfer SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceResumeListRESReq SI_AMF_DT_PDUSessionResourceResumeListRESReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq SI_AMF_DT_PDUSessionResourceResumeItemRESReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceResumeListRESRes SI_AMF_DT_PDUSessionResourceResumeListRESRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes SI_AMF_DT_PDUSessionResourceResumeItemRESRes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageList SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSetupListCxtReq SI_AMF_DT_PDUSessionResourceSetupListCxtReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq SI_AMF_DT_PDUSessionResourceSetupItemCxtReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSetupListCxtRes SI_AMF_DT_PDUSessionResourceSetupListCxtRes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes SI_AMF_DT_PDUSessionResourceSetupItemCxtRes;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSetupListHOReq SI_AMF_DT_PDUSessionResourceSetupListHOReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq SI_AMF_DT_PDUSessionResourceSetupItemHOReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSetupListSUReq SI_AMF_DT_PDUSessionResourceSetupListSUReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq SI_AMF_DT_PDUSessionResourceSetupItemSUReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSetupListSURes SI_AMF_DT_PDUSessionResourceSetupListSURes;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes SI_AMF_DT_PDUSessionResourceSetupItemSURes;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupResponseTransfer SI_AMF_DT_PDUSessionResourceSetupResponseTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSetupUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSuspendListSUSReq SI_AMF_DT_PDUSessionResourceSuspendListSUSReq;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceSwitchedList SI_AMF_DT_PDUSessionResourceSwitchedList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem SI_AMF_DT_PDUSessionResourceSwitchedItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLList SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceToReleaseListHOCmd SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd;
// L:1201
typedef struct __si_amf_dt_PDUSessionResourceToReleaseListRelCmd SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd;
// L:4231
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer;
// L:387
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd;


// L:387
typedef struct __si_amf_dt_PDUSessionUsageReport SI_AMF_DT_PDUSessionUsageReport;
// L:387
typedef struct __si_amf_dt_PDUsetQoSParameters SI_AMF_DT_PDUsetQoSParameters;

// L:387
typedef struct __si_amf_dt_PDUsetQoSInformation SI_AMF_DT_PDUsetQoSInformation;

// L:387
typedef struct __si_amf_dt_PEIPSassistanceInformation SI_AMF_DT_PEIPSassistanceInformation;
// L:5162
typedef struct __si_amf_dt_Periodicity SI_AMF_DT_Periodicity;
// L:387
typedef struct __si_amf_dt_PeriodicityBound SI_AMF_DT_PeriodicityBound;
// L:387
typedef struct __si_amf_dt_PeriodicityList SI_AMF_DT_PeriodicityList;
// L:1201
typedef struct __si_amf_dt_AllowedPeriodicityList SI_AMF_DT_AllowedPeriodicityList;

// L:4706
typedef struct __si_amf_dt_PeriodicRegistrationUpdateTimer SI_AMF_DT_PeriodicRegistrationUpdateTimer;
// L:4231
typedef struct __si_amf_dt_PLMNIdentity SI_AMF_DT_PLMNIdentity;
// L:387
typedef struct __si_amf_dt_PLMNAreaBasedQMC SI_AMF_DT_PLMNAreaBasedQMC;
// L:1201
typedef struct __si_amf_dt_PLMNListforQMC SI_AMF_DT_PLMNListforQMC;
// L:1201
typedef struct __si_amf_dt_PLMNSupportList SI_AMF_DT_PLMNSupportList;
// L:387
typedef struct __si_amf_dt_PLMNSupportItem SI_AMF_DT_PLMNSupportItem;
// L:387
typedef struct __si_amf_dt_PNI_NPN_MobilityInformation SI_AMF_DT_PNI_NPN_MobilityInformation;
// L:4231
typedef struct __si_amf_dt_PortNumber SI_AMF_DT_PortNumber;


// L:5162
typedef struct __si_amf_dt_PriorityLevelARP SI_AMF_DT_PriorityLevelARP;
// L:5162
typedef struct __si_amf_dt_PriorityLevelQos SI_AMF_DT_PriorityLevelQos;

// L:387
typedef struct __si_amf_dt_PNI_NPN_AreaScopeofMDT SI_AMF_DT_PNI_NPN_AreaScopeofMDT;
// L:387
typedef struct __si_amf_dt_PNI_NPNBasedMDT SI_AMF_DT_PNI_NPNBasedMDT;
// L:387
typedef struct __si_amf_dt_QMCConfigInfo SI_AMF_DT_QMCConfigInfo;
// L:387
typedef struct __si_amf_dt_QMCDeactivation SI_AMF_DT_QMCDeactivation;
// L:1201
typedef struct __si_amf_dt_QoEReferenceList SI_AMF_DT_QoEReferenceList;
// L:4231
typedef struct __si_amf_dt_QoEReference SI_AMF_DT_QoEReference;


// L:387
typedef struct __si_amf_dt_QoERVQoEReportingPaths SI_AMF_DT_QoERVQoEReportingPaths;

// L:1201
typedef struct __si_amf_dt_QosFlowAcceptedList SI_AMF_DT_QosFlowAcceptedList;
// L:387
typedef struct __si_amf_dt_QosFlowAcceptedItem SI_AMF_DT_QosFlowAcceptedItem;
// L:1201
typedef struct __si_amf_dt_QosFlowAdditionalInfoListRelCom SI_AMF_DT_QosFlowAdditionalInfoListRelCom;
// L:387
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelCom SI_AMF_DT_QosFlowAdditionalInfoItemRelCom;
// L:1201
typedef struct __si_amf_dt_QosFlowAdditionalInfoListRelRes SI_AMF_DT_QosFlowAdditionalInfoListRelRes;
// L:387
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelRes SI_AMF_DT_QosFlowAdditionalInfoItemRelRes;
// L:1201
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestList SI_AMF_DT_QosFlowAddOrModifyRequestList;
// L:387
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestItem SI_AMF_DT_QosFlowAddOrModifyRequestItem;
// L:1201
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseList SI_AMF_DT_QosFlowAddOrModifyResponseList;
// L:387
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseItem SI_AMF_DT_QosFlowAddOrModifyResponseItem;
// L:1201
typedef struct __si_amf_dt_QosFlowFeedbackList SI_AMF_DT_QosFlowFeedbackList;
// L:387
typedef struct __si_amf_dt_QosFlowFeedbackItem SI_AMF_DT_QosFlowFeedbackItem;
// L:5162
typedef struct __si_amf_dt_QosFlowIdentifier SI_AMF_DT_QosFlowIdentifier;
// L:1201
typedef struct __si_amf_dt_QosFlowInformationList SI_AMF_DT_QosFlowInformationList;
// L:387
typedef struct __si_amf_dt_QosFlowInformationItem SI_AMF_DT_QosFlowInformationItem;
// L:387
typedef struct __si_amf_dt_QosFlowLevelQosParameters SI_AMF_DT_QosFlowLevelQosParameters;

// L:5162
typedef struct __si_amf_dt_QosMonitoringReportingFrequency SI_AMF_DT_QosMonitoringReportingFrequency;
// L:1201
typedef struct __si_amf_dt_QoSFlowList SI_AMF_DT_QoSFlowList;
// L:1201
typedef struct __si_amf_dt_QosFlowListWithCause SI_AMF_DT_QosFlowListWithCause;
// L:387
typedef struct __si_amf_dt_QosFlowWithCauseItem SI_AMF_DT_QosFlowWithCauseItem;
// L:1201
typedef struct __si_amf_dt_QosFlowModifyConfirmList SI_AMF_DT_QosFlowModifyConfirmList;
// L:387
typedef struct __si_amf_dt_QosFlowModifyConfirmItem SI_AMF_DT_QosFlowModifyConfirmItem;
// L:1201
typedef struct __si_amf_dt_QosFlowNotifyList SI_AMF_DT_QosFlowNotifyList;
// L:387
typedef struct __si_amf_dt_QosFlowNotifyItem SI_AMF_DT_QosFlowNotifyItem;
// L:1201
typedef struct __si_amf_dt_QosFlowParametersList SI_AMF_DT_QosFlowParametersList;
// L:387
typedef struct __si_amf_dt_QosFlowParametersItem SI_AMF_DT_QosFlowParametersItem;
// L:387
typedef struct __si_amf_dt_QosFlowPerTNLInformation SI_AMF_DT_QosFlowPerTNLInformation;
// L:1201
typedef struct __si_amf_dt_QosFlowPerTNLInformationList SI_AMF_DT_QosFlowPerTNLInformationList;
// L:387
typedef struct __si_amf_dt_QosFlowPerTNLInformationItem SI_AMF_DT_QosFlowPerTNLInformationItem;
// L:1201
typedef struct __si_amf_dt_QosFlowSetupRequestList SI_AMF_DT_QosFlowSetupRequestList;
// L:387
typedef struct __si_amf_dt_QosFlowSetupRequestItem SI_AMF_DT_QosFlowSetupRequestItem;
// L:1201
typedef struct __si_amf_dt_QosFlowListWithDataForwarding SI_AMF_DT_QosFlowListWithDataForwarding;
// L:387
typedef struct __si_amf_dt_QosFlowItemWithDataForwarding SI_AMF_DT_QosFlowItemWithDataForwarding;
// L:1201
typedef struct __si_amf_dt_QosFlowToBeForwardedList SI_AMF_DT_QosFlowToBeForwardedList;
// L:387
typedef struct __si_amf_dt_QosFlowToBeForwardedItem SI_AMF_DT_QosFlowToBeForwardedItem;
// L:1201
typedef struct __si_amf_dt_QoSFlowTSCList SI_AMF_DT_QoSFlowTSCList;
// L:387
typedef struct __si_amf_dt_QoSFlowTSCItem SI_AMF_DT_QoSFlowTSCItem;
// L:1201
typedef struct __si_amf_dt_QoSFlowsUsageReportList SI_AMF_DT_QoSFlowsUsageReportList;

// L:387
typedef struct __si_amf_dt_QoSFlowsUsageReport_Item SI_AMF_DT_QoSFlowsUsageReport_Item;

// L:387
typedef struct __si_amf_dt_RANfeedbacktype_proactive SI_AMF_DT_RANfeedbacktype_proactive;

// L:387
typedef struct __si_amf_dt_RANfeedbacktype_reactive SI_AMF_DT_RANfeedbacktype_reactive;

// L:5594
typedef struct __si_amf_dt_RANNodeName SI_AMF_DT_RANNodeName;
// L:5594
typedef struct __si_amf_dt_RANNodeNameVisibleString SI_AMF_DT_RANNodeNameVisibleString;
// L:5594
typedef struct __si_amf_dt_RANNodeNameUTF8String SI_AMF_DT_RANNodeNameUTF8String;
// L:5162
typedef struct __si_amf_dt_RANPagingPriority SI_AMF_DT_RANPagingPriority;
// L:387
typedef struct __si_amf_dt_RANStatusTransfer_TransparentContainer SI_AMF_DT_RANStatusTransfer_TransparentContainer;



// L:4706
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_clockFrequencyStability SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability;
// L:387
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo SI_AMF_DT_RANTimingSynchronisationStatusInfo;


// L:1201
typedef struct __si_amf_dt_RANTSSCellList SI_AMF_DT_RANTSSCellList;
// L:387
typedef struct __si_amf_dt_RANTSSCellItem SI_AMF_DT_RANTSSCellItem;
// L:5162
typedef struct __si_amf_dt_RAN_UE_NGAP_ID SI_AMF_DT_RAN_UE_NGAP_ID;

// L:1201
typedef struct __si_amf_dt_RATRestrictions SI_AMF_DT_RATRestrictions;
// L:387
typedef struct __si_amf_dt_RATRestrictions_Item SI_AMF_DT_RATRestrictions_Item;
// L:4706
typedef struct __si_amf_dt_RATRestrictionInformation SI_AMF_DT_RATRestrictionInformation;
// L:387
typedef struct __si_amf_dt_RecommendedCellsForPaging SI_AMF_DT_RecommendedCellsForPaging;
// L:1201
typedef struct __si_amf_dt_RecommendedCellList SI_AMF_DT_RecommendedCellList;
// L:5162
typedef struct __si_amf_dt_RecommendedCellItem_timeStayedInCell SI_AMF_DT_RecommendedCellItem_timeStayedInCell;
// L:387
typedef struct __si_amf_dt_RecommendedCellItem SI_AMF_DT_RecommendedCellItem;
// L:387
typedef struct __si_amf_dt_RecommendedRANNodesForPaging SI_AMF_DT_RecommendedRANNodesForPaging;
// L:1201
typedef struct __si_amf_dt_RecommendedRANNodeList SI_AMF_DT_RecommendedRANNodeList;
// L:387
typedef struct __si_amf_dt_RecommendedRANNodeItem SI_AMF_DT_RecommendedRANNodeItem;


// L:387
typedef struct __si_amf_dt_RedundantPDUSessionInformation SI_AMF_DT_RedundantPDUSessionInformation;


// L:5162
typedef struct __si_amf_dt_RelativeAMFCapacity SI_AMF_DT_RelativeAMFCapacity;

// L:5162
typedef struct __si_amf_dt_RepetitionPeriod SI_AMF_DT_RepetitionPeriod;





// L:4231
typedef struct __si_amf_dt_RGLevelWirelineAccessCharacteristics SI_AMF_DT_RGLevelWirelineAccessCharacteristics;
// L:5162
typedef struct __si_amf_dt_RNC_ID SI_AMF_DT_RNC_ID;
// L:4231
typedef struct __si_amf_dt_RoutingID SI_AMF_DT_RoutingID;
// L:4231
typedef struct __si_amf_dt_RRCContainer SI_AMF_DT_RRCContainer;




// L:387
typedef struct __si_amf_dt_RIMInformationTransfer SI_AMF_DT_RIMInformationTransfer;

// L:387
typedef struct __si_amf_dt_RIMInformation SI_AMF_DT_RIMInformation;
// L:4706
typedef struct __si_amf_dt_GNBSetID SI_AMF_DT_GNBSetID;
// L:1201
typedef struct __si_amf_dt_RSPPQoSFlowList SI_AMF_DT_RSPPQoSFlowList;
// L:387
typedef struct __si_amf_dt_RSPPQoSFlowItem SI_AMF_DT_RSPPQoSFlowItem;
// L:387
typedef struct __si_amf_dt_RSPPFlowBitRates SI_AMF_DT_RSPPFlowBitRates;
// L:4706
typedef struct __si_amf_dt_ScheduledCommunicationTime_dayofWeek SI_AMF_DT_ScheduledCommunicationTime_dayofWeek;
// L:5162
typedef struct __si_amf_dt_ScheduledCommunicationTime_timeofDayStart SI_AMF_DT_ScheduledCommunicationTime_timeofDayStart;
// L:5162
typedef struct __si_amf_dt_ScheduledCommunicationTime_timeofDayEnd SI_AMF_DT_ScheduledCommunicationTime_timeofDayEnd;
// L:387
typedef struct __si_amf_dt_ScheduledCommunicationTime SI_AMF_DT_ScheduledCommunicationTime;
// L:1201
typedef struct __si_amf_dt_SCTP_TLAs SI_AMF_DT_SCTP_TLAs;
// L:4231
typedef struct __si_amf_dt_SD SI_AMF_DT_SD;
// L:387
typedef struct __si_amf_dt_SecondaryRATUsageInformation SI_AMF_DT_SecondaryRATUsageInformation;
// L:387
typedef struct __si_amf_dt_SecondaryRATDataUsageReportTransfer SI_AMF_DT_SecondaryRATDataUsageReportTransfer;
// L:387
typedef struct __si_amf_dt_SecurityContext SI_AMF_DT_SecurityContext;
// L:387
typedef struct __si_amf_dt_SecurityIndication SI_AMF_DT_SecurityIndication;
// L:4706
typedef struct __si_amf_dt_SecurityKey SI_AMF_DT_SecurityKey;
// L:387
typedef struct __si_amf_dt_SecurityResult SI_AMF_DT_SecurityResult;
// L:387
typedef struct __si_amf_dt_SensorMeasurementConfiguration SI_AMF_DT_SensorMeasurementConfiguration;
// L:1201
typedef struct __si_amf_dt_SensorMeasConfigNameList SI_AMF_DT_SensorMeasConfigNameList;
// L:387
typedef struct __si_amf_dt_SensorMeasConfigNameItem SI_AMF_DT_SensorMeasConfigNameItem;





// L:4706
typedef struct __si_amf_dt_SerialNumber SI_AMF_DT_SerialNumber;
// L:1201
typedef struct __si_amf_dt_ServedGUAMIList SI_AMF_DT_ServedGUAMIList;
// L:387
typedef struct __si_amf_dt_ServedGUAMIItem SI_AMF_DT_ServedGUAMIItem;
// L:1201
typedef struct __si_amf_dt_ServiceAreaInformation SI_AMF_DT_ServiceAreaInformation;
// L:387
typedef struct __si_amf_dt_ServiceAreaInformation_Item SI_AMF_DT_ServiceAreaInformation_Item;

// L:5162
typedef struct __si_amf_dt_SgNB_UE_X2AP_ID SI_AMF_DT_SgNB_UE_X2AP_ID;
// L:387
typedef struct __si_amf_dt_SharedNGU_MulticastTNLInformation SI_AMF_DT_SharedNGU_MulticastTNLInformation;
// L:1201
typedef struct __si_amf_dt_SliceOverloadList SI_AMF_DT_SliceOverloadList;
// L:387
typedef struct __si_amf_dt_SliceOverloadItem SI_AMF_DT_SliceOverloadItem;
// L:1201
typedef struct __si_amf_dt_SliceSupportList SI_AMF_DT_SliceSupportList;
// L:387
typedef struct __si_amf_dt_SliceSupportItem SI_AMF_DT_SliceSupportItem;
// L:1201
typedef struct __si_amf_dt_SliceSupportListQMC SI_AMF_DT_SliceSupportListQMC;
// L:387
typedef struct __si_amf_dt_SliceSupportQMC_Item SI_AMF_DT_SliceSupportQMC_Item;
// L:387
typedef struct __si_amf_dt_SNPN_MobilityInformation SI_AMF_DT_SNPN_MobilityInformation;
// L:387
typedef struct __si_amf_dt_S_NSSAI SI_AMF_DT_S_NSSAI;
// L:387
typedef struct __si_amf_dt_SONConfigurationTransfer SI_AMF_DT_SONConfigurationTransfer;

// L:387
typedef struct __si_amf_dt_SONInformationReply SI_AMF_DT_SONInformationReply;

// L:387
typedef struct __si_amf_dt_SNPN_CellBasedMDT SI_AMF_DT_SNPN_CellBasedMDT;
// L:1201
typedef struct __si_amf_dt_SNPNCellIdListforMDT SI_AMF_DT_SNPNCellIdListforMDT;
// L:387
typedef struct __si_amf_dt_SNPNCellIdListforMDTItem SI_AMF_DT_SNPNCellIdListforMDTItem;
// L:387
typedef struct __si_amf_dt_SNPN_TAIBasedMDT SI_AMF_DT_SNPN_TAIBasedMDT;
// L:1201
typedef struct __si_amf_dt_SNPNTAIListforMDT SI_AMF_DT_SNPNTAIListforMDT;
// L:387
typedef struct __si_amf_dt_SNPNTAIListforMDTItem SI_AMF_DT_SNPNTAIListforMDTItem;
// L:387
typedef struct __si_amf_dt_SNPN_BasedMDT SI_AMF_DT_SNPN_BasedMDT;
// L:1201
typedef struct __si_amf_dt_SNPNListforMDT SI_AMF_DT_SNPNListforMDT;
// L:387
typedef struct __si_amf_dt_SNPNListforMDTItem SI_AMF_DT_SNPNListforMDTItem;
// L:1201
typedef struct __si_amf_dt_SuccessfulHandoverReportList SI_AMF_DT_SuccessfulHandoverReportList;
// L:4231
typedef struct __si_amf_dt_SuccessfulHandoverReportItem_successfulHOReportContainer SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer;
// L:387
typedef struct __si_amf_dt_SuccessfulHandoverReport_Item SI_AMF_DT_SuccessfulHandoverReport_Item;
// L:1201
typedef struct __si_amf_dt_SuccessfulPSCellChangeReportList SI_AMF_DT_SuccessfulPSCellChangeReportList;
// L:4231
typedef struct __si_amf_dt_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer;
// L:387
typedef struct __si_amf_dt_SuccessfulPSCellChangeReport_Item SI_AMF_DT_SuccessfulPSCellChangeReport_Item;

// L:387
typedef struct __si_amf_dt_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer;


// L:387
typedef struct __si_amf_dt_SourceRANNodeID SI_AMF_DT_SourceRANNodeID;
// L:4231
typedef struct __si_amf_dt_SourceToTarget_TransparentContainer SI_AMF_DT_SourceToTarget_TransparentContainer;
// L:387
typedef struct __si_amf_dt_SourceToTarget_AMFInformationReroute SI_AMF_DT_SourceToTarget_AMFInformationReroute;

// L:4231
typedef struct __si_amf_dt_ConfiguredNSSAI SI_AMF_DT_ConfiguredNSSAI;
// L:4231
typedef struct __si_amf_dt_RejectedNSSAIinPLMN SI_AMF_DT_RejectedNSSAIinPLMN;
// L:4231
typedef struct __si_amf_dt_RejectedNSSAIinTA SI_AMF_DT_RejectedNSSAIinTA;
// L:4231
typedef struct __si_amf_dt_SST SI_AMF_DT_SST;
// L:1201
typedef struct __si_amf_dt_SupportedTAList SI_AMF_DT_SupportedTAList;
// L:387
typedef struct __si_amf_dt_SupportedTAItem SI_AMF_DT_SupportedTAItem;



// L:5162
typedef struct __si_amf_dt_SurvivalTime SI_AMF_DT_SurvivalTime;
// L:387
typedef struct __si_amf_dt_SLPositioningRangingServiceInfo SI_AMF_DT_SLPositioningRangingServiceInfo;

// L:387
typedef struct __si_amf_dt_SLPositioningRangingQoSParameters SI_AMF_DT_SLPositioningRangingQoSParameters;
// L:4231
typedef struct __si_amf_dt_TAC SI_AMF_DT_TAC;
// L:1201
typedef struct __si_amf_dt_TACListInNRNTN SI_AMF_DT_TACListInNRNTN;
// L:387
typedef struct __si_amf_dt_TAI SI_AMF_DT_TAI;
// L:1201
typedef struct __si_amf_dt_TAIBroadcastEUTRA SI_AMF_DT_TAIBroadcastEUTRA;
// L:387
typedef struct __si_amf_dt_TAIBroadcastEUTRA_Item SI_AMF_DT_TAIBroadcastEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_TAIBroadcastNR SI_AMF_DT_TAIBroadcastNR;
// L:387
typedef struct __si_amf_dt_TAIBroadcastNR_Item SI_AMF_DT_TAIBroadcastNR_Item;
// L:1201
typedef struct __si_amf_dt_TAICancelledEUTRA SI_AMF_DT_TAICancelledEUTRA;
// L:387
typedef struct __si_amf_dt_TAICancelledEUTRA_Item SI_AMF_DT_TAICancelledEUTRA_Item;
// L:1201
typedef struct __si_amf_dt_TAICancelledNR SI_AMF_DT_TAICancelledNR;
// L:387
typedef struct __si_amf_dt_TAICancelledNR_Item SI_AMF_DT_TAICancelledNR_Item;
// L:1201
typedef struct __si_amf_dt_TAIListForInactive SI_AMF_DT_TAIListForInactive;
// L:387
typedef struct __si_amf_dt_TAIListForInactiveItem SI_AMF_DT_TAIListForInactiveItem;
// L:1201
typedef struct __si_amf_dt_TAIListForPaging SI_AMF_DT_TAIListForPaging;
// L:387
typedef struct __si_amf_dt_TAIListForPagingItem SI_AMF_DT_TAIListForPagingItem;
// L:1201
typedef struct __si_amf_dt_TAIListForRestart SI_AMF_DT_TAIListForRestart;
// L:1201
typedef struct __si_amf_dt_TAIListForWarning SI_AMF_DT_TAIListForWarning;
// L:1201
typedef struct __si_amf_dt_TAINSAGSupportList SI_AMF_DT_TAINSAGSupportList;
// L:387
typedef struct __si_amf_dt_TAINSAGSupportItem SI_AMF_DT_TAINSAGSupportItem;
// L:387
typedef struct __si_amf_dt_TargeteNB_ID SI_AMF_DT_TargeteNB_ID;
// L:4706
typedef struct __si_amf_dt_TargetHomeENBID_homeENB_ID SI_AMF_DT_TargetHomeENBID_homeENB_ID;
// L:387
typedef struct __si_amf_dt_TargetHomeENB_ID SI_AMF_DT_TargetHomeENB_ID;

// L:387
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer;
// L:387
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer;
// L:1201
typedef struct __si_amf_dt_TargetNSSAI SI_AMF_DT_TargetNSSAI;
// L:387
typedef struct __si_amf_dt_TargetNSSAI_Item SI_AMF_DT_TargetNSSAI_Item;
// L:387
typedef struct __si_amf_dt_TargetNSSAIInformation SI_AMF_DT_TargetNSSAIInformation;
// L:387
typedef struct __si_amf_dt_TargetRANNodeID SI_AMF_DT_TargetRANNodeID;
// L:387
typedef struct __si_amf_dt_TargetRANNodeID_RIM SI_AMF_DT_TargetRANNodeID_RIM;
// L:387
typedef struct __si_amf_dt_TargetRANNodeID_SON SI_AMF_DT_TargetRANNodeID_SON;
// L:387
typedef struct __si_amf_dt_TargetRNC_ID SI_AMF_DT_TargetRNC_ID;
// L:4231
typedef struct __si_amf_dt_TargetToSource_TransparentContainer SI_AMF_DT_TargetToSource_TransparentContainer;
// L:4231
typedef struct __si_amf_dt_TargettoSource_Failure_TransparentContainer SI_AMF_DT_TargettoSource_Failure_TransparentContainer;
// L:387
typedef struct __si_amf_dt_TimeBasedHandoverInformation SI_AMF_DT_TimeBasedHandoverInformation;
// L:5162
typedef struct __si_amf_dt_HandoverWindowStart SI_AMF_DT_HandoverWindowStart;
// L:5162
typedef struct __si_amf_dt_HandoverWindowDuration SI_AMF_DT_HandoverWindowDuration;

// L:5162
typedef struct __si_amf_dt_TimeSinceFailure SI_AMF_DT_TimeSinceFailure;
// L:4231
typedef struct __si_amf_dt_TimeStamp SI_AMF_DT_TimeStamp;

// L:5162
typedef struct __si_amf_dt_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget SI_AMF_DT_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget;
// L:387
typedef struct __si_amf_dt_TimeSyncAssistanceInfo SI_AMF_DT_TimeSyncAssistanceInfo;

// L:5162
typedef struct __si_amf_dt_TimeUEStayedInCell SI_AMF_DT_TimeUEStayedInCell;
// L:5162
typedef struct __si_amf_dt_TimeUEStayedInCellEnhancedGranularity SI_AMF_DT_TimeUEStayedInCellEnhancedGranularity;
// L:4231
typedef struct __si_amf_dt_TMGI SI_AMF_DT_TMGI;
// L:4231
typedef struct __si_amf_dt_TNAP_ID SI_AMF_DT_TNAP_ID;
// L:4706
typedef struct __si_amf_dt_TNGFID_tNGF_ID SI_AMF_DT_TNGFID_tNGF_ID;

// L:5162
typedef struct __si_amf_dt_TNLAddressWeightFactor SI_AMF_DT_TNLAddressWeightFactor;
// L:1201
typedef struct __si_amf_dt_TNLAssociationList SI_AMF_DT_TNLAssociationList;
// L:387
typedef struct __si_amf_dt_TNLAssociationItem SI_AMF_DT_TNLAssociationItem;

// L:387
typedef struct __si_amf_dt_TooearlyIntersystemHO SI_AMF_DT_TooearlyIntersystemHO;
// L:387
typedef struct __si_amf_dt_TraceActivation SI_AMF_DT_TraceActivation;

// L:5162
typedef struct __si_amf_dt_TrafficLoadReductionIndication SI_AMF_DT_TrafficLoadReductionIndication;
// L:4706
typedef struct __si_amf_dt_TransportLayerAddress SI_AMF_DT_TransportLayerAddress;

// L:387
typedef struct __si_amf_dt_TAIBasedMDT SI_AMF_DT_TAIBasedMDT;
// L:1201
typedef struct __si_amf_dt_TAIListforMDT SI_AMF_DT_TAIListforMDT;
// L:387
typedef struct __si_amf_dt_TAIBasedQMC SI_AMF_DT_TAIBasedQMC;
// L:1201
typedef struct __si_amf_dt_TAIListforQMC SI_AMF_DT_TAIListforQMC;
// L:387
typedef struct __si_amf_dt_TABasedQMC SI_AMF_DT_TABasedQMC;
// L:1201
typedef struct __si_amf_dt_TAListforQMC SI_AMF_DT_TAListforQMC;
// L:387
typedef struct __si_amf_dt_TABasedMDT SI_AMF_DT_TABasedMDT;
// L:1201
typedef struct __si_amf_dt_TAListforMDT SI_AMF_DT_TAListforMDT;
// L:5162
typedef struct __si_amf_dt_Threshold_RSRP SI_AMF_DT_Threshold_RSRP;
// L:5162
typedef struct __si_amf_dt_Threshold_RSRQ SI_AMF_DT_Threshold_RSRQ;
// L:5162
typedef struct __si_amf_dt_Threshold_SINR SI_AMF_DT_Threshold_SINR;

// L:4231
typedef struct __si_amf_dt_TLContainer SI_AMF_DT_TLContainer;
// L:4231
typedef struct __si_amf_dt_TWAP_ID SI_AMF_DT_TWAP_ID;
// L:4706
typedef struct __si_amf_dt_TWIFID_tWIF_ID SI_AMF_DT_TWIFID_tWIF_ID;

// L:387
typedef struct __si_amf_dt_TSCAssistanceInformation SI_AMF_DT_TSCAssistanceInformation;
// L:387
typedef struct __si_amf_dt_TSCTrafficCharacteristics SI_AMF_DT_TSCTrafficCharacteristics;
// L:387
typedef struct __si_amf_dt_TSCTrafficCharacteristicsFeedback SI_AMF_DT_TSCTrafficCharacteristicsFeedback;
// L:5162
typedef struct __si_amf_dt_TSCFeedbackInformation_burstArrivalTimeOffset SI_AMF_DT_TSCFeedbackInformation_burstArrivalTimeOffset;
// L:387
typedef struct __si_amf_dt_TSCFeedbackInformation SI_AMF_DT_TSCFeedbackInformation;
// L:387
typedef struct __si_amf_dt_UEAggregateMaximumBitRate SI_AMF_DT_UEAggregateMaximumBitRate;
// L:1201
typedef struct __si_amf_dt_UEAppLayerMeasInfoList SI_AMF_DT_UEAppLayerMeasInfoList;
// L:387
typedef struct __si_amf_dt_UEAppLayerMeasInfoItem SI_AMF_DT_UEAppLayerMeasInfoItem;

// L:4231
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig;
// L:5162
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_measConfigAppLayerID SI_AMF_DT_UEAppLayerMeasConfigInfo_measConfigAppLayerID;
// L:387
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo SI_AMF_DT_UEAppLayerMeasConfigInfo;
// L:1201
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionList SI_AMF_DT_UE_associatedLogicalNG_connectionList;
// L:387
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionItem SI_AMF_DT_UE_associatedLogicalNG_connectionItem;


// L:387
typedef struct __si_amf_dt_UEContextResumeRequestTransfer SI_AMF_DT_UEContextResumeRequestTransfer;
// L:387
typedef struct __si_amf_dt_UEContextResumeResponseTransfer SI_AMF_DT_UEContextResumeResponseTransfer;
// L:387
typedef struct __si_amf_dt_UEContextSuspendRequestTransfer SI_AMF_DT_UEContextSuspendRequestTransfer;

// L:5162
typedef struct __si_amf_dt_UEDifferentiationInfo_periodicTime SI_AMF_DT_UEDifferentiationInfo_periodicTime;



// L:387
typedef struct __si_amf_dt_UE_DifferentiationInfo SI_AMF_DT_UE_DifferentiationInfo;
// L:1201
typedef struct __si_amf_dt_UEHistoryInformation SI_AMF_DT_UEHistoryInformation;

// L:4706
typedef struct __si_amf_dt_UEIdentityIndexValue_indexLength10 SI_AMF_DT_UEIdentityIndexValue_indexLength10;


// L:387
typedef struct __si_amf_dt_UE_NGAP_ID_pair SI_AMF_DT_UE_NGAP_ID_pair;


// L:1201
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestList SI_AMF_DT_UEPresenceInAreaOfInterestList;
// L:387
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestItem SI_AMF_DT_UEPresenceInAreaOfInterestItem;
// L:4231
typedef struct __si_amf_dt_UERadioCapability SI_AMF_DT_UERadioCapability;
// L:387
typedef struct __si_amf_dt_UERadioCapabilityForPaging SI_AMF_DT_UERadioCapabilityForPaging;
// L:4231
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfNB_IoT SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT;
// L:4231
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfNR SI_AMF_DT_UERadioCapabilityForPagingOfNR;
// L:4231
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfEUTRA SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA;
// L:4231
typedef struct __si_amf_dt_UERadioCapabilityID SI_AMF_DT_UERadioCapabilityID;


// L:387
typedef struct __si_amf_dt_UESecurityCapabilities SI_AMF_DT_UESecurityCapabilities;
// L:1201
typedef struct __si_amf_dt_UESliceMaximumBitRateList SI_AMF_DT_UESliceMaximumBitRateList;
// L:387
typedef struct __si_amf_dt_UESliceMaximumBitRateItem SI_AMF_DT_UESliceMaximumBitRateItem;

// L:387
typedef struct __si_amf_dt_UL_CP_SecurityInformation SI_AMF_DT_UL_CP_SecurityInformation;
// L:4706
typedef struct __si_amf_dt_UL_NAS_MAC SI_AMF_DT_UL_NAS_MAC;
// L:4706
typedef struct __si_amf_dt_UL_NAS_Count SI_AMF_DT_UL_NAS_Count;
// L:1201
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyList SI_AMF_DT_UL_NGU_UP_TNLModifyList;
// L:387
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyItem SI_AMF_DT_UL_NGU_UP_TNLModifyItem;
// L:1201
typedef struct __si_amf_dt_UnavailableGUAMIList SI_AMF_DT_UnavailableGUAMIList;
// L:387
typedef struct __si_amf_dt_UnavailableGUAMIItem SI_AMF_DT_UnavailableGUAMIItem;

// L:4706
typedef struct __si_amf_dt_UpdateFeedback SI_AMF_DT_UpdateFeedback;

// L:1201
typedef struct __si_amf_dt_UPTransportLayerInformationList SI_AMF_DT_UPTransportLayerInformationList;
// L:387
typedef struct __si_amf_dt_UPTransportLayerInformationItem SI_AMF_DT_UPTransportLayerInformationItem;
// L:1201
typedef struct __si_amf_dt_UPTransportLayerInformationPairList SI_AMF_DT_UPTransportLayerInformationPairList;
// L:387
typedef struct __si_amf_dt_UPTransportLayerInformationPairItem SI_AMF_DT_UPTransportLayerInformationPairItem;
// L:5594
typedef struct __si_amf_dt_URI_address SI_AMF_DT_URI_address;

// L:387
typedef struct __si_amf_dt_UserLocationInformationEUTRA SI_AMF_DT_UserLocationInformationEUTRA;
// L:387
typedef struct __si_amf_dt_UserLocationInformationN3IWF_with_PortNumber SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber;
// L:387
typedef struct __si_amf_dt_UserLocationInformationN3IWF_without_PortNumber SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber;
// L:387
typedef struct __si_amf_dt_UserLocationInformationTNGF SI_AMF_DT_UserLocationInformationTNGF;
// L:387
typedef struct __si_amf_dt_UserLocationInformationTWIF SI_AMF_DT_UserLocationInformationTWIF;

// L:387
typedef struct __si_amf_dt_UserLocationInformationNR SI_AMF_DT_UserLocationInformationNR;
// L:387
typedef struct __si_amf_dt_UserPlaneFailureIndication SI_AMF_DT_UserPlaneFailureIndication;


// L:387
typedef struct __si_amf_dt_UserPlaneSecurityInformation SI_AMF_DT_UserPlaneSecurityInformation;
// L:1201
typedef struct __si_amf_dt_VolumeTimedReportList SI_AMF_DT_VolumeTimedReportList;
// L:4231
typedef struct __si_amf_dt_VolumeTimedReportItem_startTimeStamp SI_AMF_DT_VolumeTimedReportItem_startTimeStamp;
// L:4231
typedef struct __si_amf_dt_VolumeTimedReportItem_endTimeStamp SI_AMF_DT_VolumeTimedReportItem_endTimeStamp;
// L:5162
typedef struct __si_amf_dt_VolumeTimedReportItem_usageCountUL SI_AMF_DT_VolumeTimedReportItem_usageCountUL;
// L:5162
typedef struct __si_amf_dt_VolumeTimedReportItem_usageCountDL SI_AMF_DT_VolumeTimedReportItem_usageCountDL;
// L:387
typedef struct __si_amf_dt_VolumeTimedReport_Item SI_AMF_DT_VolumeTimedReport_Item;
// L:4706
typedef struct __si_amf_dt_WAGFID_w_AGF_ID SI_AMF_DT_WAGFID_w_AGF_ID;

// L:4231
typedef struct __si_amf_dt_WarningAreaCoordinates SI_AMF_DT_WarningAreaCoordinates;

// L:4231
typedef struct __si_amf_dt_WarningMessageContents SI_AMF_DT_WarningMessageContents;
// L:4231
typedef struct __si_amf_dt_WarningSecurityInfo SI_AMF_DT_WarningSecurityInfo;
// L:4231
typedef struct __si_amf_dt_WarningType SI_AMF_DT_WarningType;


// L:387
typedef struct __si_amf_dt_WLANMeasurementConfiguration SI_AMF_DT_WLANMeasurementConfiguration;
// L:1201
typedef struct __si_amf_dt_WLANMeasConfigNameList SI_AMF_DT_WLANMeasConfigNameList;
// L:387
typedef struct __si_amf_dt_WLANMeasConfigNameItem SI_AMF_DT_WLANMeasConfigNameItem;

// L:4231
typedef struct __si_amf_dt_WLANName SI_AMF_DT_WLANName;
// L:387
typedef struct __si_amf_dt_WUS_Assistance_Information SI_AMF_DT_WUS_Assistance_Information;
// L:1201
typedef struct __si_amf_dt_XnExtTLAs SI_AMF_DT_XnExtTLAs;
// L:387
typedef struct __si_amf_dt_XnExtTLA_Item SI_AMF_DT_XnExtTLA_Item;
// L:1201
typedef struct __si_amf_dt_XnGTP_TLAs SI_AMF_DT_XnGTP_TLAs;
// L:1201
typedef struct __si_amf_dt_XnTLAs SI_AMF_DT_XnTLAs;
// L:387
typedef struct __si_amf_dt_XnTNLConfigurationInfo SI_AMF_DT_XnTNLConfigurationInfo;

// L:4231
typedef struct __si_amf_dt_DefaultOctetString SI_AMF_DT_DefaultOctetString;

//PDU
// L:7712
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOItem_ExtIEs SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_A2X_PC5_FlowBitRates_ExtIEs SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs;
// L:7712
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_Item_ExtIEs SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_A2X_PC5_QoS_Parameters_ExtIEs SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AllocationAndRetentionPriority_ExtIEs SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AllowedNSSAI_Item_ExtIEs SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Allowed_PNI_NPN_Item_ExtIEs SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AlternativeQoSParaSetItem_ExtIEs SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AMFPagingTarget_ExtIEs SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AMF_TNLAssociationSetupItem_ExtIEs SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AMF_TNLAssociationToAddItem_ExtIEs SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveItem_ExtIEs SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateItem_ExtIEs SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaOfInterest_ExtIEs SI_AMF_DT_PDU_AreaOfInterest_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaOfInterestCellItem_ExtIEs SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaOfInterestItem_ExtIEs SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaOfInterestRANNodeItem_ExtIEs SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaOfInterestTAIItem_ExtIEs SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AssistanceDataForPaging_ExtIEs SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AssistanceDataForRecommendedCells_ExtIEs SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestItem_ExtIEs SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AssociatedQosFlowItem_ExtIEs SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AUN3DeviceAccessInfo_ExtIEs SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaScopeOfMDT_NR_ExtIEs SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaScopeOfMDT_EUTRA_ExtIEs SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaScopeOfNeighCellsItem_ExtIEs SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AreaScopeOfQMC_ExtIEs SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics_ExtIEs SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BeamMeasurementsReportConfiguration_ExtIEs SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity_ExtIEs SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastCancelledAreaList_ExtIEs SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastCompletedAreaList_ExtIEs SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastPLMNItem_ExtIEs SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastTransportFailureTransfer_ExtIEs SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastTransportRequestTransfer_ExtIEs SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BroadcastTransportResponseTransfer_ExtIEs SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BluetoothMeasurementConfiguration_ExtIEs SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BluetoothMeasConfigNameItem_ExtIEs SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_BurstArrivalTimeWindow_ExtIEs SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CandidateRelayUEInformationItem_ExtIEs SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA_Item_ExtIEs SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CancelledCellsInEAI_NR_Item_ExtIEs SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA_Item_ExtIEs SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CancelledCellsInTAI_NR_Item_ExtIEs SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CandidateCellItem_ExtIEs SI_AMF_DT_PDU_CandidateCellItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CandidateCell_ExtIEs SI_AMF_DT_PDU_CandidateCell_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CandidateCellID_ExtIEs SI_AMF_DT_PDU_CandidateCellID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CandidatePCI_ExtIEs SI_AMF_DT_PDU_CandidatePCI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Cause_ExtIEs SI_AMF_DT_PDU_Cause_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Cell_CAGInformation_ExtIEs SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellIDBroadcastEUTRA_Item_ExtIEs SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellIDBroadcastNR_Item_ExtIEs SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellIDCancelledEUTRA_Item_ExtIEs SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellIDCancelledNR_Item_ExtIEs SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellIDListForRestart_ExtIEs SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellType_ExtIEs SI_AMF_DT_PDU_CellType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ClockAccuracy_ExtIEs SI_AMF_DT_PDU_ClockAccuracy_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ClockQualityAcceptanceIndication_ExtIEs SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_ExtIEs SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ClockQualityReportingControlInfo_ExtIEs SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ClockQualityDetailLevel_ExtIEs SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CNAssistedRANTuning_ExtIEs SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalentItem_ExtIEs SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA_Item_ExtIEs SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CompletedCellsInEAI_NR_Item_ExtIEs SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA_Item_ExtIEs SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CompletedCellsInTAI_NR_Item_ExtIEs SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CoreNetworkAssistanceInformationForInactive_ExtIEs SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs;
// L:7712
typedef struct __si_amf_dt_COUNTValueForPDCP_SN12_ExtIEs SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs;
// L:7712
typedef struct __si_amf_dt_COUNTValueForPDCP_SN18_ExtIEs SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CPTransportLayerInformation_ExtIEs SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CriticalityDiagnostics_ExtIEs SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_Item_ExtIEs SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellBasedMDT_NR_ExtIEs SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellBasedMDT_EUTRA_ExtIEs SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CellBasedQMC_ExtIEs SI_AMF_DT_PDU_CellBasedQMC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CAGListforMDTItem_ExtIEs SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DataForwardingResponseDRBItem_ExtIEs SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DAPSRequestInfo_ExtIEs SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DAPSResponseInfoItem_ExtIEs SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DAPSResponseInfo_ExtIEs SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DataForwardingResponseERABListItem_ExtIEs SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DL_CP_SecurityInformation_ExtIEs SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferItem_ExtIEs SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusDL_ExtIEs SI_AMF_DT_PDU_DRBStatusDL_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusDL12_ExtIEs SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusDL18_ExtIEs SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusUL_ExtIEs SI_AMF_DT_PDU_DRBStatusUL_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusUL12_ExtIEs SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBStatusUL18_ExtIEs SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBsToQosFlowsMappingItem_ExtIEs SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Dynamic5QIDescriptor_ExtIEs SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EarlyStatusTransfer_TransparentContainer_ExtIEs SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ProcedureStageChoice_ExtIEs SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DLDiscarding_ExtIEs SI_AMF_DT_PDU_DLDiscarding_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_Item_ExtIEs SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DLCountChoice_ExtIEs SI_AMF_DT_PDU_DLCountChoice_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FirstDLCount_ExtIEs SI_AMF_DT_PDU_FirstDLCount_ExtIEs;
// L:7712
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingRequest_ExtIEs SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR_Item_ExtIEs SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR_Item_ExtIEs SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EmergencyFallbackIndicator_ExtIEs SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ENB_ID_ExtIEs SI_AMF_DT_PDU_ENB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EndpointIPAddressAndPort_ExtIEs SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EPS_TAI_ExtIEs SI_AMF_DT_PDU_EPS_TAI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_E_RABInformationItem_ExtIEs SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRA_CGI_ExtIEs SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRA_PagingeDRXInformation_ExtIEs SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ExcessPacketDelayThresholdItem_ExtIEs SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ExpectedUEActivityBehaviour_ExtIEs SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ExpectedUEBehaviour_ExtIEs SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem_ExtIEs SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Extended_AMFName_ExtIEs SI_AMF_DT_PDU_Extended_AMFName_ExtIEs;
// L:7712
typedef struct __si_amf_dt_Extended_RANNodeName_ExtIEs SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_ExtIEs SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EventTrigger_ExtIEs SI_AMF_DT_PDU_EventTrigger_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EventL1LoggedMDTConfig_ExtIEs SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MeasurementThresholdL1LoggedMDT_ExtIEs SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EquivalentSNPNsItem_ExtIEs SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FailureIndication_ExtIEs SI_AMF_DT_PDU_FailureIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveGCAction_ExtIEs SI_AMF_DT_PDU_FiveGCAction_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveG_ProSeAuthorized_ExtIEs SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveG_ProSePC5QoSParameters_ExtIEs SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowItem_ExtIEs SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveGProSePC5FlowBitRates_ExtIEs SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FiveG_S_TMSI_ExtIEs SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ForbiddenAreaInformation_Item_ExtIEs SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FromEUTRANtoNGRAN_ExtIEs SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs;
// L:7712
typedef struct __si_amf_dt_FromNGRANtoEUTRAN_ExtIEs SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GBR_QosInformation_ExtIEs SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalCable_ID_new_ExtIEs SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalENB_ID_ExtIEs SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalGNB_ID_ExtIEs SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalN3IWF_ID_ExtIEs SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalLine_ID_ExtIEs SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalNgENB_ID_ExtIEs SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalRANNodeID_ExtIEs SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalTNGF_ID_ExtIEs SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalTWIF_ID_ExtIEs SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GlobalW_AGF_ID_ExtIEs SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GNB_ID_ExtIEs SI_AMF_DT_PDU_GNB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GTPTunnel_ExtIEs SI_AMF_DT_PDU_GTPTunnel_ExtIEs;
// L:7712
typedef struct __si_amf_dt_GUAMI_ExtIEs SI_AMF_DT_PDU_GUAMI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HandoverCommandTransfer_ExtIEs SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HandoverPreparationUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HandoverRequestAcknowledgeTransfer_ExtIEs SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HandoverRequiredTransfer_ExtIEs SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HFCNode_ID_new_ExtIEs SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HLComActivate_ExtIEs SI_AMF_DT_PDU_HLComActivate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HLComDeactivate_ExtIEs SI_AMF_DT_PDU_HLComDeactivate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_HOReport_ExtIEs SI_AMF_DT_PDU_HOReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MobileIAB_MTUserLocationInformation_ExtIEs SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ImmediateMDTNr_ExtIEs SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs;
// L:7712
typedef struct __si_amf_dt_InterSystemFailureIndication_ExtIEs SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONConfigurationTransfer_ExtIEs SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONTransferType_ExtIEs SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONeNBID_ExtIEs SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONNGRANnodeID_ExtIEs SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONInformation_ExtIEs SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONInformationRequest_ExtIEs SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemCellActivationRequest_ExtIEs SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemResourceStatusRequest_ExtIEs SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ReportingSystem_ExtIEs SI_AMF_DT_PDU_ReportingSystem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_ReportingSystemIEs_ExtIEs SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_ReportingSystemIEs_ExtIEs SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_CellToReportItem_ExtIEs SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_CellToReportItem_ExtIEs SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ReportType_ExtIEs SI_AMF_DT_PDU_ReportType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EventBasedReportingIEs_ExtIEs SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PeriodicReportingIEs_ExtIEs SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONInformationReply_ExtIEs SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemCellActivationReply_ExtIEs SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemResourceStatusReply_ExtIEs SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemSONInformationReport_ExtIEs SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemCellStateIndication_ExtIEs SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NotificationCell_Item_ExtIEs SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemResourceStatusReport_ExtIEs SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ResourceStatusReportingSystem_ExtIEs SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_ReportingStatusIEs_ExtIEs SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_CellReportItem_ExtIEs SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs;
// L:7712
typedef struct __si_amf_dt_CompositeAvailableCapacity_ExtIEs SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs;
// L:7712
typedef struct __si_amf_dt_EUTRAN_RadioResourceStatus_ExtIEs SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_ReportingStatusIEs_ExtIEs SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_CellReportItem_ExtIEs SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_RadioResourceStatus_ExtIEs SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs;
// L:7712
typedef struct __si_amf_dt_InterSystemHOReport_ExtIEs SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_InterSystemHandoverReportType_ExtIEs SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemMobilityFailureforVoiceFallback_ExtIEs SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs;
// L:7712
typedef struct __si_amf_dt_IntersystemUnnecessaryHO_ExtIEs SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LAI_ExtIEs SI_AMF_DT_PDU_LAI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LastVisitedCellInformation_ExtIEs SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LastVisitedCellItem_ExtIEs SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LastVisitedNGRANCellInformation_ExtIEs SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LastVisitedPSCellInformation_ExtIEs SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LocationReportingRequestType_ExtIEs SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LoggedMDTNr_ExtIEs SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LoggedMDTTrigger_ExtIEs SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LTEV2XServicesAuthorized_ExtIEs SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs;
// L:7712
typedef struct __si_amf_dt_LTE_A2X_ServicesAuthorized_ExtIEs SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBItem_ExtIEs SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestItem_ExtIEs SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MRB_ProgressInformation_ExtIEs SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupItem_ExtIEs SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_ServiceArea_ExtIEs SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_ServiceAreaInformationItem_ExtIEs SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_ServiceAreaInformation_ExtIEs SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_SessionID_ExtIEs SI_AMF_DT_PDU_MBS_SessionID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionFailedtoSetupItem_ExtIEs SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetupOrModFailureTransfer_ExtIEs SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetupResponseItem_ExtIEs SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionReleaseResponseTransfer_ExtIEs SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetupOrModResponseTransfer_ExtIEs SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GC_ExtIEs SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCItem_ExtIEs SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRAN_ExtIEs SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANItem_ExtIEs SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_DistributionReleaseRequesTransfer_ExtIEs SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_DistributionSetupRequestTransfer_ExtIEs SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_DistributionSetupResponseTransfer_ExtIEs SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_NGUFailureIndication_ExtIEs SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBS_UP_FailureIndicationItem_ExtIEs SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetupRequestItem_ExtIEs SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestItem_ExtIEs SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MBSSessionToReleaseItem_ExtIEs SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MobilityRestrictionList_ExtIEs SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDT_AlignmentInfo_ExtIEs SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDT_Configuration_ExtIEs SI_AMF_DT_PDU_MDT_Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDT_Configuration_NR_ExtIEs SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDT_Configuration_EUTRA_ExtIEs SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDTModeNr_ExtIEs SI_AMF_DT_PDU_MDTModeNr_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MulticastSessionActivationRequestTransfer_ExtIEs SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MulticastSessionDeactivationRequestTransfer_ExtIEs SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MulticastGroupPagingAreaItem_ExtIEs SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MulticastGroupPagingArea_ExtIEs SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UE_PagingItem_ExtIEs SI_AMF_DT_PDU_UE_PagingItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M1Configuration_ExtIEs SI_AMF_DT_PDU_M1Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M1ThresholdEventA2_ExtIEs SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M1ThresholdType_ExtIEs SI_AMF_DT_PDU_M1ThresholdType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M1PeriodicReporting_ExtIEs SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M4Configuration_ExtIEs SI_AMF_DT_PDU_M4Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M5Configuration_ExtIEs SI_AMF_DT_PDU_M5Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M6Configuration_ExtIEs SI_AMF_DT_PDU_M6Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_M7Configuration_ExtIEs SI_AMF_DT_PDU_M7Configuration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_MDT_Location_Info_ExtIEs SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs;
// L:7712
typedef struct __si_amf_dt_N3IWF_ID_ExtIEs SI_AMF_DT_PDU_N3IWF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_N6JitterInformation_ExtIEs SI_AMF_DT_PDU_N6JitterInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NB_IoT_Paging_eDRXInfo_ExtIEs SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGAPIESupportInformationRequestItem_ExtIEs SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem_ExtIEs SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NgENB_ID_ExtIEs SI_AMF_DT_PDU_NgENB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_CGI_ExtIEs SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveItem_ExtIEs SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NonDynamic5QIDescriptor_ExtIEs SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NPN_AccessInformation_ExtIEs SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NPN_MobilityInformation_ExtIEs SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NPN_PagingAssistanceInformation_ExtIEs SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NPN_Support_ExtIEs SI_AMF_DT_PDU_NPN_Support_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NR_CGI_ExtIEs SI_AMF_DT_PDU_NR_CGI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NR_PagingeDRXInformation_ExtIEs SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NRNTNTAIInformation_ExtIEs SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NRFrequencyBandItem_ExtIEs SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NRFrequencyInfo_ExtIEs SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NRV2XServicesAuthorized_ExtIEs SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NRUESidelinkAggregateMaximumBitrate_ExtIEs SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_NR_A2X_ServicesAuthorized_ExtIEs SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs;
// L:7712
typedef struct __si_amf_dt_OverloadResponse_ExtIEs SI_AMF_DT_PDU_OverloadResponse_ExtIEs;
// L:7712
typedef struct __si_amf_dt_OverloadStartNSSAIItem_ExtIEs SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PacketErrorRate_ExtIEs SI_AMF_DT_PDU_PacketErrorRate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PagingAssisDataforCEcapabUE_ExtIEs SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PagingAttemptInformation_ExtIEs SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PagingPolicyDifferentiation_ExtIEs SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionForPagingItem_ExtIEs SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem_ExtIEs SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PartiallyAllowedNSSAI_Item_ExtIEs SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestAcknowledgeTransfer_ExtIEs SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestSetupFailedTransfer_ExtIEs SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestTransfer_ExtIEs SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PC5QoSParameters_ExtIEs SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PC5QoSFlowItem_ExtIEs SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PC5FlowBitRates_ExtIEs SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionAggregateMaximumBitRate_ExtIEs SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceInformationItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionListMTCommHReq_Item_ExtIEs SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirmTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyResponseTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceNotifyReleasedTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceNotifyTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommandTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponseTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupResponseTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd_ExtIEs SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionUsageReport_ExtIEs SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUsetQoSParameters_ExtIEs SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUsetQoSInformation_ExtIEs SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PEIPSassistanceInformation_ExtIEs SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PeriodicityBound_ExtIEs SI_AMF_DT_PDU_PeriodicityBound_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PeriodicityList_ExtIEs SI_AMF_DT_PDU_PeriodicityList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PeriodicityRange_ExtIEs SI_AMF_DT_PDU_PeriodicityRange_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PLMNAreaBasedQMC_ExtIEs SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PLMNSupportItem_ExtIEs SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PNI_NPN_MobilityInformation_ExtIEs SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PWSFailedCellIDList_ExtIEs SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PNI_NPN_AreaScopeofMDT_ExtIEs SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PNI_NPNBasedMDT_ExtIEs SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QMCConfigInfo_ExtIEs SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QMCDeactivation_ExtIEs SI_AMF_DT_PDU_QMCDeactivation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QoERVQoEReportingPaths_ExtIEs SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosCharacteristics_ExtIEs SI_AMF_DT_PDU_QosCharacteristics_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowAcceptedItem_ExtIEs SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelCom_ExtIEs SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelRes_ExtIEs SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestItem_ExtIEs SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseItem_ExtIEs SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowFeedbackItem_ExtIEs SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowInformationItem_ExtIEs SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowLevelQosParameters_ExtIEs SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowWithCauseItem_ExtIEs SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowModifyConfirmItem_ExtIEs SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowNotifyItem_ExtIEs SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowParametersItem_ExtIEs SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowPerTNLInformation_ExtIEs SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowPerTNLInformationItem_ExtIEs SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowSetupRequestItem_ExtIEs SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowItemWithDataForwarding_ExtIEs SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QosFlowToBeForwardedItem_ExtIEs SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QoSFlowTSCItem_ExtIEs SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_QoSFlowsUsageReport_Item_ExtIEs SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANfeedbacktype_ExtIEs SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANfeedbacktype_proactive_ExtIEs SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANfeedbacktype_reactive_ExtIEs SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANStatusTransfer_TransparentContainer_ExtIEs SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_ExtIEs SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RAN_TSSScope_ExtIEs SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RANTSSCellItem_ExtIEs SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RATRestrictions_Item_ExtIEs SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RecommendedCellsForPaging_ExtIEs SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RecommendedCellItem_ExtIEs SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RecommendedRANNodesForPaging_ExtIEs SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RecommendedRANNodeItem_ExtIEs SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RedundantPDUSessionInformation_ExtIEs SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ResetType_ExtIEs SI_AMF_DT_PDU_ResetType_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RIMInformationTransfer_ExtIEs SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RIMInformation_ExtIEs SI_AMF_DT_PDU_RIMInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RSPPQoSFlowItem_ExtIEs SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_RSPPFlowBitRates_ExtIEs SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ScheduledCommunicationTime_ExtIEs SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SecondaryRATUsageInformation_ExtIEs SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SecondaryRATDataUsageReportTransfer_ExtIEs SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SecurityContext_ExtIEs SI_AMF_DT_PDU_SecurityContext_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SecurityIndication_ExtIEs SI_AMF_DT_PDU_SecurityIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SecurityResult_ExtIEs SI_AMF_DT_PDU_SecurityResult_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SensorMeasurementConfiguration_ExtIEs SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SensorMeasConfigNameItem_ExtIEs SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SensorNameConfig_ExtIEs SI_AMF_DT_PDU_SensorNameConfig_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ServedGUAMIItem_ExtIEs SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_ServiceAreaInformation_Item_ExtIEs SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SharedNGU_MulticastTNLInformation_ExtIEs SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SliceOverloadItem_ExtIEs SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SliceSupportItem_ExtIEs SI_AMF_DT_PDU_SliceSupportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SliceSupportQMC_Item_ExtIEs SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPN_MobilityInformation_ExtIEs SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_S_NSSAI_ExtIEs SI_AMF_DT_PDU_S_NSSAI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SONConfigurationTransfer_ExtIEs SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SONInformation_ExtIEs SI_AMF_DT_PDU_SONInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SONInformationReply_ExtIEs SI_AMF_DT_PDU_SONInformationReply_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SONInformationReport_ExtIEs SI_AMF_DT_PDU_SONInformationReport_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPN_CellBasedMDT_ExtIEs SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPNCellIdListforMDTItem_ExtIEs SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPN_TAIBasedMDT_ExtIEs SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPNTAIListforMDTItem_ExtIEs SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPN_BasedMDT_ExtIEs SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SNPNListforMDTItem_ExtIEs SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SuccessfulHandoverReport_Item_ExtIEs SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SuccessfulPSCellChangeReport_Item_ExtIEs SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SourceNodeID_ExtIEs SI_AMF_DT_PDU_SourceNodeID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SourceRANNodeID_ExtIEs SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SourceToTarget_AMFInformationReroute_ExtIEs SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SupportedTAItem_ExtIEs SI_AMF_DT_PDU_SupportedTAItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SLPositioningRangingServiceInfo_ExtIEs SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_SLPositioningRangingQoSParameters_ExtIEs SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAI_ExtIEs SI_AMF_DT_PDU_TAI_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIBroadcastEUTRA_Item_ExtIEs SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIBroadcastNR_Item_ExtIEs SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAICancelledEUTRA_Item_ExtIEs SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAICancelledNR_Item_ExtIEs SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIListForInactiveItem_ExtIEs SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIListForPagingItem_ExtIEs SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAINSAGSupportItem_ExtIEs SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargeteNB_ID_ExtIEs SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetHomeENB_ID_ExtIEs SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetID_ExtIEs SI_AMF_DT_PDU_TargetID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetNSSAI_Item_ExtIEs SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetNSSAIInformation_Item_ExtIEs SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetRANNodeID_ExtIEs SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetRANNodeID_RIM_ExtIEs SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetRANNodeID_SON_ExtIEs SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TargetRNC_ID_ExtIEs SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TimeBasedHandoverInformation_ExtIEs SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TimeSyncAssistanceInfo_ExtIEs SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TNGF_ID_ExtIEs SI_AMF_DT_PDU_TNGF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TNLAssociationItem_ExtIEs SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TooearlyIntersystemHO_ExtIEs SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TraceActivation_ExtIEs SI_AMF_DT_PDU_TraceActivation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIBasedMDT_ExtIEs SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TAIBasedQMC_ExtIEs SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TABasedQMC_ExtIEs SI_AMF_DT_PDU_TABasedQMC_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TABasedMDT_ExtIEs SI_AMF_DT_PDU_TABasedMDT_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TWIF_ID_ExtIEs SI_AMF_DT_PDU_TWIF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TSCAssistanceInformation_ExtIEs SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TSCTrafficCharacteristics_ExtIEs SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TSCTrafficCharacteristicsFeedback_ExtIEs SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs;
// L:7712
typedef struct __si_amf_dt_TSCFeedbackInformation_ExtIEs SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEAggregateMaximumBitRate_ExtIEs SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEAppLayerMeasInfoItem_ExtIEs SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_ExtIEs SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionItem_ExtIEs SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEContextResumeRequestTransfer_ExtIEs SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEContextResumeResponseTransfer_ExtIEs SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEContextSuspendRequestTransfer_ExtIEs SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UE_DifferentiationInfo_ExtIEs SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEHistoryInformationFromTheUE_ExtIEs SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEIdentityIndexValue_ExtIEs SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UE_NGAP_IDs_ExtIEs SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UE_NGAP_ID_pair_ExtIEs SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEPagingIdentity_ExtIEs SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestItem_ExtIEs SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityForPaging_ExtIEs SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UERLFReportContainer_ExtIEs SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UESecurityCapabilities_ExtIEs SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UESliceMaximumBitRateItem_ExtIEs SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UL_CP_SecurityInformation_ExtIEs SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyItem_ExtIEs SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UnavailableGUAMIItem_ExtIEs SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UPTransportLayerInformation_ExtIEs SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UPTransportLayerInformationItem_ExtIEs SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UPTransportLayerInformationPairItem_ExtIEs SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformation_ExtIEs SI_AMF_DT_PDU_UserLocationInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationEUTRA_ExtIEs SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationN3IWF_with_PortNumber_ExtIEs SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationN3IWF_without_PortNumber_ExtIEs SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationTNGF_ExtIEs SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationTWIF_ExtIEs SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationW_AGF_ExtIEs SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserLocationInformationNR_ExtIEs SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserPlaneFailureIndication_ExtIEs SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs;
// L:7712
typedef struct __si_amf_dt_UserPlaneSecurityInformation_ExtIEs SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs;
// L:7712
typedef struct __si_amf_dt_VolumeTimedReport_Item_ExtIEs SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_W_AGF_ID_ExtIEs SI_AMF_DT_PDU_W_AGF_ID_ExtIEs;
// L:7712
typedef struct __si_amf_dt_WarningAreaList_ExtIEs SI_AMF_DT_PDU_WarningAreaList_ExtIEs;
// L:7712
typedef struct __si_amf_dt_WLANMeasurementConfiguration_ExtIEs SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs;
// L:7712
typedef struct __si_amf_dt_WLANMeasConfigNameItem_ExtIEs SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs;
// L:7712
typedef struct __si_amf_dt_WUS_Assistance_Information_ExtIEs SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs;
// L:7712
typedef struct __si_amf_dt_XnExtTLA_Item_ExtIEs SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs;
// L:7712
typedef struct __si_amf_dt_XnTNLConfigurationInfo_ExtIEs SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupRequest SI_AMF_DT_PDU_PDUSessionResourceSetupRequest;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupResponse SI_AMF_DT_PDU_PDUSessionResourceSetupResponse;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommand SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponse SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyRequest SI_AMF_DT_PDU_PDUSessionResourceModifyRequest;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyResponse SI_AMF_DT_PDU_PDUSessionResourceModifyResponse;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceNotify SI_AMF_DT_PDU_PDUSessionResourceNotify;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyIndication SI_AMF_DT_PDU_PDUSessionResourceModifyIndication;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirm SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm;
// L:7712
typedef struct __si_amf_dt_InitialContextSetupRequest SI_AMF_DT_PDU_InitialContextSetupRequest;
// L:7712
typedef struct __si_amf_dt_InitialContextSetupResponse SI_AMF_DT_PDU_InitialContextSetupResponse;
// L:7712
typedef struct __si_amf_dt_InitialContextSetupFailure SI_AMF_DT_PDU_InitialContextSetupFailure;
// L:7712
typedef struct __si_amf_dt_UEContextReleaseRequest SI_AMF_DT_PDU_UEContextReleaseRequest;
// L:7712
typedef struct __si_amf_dt_UEContextReleaseCommand SI_AMF_DT_PDU_UEContextReleaseCommand;
// L:7712
typedef struct __si_amf_dt_UEContextReleaseComplete SI_AMF_DT_PDU_UEContextReleaseComplete;
// L:7712
typedef struct __si_amf_dt_UEContextResumeRequest SI_AMF_DT_PDU_UEContextResumeRequest;
// L:7712
typedef struct __si_amf_dt_UEContextResumeResponse SI_AMF_DT_PDU_UEContextResumeResponse;
// L:7712
typedef struct __si_amf_dt_UEContextResumeFailure SI_AMF_DT_PDU_UEContextResumeFailure;
// L:7712
typedef struct __si_amf_dt_UEContextSuspendRequest SI_AMF_DT_PDU_UEContextSuspendRequest;
// L:7712
typedef struct __si_amf_dt_UEContextSuspendResponse SI_AMF_DT_PDU_UEContextSuspendResponse;
// L:7712
typedef struct __si_amf_dt_UEContextSuspendFailure SI_AMF_DT_PDU_UEContextSuspendFailure;
// L:7712
typedef struct __si_amf_dt_UEContextModificationRequest SI_AMF_DT_PDU_UEContextModificationRequest;
// L:7712
typedef struct __si_amf_dt_UEContextModificationResponse SI_AMF_DT_PDU_UEContextModificationResponse;
// L:7712
typedef struct __si_amf_dt_UEContextModificationFailure SI_AMF_DT_PDU_UEContextModificationFailure;
// L:7712
typedef struct __si_amf_dt_RRCInactiveTransitionReport SI_AMF_DT_PDU_RRCInactiveTransitionReport;
// L:7712
typedef struct __si_amf_dt_RetrieveUEInformation SI_AMF_DT_PDU_RetrieveUEInformation;
// L:7712
typedef struct __si_amf_dt_UEInformationTransfer SI_AMF_DT_PDU_UEInformationTransfer;
// L:7712
typedef struct __si_amf_dt_RANCPRelocationIndication SI_AMF_DT_PDU_RANCPRelocationIndication;
// L:7712
typedef struct __si_amf_dt_HandoverRequired SI_AMF_DT_PDU_HandoverRequired;
// L:7712
typedef struct __si_amf_dt_HandoverCommand SI_AMF_DT_PDU_HandoverCommand;
// L:7712
typedef struct __si_amf_dt_HandoverPreparationFailure SI_AMF_DT_PDU_HandoverPreparationFailure;
// L:7712
typedef struct __si_amf_dt_HandoverRequest SI_AMF_DT_PDU_HandoverRequest;
// L:7712
typedef struct __si_amf_dt_HandoverRequestAcknowledge SI_AMF_DT_PDU_HandoverRequestAcknowledge;
// L:7712
typedef struct __si_amf_dt_HandoverFailure SI_AMF_DT_PDU_HandoverFailure;
// L:7712
typedef struct __si_amf_dt_HandoverNotify SI_AMF_DT_PDU_HandoverNotify;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequest SI_AMF_DT_PDU_PathSwitchRequest;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestAcknowledge SI_AMF_DT_PDU_PathSwitchRequestAcknowledge;
// L:7712
typedef struct __si_amf_dt_PathSwitchRequestFailure SI_AMF_DT_PDU_PathSwitchRequestFailure;
// L:7712
typedef struct __si_amf_dt_HandoverCancel SI_AMF_DT_PDU_HandoverCancel;
// L:7712
typedef struct __si_amf_dt_HandoverCancelAcknowledge SI_AMF_DT_PDU_HandoverCancelAcknowledge;
// L:7712
typedef struct __si_amf_dt_HandoverSuccess SI_AMF_DT_PDU_HandoverSuccess;
// L:7712
typedef struct __si_amf_dt_UplinkRANEarlyStatusTransfer SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer;
// L:7712
typedef struct __si_amf_dt_DownlinkRANEarlyStatusTransfer SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer;
// L:7712
typedef struct __si_amf_dt_UplinkRANStatusTransfer SI_AMF_DT_PDU_UplinkRANStatusTransfer;
// L:7712
typedef struct __si_amf_dt_DownlinkRANStatusTransfer SI_AMF_DT_PDU_DownlinkRANStatusTransfer;
// L:7712
typedef struct __si_amf_dt_Paging SI_AMF_DT_PDU_Paging;
// L:7712
typedef struct __si_amf_dt_InitialUEMessage SI_AMF_DT_PDU_InitialUEMessage;
// L:7712
typedef struct __si_amf_dt_DownlinkNASTransport SI_AMF_DT_PDU_DownlinkNASTransport;
// L:7712
typedef struct __si_amf_dt_UplinkNASTransport SI_AMF_DT_PDU_UplinkNASTransport;
// L:7712
typedef struct __si_amf_dt_NASNonDeliveryIndication SI_AMF_DT_PDU_NASNonDeliveryIndication;
// L:7712
typedef struct __si_amf_dt_RerouteNASRequest SI_AMF_DT_PDU_RerouteNASRequest;
// L:7712
typedef struct __si_amf_dt_NGSetupRequest SI_AMF_DT_PDU_NGSetupRequest;
// L:7712
typedef struct __si_amf_dt_NGSetupResponse SI_AMF_DT_PDU_NGSetupResponse;
// L:7712
typedef struct __si_amf_dt_NGSetupFailure SI_AMF_DT_PDU_NGSetupFailure;
// L:7712
typedef struct __si_amf_dt_RANConfigurationUpdate SI_AMF_DT_PDU_RANConfigurationUpdate;
// L:7712
typedef struct __si_amf_dt_RANConfigurationUpdateAcknowledge SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge;
// L:7712
typedef struct __si_amf_dt_RANConfigurationUpdateFailure SI_AMF_DT_PDU_RANConfigurationUpdateFailure;
// L:7712
typedef struct __si_amf_dt_AMFConfigurationUpdate SI_AMF_DT_PDU_AMFConfigurationUpdate;
// L:7712
typedef struct __si_amf_dt_AMFConfigurationUpdateAcknowledge SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge;
// L:7712
typedef struct __si_amf_dt_AMFConfigurationUpdateFailure SI_AMF_DT_PDU_AMFConfigurationUpdateFailure;
// L:7712
typedef struct __si_amf_dt_AMFStatusIndication SI_AMF_DT_PDU_AMFStatusIndication;
// L:7712
typedef struct __si_amf_dt_NGReset SI_AMF_DT_PDU_NGReset;
// L:7712
typedef struct __si_amf_dt_NGResetAcknowledge SI_AMF_DT_PDU_NGResetAcknowledge;
// L:7712
typedef struct __si_amf_dt_ErrorIndication SI_AMF_DT_PDU_ErrorIndication;
// L:7712
typedef struct __si_amf_dt_OverloadStart SI_AMF_DT_PDU_OverloadStart;
// L:7712
typedef struct __si_amf_dt_OverloadStop SI_AMF_DT_PDU_OverloadStop;
// L:7712
typedef struct __si_amf_dt_UplinkRANConfigurationTransfer SI_AMF_DT_PDU_UplinkRANConfigurationTransfer;
// L:7712
typedef struct __si_amf_dt_DownlinkRANConfigurationTransfer SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer;
// L:7712
typedef struct __si_amf_dt_WriteReplaceWarningRequest SI_AMF_DT_PDU_WriteReplaceWarningRequest;
// L:7712
typedef struct __si_amf_dt_WriteReplaceWarningResponse SI_AMF_DT_PDU_WriteReplaceWarningResponse;
// L:7712
typedef struct __si_amf_dt_PWSCancelRequest SI_AMF_DT_PDU_PWSCancelRequest;
// L:7712
typedef struct __si_amf_dt_PWSCancelResponse SI_AMF_DT_PDU_PWSCancelResponse;
// L:7712
typedef struct __si_amf_dt_PWSRestartIndication SI_AMF_DT_PDU_PWSRestartIndication;
// L:7712
typedef struct __si_amf_dt_PWSFailureIndication SI_AMF_DT_PDU_PWSFailureIndication;
// L:7712
typedef struct __si_amf_dt_DownlinkUEAssociatedNRPPaTransport SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport;
// L:7712
typedef struct __si_amf_dt_UplinkUEAssociatedNRPPaTransport SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport;
// L:7712
typedef struct __si_amf_dt_DownlinkNonUEAssociatedNRPPaTransport SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport;
// L:7712
typedef struct __si_amf_dt_UplinkNonUEAssociatedNRPPaTransport SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport;
// L:7712
typedef struct __si_amf_dt_TraceStart SI_AMF_DT_PDU_TraceStart;
// L:7712
typedef struct __si_amf_dt_TraceFailureIndication SI_AMF_DT_PDU_TraceFailureIndication;
// L:7712
typedef struct __si_amf_dt_DeactivateTrace SI_AMF_DT_PDU_DeactivateTrace;
// L:7712
typedef struct __si_amf_dt_CellTrafficTrace SI_AMF_DT_PDU_CellTrafficTrace;
// L:7712
typedef struct __si_amf_dt_LocationReportingControl SI_AMF_DT_PDU_LocationReportingControl;
// L:7712
typedef struct __si_amf_dt_LocationReportingFailureIndication SI_AMF_DT_PDU_LocationReportingFailureIndication;
// L:7712
typedef struct __si_amf_dt_LocationReport SI_AMF_DT_PDU_LocationReport;
// L:7712
typedef struct __si_amf_dt_UETNLABindingReleaseRequest SI_AMF_DT_PDU_UETNLABindingReleaseRequest;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityInfoIndication SI_AMF_DT_PDU_UERadioCapabilityInfoIndication;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityCheckRequest SI_AMF_DT_PDU_UERadioCapabilityCheckRequest;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityCheckResponse SI_AMF_DT_PDU_UERadioCapabilityCheckResponse;
// L:7712
typedef struct __si_amf_dt_PrivateMessage SI_AMF_DT_PDU_PrivateMessage;
// L:7712
typedef struct __si_amf_dt_SecondaryRATDataUsageReport SI_AMF_DT_PDU_SecondaryRATDataUsageReport;
// L:7712
typedef struct __si_amf_dt_UplinkRIMInformationTransfer SI_AMF_DT_PDU_UplinkRIMInformationTransfer;
// L:7712
typedef struct __si_amf_dt_DownlinkRIMInformationTransfer SI_AMF_DT_PDU_DownlinkRIMInformationTransfer;
// L:7712
typedef struct __si_amf_dt_ConnectionEstablishmentIndication SI_AMF_DT_PDU_ConnectionEstablishmentIndication;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityIDMappingRequest SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest;
// L:7712
typedef struct __si_amf_dt_UERadioCapabilityIDMappingResponse SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse;
// L:7712
typedef struct __si_amf_dt_AMFCPRelocationIndication SI_AMF_DT_PDU_AMFCPRelocationIndication;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionSetupRequest SI_AMF_DT_PDU_BroadcastSessionSetupRequest;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionSetupResponse SI_AMF_DT_PDU_BroadcastSessionSetupResponse;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionSetupFailure SI_AMF_DT_PDU_BroadcastSessionSetupFailure;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionModificationRequest SI_AMF_DT_PDU_BroadcastSessionModificationRequest;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionModificationResponse SI_AMF_DT_PDU_BroadcastSessionModificationResponse;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionModificationFailure SI_AMF_DT_PDU_BroadcastSessionModificationFailure;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionReleaseRequest SI_AMF_DT_PDU_BroadcastSessionReleaseRequest;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionReleaseRequired SI_AMF_DT_PDU_BroadcastSessionReleaseRequired;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionReleaseResponse SI_AMF_DT_PDU_BroadcastSessionReleaseResponse;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionTransportRequest SI_AMF_DT_PDU_BroadcastSessionTransportRequest;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionTransportResponse SI_AMF_DT_PDU_BroadcastSessionTransportResponse;
// L:7712
typedef struct __si_amf_dt_BroadcastSessionTransportFailure SI_AMF_DT_PDU_BroadcastSessionTransportFailure;
// L:7712
typedef struct __si_amf_dt_DistributionSetupRequest SI_AMF_DT_PDU_DistributionSetupRequest;
// L:7712
typedef struct __si_amf_dt_DistributionSetupResponse SI_AMF_DT_PDU_DistributionSetupResponse;
// L:7712
typedef struct __si_amf_dt_DistributionSetupFailure SI_AMF_DT_PDU_DistributionSetupFailure;
// L:7712
typedef struct __si_amf_dt_DistributionReleaseRequest SI_AMF_DT_PDU_DistributionReleaseRequest;
// L:7712
typedef struct __si_amf_dt_DistributionReleaseResponse SI_AMF_DT_PDU_DistributionReleaseResponse;
// L:7712
typedef struct __si_amf_dt_MulticastSessionActivationRequest SI_AMF_DT_PDU_MulticastSessionActivationRequest;
// L:7712
typedef struct __si_amf_dt_MulticastSessionActivationResponse SI_AMF_DT_PDU_MulticastSessionActivationResponse;
// L:7712
typedef struct __si_amf_dt_MulticastSessionActivationFailure SI_AMF_DT_PDU_MulticastSessionActivationFailure;
// L:7712
typedef struct __si_amf_dt_MulticastSessionDeactivationRequest SI_AMF_DT_PDU_MulticastSessionDeactivationRequest;
// L:7712
typedef struct __si_amf_dt_MulticastSessionDeactivationResponse SI_AMF_DT_PDU_MulticastSessionDeactivationResponse;
// L:7712
typedef struct __si_amf_dt_MulticastSessionUpdateRequest SI_AMF_DT_PDU_MulticastSessionUpdateRequest;
// L:7712
typedef struct __si_amf_dt_MulticastSessionUpdateResponse SI_AMF_DT_PDU_MulticastSessionUpdateResponse;
// L:7712
typedef struct __si_amf_dt_MulticastSessionUpdateFailure SI_AMF_DT_PDU_MulticastSessionUpdateFailure;
// L:7712
typedef struct __si_amf_dt_MulticastGroupPaging SI_AMF_DT_PDU_MulticastGroupPaging;
// L:7712
typedef struct __si_amf_dt_TimingSynchronisationStatusRequest SI_AMF_DT_PDU_TimingSynchronisationStatusRequest;
// L:7712
typedef struct __si_amf_dt_TimingSynchronisationStatusResponse SI_AMF_DT_PDU_TimingSynchronisationStatusResponse;
// L:7712
typedef struct __si_amf_dt_TimingSynchronisationStatusFailure SI_AMF_DT_PDU_TimingSynchronisationStatusFailure;
// L:7712
typedef struct __si_amf_dt_TimingSynchronisationStatusReport SI_AMF_DT_PDU_TimingSynchronisationStatusReport;
// L:7712
typedef struct __si_amf_dt_MTCommunicationHandlingRequest SI_AMF_DT_PDU_MTCommunicationHandlingRequest;
// L:7712
typedef struct __si_amf_dt_MTCommunicationHandlingResponse SI_AMF_DT_PDU_MTCommunicationHandlingResponse;
// L:7712
typedef struct __si_amf_dt_MTCommunicationHandlingFailure SI_AMF_DT_PDU_MTCommunicationHandlingFailure;
// L:7712
typedef struct __si_amf_dt_RANPagingRequest SI_AMF_DT_PDU_RANPagingRequest;
// L:7712
typedef struct __si_amf_dt_MBSSessionSetupOrModRequestTransfer SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer;
// L:7712
typedef struct __si_amf_dt_MulticastSessionUpdateRequestTransfer SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceModifyRequestTransfer SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer;
// L:7712
typedef struct __si_amf_dt_PDUSessionResourceSetupRequestTransfer SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer;

//TODO: DataType -><- Got NULL  L:7651

// Criticality
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Criticality
{
	__si_amf__Criticality_reject_val,
	__si_amf__Criticality_ignore_val,
	__si_amf__Criticality_notify_val
} SI_AMF_DT_Criticality;


// L:2442
typedef enum __si_amf_dt_Criticality2
{
	Criticality_reject_val,
	Criticality_ignore_val,
	Criticality_notify_val
} SI_AMF_DT_Criticality2;


// L:2469
typedef struct __si_amf_dt_Criticality_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Criticality_EnumProxy;


// Presence
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Presence
{
	__si_amf__Presence_optional_val,
	__si_amf__Presence_conditional_val,
	__si_amf__Presence_mandatory_val
} SI_AMF_DT_Presence;


// L:2442
typedef enum __si_amf_dt_Presence2
{
	Presence_optional_val,
	Presence_conditional_val,
	Presence_mandatory_val
} SI_AMF_DT_Presence2;


// L:2469
typedef struct __si_amf_dt_Presence_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Presence_EnumProxy;


// PrivateIEID_local
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PrivateIEID_local
{
	unsigned long long int data;
} SI_AMF_DT_PrivateIEID_local;

// PrivateIE-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_PrivateIE_ID
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int local;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int global;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_PrivateIE_ID;


// ProcedureCode
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ProcedureCode
{
	unsigned long long int data;
} SI_AMF_DT_ProcedureCode;

// ProtocolExtensionID
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ProtocolExtensionID
{
	unsigned long long int data;
} SI_AMF_DT_ProtocolExtensionID;

// ProtocolIE-ID
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ProtocolIE_ID
{
	unsigned long long int data;
} SI_AMF_DT_ProtocolIE_ID;

// TriggeringMessage
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TriggeringMessage
{
	__si_amf__TriggeringMessage_initiating_message_val,
	__si_amf__TriggeringMessage_successful_outcome_val,
	__si_amf__TriggeringMessage_unsuccessful_outcome_val
} SI_AMF_DT_TriggeringMessage;


// L:2442
typedef enum __si_amf_dt_TriggeringMessage2
{
	TriggeringMessage_initiating_message_val,
	TriggeringMessage_successful_outcome_val,
	TriggeringMessage_unsuccessful_outcome_val
} SI_AMF_DT_TriggeringMessage2;


// L:2469
typedef struct __si_amf_dt_TriggeringMessage_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TriggeringMessage_EnumProxy;


// NULL
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NULL
{
	unsigned long long int data;
} SI_AMF_DT_NULL;

// AdditionalDLUPTNLInformationForHOList
//SEQUENCE OF AdditionalDLUPTNLInformationForHOItem, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOList
{
	SI_LinkedList * AdditionalDLUPTNLInformationForHOItem;
} SI_AMF_DT_AdditionalDLUPTNLInformationForHOList;


// TransportLayerAddress
// BITSTRING,BIT STRING(SIZE(1..160,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_TransportLayerAddress
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_TransportLayerAddress;

// GTP-TEID
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_GTP_TEID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_GTP_TEID;

// GTPTunnel
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GTPTunnel
{
	SI_AMF_DT_TransportLayerAddress * transportLayerAddress;

	SI_AMF_DT_GTP_TEID * gTP_TEID;

} SI_AMF_DT_GTPTunnel;


// UPTransportLayerInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UPTransportLayerInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GTPTunnel * gTPTunnel;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UPTransportLayerInformation;


// QosFlowListWithDataForwarding
//SEQUENCE OF QosFlowItemWithDataForwarding, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowListWithDataForwarding
{
	SI_LinkedList * QosFlowItemWithDataForwarding;
} SI_AMF_DT_QosFlowListWithDataForwarding;


// AdditionalDLUPTNLInformationForHOItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOItem
{
	SI_AMF_DT_UPTransportLayerInformation * additionalDL_NGU_UP_TNLInformation;

	SI_AMF_DT_QosFlowListWithDataForwarding * additionalQosFlowSetupResponseList;

	SI_AMF_DT_UPTransportLayerInformation * additionalDLForwardingUPTNLInformation;
	int isPresent_additionalDLForwardingUPTNLInformation;

} SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem;


// AdditionalQosFlowInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AdditionalQosFlowInformation
{
	__si_amf__AdditionalQosFlowInformation_more_likely_val
} SI_AMF_DT_AdditionalQosFlowInformation;


// L:2442
typedef enum __si_amf_dt_AdditionalQosFlowInformation2
{
	AdditionalQosFlowInformation_more_likely_val
} SI_AMF_DT_AdditionalQosFlowInformation2;


// L:2469
typedef struct __si_amf_dt_AdditionalQosFlowInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AdditionalQosFlowInformation_EnumProxy;


// AerialUEsubscriptionInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AerialUEsubscriptionInformation
{
	__si_amf__AerialUEsubscriptionInformation_allowed_val,
	__si_amf__AerialUEsubscriptionInformation_not_allowed_val
} SI_AMF_DT_AerialUEsubscriptionInformation;


// L:2442
typedef enum __si_amf_dt_AerialUEsubscriptionInformation2
{
	AerialUEsubscriptionInformation_allowed_val,
	AerialUEsubscriptionInformation_not_allowed_val
} SI_AMF_DT_AerialUEsubscriptionInformation2;


// L:2469
typedef struct __si_amf_dt_AerialUEsubscriptionInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AerialUEsubscriptionInformation_EnumProxy;


// BitRate
// INTEGER,INTEGER(0..4000000000000,...),MIN=0,MAX=4000000000000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_BitRate
{
	unsigned long long int data;
} SI_AMF_DT_BitRate;

// A2X-PC5-FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_A2X_PC5_FlowBitRates
{
	unsigned long long int a2X_GuaranteedFlowBitRate;

	unsigned long long int a2X_MaximumFlowBitRate;

} SI_AMF_DT_A2X_PC5_FlowBitRates;


// A2X-PC5-QoS-Flow-List
//SEQUENCE OF A2X-PC5-QoS-Flow-Item, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_List
{
	SI_LinkedList * A2X_PC5_QoS_Flow_Item;
} SI_AMF_DT_A2X_PC5_QoS_Flow_List;


// A2XPC5QoSFlowItem_a2X-PQI
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_A2XPC5QoSFlowItem_a2X_PQI
{
	unsigned long long int data;
} SI_AMF_DT_A2XPC5QoSFlowItem_a2X_PQI;

// A2XPC5QoSFlowItem_a2X-Range
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_A2XPC5QoSFlowItem_a2X_Range
{
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m50_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m80_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m180_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m200_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m350_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m400_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m500_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m700_val,
	__si_amf__A2XPC5QoSFlowItem_a2X_Range_m1000_val
} SI_AMF_DT_A2XPC5QoSFlowItem_a2X_Range;


// L:2442
typedef enum __si_amf_dt_A2XPC5QoSFlowItem_a2X_Range2
{
	A2XPC5QoSFlowItem_a2X_Range_m50_val,
	A2XPC5QoSFlowItem_a2X_Range_m80_val,
	A2XPC5QoSFlowItem_a2X_Range_m180_val,
	A2XPC5QoSFlowItem_a2X_Range_m200_val,
	A2XPC5QoSFlowItem_a2X_Range_m350_val,
	A2XPC5QoSFlowItem_a2X_Range_m400_val,
	A2XPC5QoSFlowItem_a2X_Range_m500_val,
	A2XPC5QoSFlowItem_a2X_Range_m700_val,
	A2XPC5QoSFlowItem_a2X_Range_m1000_val
} SI_AMF_DT_A2XPC5QoSFlowItem_a2X_Range2;


// L:2469
typedef struct __si_amf_dt_A2XPC5QoSFlowItem_a2X_Range_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_A2XPC5QoSFlowItem_a2X_Range_EnumProxy;


// A2X-PC5-QoS-Flow-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_Item
{
	unsigned long long int a2X_PQI;

	SI_AMF_DT_A2X_PC5_FlowBitRates * a2X_PC5_FlowBitRates;
	int isPresent_a2X_PC5_FlowBitRates;

	uint8_t selected_ea2X_Range;
	int extSelected_ea2X_Range;
	int isPresent_a2X_Range;

} SI_AMF_DT_A2X_PC5_QoS_Flow_Item;


// A2X-PC5-QoS-Parameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_A2X_PC5_QoS_Parameters
{
	SI_AMF_DT_A2X_PC5_QoS_Flow_List * a2X_PC5_QoS_Flow_List;

	unsigned long long int a2X_PC5_LinkAggregateBitRates;
	int isPresent_a2X_PC5_LinkAggregateBitRates;

} SI_AMF_DT_A2X_PC5_QoS_Parameters;


// AdditionalCancelledlocationReportingReferenceIDList
//SEQUENCE OF AdditionalCancelledlocationReportingReferenceIDItem, MIN=1, MAX= maxnoofAoIMinusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDList
{
	SI_LinkedList * AdditionalCancelledlocationReportingReferenceIDItem;
} SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList;


// LocationReportingReferenceID
// INTEGER,INTEGER(1..64,...),MIN=1,MAX=64  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_LocationReportingReferenceID
{
	unsigned long long int data;
} SI_AMF_DT_LocationReportingReferenceID;

// AdditionalCancelledlocationReportingReferenceIDItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDItem
{
	unsigned long long int locationReportingReferenceIDToBeCancelled;

} SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem;


// PriorityLevelARP
// INTEGER,INTEGER(1..15),MIN=1,MAX=15  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PriorityLevelARP
{
	unsigned long long int data;
} SI_AMF_DT_PriorityLevelARP;

// Pre-emptionCapability
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Pre_emptionCapability
{
	__si_amf__Pre_emptionCapability_shall_not_trigger_pre_emption_val,
	__si_amf__Pre_emptionCapability_may_trigger_pre_emption_val
} SI_AMF_DT_Pre_emptionCapability;


// L:2442
typedef enum __si_amf_dt_Pre_emptionCapability2
{
	Pre_emptionCapability_shall_not_trigger_pre_emption_val,
	Pre_emptionCapability_may_trigger_pre_emption_val
} SI_AMF_DT_Pre_emptionCapability2;


// L:2469
typedef struct __si_amf_dt_Pre_emptionCapability_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Pre_emptionCapability_EnumProxy;


// Pre-emptionVulnerability
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Pre_emptionVulnerability
{
	__si_amf__Pre_emptionVulnerability_not_pre_emptable_val,
	__si_amf__Pre_emptionVulnerability_pre_emptable_val
} SI_AMF_DT_Pre_emptionVulnerability;


// L:2442
typedef enum __si_amf_dt_Pre_emptionVulnerability2
{
	Pre_emptionVulnerability_not_pre_emptable_val,
	Pre_emptionVulnerability_pre_emptable_val
} SI_AMF_DT_Pre_emptionVulnerability2;


// L:2469
typedef struct __si_amf_dt_Pre_emptionVulnerability_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Pre_emptionVulnerability_EnumProxy;


// AllocationAndRetentionPriority
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AllocationAndRetentionPriority
{
	unsigned long long int priorityLevelARP;

	uint8_t selected_epre_emptionCapability;
	int extSelected_epre_emptionCapability;

	uint8_t selected_epre_emptionVulnerability;
	int extSelected_epre_emptionVulnerability;

} SI_AMF_DT_AllocationAndRetentionPriority;


// Allowed-CAG-List-per-PLMN
//SEQUENCE OF CAG-ID, MIN=1, MAX=maxnoofAllowedCAGsperPLMN  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_Allowed_CAG_List_per_PLMN
{
	SI_LinkedList * CAG_ID;
} SI_AMF_DT_Allowed_CAG_List_per_PLMN;


// AllowedNSSAI
//SEQUENCE OF AllowedNSSAI-Item, MIN=1, MAX=maxnoofAllowedS-NSSAIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AllowedNSSAI
{
	SI_LinkedList * AllowedNSSAI_Item;
} SI_AMF_DT_AllowedNSSAI;


// SST
// OCTETSTRING,OCTET STRING(SIZE(1))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_SST
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_SST;

// SD
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_SD
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_SD;

// S-NSSAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_S_NSSAI
{
	SI_AMF_DT_SST * sST;

	SI_AMF_DT_SD * sD;
	int isPresent_sD;

} SI_AMF_DT_S_NSSAI;


// AllowedNSSAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AllowedNSSAI_Item
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_AllowedNSSAI_Item;


// Allowed-PNI-NPN-List
//SEQUENCE OF Allowed-PNI-NPN-Item, MIN=1, MAX=maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_Allowed_PNI_NPN_List
{
	SI_LinkedList * Allowed_PNI_NPN_Item;
} SI_AMF_DT_Allowed_PNI_NPN_List;


// AllowedPNINPNItem_pNI-NPN-restricted
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AllowedPNINPNItem_pNI_NPN_restricted
{
	__si_amf__AllowedPNINPNItem_pNI_NPN_restricted_restricted_val,
	__si_amf__AllowedPNINPNItem_pNI_NPN_restricted_not_restricted_val
} SI_AMF_DT_AllowedPNINPNItem_pNI_NPN_restricted;


// L:2442
typedef enum __si_amf_dt_AllowedPNINPNItem_pNI_NPN_restricted2
{
	AllowedPNINPNItem_pNI_NPN_restricted_restricted_val,
	AllowedPNINPNItem_pNI_NPN_restricted_not_restricted_val
} SI_AMF_DT_AllowedPNINPNItem_pNI_NPN_restricted2;


// L:2469
typedef struct __si_amf_dt_AllowedPNINPNItem_pNI_NPN_restricted_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AllowedPNINPNItem_pNI_NPN_restricted_EnumProxy;


// PLMNIdentity
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PLMNIdentity
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PLMNIdentity;

// Allowed-PNI-NPN-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_Allowed_PNI_NPN_Item
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	uint8_t selected_epNI_NPN_restricted;
	int extSelected_epNI_NPN_restricted;

	SI_AMF_DT_Allowed_CAG_List_per_PLMN * allowed_CAG_List_per_PLMN;

} SI_AMF_DT_Allowed_PNI_NPN_Item;


// AllowedTACs
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofAllowedAreas  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AllowedTACs
{
	SI_LinkedList * TAC;
} SI_AMF_DT_AllowedTACs;


// AlternativeQoSParaSetIndex
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_AlternativeQoSParaSetIndex
{
	unsigned long long int data;
} SI_AMF_DT_AlternativeQoSParaSetIndex;

// AlternativeQoSParaSetNotifyIndex
// INTEGER,INTEGER(0..8,...),MIN=0,MAX=8  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_AlternativeQoSParaSetNotifyIndex
{
	unsigned long long int data;
} SI_AMF_DT_AlternativeQoSParaSetNotifyIndex;

// AlternativeQoSParaSetList
//SEQUENCE OF AlternativeQoSParaSetItem, MIN=1, MAX=maxnoofQosParaSets  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AlternativeQoSParaSetList
{
	SI_LinkedList * AlternativeQoSParaSetItem;
} SI_AMF_DT_AlternativeQoSParaSetList;


// PacketDelayBudget
// INTEGER,INTEGER(0..1023,...),MIN=0,MAX=1023  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PacketDelayBudget
{
	unsigned long long int data;
} SI_AMF_DT_PacketDelayBudget;

// PacketErrorRate_pERScalar
// INTEGER,INTEGER(0..9,...),MIN=0,MAX=9  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PacketErrorRate_pERScalar
{
	unsigned long long int data;
} SI_AMF_DT_PacketErrorRate_pERScalar;

// PacketErrorRate_pERExponent
// INTEGER,INTEGER(0..9,...),MIN=0,MAX=9  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PacketErrorRate_pERExponent
{
	unsigned long long int data;
} SI_AMF_DT_PacketErrorRate_pERExponent;

// PacketErrorRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PacketErrorRate
{
	unsigned long long int pERScalar;

	unsigned long long int pERExponent;

} SI_AMF_DT_PacketErrorRate;


// AlternativeQoSParaSetItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AlternativeQoSParaSetItem
{
	unsigned long long int alternativeQoSParaSetIndex;

	unsigned long long int guaranteedFlowBitRateDL;
	int isPresent_guaranteedFlowBitRateDL;

	unsigned long long int guaranteedFlowBitRateUL;
	int isPresent_guaranteedFlowBitRateUL;

	unsigned long long int packetDelayBudget;
	int isPresent_packetDelayBudget;

	SI_AMF_DT_PacketErrorRate * packetErrorRate;
	int isPresent_packetErrorRate;

} SI_AMF_DT_AlternativeQoSParaSetItem;


// AssistanceInformationQoE-Meas
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_AssistanceInformationQoE_Meas
{
	unsigned long long int data;
} SI_AMF_DT_AssistanceInformationQoE_Meas;

// AMFName
// PrintableString,PrintableString(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_AMFName
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_AMFName;

// AMFNameVisibleString
// PrintableString,VisibleString(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_AMFNameVisibleString
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_AMFNameVisibleString;

// AMFNameUTF8String
// PrintableString,UTF8String(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_AMFNameUTF8String
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_AMFNameUTF8String;

// GNBID_gNB-ID
// BITSTRING,BIT STRING(SIZE(22..32))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_GNBID_gNB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_GNBID_gNB_ID;

// GNB-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_GNB_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_GNBID_gNB_ID * gNB_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_GNB_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_GNB_ID;


// GlobalGNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalGNB_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_GNB_ID * gNB_ID;

} SI_AMF_DT_GlobalGNB_ID;


// NgENBID_macroNgENB-ID
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NgENBID_macroNgENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NgENBID_macroNgENB_ID;

// NgENBID_shortMacroNgENB-ID
// BITSTRING,BIT STRING(SIZE(18))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NgENBID_shortMacroNgENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NgENBID_shortMacroNgENB_ID;

// NgENBID_longMacroNgENB-ID
// BITSTRING,BIT STRING(SIZE(21))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NgENBID_longMacroNgENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NgENBID_longMacroNgENB_ID;

// NgENB-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NgENB_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_NgENBID_macroNgENB_ID * macroNgENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_NgENBID_shortMacroNgENB_ID * shortMacroNgENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_NgENBID_longMacroNgENB_ID * longMacroNgENB_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NgENB_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NgENB_ID;


// GlobalNgENB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalNgENB_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_NgENB_ID * ngENB_ID;

} SI_AMF_DT_GlobalNgENB_ID;


// N3IWFID_n3IWF-ID
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_N3IWFID_n3IWF_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_N3IWFID_n3IWF_ID;

// N3IWF-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_N3IWF_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_N3IWFID_n3IWF_ID * n3IWF_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_N3IWF_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_N3IWF_ID;


// GlobalN3IWF-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalN3IWF_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_N3IWF_ID * n3IWF_ID;

} SI_AMF_DT_GlobalN3IWF_ID;


// GlobalRANNodeID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_GlobalRANNodeID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalGNB_ID * globalGNB_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalNgENB_ID * globalNgENB_ID;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalN3IWF_ID * globalN3IWF_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_GlobalRANNodeID;


// TAC
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TAC
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TAC;

// TAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAI
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_TAC * tAC;

} SI_AMF_DT_TAI;


// AMFPagingTarget
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_AMFPagingTarget
{
	union 
	{
		// ParserName = CHOICE - NonEP false;
		SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TAI * tAI;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_AMFPagingTarget;


// AMFPointer
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_AMFPointer
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_AMFPointer;

// AMFRegionID
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_AMFRegionID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_AMFRegionID;

// AMFSetID
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_AMFSetID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_AMFSetID;

// AMF-TNLAssociationSetupList
//SEQUENCE OF AMF-TNLAssociationSetupItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AMF_TNLAssociationSetupList
{
	SI_LinkedList * AMF_TNLAssociationSetupItem;
} SI_AMF_DT_AMF_TNLAssociationSetupList;


// CPTransportLayerInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_CPTransportLayerInformation
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_TransportLayerAddress * endpointIPAddress;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_CPTransportLayerInformation;


// AMF-TNLAssociationSetupItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AMF_TNLAssociationSetupItem
{
	SI_AMF_DT_CPTransportLayerInformation * aMF_TNLAssociationAddress;

} SI_AMF_DT_AMF_TNLAssociationSetupItem;


// AMF-TNLAssociationToAddList
//SEQUENCE OF AMF-TNLAssociationToAddItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AMF_TNLAssociationToAddList
{
	SI_LinkedList * AMF_TNLAssociationToAddItem;
} SI_AMF_DT_AMF_TNLAssociationToAddList;


// TNLAssociationUsage
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TNLAssociationUsage
{
	__si_amf__TNLAssociationUsage_ue_val,
	__si_amf__TNLAssociationUsage_non_ue_val,
	__si_amf__TNLAssociationUsage_both_val
} SI_AMF_DT_TNLAssociationUsage;


// L:2442
typedef enum __si_amf_dt_TNLAssociationUsage2
{
	TNLAssociationUsage_ue_val,
	TNLAssociationUsage_non_ue_val,
	TNLAssociationUsage_both_val
} SI_AMF_DT_TNLAssociationUsage2;


// L:2469
typedef struct __si_amf_dt_TNLAssociationUsage_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TNLAssociationUsage_EnumProxy;


// TNLAddressWeightFactor
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TNLAddressWeightFactor
{
	unsigned long long int data;
} SI_AMF_DT_TNLAddressWeightFactor;

// AMF-TNLAssociationToAddItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AMF_TNLAssociationToAddItem
{
	SI_AMF_DT_CPTransportLayerInformation * aMF_TNLAssociationAddress;

	uint8_t selected_etNLAssociationUsage;
	int extSelected_etNLAssociationUsage;
	int isPresent_tNLAssociationUsage;

	unsigned long long int tNLAddressWeightFactor;

} SI_AMF_DT_AMF_TNLAssociationToAddItem;


// AMF-TNLAssociationToRemoveList
//SEQUENCE OF AMF-TNLAssociationToRemoveItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveList
{
	SI_LinkedList * AMF_TNLAssociationToRemoveItem;
} SI_AMF_DT_AMF_TNLAssociationToRemoveList;


// AMF-TNLAssociationToRemoveItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveItem
{
	SI_AMF_DT_CPTransportLayerInformation * aMF_TNLAssociationAddress;

} SI_AMF_DT_AMF_TNLAssociationToRemoveItem;


// AMF-TNLAssociationToUpdateList
//SEQUENCE OF AMF-TNLAssociationToUpdateItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateList
{
	SI_LinkedList * AMF_TNLAssociationToUpdateItem;
} SI_AMF_DT_AMF_TNLAssociationToUpdateList;


// AMF-TNLAssociationToUpdateItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateItem
{
	SI_AMF_DT_CPTransportLayerInformation * aMF_TNLAssociationAddress;

	uint8_t selected_etNLAssociationUsage;
	int extSelected_etNLAssociationUsage;
	int isPresent_tNLAssociationUsage;

	unsigned long long int tNLAddressWeightFactor;
	int isPresent_tNLAddressWeightFactor;

} SI_AMF_DT_AMF_TNLAssociationToUpdateItem;


// AMF-UE-NGAP-ID
// INTEGER,INTEGER(0..1099511627775),MIN=0,MAX=1099511627775  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_AMF_UE_NGAP_ID
{
	unsigned long long int data;
} SI_AMF_DT_AMF_UE_NGAP_ID;

// AreaOfInterestTAIList
//SEQUENCE OF AreaOfInterestTAIItem, MIN=1, MAX=maxnoofTAIinAoI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AreaOfInterestTAIList
{
	SI_LinkedList * AreaOfInterestTAIItem;
} SI_AMF_DT_AreaOfInterestTAIList;


// AreaOfInterestCellList
//SEQUENCE OF AreaOfInterestCellItem, MIN=1, MAX=maxnoofCellinAoI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AreaOfInterestCellList
{
	SI_LinkedList * AreaOfInterestCellItem;
} SI_AMF_DT_AreaOfInterestCellList;


// AreaOfInterestRANNodeList
//SEQUENCE OF AreaOfInterestRANNodeItem, MIN=1, MAX=maxnoofRANNodeinAoI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AreaOfInterestRANNodeList
{
	SI_LinkedList * AreaOfInterestRANNodeItem;
} SI_AMF_DT_AreaOfInterestRANNodeList;


// AreaOfInterest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaOfInterest
{
	SI_AMF_DT_AreaOfInterestTAIList * areaOfInterestTAIList;
	int isPresent_areaOfInterestTAIList;

	SI_AMF_DT_AreaOfInterestCellList * areaOfInterestCellList;
	int isPresent_areaOfInterestCellList;

	SI_AMF_DT_AreaOfInterestRANNodeList * areaOfInterestRANNodeList;
	int isPresent_areaOfInterestRANNodeList;

} SI_AMF_DT_AreaOfInterest;


// NRCellIdentity
// BITSTRING,BIT STRING(SIZE(36))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NRCellIdentity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NRCellIdentity;

// NR-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NR_CGI
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_NRCellIdentity * nRCellIdentity;

} SI_AMF_DT_NR_CGI;


// EUTRACellIdentity
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_EUTRACellIdentity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_EUTRACellIdentity;

// EUTRA-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRA_CGI
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_EUTRACellIdentity * eUTRACellIdentity;

} SI_AMF_DT_EUTRA_CGI;


// NGRAN-CGI
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NGRAN_CGI
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_NR_CGI * nR_CGI;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NGRAN_CGI;


// AreaOfInterestCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaOfInterestCellItem
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

} SI_AMF_DT_AreaOfInterestCellItem;


// AreaOfInterestList
//SEQUENCE OF AreaOfInterestItem, MIN=1, MAX=maxnoofAoI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AreaOfInterestList
{
	SI_LinkedList * AreaOfInterestItem;
} SI_AMF_DT_AreaOfInterestList;


// AreaOfInterestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaOfInterestItem
{
	SI_AMF_DT_AreaOfInterest * areaOfInterest;

	unsigned long long int locationReportingReferenceID;

} SI_AMF_DT_AreaOfInterestItem;


// AreaOfInterestRANNodeItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaOfInterestRANNodeItem
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

} SI_AMF_DT_AreaOfInterestRANNodeItem;


// AreaOfInterestTAIItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaOfInterestTAIItem
{
	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_AreaOfInterestTAIItem;


// RecommendedCellList
//SEQUENCE OF RecommendedCellItem, MIN=1, MAX=maxnoofRecommendedCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_RecommendedCellList
{
	SI_LinkedList * RecommendedCellItem;
} SI_AMF_DT_RecommendedCellList;


// RecommendedCellsForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RecommendedCellsForPaging
{
	SI_AMF_DT_RecommendedCellList * recommendedCellList;

} SI_AMF_DT_RecommendedCellsForPaging;


// AssistanceDataForRecommendedCells
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AssistanceDataForRecommendedCells
{
	SI_AMF_DT_RecommendedCellsForPaging * recommendedCellsForPaging;

} SI_AMF_DT_AssistanceDataForRecommendedCells;


// PagingAttemptCount
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PagingAttemptCount
{
	unsigned long long int data;
} SI_AMF_DT_PagingAttemptCount;

// IntendedNumberOfPagingAttempts
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_IntendedNumberOfPagingAttempts
{
	unsigned long long int data;
} SI_AMF_DT_IntendedNumberOfPagingAttempts;

// NextPagingAreaScope
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NextPagingAreaScope
{
	__si_amf__NextPagingAreaScope_same_val,
	__si_amf__NextPagingAreaScope_changed_val
} SI_AMF_DT_NextPagingAreaScope;


// L:2442
typedef enum __si_amf_dt_NextPagingAreaScope2
{
	NextPagingAreaScope_same_val,
	NextPagingAreaScope_changed_val
} SI_AMF_DT_NextPagingAreaScope2;


// L:2469
typedef struct __si_amf_dt_NextPagingAreaScope_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NextPagingAreaScope_EnumProxy;


// PagingAttemptInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PagingAttemptInformation
{
	unsigned long long int pagingAttemptCount;

	unsigned long long int intendedNumberOfPagingAttempts;

	uint8_t selected_enextPagingAreaScope;
	int extSelected_enextPagingAreaScope;
	int isPresent_nextPagingAreaScope;

} SI_AMF_DT_PagingAttemptInformation;


// AssistanceDataForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AssistanceDataForPaging
{
	SI_AMF_DT_AssistanceDataForRecommendedCells * assistanceDataForRecommendedCells;
	int isPresent_assistanceDataForRecommendedCells;

	SI_AMF_DT_PagingAttemptInformation * pagingAttemptInformation;
	int isPresent_pagingAttemptInformation;

} SI_AMF_DT_AssistanceDataForPaging;


// AssociatedMBSQosFlowSetupRequestList
//SEQUENCE OF AssociatedMBSQosFlowSetupRequestItem, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestList
{
	SI_LinkedList * AssociatedMBSQosFlowSetupRequestItem;
} SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList;


// QosFlowIdentifier
// INTEGER,INTEGER(0..63,...),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_QosFlowIdentifier
{
	unsigned long long int data;
} SI_AMF_DT_QosFlowIdentifier;

// AssociatedMBSQosFlowSetupRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestItem
{
	unsigned long long int mBS_QosFlowIdentifier;

	unsigned long long int associatedUnicastQosFlowIdentifier;

} SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem;


// AssociatedMBSQosFlowSetuporModifyRequestList
//SEQUENCE OF AssociatedMBSQosFlowSetuporModifyRequestItem, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestList
{
	SI_LinkedList * AssociatedMBSQosFlowSetuporModifyRequestItem;
} SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList;


// AssociatedMBSQosFlowSetuporModifyRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestItem
{
	unsigned long long int mBS_QosFlowIdentifier;

	unsigned long long int associatedUnicastQosFlowIdentifier;

} SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem;


// AssociatedQosFlowList
//SEQUENCE OF AssociatedQosFlowItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AssociatedQosFlowList
{
	SI_LinkedList * AssociatedQosFlowItem;
} SI_AMF_DT_AssociatedQosFlowList;


// AssociatedQosFlowItem_qosFlowMappingIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AssociatedQosFlowItem_qosFlowMappingIndication
{
	__si_amf__AssociatedQosFlowItem_qosFlowMappingIndication_ul_val,
	__si_amf__AssociatedQosFlowItem_qosFlowMappingIndication_dl_val
} SI_AMF_DT_AssociatedQosFlowItem_qosFlowMappingIndication;


// L:2442
typedef enum __si_amf_dt_AssociatedQosFlowItem_qosFlowMappingIndication2
{
	AssociatedQosFlowItem_qosFlowMappingIndication_ul_val,
	AssociatedQosFlowItem_qosFlowMappingIndication_dl_val
} SI_AMF_DT_AssociatedQosFlowItem_qosFlowMappingIndication2;


// L:2469
typedef struct __si_amf_dt_AssociatedQosFlowItem_qosFlowMappingIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AssociatedQosFlowItem_qosFlowMappingIndication_EnumProxy;


// AssociatedQosFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AssociatedQosFlowItem
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_eqosFlowMappingIndication;
	int extSelected_eqosFlowMappingIndication;
	int isPresent_qosFlowMappingIndication;

} SI_AMF_DT_AssociatedQosFlowItem;


// AssociatedSessionID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_AssociatedSessionID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_AssociatedSessionID;

// AUN3DeviceAccessInfo_aUN3DeviceAccess
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AUN3DeviceAccessInfo_aUN3DeviceAccess
{
	__si_amf__AUN3DeviceAccessInfo_aUN3DeviceAccess_true_val
} SI_AMF_DT_AUN3DeviceAccessInfo_aUN3DeviceAccess;


// L:2442
typedef enum __si_amf_dt_AUN3DeviceAccessInfo_aUN3DeviceAccess2
{
	AUN3DeviceAccessInfo_aUN3DeviceAccess_true_val
} SI_AMF_DT_AUN3DeviceAccessInfo_aUN3DeviceAccess2;


// L:2469
typedef struct __si_amf_dt_AUN3DeviceAccessInfo_aUN3DeviceAccess_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AUN3DeviceAccessInfo_aUN3DeviceAccess_EnumProxy;


// AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation
{
	__si_amf__AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_true_val,
	__si_amf__AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_false_val
} SI_AMF_DT_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation;


// L:2442
typedef enum __si_amf_dt_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation2
{
	AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_true_val,
	AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_false_val
} SI_AMF_DT_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation2;


// L:2469
typedef struct __si_amf_dt_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation_EnumProxy;


// AUN3DeviceAccessInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AUN3DeviceAccessInfo
{
	uint8_t selected_eaUN3DeviceAccess;
	int extSelected_eaUN3DeviceAccess;

	uint8_t selected_eexistingNGConnectionwithSameLocation;
	int extSelected_eexistingNGConnectionwithSameLocation;

} SI_AMF_DT_AUN3DeviceAccessInfo;


// AuthenticatedIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AuthenticatedIndication
{
	__si_amf__AuthenticatedIndication_true_val
} SI_AMF_DT_AuthenticatedIndication;


// L:2442
typedef enum __si_amf_dt_AuthenticatedIndication2
{
	AuthenticatedIndication_true_val
} SI_AMF_DT_AuthenticatedIndication2;


// L:2469
typedef struct __si_amf_dt_AuthenticatedIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AuthenticatedIndication_EnumProxy;


// AveragingWindow
// INTEGER,INTEGER(0..4095,...),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_AveragingWindow
{
	unsigned long long int data;
} SI_AMF_DT_AveragingWindow;

// CellIdListforMDT-NR
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIdListforMDT_NR
{
	SI_LinkedList * NR_CGI;
} SI_AMF_DT_CellIdListforMDT_NR;


// CellBasedMDT-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellBasedMDT_NR
{
	SI_AMF_DT_CellIdListforMDT_NR * cellIdListforMDT;

} SI_AMF_DT_CellBasedMDT_NR;


// TAListforMDT
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAListforMDT
{
	SI_LinkedList * TAC;
} SI_AMF_DT_TAListforMDT;


// TABasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TABasedMDT
{
	SI_AMF_DT_TAListforMDT * tAListforMDT;

} SI_AMF_DT_TABasedMDT;


// TAIListforMDT
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListforMDT
{
	SI_LinkedList * TAI;
} SI_AMF_DT_TAIListforMDT;


// TAIBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIBasedMDT
{
	SI_AMF_DT_TAIListforMDT * tAIListforMDT;

} SI_AMF_DT_TAIBasedMDT;


// AreaScopeOfMDT-NR
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_AreaScopeOfMDT_NR
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_CellBasedMDT_NR * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TABasedMDT * tABased;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int pLMNWide;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TAIBasedMDT * tAIBased;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_AreaScopeOfMDT_NR;


// CellIdListforMDT-EUTRA
//SEQUENCE OF EUTRA-CGI, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIdListforMDT_EUTRA
{
	SI_LinkedList * EUTRA_CGI;
} SI_AMF_DT_CellIdListforMDT_EUTRA;


// CellBasedMDT-EUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellBasedMDT_EUTRA
{
	SI_AMF_DT_CellIdListforMDT_EUTRA * cellIdListforMDT;

} SI_AMF_DT_CellBasedMDT_EUTRA;


// AreaScopeOfMDT-EUTRA
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_AreaScopeOfMDT_EUTRA
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_CellBasedMDT_EUTRA * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TABasedMDT * tABased;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int pLMNWide;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TAIBasedMDT * tAIBased;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_AreaScopeOfMDT_EUTRA;


// AreaScopeOfNeighCellsList
//SEQUENCE OF AreaScopeOfNeighCellsItem, MIN=1, MAX=maxnoofFreqforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AreaScopeOfNeighCellsList
{
	SI_LinkedList * AreaScopeOfNeighCellsItem;
} SI_AMF_DT_AreaScopeOfNeighCellsList;


// NRARFCN
// INTEGER,INTEGER(0.. maxNRARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NRARFCN
{
	unsigned long long int data;
} SI_AMF_DT_NRARFCN;

// NRFrequencyBand-List
//SEQUENCE OF NRFrequencyBandItem, MIN=1, MAX=maxnoofNRCellBands  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NRFrequencyBand_List
{
	SI_LinkedList * NRFrequencyBandItem;
} SI_AMF_DT_NRFrequencyBand_List;


// NRFrequencyInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NRFrequencyInfo
{
	unsigned long long int nrARFCN;

	SI_AMF_DT_NRFrequencyBand_List * frequencyBand_List;

} SI_AMF_DT_NRFrequencyInfo;


// PCIListForMDT
//SEQUENCE OF NR-PCI, MIN=1, MAX= maxnoofNeighPCIforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PCIListForMDT
{
	SI_LinkedList * NR_PCI;
} SI_AMF_DT_PCIListForMDT;


// AreaScopeOfNeighCellsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AreaScopeOfNeighCellsItem
{
	SI_AMF_DT_NRFrequencyInfo * nrFrequencyInfo;

	SI_AMF_DT_PCIListForMDT * pciListForMDT;
	int isPresent_pciListForMDT;

} SI_AMF_DT_AreaScopeOfNeighCellsItem;


// CellIdListforQMC
//SEQUENCE OF NGRAN-CGI, MIN=1, MAX=maxnoofCellIDforQMC  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIdListforQMC
{
	SI_LinkedList * NGRAN_CGI;
} SI_AMF_DT_CellIdListforQMC;


// CellBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellBasedQMC
{
	SI_AMF_DT_CellIdListforQMC * cellIdListforQMC;

} SI_AMF_DT_CellBasedQMC;


// TAListforQMC
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAListforQMC
{
	SI_LinkedList * TAC;
} SI_AMF_DT_TAListforQMC;


// TABasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TABasedQMC
{
	SI_AMF_DT_TAListforQMC * tAListforQMC;

} SI_AMF_DT_TABasedQMC;


// TAIListforQMC
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListforQMC
{
	SI_LinkedList * TAI;
} SI_AMF_DT_TAIListforQMC;


// TAIBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIBasedQMC
{
	SI_AMF_DT_TAIListforQMC * tAIListforQMC;

} SI_AMF_DT_TAIBasedQMC;


// PLMNListforQMC
//SEQUENCE OF PLMNIdentity, MIN=1, MAX=maxnoofPLMNforQMC  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PLMNListforQMC
{
	SI_LinkedList * PLMNIdentity;
} SI_AMF_DT_PLMNListforQMC;


// PLMNAreaBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PLMNAreaBasedQMC
{
	SI_AMF_DT_PLMNListforQMC * plmnListforQMC;

} SI_AMF_DT_PLMNAreaBasedQMC;


// AreaScopeOfQMC
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_AreaScopeOfQMC
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_CellBasedQMC * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TABasedQMC * tABased;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TAIBasedQMC * tAIBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_PLMNAreaBasedQMC * pLMNAreaBased;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_AreaScopeOfQMC;


// AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList
{
	__si_amf__AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList_true_val
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList;


// L:2442
typedef enum __si_amf_dt_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList2
{
	AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList_true_val
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList2;


// L:2469
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList_EnumProxy;


// AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup
{
	__si_amf__AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup_true_val
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup;


// L:2442
typedef enum __si_amf_dt_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup2
{
	AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup_true_val
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup2;


// L:2469
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup_EnumProxy;


// AvailableRANVisibleQoEMetrics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics
{
	uint8_t selected_eapplicationLayerBufferLevelList;
	int extSelected_eapplicationLayerBufferLevelList;
	int isPresent_applicationLayerBufferLevelList;

	uint8_t selected_eplayoutDelayForMediaStartup;
	int extSelected_eplayoutDelayForMediaStartup;
	int isPresent_playoutDelayForMediaStartup;

} SI_AMF_DT_AvailableRANVisibleQoEMetrics;


// BeamMeasurementsReportQuantity_rSRP
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_rSRP
{
	__si_amf__BeamMeasurementsReportQuantity_rSRP_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRP;


// L:2442
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_rSRP2
{
	BeamMeasurementsReportQuantity_rSRP_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRP2;


// L:2469
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity_rSRP_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRP_EnumProxy;


// BeamMeasurementsReportQuantity_rSRQ
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_rSRQ
{
	__si_amf__BeamMeasurementsReportQuantity_rSRQ_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRQ;


// L:2442
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_rSRQ2
{
	BeamMeasurementsReportQuantity_rSRQ_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRQ2;


// L:2469
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity_rSRQ_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_BeamMeasurementsReportQuantity_rSRQ_EnumProxy;


// BeamMeasurementsReportQuantity_sINR
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_sINR
{
	__si_amf__BeamMeasurementsReportQuantity_sINR_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_sINR;


// L:2442
typedef enum __si_amf_dt_BeamMeasurementsReportQuantity_sINR2
{
	BeamMeasurementsReportQuantity_sINR_true_val
} SI_AMF_DT_BeamMeasurementsReportQuantity_sINR2;


// L:2469
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity_sINR_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_BeamMeasurementsReportQuantity_sINR_EnumProxy;


// BeamMeasurementsReportQuantity
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity
{
	uint8_t selected_erSRP;
	int extSelected_erSRP;

	uint8_t selected_erSRQ;
	int extSelected_erSRQ;

	uint8_t selected_esINR;
	int extSelected_esINR;

} SI_AMF_DT_BeamMeasurementsReportQuantity;


// MaxNrofRS-IndexesToReport
// INTEGER,INTEGER(1..64,...),MIN=1,MAX=64  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MaxNrofRS_IndexesToReport
{
	unsigned long long int data;
} SI_AMF_DT_MaxNrofRS_IndexesToReport;

// BeamMeasurementsReportConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BeamMeasurementsReportConfiguration
{
	SI_AMF_DT_BeamMeasurementsReportQuantity * beamMeasurementsReportQuantity;
	int isPresent_beamMeasurementsReportQuantity;

	unsigned long long int maxNrofRS_IndexesToReport;
	int isPresent_maxNrofRS_IndexesToReport;

} SI_AMF_DT_BeamMeasurementsReportConfiguration;


// CellIDCancelledEUTRA
//SEQUENCE OF CellIDCancelledEUTRA-Item, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIDCancelledEUTRA
{
	SI_LinkedList * CellIDCancelledEUTRA_Item;
} SI_AMF_DT_CellIDCancelledEUTRA;


// TAICancelledEUTRA
//SEQUENCE OF TAICancelledEUTRA-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAICancelledEUTRA
{
	SI_LinkedList * TAICancelledEUTRA_Item;
} SI_AMF_DT_TAICancelledEUTRA;


// EmergencyAreaIDCancelledEUTRA
//SEQUENCE OF EmergencyAreaIDCancelledEUTRA-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA
{
	SI_LinkedList * EmergencyAreaIDCancelledEUTRA_Item;
} SI_AMF_DT_EmergencyAreaIDCancelledEUTRA;


// CellIDCancelledNR
//SEQUENCE OF CellIDCancelledNR-Item, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIDCancelledNR
{
	SI_LinkedList * CellIDCancelledNR_Item;
} SI_AMF_DT_CellIDCancelledNR;


// TAICancelledNR
//SEQUENCE OF TAICancelledNR-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAICancelledNR
{
	SI_LinkedList * TAICancelledNR_Item;
} SI_AMF_DT_TAICancelledNR;


// EmergencyAreaIDCancelledNR
//SEQUENCE OF EmergencyAreaIDCancelledNR-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR
{
	SI_LinkedList * EmergencyAreaIDCancelledNR_Item;
} SI_AMF_DT_EmergencyAreaIDCancelledNR;


// BroadcastCancelledAreaList
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_BroadcastCancelledAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_CellIDCancelledEUTRA * cellIDCancelledEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_TAICancelledEUTRA * tAICancelledEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EmergencyAreaIDCancelledEUTRA * emergencyAreaIDCancelledEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_CellIDCancelledNR * cellIDCancelledNR;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_TAICancelledNR * tAICancelledNR;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EmergencyAreaIDCancelledNR * emergencyAreaIDCancelledNR;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_BroadcastCancelledAreaList;


// CellIDBroadcastEUTRA
//SEQUENCE OF CellIDBroadcastEUTRA-Item, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIDBroadcastEUTRA
{
	SI_LinkedList * CellIDBroadcastEUTRA_Item;
} SI_AMF_DT_CellIDBroadcastEUTRA;


// TAIBroadcastEUTRA
//SEQUENCE OF TAIBroadcastEUTRA-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIBroadcastEUTRA
{
	SI_LinkedList * TAIBroadcastEUTRA_Item;
} SI_AMF_DT_TAIBroadcastEUTRA;


// EmergencyAreaIDBroadcastEUTRA
//SEQUENCE OF EmergencyAreaIDBroadcastEUTRA-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA
{
	SI_LinkedList * EmergencyAreaIDBroadcastEUTRA_Item;
} SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA;


// CellIDBroadcastNR
//SEQUENCE OF CellIDBroadcastNR-Item, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellIDBroadcastNR
{
	SI_LinkedList * CellIDBroadcastNR_Item;
} SI_AMF_DT_CellIDBroadcastNR;


// TAIBroadcastNR
//SEQUENCE OF TAIBroadcastNR-Item, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIBroadcastNR
{
	SI_LinkedList * TAIBroadcastNR_Item;
} SI_AMF_DT_TAIBroadcastNR;


// EmergencyAreaIDBroadcastNR
//SEQUENCE OF EmergencyAreaIDBroadcastNR-Item, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR
{
	SI_LinkedList * EmergencyAreaIDBroadcastNR_Item;
} SI_AMF_DT_EmergencyAreaIDBroadcastNR;


// BroadcastCompletedAreaList
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_BroadcastCompletedAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_CellIDBroadcastEUTRA * cellIDBroadcastEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_TAIBroadcastEUTRA * tAIBroadcastEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA * emergencyAreaIDBroadcastEUTRA;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_CellIDBroadcastNR * cellIDBroadcastNR;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_TAIBroadcastNR * tAIBroadcastNR;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EmergencyAreaIDBroadcastNR * emergencyAreaIDBroadcastNR;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_BroadcastCompletedAreaList;


// BroadcastPLMNList
//SEQUENCE OF BroadcastPLMNItem, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_BroadcastPLMNList
{
	SI_LinkedList * BroadcastPLMNItem;
} SI_AMF_DT_BroadcastPLMNList;


// SliceSupportList
//SEQUENCE OF SliceSupportItem, MIN=1, MAX=maxnoofSliceItems  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SliceSupportList
{
	SI_LinkedList * SliceSupportItem;
} SI_AMF_DT_SliceSupportList;


// BroadcastPLMNItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BroadcastPLMNItem
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_SliceSupportList * tAISliceSupportList;

} SI_AMF_DT_BroadcastPLMNItem;


// TMGI
// OCTETSTRING,OCTET STRING(SIZE(6))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TMGI
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TMGI;

// NID
// BITSTRING,BIT STRING(SIZE(44))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NID;

// MBS-SessionID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_SessionID
{
	SI_AMF_DT_TMGI * tMGI;

	SI_AMF_DT_NID * nID;
	int isPresent_nID;

} SI_AMF_DT_MBS_SessionID;


// CauseRadioNetwork
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CauseRadioNetwork
{
	__si_amf__CauseRadioNetwork_unspecified_val,
	__si_amf__CauseRadioNetwork_txnrelocoverall_expiry_val,
	__si_amf__CauseRadioNetwork_successful_handover_val,
	__si_amf__CauseRadioNetwork_release_due_to_ngran_generated_reason_val,
	__si_amf__CauseRadioNetwork_release_due_to_5gc_generated_reason_val,
	__si_amf__CauseRadioNetwork_handover_cancelled_val,
	__si_amf__CauseRadioNetwork_partial_handover_val,
	__si_amf__CauseRadioNetwork_ho_failure_in_target_5GC_ngran_node_or_target_system_val,
	__si_amf__CauseRadioNetwork_ho_target_not_allowed_val,
	__si_amf__CauseRadioNetwork_tngrelocoverall_expiry_val,
	__si_amf__CauseRadioNetwork_tngrelocprep_expiry_val,
	__si_amf__CauseRadioNetwork_cell_not_available_val,
	__si_amf__CauseRadioNetwork_unknown_targetID_val,
	__si_amf__CauseRadioNetwork_no_radio_resources_available_in_target_cell_val,
	__si_amf__CauseRadioNetwork_unknown_local_UE_NGAP_ID_val,
	__si_amf__CauseRadioNetwork_inconsistent_remote_UE_NGAP_ID_val,
	__si_amf__CauseRadioNetwork_handover_desirable_for_radio_reason_val,
	__si_amf__CauseRadioNetwork_time_critical_handover_val,
	__si_amf__CauseRadioNetwork_resource_optimisation_handover_val,
	__si_amf__CauseRadioNetwork_reduce_load_in_serving_cell_val,
	__si_amf__CauseRadioNetwork_user_inactivity_val,
	__si_amf__CauseRadioNetwork_radio_connection_with_ue_lost_val,
	__si_amf__CauseRadioNetwork_radio_resources_not_available_val,
	__si_amf__CauseRadioNetwork_invalid_qos_combination_val,
	__si_amf__CauseRadioNetwork_failure_in_radio_interface_procedure_val,
	__si_amf__CauseRadioNetwork_interaction_with_other_procedure_val,
	__si_amf__CauseRadioNetwork_unknown_PDU_session_ID_val,
	__si_amf__CauseRadioNetwork_unkown_qos_flow_ID_val,
	__si_amf__CauseRadioNetwork_multiple_PDU_session_ID_instances_val,
	__si_amf__CauseRadioNetwork_multiple_qos_flow_ID_instances_val,
	__si_amf__CauseRadioNetwork_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	__si_amf__CauseRadioNetwork_ng_intra_system_handover_triggered_val,
	__si_amf__CauseRadioNetwork_ng_inter_system_handover_triggered_val,
	__si_amf__CauseRadioNetwork_xn_handover_triggered_val,
	__si_amf__CauseRadioNetwork_not_supported_5QI_value_val,
	__si_amf__CauseRadioNetwork_ue_context_transfer_val,
	__si_amf__CauseRadioNetwork_ims_voice_eps_fallback_or_rat_fallback_triggered_val,
	__si_amf__CauseRadioNetwork_up_integrity_protection_not_possible_val,
	__si_amf__CauseRadioNetwork_up_confidentiality_protection_not_possible_val,
	__si_amf__CauseRadioNetwork_slice_not_supported_val,
	__si_amf__CauseRadioNetwork_ue_in_rrc_inactive_state_not_reachable_val,
	__si_amf__CauseRadioNetwork_redirection_val,
	__si_amf__CauseRadioNetwork_resources_not_available_for_the_slice_val,
	__si_amf__CauseRadioNetwork_ue_max_integrity_protected_data_rate_reason_val,
	__si_amf__CauseRadioNetwork_release_due_to_cn_detected_mobility_val,
	__si_amf__CauseRadioNetwork_n26_interface_not_available_val_ext,
	__si_amf__CauseRadioNetwork_release_due_to_pre_emption_val_ext,
	__si_amf__CauseRadioNetwork_multiple_location_reporting_reference_ID_instances_val_ext,
	__si_amf__CauseRadioNetwork_rsn_not_available_for_the_up_val_ext,
	__si_amf__CauseRadioNetwork_npn_access_denied_val_ext,
	__si_amf__CauseRadioNetwork_cag_only_access_denied_val_ext,
	__si_amf__CauseRadioNetwork_insufficient_ue_capabilities_val_ext,
	__si_amf__CauseRadioNetwork_redcap_ue_not_supported_val_ext,
	__si_amf__CauseRadioNetwork_unknown_MBS_Session_ID_val_ext,
	__si_amf__CauseRadioNetwork_indicated_MBS_session_area_information_not_served_by_the_gNB_val_ext,
	__si_amf__CauseRadioNetwork_inconsistent_slice_info_for_the_session_val_ext,
	__si_amf__CauseRadioNetwork_misaligned_association_for_multicast_unicast_val_ext,
	__si_amf__CauseRadioNetwork_eredcap_ue_not_supported_val_ext,
	__si_amf__CauseRadioNetwork_two_rx_xr_ue_not_supported_val_ext
} SI_AMF_DT_CauseRadioNetwork;


// L:2442
typedef enum __si_amf_dt_CauseRadioNetwork2
{
	CauseRadioNetwork_unspecified_val,
	CauseRadioNetwork_txnrelocoverall_expiry_val,
	CauseRadioNetwork_successful_handover_val,
	CauseRadioNetwork_release_due_to_ngran_generated_reason_val,
	CauseRadioNetwork_release_due_to_5gc_generated_reason_val,
	CauseRadioNetwork_handover_cancelled_val,
	CauseRadioNetwork_partial_handover_val,
	CauseRadioNetwork_ho_failure_in_target_5GC_ngran_node_or_target_system_val,
	CauseRadioNetwork_ho_target_not_allowed_val,
	CauseRadioNetwork_tngrelocoverall_expiry_val,
	CauseRadioNetwork_tngrelocprep_expiry_val,
	CauseRadioNetwork_cell_not_available_val,
	CauseRadioNetwork_unknown_targetID_val,
	CauseRadioNetwork_no_radio_resources_available_in_target_cell_val,
	CauseRadioNetwork_unknown_local_UE_NGAP_ID_val,
	CauseRadioNetwork_inconsistent_remote_UE_NGAP_ID_val,
	CauseRadioNetwork_handover_desirable_for_radio_reason_val,
	CauseRadioNetwork_time_critical_handover_val,
	CauseRadioNetwork_resource_optimisation_handover_val,
	CauseRadioNetwork_reduce_load_in_serving_cell_val,
	CauseRadioNetwork_user_inactivity_val,
	CauseRadioNetwork_radio_connection_with_ue_lost_val,
	CauseRadioNetwork_radio_resources_not_available_val,
	CauseRadioNetwork_invalid_qos_combination_val,
	CauseRadioNetwork_failure_in_radio_interface_procedure_val,
	CauseRadioNetwork_interaction_with_other_procedure_val,
	CauseRadioNetwork_unknown_PDU_session_ID_val,
	CauseRadioNetwork_unkown_qos_flow_ID_val,
	CauseRadioNetwork_multiple_PDU_session_ID_instances_val,
	CauseRadioNetwork_multiple_qos_flow_ID_instances_val,
	CauseRadioNetwork_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	CauseRadioNetwork_ng_intra_system_handover_triggered_val,
	CauseRadioNetwork_ng_inter_system_handover_triggered_val,
	CauseRadioNetwork_xn_handover_triggered_val,
	CauseRadioNetwork_not_supported_5QI_value_val,
	CauseRadioNetwork_ue_context_transfer_val,
	CauseRadioNetwork_ims_voice_eps_fallback_or_rat_fallback_triggered_val,
	CauseRadioNetwork_up_integrity_protection_not_possible_val,
	CauseRadioNetwork_up_confidentiality_protection_not_possible_val,
	CauseRadioNetwork_slice_not_supported_val,
	CauseRadioNetwork_ue_in_rrc_inactive_state_not_reachable_val,
	CauseRadioNetwork_redirection_val,
	CauseRadioNetwork_resources_not_available_for_the_slice_val,
	CauseRadioNetwork_ue_max_integrity_protected_data_rate_reason_val,
	CauseRadioNetwork_release_due_to_cn_detected_mobility_val,
	CauseRadioNetwork_n26_interface_not_available_val_ext,
	CauseRadioNetwork_release_due_to_pre_emption_val_ext,
	CauseRadioNetwork_multiple_location_reporting_reference_ID_instances_val_ext,
	CauseRadioNetwork_rsn_not_available_for_the_up_val_ext,
	CauseRadioNetwork_npn_access_denied_val_ext,
	CauseRadioNetwork_cag_only_access_denied_val_ext,
	CauseRadioNetwork_insufficient_ue_capabilities_val_ext,
	CauseRadioNetwork_redcap_ue_not_supported_val_ext,
	CauseRadioNetwork_unknown_MBS_Session_ID_val_ext,
	CauseRadioNetwork_indicated_MBS_session_area_information_not_served_by_the_gNB_val_ext,
	CauseRadioNetwork_inconsistent_slice_info_for_the_session_val_ext,
	CauseRadioNetwork_misaligned_association_for_multicast_unicast_val_ext,
	CauseRadioNetwork_eredcap_ue_not_supported_val_ext,
	CauseRadioNetwork_two_rx_xr_ue_not_supported_val_ext
} SI_AMF_DT_CauseRadioNetwork2;


// L:2469
typedef struct __si_amf_dt_CauseRadioNetwork_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CauseRadioNetwork_EnumProxy;


// CauseTransport
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CauseTransport
{
	__si_amf__CauseTransport_transport_resource_unavailable_val,
	__si_amf__CauseTransport_unspecified_val
} SI_AMF_DT_CauseTransport;


// L:2442
typedef enum __si_amf_dt_CauseTransport2
{
	CauseTransport_transport_resource_unavailable_val,
	CauseTransport_unspecified_val
} SI_AMF_DT_CauseTransport2;


// L:2469
typedef struct __si_amf_dt_CauseTransport_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CauseTransport_EnumProxy;


// CauseNas
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CauseNas
{
	__si_amf__CauseNas_normal_release_val,
	__si_amf__CauseNas_authentication_failure_val,
	__si_amf__CauseNas_deregister_val,
	__si_amf__CauseNas_unspecified_val,
	__si_amf__CauseNas_uE_not_in_PLMN_serving_area_val_ext,
	__si_amf__CauseNas_mobile_IAB_not_authorized_val_ext,
	__si_amf__CauseNas_iAB_not_authorized_val_ext
} SI_AMF_DT_CauseNas;


// L:2442
typedef enum __si_amf_dt_CauseNas2
{
	CauseNas_normal_release_val,
	CauseNas_authentication_failure_val,
	CauseNas_deregister_val,
	CauseNas_unspecified_val,
	CauseNas_uE_not_in_PLMN_serving_area_val_ext,
	CauseNas_mobile_IAB_not_authorized_val_ext,
	CauseNas_iAB_not_authorized_val_ext
} SI_AMF_DT_CauseNas2;


// L:2469
typedef struct __si_amf_dt_CauseNas_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CauseNas_EnumProxy;


// CauseProtocol
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CauseProtocol
{
	__si_amf__CauseProtocol_transfer_syntax_error_val,
	__si_amf__CauseProtocol_abstract_syntax_error_reject_val,
	__si_amf__CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	__si_amf__CauseProtocol_message_not_compatible_with_receiver_state_val,
	__si_amf__CauseProtocol_semantic_error_val,
	__si_amf__CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	__si_amf__CauseProtocol_unspecified_val
} SI_AMF_DT_CauseProtocol;


// L:2442
typedef enum __si_amf_dt_CauseProtocol2
{
	CauseProtocol_transfer_syntax_error_val,
	CauseProtocol_abstract_syntax_error_reject_val,
	CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	CauseProtocol_message_not_compatible_with_receiver_state_val,
	CauseProtocol_semantic_error_val,
	CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	CauseProtocol_unspecified_val
} SI_AMF_DT_CauseProtocol2;


// L:2469
typedef struct __si_amf_dt_CauseProtocol_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CauseProtocol_EnumProxy;


// CauseMisc
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CauseMisc
{
	__si_amf__CauseMisc_control_processing_overload_val,
	__si_amf__CauseMisc_not_enough_user_plane_processing_resources_val,
	__si_amf__CauseMisc_hardware_failure_val,
	__si_amf__CauseMisc_om_intervention_val,
	__si_amf__CauseMisc_unknown_PLMN_or_SNPN_val,
	__si_amf__CauseMisc_unspecified_val
} SI_AMF_DT_CauseMisc;


// L:2442
typedef enum __si_amf_dt_CauseMisc2
{
	CauseMisc_control_processing_overload_val,
	CauseMisc_not_enough_user_plane_processing_resources_val,
	CauseMisc_hardware_failure_val,
	CauseMisc_om_intervention_val,
	CauseMisc_unknown_PLMN_or_SNPN_val,
	CauseMisc_unspecified_val
} SI_AMF_DT_CauseMisc2;


// L:2469
typedef struct __si_amf_dt_CauseMisc_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CauseMisc_EnumProxy;


// Cause
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_Cause
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t radioNetwork;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t transport;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t nas;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t protocol;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t misc;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_Cause_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_Cause;


// CriticalityDiagnostics-IE-List
//SEQUENCE OF CriticalityDiagnostics-IE-Item, MIN=1, MAX=maxnoofErrors  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_List
{
	SI_LinkedList * CriticalityDiagnostics_IE_Item;
} SI_AMF_DT_CriticalityDiagnostics_IE_List;


// CriticalityDiagnostics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CriticalityDiagnostics
{
	unsigned long long int procedureCode;
	int isPresent_procedureCode;

	uint8_t selected_etriggeringMessage;
	int extSelected_etriggeringMessage;
	int isPresent_triggeringMessage;

	uint8_t selected_eprocedureCriticality;
	int extSelected_eprocedureCriticality;
	int isPresent_procedureCriticality;

	SI_AMF_DT_CriticalityDiagnostics_IE_List * iEsCriticalityDiagnostics;
	int isPresent_iEsCriticalityDiagnostics;

} SI_AMF_DT_CriticalityDiagnostics;


// BroadcastTransportFailureTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BroadcastTransportFailureTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_BroadcastTransportFailureTransfer;


// MBS-SessionTNLInfoNGRANList
//SEQUENCE OF MBS-SessionTNLInfoNGRANItem, MIN=1, MAX=maxnoofMBSServiceAreaInformation  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANList
{
	SI_LinkedList * MBS_SessionTNLInfoNGRANItem;
} SI_AMF_DT_MBS_SessionTNLInfoNGRANList;


// MBS-SessionTNLInfoNGRAN
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRAN
{
	union 
	{
		// ParserName = CHOICE - NonEP false;
		SI_AMF_DT_UPTransportLayerInformation * locationindependent;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_MBS_SessionTNLInfoNGRANList * locationdependent;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MBS_SessionTNLInfoNGRAN;


// BroadcastTransportRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BroadcastTransportRequestTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	SI_AMF_DT_MBS_SessionTNLInfoNGRAN * mBS_SessionTNLInfoNGRAN;

} SI_AMF_DT_BroadcastTransportRequestTransfer;


// BroadcastTransportResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BroadcastTransportResponseTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

} SI_AMF_DT_BroadcastTransportResponseTransfer;


// BluetoothMeasurementConfiguration_bt-rssi
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_BluetoothMeasurementConfiguration_bt_rssi
{
	__si_amf__BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_AMF_DT_BluetoothMeasurementConfiguration_bt_rssi;


// L:2442
typedef enum __si_amf_dt_BluetoothMeasurementConfiguration_bt_rssi2
{
	BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_AMF_DT_BluetoothMeasurementConfiguration_bt_rssi2;


// L:2469
typedef struct __si_amf_dt_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy;


// BluetoothMeasConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_BluetoothMeasConfig
{
	__si_amf__BluetoothMeasConfig_setup_val
} SI_AMF_DT_BluetoothMeasConfig;


// L:2442
typedef enum __si_amf_dt_BluetoothMeasConfig2
{
	BluetoothMeasConfig_setup_val
} SI_AMF_DT_BluetoothMeasConfig2;


// L:2469
typedef struct __si_amf_dt_BluetoothMeasConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_BluetoothMeasConfig_EnumProxy;


// BluetoothMeasConfigNameList
//SEQUENCE OF BluetoothMeasConfigNameItem, MIN=1, MAX=maxnoofBluetoothName  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_BluetoothMeasConfigNameList
{
	SI_LinkedList * BluetoothMeasConfigNameItem;
} SI_AMF_DT_BluetoothMeasConfigNameList;


// BluetoothMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BluetoothMeasurementConfiguration
{
	uint8_t selected_ebluetoothMeasConfig;
	int extSelected_ebluetoothMeasConfig;

	SI_AMF_DT_BluetoothMeasConfigNameList * bluetoothMeasConfigNameList;
	int isPresent_bluetoothMeasConfigNameList;

	uint8_t selected_ebt_rssi;
	int extSelected_ebt_rssi;
	int isPresent_bt_rssi;

} SI_AMF_DT_BluetoothMeasurementConfiguration;


// BluetoothName
// OCTETSTRING,OCTET STRING(SIZE(1..248))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_BluetoothName
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_BluetoothName;

// BluetoothMeasConfigNameItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BluetoothMeasConfigNameItem
{
	SI_AMF_DT_BluetoothName * bluetoothName;

} SI_AMF_DT_BluetoothMeasConfigNameItem;


// BurstArrivalTime
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_BurstArrivalTime
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_BurstArrivalTime;

// BurstArrivalTimeWindow_burstArrivalTimeWindowStart
// INTEGER,INTEGER(0..640000,...),MIN=0,MAX=640000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_BurstArrivalTimeWindow_burstArrivalTimeWindowStart
{
	unsigned long long int data;
} SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowStart;

// BurstArrivalTimeWindow_burstArrivalTimeWindowEnd
// INTEGER,INTEGER(0..640000,...),MIN=0,MAX=640000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd
{
	unsigned long long int data;
} SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd;

// BurstArrivalTimeWindow
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_BurstArrivalTimeWindow
{
	unsigned long long int burstArrivalTimeWindowStart;

	unsigned long long int burstArrivalTimeWindowEnd;

} SI_AMF_DT_BurstArrivalTimeWindow;


// CAG-ID
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_CAG_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_CAG_ID;

// CandidateRelayUEInformationList
//SEQUENCE OF CandidateRelayUEInformationItem, MIN=1, MAX= maxnoofCandidateRelayUEs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CandidateRelayUEInformationList
{
	SI_LinkedList * CandidateRelayUEInformationItem;
} SI_AMF_DT_CandidateRelayUEInformationList;


// CandidateRelayUE-ID
// BITSTRING,BIT STRING(SIZE(24))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_CandidateRelayUE_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_CandidateRelayUE_ID;

// CandidateRelayUEInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CandidateRelayUEInformationItem
{
	SI_AMF_DT_CandidateRelayUE_ID * candidateRelayUE_Id;

} SI_AMF_DT_CandidateRelayUEInformationItem;


// CancelAllWarningMessages
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CancelAllWarningMessages
{
	__si_amf__CancelAllWarningMessages_true_val
} SI_AMF_DT_CancelAllWarningMessages;


// L:2442
typedef enum __si_amf_dt_CancelAllWarningMessages2
{
	CancelAllWarningMessages_true_val
} SI_AMF_DT_CancelAllWarningMessages2;


// L:2469
typedef struct __si_amf_dt_CancelAllWarningMessages_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CancelAllWarningMessages_EnumProxy;


// CancelledCellsInEAI-EUTRA
//SEQUENCE OF CancelledCellsInEAI-EUTRA-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA
{
	SI_LinkedList * CancelledCellsInEAI_EUTRA_Item;
} SI_AMF_DT_CancelledCellsInEAI_EUTRA;


// NumberOfBroadcasts
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NumberOfBroadcasts
{
	unsigned long long int data;
} SI_AMF_DT_NumberOfBroadcasts;

// CancelledCellsInEAI-EUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item;


// CancelledCellsInEAI-NR
//SEQUENCE OF CancelledCellsInEAI-NR-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CancelledCellsInEAI_NR
{
	SI_LinkedList * CancelledCellsInEAI_NR_Item;
} SI_AMF_DT_CancelledCellsInEAI_NR;


// CancelledCellsInEAI-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CancelledCellsInEAI_NR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CancelledCellsInEAI_NR_Item;


// CancelledCellsInTAI-EUTRA
//SEQUENCE OF CancelledCellsInTAI-EUTRA-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA
{
	SI_LinkedList * CancelledCellsInTAI_EUTRA_Item;
} SI_AMF_DT_CancelledCellsInTAI_EUTRA;


// CancelledCellsInTAI-EUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item;


// CancelledCellsInTAI-NR
//SEQUENCE OF CancelledCellsInTAI-NR-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CancelledCellsInTAI_NR
{
	SI_LinkedList * CancelledCellsInTAI_NR_Item;
} SI_AMF_DT_CancelledCellsInTAI_NR;


// CancelledCellsInTAI-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CancelledCellsInTAI_NR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CancelledCellsInTAI_NR_Item;


// CandidateCellList
//SEQUENCE OF CandidateCellItem, MIN=1, MAX= maxnoofCandidateCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CandidateCellList
{
	SI_LinkedList * CandidateCellItem;
} SI_AMF_DT_CandidateCellList;


// CandidateCellID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CandidateCellID
{
	SI_AMF_DT_NR_CGI * candidateCellID;

} SI_AMF_DT_CandidateCellID;


// CandidatePCI_candidatePCI
// INTEGER,INTEGER(0..1007,...),MIN=0,MAX=1007  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_CandidatePCI_candidatePCI
{
	unsigned long long int data;
} SI_AMF_DT_CandidatePCI_candidatePCI;

// CandidatePCI_candidateNRARFCN
// INTEGER,INTEGER(0..maxNRARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_CandidatePCI_candidateNRARFCN
{
	unsigned long long int data;
} SI_AMF_DT_CandidatePCI_candidateNRARFCN;

// CandidatePCI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CandidatePCI
{
	unsigned long long int candidatePCI;

	unsigned long long int candidateNRARFCN;

} SI_AMF_DT_CandidatePCI;


// CandidateCell
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_CandidateCell
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_CandidateCellID * candidateCGI;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_CandidatePCI * candidatePCI;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_CandidateCell_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_CandidateCell;


// CandidateCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CandidateCellItem
{
	SI_AMF_DT_CandidateCell * candidateCell;

} SI_AMF_DT_CandidateCellItem;


// CellCAGList
//SEQUENCE OF CAG-ID, MIN=1, MAX=maxnoofCAGSperCell  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellCAGList
{
	SI_LinkedList * CAG_ID;
} SI_AMF_DT_CellCAGList;


// Cell-CAGInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_Cell_CAGInformation
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

	SI_AMF_DT_CellCAGList * cellCAGList;

} SI_AMF_DT_Cell_CAGInformation;


// CellIDBroadcastEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellIDBroadcastEUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

} SI_AMF_DT_CellIDBroadcastEUTRA_Item;


// CellIDBroadcastNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellIDBroadcastNR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

} SI_AMF_DT_CellIDBroadcastNR_Item;


// CellIDCancelledEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellIDCancelledEUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CellIDCancelledEUTRA_Item;


// CellIDCancelledNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellIDCancelledNR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

	unsigned long long int numberOfBroadcasts;

} SI_AMF_DT_CellIDCancelledNR_Item;


// EUTRA-CGIList
//SEQUENCE OF EUTRA-CGI, MIN=1, MAX=maxnoofCellsinngeNB  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EUTRA_CGIList
{
	SI_LinkedList * EUTRA_CGI;
} SI_AMF_DT_EUTRA_CGIList;


// NR-CGIList
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsingNB  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NR_CGIList
{
	SI_LinkedList * NR_CGI;
} SI_AMF_DT_NR_CGIList;


// CellIDListForRestart
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_CellIDListForRestart
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EUTRA_CGIList * eUTRA_CGIListforRestart;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_NR_CGIList * nR_CGIListforRestart;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_CellIDListForRestart;


// CellSize
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CellSize
{
	__si_amf__CellSize_verysmall_val,
	__si_amf__CellSize_small_val,
	__si_amf__CellSize_medium_val,
	__si_amf__CellSize_large_val
} SI_AMF_DT_CellSize;


// L:2442
typedef enum __si_amf_dt_CellSize2
{
	CellSize_verysmall_val,
	CellSize_small_val,
	CellSize_medium_val,
	CellSize_large_val
} SI_AMF_DT_CellSize2;


// L:2469
typedef struct __si_amf_dt_CellSize_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CellSize_EnumProxy;


// CellType
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CellType
{
	uint8_t selected_ecellSize;
	int extSelected_ecellSize;

} SI_AMF_DT_CellType;


// CEmodeBSupport-Indicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CEmodeBSupport_Indicator
{
	__si_amf__CEmodeBSupport_Indicator_supported_val
} SI_AMF_DT_CEmodeBSupport_Indicator;


// L:2442
typedef enum __si_amf_dt_CEmodeBSupport_Indicator2
{
	CEmodeBSupport_Indicator_supported_val
} SI_AMF_DT_CEmodeBSupport_Indicator2;


// L:2469
typedef struct __si_amf_dt_CEmodeBSupport_Indicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CEmodeBSupport_Indicator_EnumProxy;


// CEmodeBrestricted
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CEmodeBrestricted
{
	__si_amf__CEmodeBrestricted_restricted_val,
	__si_amf__CEmodeBrestricted_not_restricted_val
} SI_AMF_DT_CEmodeBrestricted;


// L:2442
typedef enum __si_amf_dt_CEmodeBrestricted2
{
	CEmodeBrestricted_restricted_val,
	CEmodeBrestricted_not_restricted_val
} SI_AMF_DT_CEmodeBrestricted2;


// L:2469
typedef struct __si_amf_dt_CEmodeBrestricted_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CEmodeBrestricted_EnumProxy;


// ClockAccuracy_clockAccuracyValue
// INTEGER,INTEGER(1..40000000,...),MIN=1,MAX=40000000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ClockAccuracy_clockAccuracyValue
{
	unsigned long long int data;
} SI_AMF_DT_ClockAccuracy_clockAccuracyValue;

// ClockAccuracy_clockAccuracyIndex
// INTEGER,INTEGER(32..47,...),MIN=32,MAX=47  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ClockAccuracy_clockAccuracyIndex
{
	unsigned long long int data;
} SI_AMF_DT_ClockAccuracy_clockAccuracyIndex;

// ClockAccuracy
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ClockAccuracy
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int clockAccuracyValue;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int clockAccuracyIndex;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ClockAccuracy_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ClockAccuracy;


// ClockQualityAcceptanceCriteria_synchronisationState
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_synchronisationState
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState;

// ClockQualityAcceptanceCriteria_traceabletoUTC
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoUTC
{
	__si_amf__ClockQualityAcceptanceCriteria_traceabletoUTC_true_val
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoUTC;


// L:2442
typedef enum __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoUTC2
{
	ClockQualityAcceptanceCriteria_traceabletoUTC_true_val
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoUTC2;


// L:2469
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoUTC_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoUTC_EnumProxy;


// ClockQualityAcceptanceCriteria_traceabletoGNSS
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS
{
	__si_amf__ClockQualityAcceptanceCriteria_traceabletoGNSS_true_val
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS;


// L:2442
typedef enum __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS2
{
	ClockQualityAcceptanceCriteria_traceabletoGNSS_true_val
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS2;


// L:2469
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS_EnumProxy;


// ClockQualityAcceptanceCriteria_clockFrequencyStability
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_clockFrequencyStability
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability;

// ClockQualityAcceptanceCriteria_clockAccuracy
// INTEGER,INTEGER(1..40000000,...),MIN=1,MAX=40000000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_clockAccuracy
{
	unsigned long long int data;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_clockAccuracy;

// ClockQualityAcceptanceCriteria_parentTImeSource
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_parentTImeSource
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource;

// ClockQualityAcceptanceCriteria
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria
{
	SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState * synchronisationState;
	int isPresent_synchronisationState;

	uint8_t selected_etraceabletoUTC;
	int extSelected_etraceabletoUTC;
	int isPresent_traceabletoUTC;

	uint8_t selected_etraceabletoGNSS;
	int extSelected_etraceabletoGNSS;
	int isPresent_traceabletoGNSS;

	SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * clockFrequencyStability;
	int isPresent_clockFrequencyStability;

	unsigned long long int clockAccuracy;
	int isPresent_clockAccuracy;

	SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource * parentTImeSource;
	int isPresent_parentTImeSource;

} SI_AMF_DT_ClockQualityAcceptanceCriteria;


// ClockQualityAcceptanceIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ClockQualityAcceptanceIndication
{
	SI_AMF_DT_ClockQualityAcceptanceCriteria * clockQualityAcceptanceCriteria;

} SI_AMF_DT_ClockQualityAcceptanceIndication;


// ClockQualityDetailLevel
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ClockQualityDetailLevel
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int clockQualityMetrics;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_ClockQualityAcceptanceIndication * clockQualityAcceptanceIndication;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs * choice_extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ClockQualityDetailLevel;


// ClockQualityReportingControlInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ClockQualityReportingControlInfo
{
	SI_AMF_DT_ClockQualityDetailLevel * clockQualityDetailLevel;

} SI_AMF_DT_ClockQualityReportingControlInfo;


// ExpectedActivityPeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ExpectedActivityPeriod
{
	unsigned long long int data;
} SI_AMF_DT_ExpectedActivityPeriod;

// ExpectedIdlePeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ExpectedIdlePeriod
{
	unsigned long long int data;
} SI_AMF_DT_ExpectedIdlePeriod;

// SourceOfUEActivityBehaviourInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SourceOfUEActivityBehaviourInformation
{
	__si_amf__SourceOfUEActivityBehaviourInformation_subscription_information_val,
	__si_amf__SourceOfUEActivityBehaviourInformation_statistics_val
} SI_AMF_DT_SourceOfUEActivityBehaviourInformation;


// L:2442
typedef enum __si_amf_dt_SourceOfUEActivityBehaviourInformation2
{
	SourceOfUEActivityBehaviourInformation_subscription_information_val,
	SourceOfUEActivityBehaviourInformation_statistics_val
} SI_AMF_DT_SourceOfUEActivityBehaviourInformation2;


// L:2469
typedef struct __si_amf_dt_SourceOfUEActivityBehaviourInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SourceOfUEActivityBehaviourInformation_EnumProxy;


// ExpectedUEActivityBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ExpectedUEActivityBehaviour
{
	unsigned long long int expectedActivityPeriod;
	int isPresent_expectedActivityPeriod;

	unsigned long long int expectedIdlePeriod;
	int isPresent_expectedIdlePeriod;

	uint8_t selected_esourceOfUEActivityBehaviourInformation;
	int extSelected_esourceOfUEActivityBehaviourInformation;
	int isPresent_sourceOfUEActivityBehaviourInformation;

} SI_AMF_DT_ExpectedUEActivityBehaviour;


// ExpectedHOInterval
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ExpectedHOInterval
{
	__si_amf__ExpectedHOInterval_sec15_val,
	__si_amf__ExpectedHOInterval_sec30_val,
	__si_amf__ExpectedHOInterval_sec60_val,
	__si_amf__ExpectedHOInterval_sec90_val,
	__si_amf__ExpectedHOInterval_sec120_val,
	__si_amf__ExpectedHOInterval_sec180_val,
	__si_amf__ExpectedHOInterval_long_time_val
} SI_AMF_DT_ExpectedHOInterval;


// L:2442
typedef enum __si_amf_dt_ExpectedHOInterval2
{
	ExpectedHOInterval_sec15_val,
	ExpectedHOInterval_sec30_val,
	ExpectedHOInterval_sec60_val,
	ExpectedHOInterval_sec90_val,
	ExpectedHOInterval_sec120_val,
	ExpectedHOInterval_sec180_val,
	ExpectedHOInterval_long_time_val
} SI_AMF_DT_ExpectedHOInterval2;


// L:2469
typedef struct __si_amf_dt_ExpectedHOInterval_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ExpectedHOInterval_EnumProxy;


// ExpectedUEMobility
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ExpectedUEMobility
{
	__si_amf__ExpectedUEMobility_stationary_val,
	__si_amf__ExpectedUEMobility_mobile_val
} SI_AMF_DT_ExpectedUEMobility;


// L:2442
typedef enum __si_amf_dt_ExpectedUEMobility2
{
	ExpectedUEMobility_stationary_val,
	ExpectedUEMobility_mobile_val
} SI_AMF_DT_ExpectedUEMobility2;


// L:2469
typedef struct __si_amf_dt_ExpectedUEMobility_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ExpectedUEMobility_EnumProxy;


// ExpectedUEMovingTrajectory
//SEQUENCE OF ExpectedUEMovingTrajectoryItem, MIN=1, MAX=maxnoofCellsUEMovingTrajectory  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ExpectedUEMovingTrajectory
{
	SI_LinkedList * ExpectedUEMovingTrajectoryItem;
} SI_AMF_DT_ExpectedUEMovingTrajectory;


// ExpectedUEBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ExpectedUEBehaviour
{
	SI_AMF_DT_ExpectedUEActivityBehaviour * expectedUEActivityBehaviour;
	int isPresent_expectedUEActivityBehaviour;

	uint8_t selected_eexpectedHOInterval;
	int extSelected_eexpectedHOInterval;
	int isPresent_expectedHOInterval;

	uint8_t selected_eexpectedUEMobility;
	int extSelected_eexpectedUEMobility;
	int isPresent_expectedUEMobility;

	SI_AMF_DT_ExpectedUEMovingTrajectory * expectedUEMovingTrajectory;
	int isPresent_expectedUEMovingTrajectory;

} SI_AMF_DT_ExpectedUEBehaviour;


// CNAssistedRANTuning
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CNAssistedRANTuning
{
	SI_AMF_DT_ExpectedUEBehaviour * expectedUEBehaviour;
	int isPresent_expectedUEBehaviour;

} SI_AMF_DT_CNAssistedRANTuning;


// CNsubgroupID
// INTEGER,INTEGER(0..7,...),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_CNsubgroupID
{
	unsigned long long int data;
} SI_AMF_DT_CNsubgroupID;

// CNTypeRestrictionsForEquivalent
//SEQUENCE OF CNTypeRestrictionsForEquivalentItem, MIN=1, MAX=maxnoofEPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalent
{
	SI_LinkedList * CNTypeRestrictionsForEquivalentItem;
} SI_AMF_DT_CNTypeRestrictionsForEquivalent;


// CNTypeRestrictionsForEquivalentItem_cn-Type
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CNTypeRestrictionsForEquivalentItem_cn_Type
{
	__si_amf__CNTypeRestrictionsForEquivalentItem_cn_Type_epc_forbidden_val,
	__si_amf__CNTypeRestrictionsForEquivalentItem_cn_Type_fiveGC_forbidden_val
} SI_AMF_DT_CNTypeRestrictionsForEquivalentItem_cn_Type;


// L:2442
typedef enum __si_amf_dt_CNTypeRestrictionsForEquivalentItem_cn_Type2
{
	CNTypeRestrictionsForEquivalentItem_cn_Type_epc_forbidden_val,
	CNTypeRestrictionsForEquivalentItem_cn_Type_fiveGC_forbidden_val
} SI_AMF_DT_CNTypeRestrictionsForEquivalentItem_cn_Type2;


// L:2469
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalentItem_cn_Type_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CNTypeRestrictionsForEquivalentItem_cn_Type_EnumProxy;


// CNTypeRestrictionsForEquivalentItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalentItem
{
	SI_AMF_DT_PLMNIdentity * plmnIdentity;

	uint8_t selected_ecn_Type;
	int extSelected_ecn_Type;

} SI_AMF_DT_CNTypeRestrictionsForEquivalentItem;


// CNTypeRestrictionsForServing
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CNTypeRestrictionsForServing
{
	__si_amf__CNTypeRestrictionsForServing_epc_forbidden_val
} SI_AMF_DT_CNTypeRestrictionsForServing;


// L:2442
typedef enum __si_amf_dt_CNTypeRestrictionsForServing2
{
	CNTypeRestrictionsForServing_epc_forbidden_val
} SI_AMF_DT_CNTypeRestrictionsForServing2;


// L:2469
typedef struct __si_amf_dt_CNTypeRestrictionsForServing_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CNTypeRestrictionsForServing_EnumProxy;


// CommonNetworkInstance
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_CommonNetworkInstance
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_CommonNetworkInstance;

// CompletedCellsInEAI-EUTRA
//SEQUENCE OF CompletedCellsInEAI-EUTRA-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA
{
	SI_LinkedList * CompletedCellsInEAI_EUTRA_Item;
} SI_AMF_DT_CompletedCellsInEAI_EUTRA;


// CompletedCellsInEAI-EUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

} SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item;


// CompletedCellsInEAI-NR
//SEQUENCE OF CompletedCellsInEAI-NR-Item, MIN=1, MAX=maxnoofCellinEAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CompletedCellsInEAI_NR
{
	SI_LinkedList * CompletedCellsInEAI_NR_Item;
} SI_AMF_DT_CompletedCellsInEAI_NR;


// CompletedCellsInEAI-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CompletedCellsInEAI_NR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

} SI_AMF_DT_CompletedCellsInEAI_NR_Item;


// CompletedCellsInTAI-EUTRA
//SEQUENCE OF CompletedCellsInTAI-EUTRA-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA
{
	SI_LinkedList * CompletedCellsInTAI_EUTRA_Item;
} SI_AMF_DT_CompletedCellsInTAI_EUTRA;


// CompletedCellsInTAI-EUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA_Item
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

} SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item;


// CompletedCellsInTAI-NR
//SEQUENCE OF CompletedCellsInTAI-NR-Item, MIN=1, MAX=maxnoofCellinTAI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CompletedCellsInTAI_NR
{
	SI_LinkedList * CompletedCellsInTAI_NR_Item;
} SI_AMF_DT_CompletedCellsInTAI_NR;


// CompletedCellsInTAI-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CompletedCellsInTAI_NR_Item
{
	SI_AMF_DT_NR_CGI * nR_CGI;

} SI_AMF_DT_CompletedCellsInTAI_NR_Item;


// ConcurrentWarningMessageInd
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ConcurrentWarningMessageInd
{
	__si_amf__ConcurrentWarningMessageInd_true_val
} SI_AMF_DT_ConcurrentWarningMessageInd;


// L:2442
typedef enum __si_amf_dt_ConcurrentWarningMessageInd2
{
	ConcurrentWarningMessageInd_true_val
} SI_AMF_DT_ConcurrentWarningMessageInd2;


// L:2469
typedef struct __si_amf_dt_ConcurrentWarningMessageInd_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ConcurrentWarningMessageInd_EnumProxy;


// ConfidentialityProtectionIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ConfidentialityProtectionIndication
{
	__si_amf__ConfidentialityProtectionIndication_required_val,
	__si_amf__ConfidentialityProtectionIndication_preferred_val,
	__si_amf__ConfidentialityProtectionIndication_not_needed_val
} SI_AMF_DT_ConfidentialityProtectionIndication;


// L:2442
typedef enum __si_amf_dt_ConfidentialityProtectionIndication2
{
	ConfidentialityProtectionIndication_required_val,
	ConfidentialityProtectionIndication_preferred_val,
	ConfidentialityProtectionIndication_not_needed_val
} SI_AMF_DT_ConfidentialityProtectionIndication2;


// L:2469
typedef struct __si_amf_dt_ConfidentialityProtectionIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ConfidentialityProtectionIndication_EnumProxy;


// ConfidentialityProtectionResult
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ConfidentialityProtectionResult
{
	__si_amf__ConfidentialityProtectionResult_performed_val,
	__si_amf__ConfidentialityProtectionResult_not_performed_val
} SI_AMF_DT_ConfidentialityProtectionResult;


// L:2442
typedef enum __si_amf_dt_ConfidentialityProtectionResult2
{
	ConfidentialityProtectionResult_performed_val,
	ConfidentialityProtectionResult_not_performed_val
} SI_AMF_DT_ConfidentialityProtectionResult2;


// L:2469
typedef struct __si_amf_dt_ConfidentialityProtectionResult_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ConfidentialityProtectionResult_EnumProxy;


// ConfiguredTACIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ConfiguredTACIndication
{
	__si_amf__ConfiguredTACIndication_true_val
} SI_AMF_DT_ConfiguredTACIndication;


// L:2442
typedef enum __si_amf_dt_ConfiguredTACIndication2
{
	ConfiguredTACIndication_true_val
} SI_AMF_DT_ConfiguredTACIndication2;


// L:2469
typedef struct __si_amf_dt_ConfiguredTACIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ConfiguredTACIndication_EnumProxy;


// UEIdentityIndexValue_indexLength10
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_UEIdentityIndexValue_indexLength10
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_UEIdentityIndexValue_indexLength10;

// UEIdentityIndexValue
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UEIdentityIndexValue
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_UEIdentityIndexValue_indexLength10 * indexLength10;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UEIdentityIndexValue;


// PagingDRX
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingDRX
{
	__si_amf__PagingDRX_v32_val,
	__si_amf__PagingDRX_v64_val,
	__si_amf__PagingDRX_v128_val,
	__si_amf__PagingDRX_v256_val
} SI_AMF_DT_PagingDRX;


// L:2442
typedef enum __si_amf_dt_PagingDRX2
{
	PagingDRX_v32_val,
	PagingDRX_v64_val,
	PagingDRX_v128_val,
	PagingDRX_v256_val
} SI_AMF_DT_PagingDRX2;


// L:2469
typedef struct __si_amf_dt_PagingDRX_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingDRX_EnumProxy;


// PeriodicRegistrationUpdateTimer
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_PeriodicRegistrationUpdateTimer
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_PeriodicRegistrationUpdateTimer;

// MICOModeIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MICOModeIndication
{
	__si_amf__MICOModeIndication_true_val
} SI_AMF_DT_MICOModeIndication;


// L:2442
typedef enum __si_amf_dt_MICOModeIndication2
{
	MICOModeIndication_true_val
} SI_AMF_DT_MICOModeIndication2;


// L:2469
typedef struct __si_amf_dt_MICOModeIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MICOModeIndication_EnumProxy;


// TAIListForInactive
//SEQUENCE OF TAIListForInactiveItem, MIN=1, MAX=maxnoofTAIforInactive  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListForInactive
{
	SI_LinkedList * TAIListForInactiveItem;
} SI_AMF_DT_TAIListForInactive;


// CoreNetworkAssistanceInformationForInactive
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CoreNetworkAssistanceInformationForInactive
{
	SI_AMF_DT_UEIdentityIndexValue * uEIdentityIndexValue;

	uint8_t selected_euESpecificDRX;
	int extSelected_euESpecificDRX;
	int isPresent_uESpecificDRX;

	SI_AMF_DT_PeriodicRegistrationUpdateTimer * periodicRegistrationUpdateTimer;

	uint8_t selected_emICOModeIndication;
	int extSelected_emICOModeIndication;
	int isPresent_mICOModeIndication;

	SI_AMF_DT_TAIListForInactive * tAIListForInactive;

	SI_AMF_DT_ExpectedUEBehaviour * expectedUEBehaviour;
	int isPresent_expectedUEBehaviour;

} SI_AMF_DT_CoreNetworkAssistanceInformationForInactive;


// CN-MT-CommunicationHandling
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CN_MT_CommunicationHandling
{
	__si_amf__CN_MT_CommunicationHandling_supported_val
} SI_AMF_DT_CN_MT_CommunicationHandling;


// L:2442
typedef enum __si_amf_dt_CN_MT_CommunicationHandling2
{
	CN_MT_CommunicationHandling_supported_val
} SI_AMF_DT_CN_MT_CommunicationHandling2;


// L:2469
typedef struct __si_amf_dt_CN_MT_CommunicationHandling_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CN_MT_CommunicationHandling_EnumProxy;


// COUNTValueForPDCPSN12_pDCP-SN12
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_COUNTValueForPDCPSN12_pDCP_SN12
{
	unsigned long long int data;
} SI_AMF_DT_COUNTValueForPDCPSN12_pDCP_SN12;

// COUNTValueForPDCPSN12_hFN-PDCP-SN12
// INTEGER,INTEGER(0..1048575),MIN=0,MAX=1048575  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_COUNTValueForPDCPSN12_hFN_PDCP_SN12
{
	unsigned long long int data;
} SI_AMF_DT_COUNTValueForPDCPSN12_hFN_PDCP_SN12;

// COUNTValueForPDCP-SN12
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_COUNTValueForPDCP_SN12
{
	unsigned long long int pDCP_SN12;

	unsigned long long int hFN_PDCP_SN12;

} SI_AMF_DT_COUNTValueForPDCP_SN12;


// COUNTValueForPDCPSN18_pDCP-SN18
// INTEGER,INTEGER(0..262143),MIN=0,MAX=262143  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_COUNTValueForPDCPSN18_pDCP_SN18
{
	unsigned long long int data;
} SI_AMF_DT_COUNTValueForPDCPSN18_pDCP_SN18;

// COUNTValueForPDCPSN18_hFN-PDCP-SN18
// INTEGER,INTEGER(0..16383),MIN=0,MAX=16383  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_COUNTValueForPDCPSN18_hFN_PDCP_SN18
{
	unsigned long long int data;
} SI_AMF_DT_COUNTValueForPDCPSN18_hFN_PDCP_SN18;

// COUNTValueForPDCP-SN18
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_COUNTValueForPDCP_SN18
{
	unsigned long long int pDCP_SN18;

	unsigned long long int hFN_PDCP_SN18;

} SI_AMF_DT_COUNTValueForPDCP_SN18;


// CoverageEnhancementLevel
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_CoverageEnhancementLevel
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_CoverageEnhancementLevel;

// TypeOfError
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TypeOfError
{
	__si_amf__TypeOfError_not_understood_val,
	__si_amf__TypeOfError_missing_val
} SI_AMF_DT_TypeOfError;


// L:2442
typedef enum __si_amf_dt_TypeOfError2
{
	TypeOfError_not_understood_val,
	TypeOfError_missing_val
} SI_AMF_DT_TypeOfError2;


// L:2469
typedef struct __si_amf_dt_TypeOfError_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TypeOfError_EnumProxy;


// CriticalityDiagnostics-IE-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_Item
{
	uint8_t selected_eiECriticality;
	int extSelected_eiECriticality;

	unsigned long long int iE_ID;

	uint8_t selected_etypeOfError;
	int extSelected_etypeOfError;

} SI_AMF_DT_CriticalityDiagnostics_IE_Item;


// C-RNTI
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_C_RNTI
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_C_RNTI;

// CAGListforMDT
//SEQUENCE OF CAGListforMDTItem, MIN=1, MAX= maxnoofCAGforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CAGListforMDT
{
	SI_LinkedList * CAGListforMDTItem;
} SI_AMF_DT_CAGListforMDT;


// CAGListforMDTItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CAGListforMDTItem
{
	SI_AMF_DT_PLMNIdentity * plmnID;

	SI_AMF_DT_CAG_ID * cAGID;

} SI_AMF_DT_CAGListforMDTItem;


// DataCodingScheme
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_DataCodingScheme
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_DataCodingScheme;

// DataForwardingAccepted
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DataForwardingAccepted
{
	__si_amf__DataForwardingAccepted_data_forwarding_accepted_val
} SI_AMF_DT_DataForwardingAccepted;


// L:2442
typedef enum __si_amf_dt_DataForwardingAccepted2
{
	DataForwardingAccepted_data_forwarding_accepted_val
} SI_AMF_DT_DataForwardingAccepted2;


// L:2469
typedef struct __si_amf_dt_DataForwardingAccepted_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DataForwardingAccepted_EnumProxy;


// DataForwardingNotPossible
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DataForwardingNotPossible
{
	__si_amf__DataForwardingNotPossible_data_forwarding_not_possible_val
} SI_AMF_DT_DataForwardingNotPossible;


// L:2442
typedef enum __si_amf_dt_DataForwardingNotPossible2
{
	DataForwardingNotPossible_data_forwarding_not_possible_val
} SI_AMF_DT_DataForwardingNotPossible2;


// L:2469
typedef struct __si_amf_dt_DataForwardingNotPossible_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DataForwardingNotPossible_EnumProxy;


// DataForwardingResponseDRBList
//SEQUENCE OF DataForwardingResponseDRBItem, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DataForwardingResponseDRBList
{
	SI_LinkedList * DataForwardingResponseDRBItem;
} SI_AMF_DT_DataForwardingResponseDRBList;


// DRB-ID
// INTEGER,INTEGER(1..32,...),MIN=1,MAX=32  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_DRB_ID
{
	unsigned long long int data;
} SI_AMF_DT_DRB_ID;

// DataForwardingResponseDRBItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DataForwardingResponseDRBItem
{
	unsigned long long int dRB_ID;

	SI_AMF_DT_UPTransportLayerInformation * dLForwardingUP_TNLInformation;
	int isPresent_dLForwardingUP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * uLForwardingUP_TNLInformation;
	int isPresent_uLForwardingUP_TNLInformation;

} SI_AMF_DT_DataForwardingResponseDRBItem;


// DAPSRequestInfo_dAPSIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DAPSRequestInfo_dAPSIndicator
{
	__si_amf__DAPSRequestInfo_dAPSIndicator_daps_ho_required_val
} SI_AMF_DT_DAPSRequestInfo_dAPSIndicator;


// L:2442
typedef enum __si_amf_dt_DAPSRequestInfo_dAPSIndicator2
{
	DAPSRequestInfo_dAPSIndicator_daps_ho_required_val
} SI_AMF_DT_DAPSRequestInfo_dAPSIndicator2;


// L:2469
typedef struct __si_amf_dt_DAPSRequestInfo_dAPSIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DAPSRequestInfo_dAPSIndicator_EnumProxy;


// DAPSRequestInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DAPSRequestInfo
{
	uint8_t selected_edAPSIndicator;
	int extSelected_edAPSIndicator;

} SI_AMF_DT_DAPSRequestInfo;


// DAPSResponseInfoList
//SEQUENCE OF DAPSResponseInfoItem, MIN=1, MAX= maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DAPSResponseInfoList
{
	SI_LinkedList * DAPSResponseInfoItem;
} SI_AMF_DT_DAPSResponseInfoList;


// DAPSResponseInfo_dapsresponseindicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DAPSResponseInfo_dapsresponseindicator
{
	__si_amf__DAPSResponseInfo_dapsresponseindicator_daps_ho_accepted_val,
	__si_amf__DAPSResponseInfo_dapsresponseindicator_daps_ho_not_accepted_val
} SI_AMF_DT_DAPSResponseInfo_dapsresponseindicator;


// L:2442
typedef enum __si_amf_dt_DAPSResponseInfo_dapsresponseindicator2
{
	DAPSResponseInfo_dapsresponseindicator_daps_ho_accepted_val,
	DAPSResponseInfo_dapsresponseindicator_daps_ho_not_accepted_val
} SI_AMF_DT_DAPSResponseInfo_dapsresponseindicator2;


// L:2469
typedef struct __si_amf_dt_DAPSResponseInfo_dapsresponseindicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DAPSResponseInfo_dapsresponseindicator_EnumProxy;


// DAPSResponseInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DAPSResponseInfo
{
	uint8_t selected_edapsresponseindicator;
	int extSelected_edapsresponseindicator;

} SI_AMF_DT_DAPSResponseInfo;


// DAPSResponseInfoItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DAPSResponseInfoItem
{
	unsigned long long int dRB_ID;

	SI_AMF_DT_DAPSResponseInfo * dAPSResponseInfo;

} SI_AMF_DT_DAPSResponseInfoItem;


// DataForwardingResponseERABList
//SEQUENCE OF DataForwardingResponseERABListItem, MIN=1, MAX=maxnoofE-RABs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DataForwardingResponseERABList
{
	SI_LinkedList * DataForwardingResponseERABListItem;
} SI_AMF_DT_DataForwardingResponseERABList;


// E-RAB-ID
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_E_RAB_ID
{
	unsigned long long int data;
} SI_AMF_DT_E_RAB_ID;

// DataForwardingResponseERABListItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DataForwardingResponseERABListItem
{
	unsigned long long int e_RAB_ID;

	SI_AMF_DT_UPTransportLayerInformation * dLForwardingUP_TNLInformation;

} SI_AMF_DT_DataForwardingResponseERABListItem;


// DelayCritical
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DelayCritical
{
	__si_amf__DelayCritical_delay_critical_val,
	__si_amf__DelayCritical_non_delay_critical_val
} SI_AMF_DT_DelayCritical;


// L:2442
typedef enum __si_amf_dt_DelayCritical2
{
	DelayCritical_delay_critical_val,
	DelayCritical_non_delay_critical_val
} SI_AMF_DT_DelayCritical2;


// L:2469
typedef struct __si_amf_dt_DelayCritical_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DelayCritical_EnumProxy;


// DL-NAS-MAC
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_DL_NAS_MAC
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_DL_NAS_MAC;

// DL-CP-SecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DL_CP_SecurityInformation
{
	SI_AMF_DT_DL_NAS_MAC * dl_NAS_MAC;

} SI_AMF_DT_DL_CP_SecurityInformation;


// DL-Signalling
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DL_Signalling
{
	__si_amf__DL_Signalling_true_val
} SI_AMF_DT_DL_Signalling;


// L:2442
typedef enum __si_amf_dt_DL_Signalling2
{
	DL_Signalling_true_val
} SI_AMF_DT_DL_Signalling2;


// L:2469
typedef struct __si_amf_dt_DL_Signalling_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DL_Signalling_EnumProxy;


// DLForwarding
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DLForwarding
{
	__si_amf__DLForwarding_dl_forwarding_proposed_val
} SI_AMF_DT_DLForwarding;


// L:2442
typedef enum __si_amf_dt_DLForwarding2
{
	DLForwarding_dl_forwarding_proposed_val
} SI_AMF_DT_DLForwarding2;


// L:2469
typedef struct __si_amf_dt_DLForwarding_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DLForwarding_EnumProxy;


// DL-NGU-TNLInformationReused
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DL_NGU_TNLInformationReused
{
	__si_amf__DL_NGU_TNLInformationReused_true_val
} SI_AMF_DT_DL_NGU_TNLInformationReused;


// L:2442
typedef enum __si_amf_dt_DL_NGU_TNLInformationReused2
{
	DL_NGU_TNLInformationReused_true_val
} SI_AMF_DT_DL_NGU_TNLInformationReused2;


// L:2469
typedef struct __si_amf_dt_DL_NGU_TNLInformationReused_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DL_NGU_TNLInformationReused_EnumProxy;


// DirectForwardingPathAvailability
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_DirectForwardingPathAvailability
{
	__si_amf__DirectForwardingPathAvailability_direct_path_available_val
} SI_AMF_DT_DirectForwardingPathAvailability;


// L:2442
typedef enum __si_amf_dt_DirectForwardingPathAvailability2
{
	DirectForwardingPathAvailability_direct_path_available_val
} SI_AMF_DT_DirectForwardingPathAvailability2;


// L:2469
typedef struct __si_amf_dt_DirectForwardingPathAvailability_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_DirectForwardingPathAvailability_EnumProxy;


// DRBsSubjectToStatusTransferList
//SEQUENCE OF DRBsSubjectToStatusTransferItem, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferList
{
	SI_LinkedList * DRBsSubjectToStatusTransferItem;
} SI_AMF_DT_DRBsSubjectToStatusTransferList;


// DRBStatusUL12_receiveStatusOfUL-PDCP-SDUs
// BITSTRING,BIT STRING(SIZE(1..2048))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs;

// DRBStatusUL12
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBStatusUL12
{
	SI_AMF_DT_COUNTValueForPDCP_SN12 * uL_COUNTValue;

	SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs * receiveStatusOfUL_PDCP_SDUs;
	int isPresent_receiveStatusOfUL_PDCP_SDUs;

} SI_AMF_DT_DRBStatusUL12;


// DRBStatusUL18_receiveStatusOfUL-PDCP-SDUs
// BITSTRING,BIT STRING(SIZE(1..131072))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs;

// DRBStatusUL18
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBStatusUL18
{
	SI_AMF_DT_COUNTValueForPDCP_SN18 * uL_COUNTValue;

	SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs * receiveStatusOfUL_PDCP_SDUs;
	int isPresent_receiveStatusOfUL_PDCP_SDUs;

} SI_AMF_DT_DRBStatusUL18;


// DRBStatusUL
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_DRBStatusUL
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_DRBStatusUL12 * dRBStatusUL12;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_DRBStatusUL18 * dRBStatusUL18;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_DRBStatusUL_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_DRBStatusUL;


// DRBStatusDL12
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBStatusDL12
{
	SI_AMF_DT_COUNTValueForPDCP_SN12 * dL_COUNTValue;

} SI_AMF_DT_DRBStatusDL12;


// DRBStatusDL18
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBStatusDL18
{
	SI_AMF_DT_COUNTValueForPDCP_SN18 * dL_COUNTValue;

} SI_AMF_DT_DRBStatusDL18;


// DRBStatusDL
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_DRBStatusDL
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_DRBStatusDL12 * dRBStatusDL12;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_DRBStatusDL18 * dRBStatusDL18;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_DRBStatusDL_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_DRBStatusDL;


// DRBsSubjectToStatusTransferItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferItem
{
	unsigned long long int dRB_ID;

	SI_AMF_DT_DRBStatusUL * dRBStatusUL;

	SI_AMF_DT_DRBStatusDL * dRBStatusDL;

} SI_AMF_DT_DRBsSubjectToStatusTransferItem;


// DRBsToQosFlowsMappingList
//SEQUENCE OF DRBsToQosFlowsMappingItem, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DRBsToQosFlowsMappingList
{
	SI_LinkedList * DRBsToQosFlowsMappingItem;
} SI_AMF_DT_DRBsToQosFlowsMappingList;


// DRBsToQosFlowsMappingItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBsToQosFlowsMappingItem
{
	unsigned long long int dRB_ID;

	SI_AMF_DT_AssociatedQosFlowList * associatedQosFlowList;

} SI_AMF_DT_DRBsToQosFlowsMappingItem;


// PriorityLevelQos
// INTEGER,INTEGER(1..127,...),MIN=1,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PriorityLevelQos
{
	unsigned long long int data;
} SI_AMF_DT_PriorityLevelQos;

// FiveQI
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_FiveQI
{
	unsigned long long int data;
} SI_AMF_DT_FiveQI;

// MaximumDataBurstVolume
// INTEGER,INTEGER(0..4095,..., 4096.. 2000000),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MaximumDataBurstVolume
{
	unsigned long long int data;
} SI_AMF_DT_MaximumDataBurstVolume;

// Dynamic5QIDescriptor
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_Dynamic5QIDescriptor
{
	unsigned long long int priorityLevelQos;

	unsigned long long int packetDelayBudget;

	SI_AMF_DT_PacketErrorRate * packetErrorRate;

	unsigned long long int fiveQI;
	int isPresent_fiveQI;

	uint8_t selected_edelayCritical;
	int extSelected_edelayCritical;
	int isPresent_delayCritical;

	unsigned long long int averagingWindow;
	int isPresent_averagingWindow;

	unsigned long long int maximumDataBurstVolume;
	int isPresent_maximumDataBurstVolume;

} SI_AMF_DT_Dynamic5QIDescriptor;


// EarlyMeasurement
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EarlyMeasurement
{
	__si_amf__EarlyMeasurement_true_val
} SI_AMF_DT_EarlyMeasurement;


// L:2442
typedef enum __si_amf_dt_EarlyMeasurement2
{
	EarlyMeasurement_true_val
} SI_AMF_DT_EarlyMeasurement2;


// L:2469
typedef struct __si_amf_dt_EarlyMeasurement_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EarlyMeasurement_EnumProxy;


// DRBsSubjectToEarlyStatusTransfer-List
//SEQUENCE OF DRBsSubjectToEarlyStatusTransfer-Item, MIN=1, MAX= maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_List
{
	SI_LinkedList * DRBsSubjectToEarlyStatusTransfer_Item;
} SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List;


// FirstDLCount
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FirstDLCount
{
	SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List * dRBsSubjectToEarlyStatusTransfer;

} SI_AMF_DT_FirstDLCount;


// ProcedureStageChoice
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ProcedureStageChoice
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_FirstDLCount * first_dl_count;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ProcedureStageChoice;


// EarlyStatusTransfer-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EarlyStatusTransfer_TransparentContainer
{
	SI_AMF_DT_ProcedureStageChoice * procedureStage;

} SI_AMF_DT_EarlyStatusTransfer_TransparentContainer;


// DRBsSubjectToDLDiscarding-List
//SEQUENCE OF DRBsSubjectToDLDiscarding-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_List
{
	SI_LinkedList * DRBsSubjectToDLDiscarding_Item;
} SI_AMF_DT_DRBsSubjectToDLDiscarding_List;


// DLDiscarding
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DLDiscarding
{
	SI_AMF_DT_DRBsSubjectToDLDiscarding_List * dRBsSubjectToDLDiscarding;

} SI_AMF_DT_DLDiscarding;


// DLCountChoice
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_DLCountChoice
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_COUNTValueForPDCP_SN12 * count12bits;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_COUNTValueForPDCP_SN18 * count18bits;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_DLCountChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_DLCountChoice;


// DRBsSubjectToDLDiscarding-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_Item
{
	unsigned long long int drbID;

	SI_AMF_DT_DLCountChoice * dlCount;

} SI_AMF_DT_DRBsSubjectToDLDiscarding_Item;


// DRBsSubjectToEarlyStatusTransfer-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_Item
{
	unsigned long long int dRB_ID;

	SI_AMF_DT_DRBStatusDL * firstDLCOUNT;

} SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item;


// ECNMarkingAtRANRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ECNMarkingAtRANRequest
{
	__si_amf__ECNMarkingAtRANRequest_ul_val,
	__si_amf__ECNMarkingAtRANRequest_dl_val,
	__si_amf__ECNMarkingAtRANRequest_both_val,
	__si_amf__ECNMarkingAtRANRequest_stop_val
} SI_AMF_DT_ECNMarkingAtRANRequest;


// L:2442
typedef enum __si_amf_dt_ECNMarkingAtRANRequest2
{
	ECNMarkingAtRANRequest_ul_val,
	ECNMarkingAtRANRequest_dl_val,
	ECNMarkingAtRANRequest_both_val,
	ECNMarkingAtRANRequest_stop_val
} SI_AMF_DT_ECNMarkingAtRANRequest2;


// L:2469
typedef struct __si_amf_dt_ECNMarkingAtRANRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ECNMarkingAtRANRequest_EnumProxy;


// ECNMarkingAtUPFRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ECNMarkingAtUPFRequest
{
	__si_amf__ECNMarkingAtUPFRequest_ul_val,
	__si_amf__ECNMarkingAtUPFRequest_dl_val,
	__si_amf__ECNMarkingAtUPFRequest_both_val,
	__si_amf__ECNMarkingAtUPFRequest_stop_val
} SI_AMF_DT_ECNMarkingAtUPFRequest;


// L:2442
typedef enum __si_amf_dt_ECNMarkingAtUPFRequest2
{
	ECNMarkingAtUPFRequest_ul_val,
	ECNMarkingAtUPFRequest_dl_val,
	ECNMarkingAtUPFRequest_both_val,
	ECNMarkingAtUPFRequest_stop_val
} SI_AMF_DT_ECNMarkingAtUPFRequest2;


// L:2469
typedef struct __si_amf_dt_ECNMarkingAtUPFRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ECNMarkingAtUPFRequest_EnumProxy;


// CongestionInformationRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_CongestionInformationRequest
{
	__si_amf__CongestionInformationRequest_ul_val,
	__si_amf__CongestionInformationRequest_dl_val,
	__si_amf__CongestionInformationRequest_both_val,
	__si_amf__CongestionInformationRequest_stop_val
} SI_AMF_DT_CongestionInformationRequest;


// L:2442
typedef enum __si_amf_dt_CongestionInformationRequest2
{
	CongestionInformationRequest_ul_val,
	CongestionInformationRequest_dl_val,
	CongestionInformationRequest_both_val,
	CongestionInformationRequest_stop_val
} SI_AMF_DT_CongestionInformationRequest2;


// L:2469
typedef struct __si_amf_dt_CongestionInformationRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_CongestionInformationRequest_EnumProxy;


// ECNMarkingorCongestionInformationReportingRequest
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingRequest
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t eCNMarkingAtRANRequest;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t eCNMarkingAtUPFRequest;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t congestionInformationRequest;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest;


// ECNMarkingorCongestionInformationReportingStatus
//SEQUENCE OF ECNMarkingorCongestionInformationReportingStatus-Item, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus
{
	SI_LinkedList * ECNMarkingorCongestionInformationReportingStatus_Item;
} SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus;


// ActivationStatus
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ActivationStatus
{
	__si_amf__ActivationStatus_active_val,
	__si_amf__ActivationStatus_not_active_val
} SI_AMF_DT_ActivationStatus;


// L:2442
typedef enum __si_amf_dt_ActivationStatus2
{
	ActivationStatus_active_val,
	ActivationStatus_not_active_val
} SI_AMF_DT_ActivationStatus2;


// L:2469
typedef struct __si_amf_dt_ActivationStatus_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ActivationStatus_EnumProxy;


// ECNMarkingorCongestionInformationReportingStatus-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus_Item
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_eactivationStatus;
	int extSelected_eactivationStatus;

} SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item;


// EDT-Session
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EDT_Session
{
	__si_amf__EDT_Session_true_val
} SI_AMF_DT_EDT_Session;


// L:2442
typedef enum __si_amf_dt_EDT_Session2
{
	EDT_Session_true_val
} SI_AMF_DT_EDT_Session2;


// L:2469
typedef struct __si_amf_dt_EDT_Session_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EDT_Session_EnumProxy;


// EmergencyAreaID
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_EmergencyAreaID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_EmergencyAreaID;

// EmergencyAreaIDBroadcastEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA_Item
{
	SI_AMF_DT_EmergencyAreaID * emergencyAreaID;

	SI_AMF_DT_CompletedCellsInEAI_EUTRA * completedCellsInEAI_EUTRA;

} SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item;


// EmergencyAreaIDBroadcastNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR_Item
{
	SI_AMF_DT_EmergencyAreaID * emergencyAreaID;

	SI_AMF_DT_CompletedCellsInEAI_NR * completedCellsInEAI_NR;

} SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item;


// EmergencyAreaIDCancelledEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA_Item
{
	SI_AMF_DT_EmergencyAreaID * emergencyAreaID;

	SI_AMF_DT_CancelledCellsInEAI_EUTRA * cancelledCellsInEAI_EUTRA;

} SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item;


// EmergencyAreaIDCancelledNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR_Item
{
	SI_AMF_DT_EmergencyAreaID * emergencyAreaID;

	SI_AMF_DT_CancelledCellsInEAI_NR * cancelledCellsInEAI_NR;

} SI_AMF_DT_EmergencyAreaIDCancelledNR_Item;


// EmergencyAreaIDList
//SEQUENCE OF EmergencyAreaID, MIN=1, MAX=maxnoofEmergencyAreaID  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDList
{
	SI_LinkedList * EmergencyAreaID;
} SI_AMF_DT_EmergencyAreaIDList;


// EmergencyAreaIDListForRestart
//SEQUENCE OF EmergencyAreaID, MIN=1, MAX=maxnoofEAIforRestart  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EmergencyAreaIDListForRestart
{
	SI_LinkedList * EmergencyAreaID;
} SI_AMF_DT_EmergencyAreaIDListForRestart;


// EmergencyFallbackRequestIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EmergencyFallbackRequestIndicator
{
	__si_amf__EmergencyFallbackRequestIndicator_emergency_fallback_requested_val
} SI_AMF_DT_EmergencyFallbackRequestIndicator;


// L:2442
typedef enum __si_amf_dt_EmergencyFallbackRequestIndicator2
{
	EmergencyFallbackRequestIndicator_emergency_fallback_requested_val
} SI_AMF_DT_EmergencyFallbackRequestIndicator2;


// L:2469
typedef struct __si_amf_dt_EmergencyFallbackRequestIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EmergencyFallbackRequestIndicator_EnumProxy;


// EmergencyServiceTargetCN
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EmergencyServiceTargetCN
{
	__si_amf__EmergencyServiceTargetCN_fiveGC_val,
	__si_amf__EmergencyServiceTargetCN_epc_val
} SI_AMF_DT_EmergencyServiceTargetCN;


// L:2442
typedef enum __si_amf_dt_EmergencyServiceTargetCN2
{
	EmergencyServiceTargetCN_fiveGC_val,
	EmergencyServiceTargetCN_epc_val
} SI_AMF_DT_EmergencyServiceTargetCN2;


// L:2469
typedef struct __si_amf_dt_EmergencyServiceTargetCN_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EmergencyServiceTargetCN_EnumProxy;


// EmergencyFallbackIndicator
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EmergencyFallbackIndicator
{
	uint8_t selected_eemergencyFallbackRequestIndicator;
	int extSelected_eemergencyFallbackRequestIndicator;

	uint8_t selected_eemergencyServiceTargetCN;
	int extSelected_eemergencyServiceTargetCN;
	int isPresent_emergencyServiceTargetCN;

} SI_AMF_DT_EmergencyFallbackIndicator;


// ENBID_macroENB-ID
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ENBID_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ENBID_macroENB_ID;

// ENBID_homeENB-ID
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ENBID_homeENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ENBID_homeENB_ID;

// ENBID_short-macroENB-ID
// BITSTRING,BIT STRING(SIZE(18))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ENBID_short_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ENBID_short_macroENB_ID;

// ENBID_long-macroENB-ID
// BITSTRING,BIT STRING(SIZE(21))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ENBID_long_macroENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ENBID_long_macroENB_ID;

// ENB-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ENB_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_ENBID_macroENB_ID * macroENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_ENBID_homeENB_ID * homeENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_ENBID_short_macroENB_ID * short_macroENB_ID;

		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_ENBID_long_macroENB_ID * long_macroENB_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ENB_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ENB_ID;


// Enhanced-CoverageRestriction
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Enhanced_CoverageRestriction
{
	__si_amf__Enhanced_CoverageRestriction_restricted_val
} SI_AMF_DT_Enhanced_CoverageRestriction;


// L:2442
typedef enum __si_amf_dt_Enhanced_CoverageRestriction2
{
	Enhanced_CoverageRestriction_restricted_val
} SI_AMF_DT_Enhanced_CoverageRestriction2;


// L:2469
typedef struct __si_amf_dt_Enhanced_CoverageRestriction_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Enhanced_CoverageRestriction_EnumProxy;


// Extended-ConnectedTime
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Extended_ConnectedTime
{
	unsigned long long int data;
} SI_AMF_DT_Extended_ConnectedTime;

// EN-DCSONConfigurationTransfer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_EN_DCSONConfigurationTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_EN_DCSONConfigurationTransfer;

// PortNumber
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PortNumber
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PortNumber;

// EndpointIPAddressAndPort
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EndpointIPAddressAndPort
{
	SI_AMF_DT_TransportLayerAddress * endpointIPAddress;

	SI_AMF_DT_PortNumber * portNumber;

} SI_AMF_DT_EndpointIPAddressAndPort;


// EndIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EndIndication
{
	__si_amf__EndIndication_no_further_data_val,
	__si_amf__EndIndication_further_data_exists_val
} SI_AMF_DT_EndIndication;


// L:2442
typedef enum __si_amf_dt_EndIndication2
{
	EndIndication_no_further_data_val,
	EndIndication_further_data_exists_val
} SI_AMF_DT_EndIndication2;


// L:2469
typedef struct __si_amf_dt_EndIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EndIndication_EnumProxy;


// EquivalentPLMNs
//SEQUENCE OF PLMNIdentity, MIN=1, MAX=maxnoofEPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EquivalentPLMNs
{
	SI_LinkedList * PLMNIdentity;
} SI_AMF_DT_EquivalentPLMNs;


// EPS-TAC
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_EPS_TAC
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_EPS_TAC;

// EPS-TAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EPS_TAI
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_EPS_TAC * ePS_TAC;

} SI_AMF_DT_EPS_TAI;


// E-RABInformationList
//SEQUENCE OF E-RABInformationItem, MIN=1, MAX=maxnoofE-RABs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_E_RABInformationList
{
	SI_LinkedList * E_RABInformationItem;
} SI_AMF_DT_E_RABInformationList;


// E-RABInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_E_RABInformationItem
{
	unsigned long long int e_RAB_ID;

	uint8_t selected_edLForwarding;
	int extSelected_edLForwarding;
	int isPresent_dLForwarding;

} SI_AMF_DT_E_RABInformationItem;


// ERedCapIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ERedCapIndication
{
	__si_amf__ERedCapIndication_true_val
} SI_AMF_DT_ERedCapIndication;


// L:2442
typedef enum __si_amf_dt_ERedCapIndication2
{
	ERedCapIndication_true_val
} SI_AMF_DT_ERedCapIndication2;


// L:2469
typedef struct __si_amf_dt_ERedCapIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ERedCapIndication_EnumProxy;


// EUTRA-CGIListForWarning
//SEQUENCE OF EUTRA-CGI, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EUTRA_CGIListForWarning
{
	SI_LinkedList * EUTRA_CGI;
} SI_AMF_DT_EUTRA_CGIListForWarning;


// EUTRA-Paging-eDRX-Cycle
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EUTRA_Paging_eDRX_Cycle
{
	__si_amf__EUTRA_Paging_eDRX_Cycle_hfhalf_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf1_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf2_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf4_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf6_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf8_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf10_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf12_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf14_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf16_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf32_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf64_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf128_val,
	__si_amf__EUTRA_Paging_eDRX_Cycle_hf256_val
} SI_AMF_DT_EUTRA_Paging_eDRX_Cycle;


// L:2442
typedef enum __si_amf_dt_EUTRA_Paging_eDRX_Cycle2
{
	EUTRA_Paging_eDRX_Cycle_hfhalf_val,
	EUTRA_Paging_eDRX_Cycle_hf1_val,
	EUTRA_Paging_eDRX_Cycle_hf2_val,
	EUTRA_Paging_eDRX_Cycle_hf4_val,
	EUTRA_Paging_eDRX_Cycle_hf6_val,
	EUTRA_Paging_eDRX_Cycle_hf8_val,
	EUTRA_Paging_eDRX_Cycle_hf10_val,
	EUTRA_Paging_eDRX_Cycle_hf12_val,
	EUTRA_Paging_eDRX_Cycle_hf14_val,
	EUTRA_Paging_eDRX_Cycle_hf16_val,
	EUTRA_Paging_eDRX_Cycle_hf32_val,
	EUTRA_Paging_eDRX_Cycle_hf64_val,
	EUTRA_Paging_eDRX_Cycle_hf128_val,
	EUTRA_Paging_eDRX_Cycle_hf256_val
} SI_AMF_DT_EUTRA_Paging_eDRX_Cycle2;


// L:2469
typedef struct __si_amf_dt_EUTRA_Paging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EUTRA_Paging_eDRX_Cycle_EnumProxy;


// EUTRA-Paging-Time-Window
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EUTRA_Paging_Time_Window
{
	__si_amf__EUTRA_Paging_Time_Window_s1_val,
	__si_amf__EUTRA_Paging_Time_Window_s2_val,
	__si_amf__EUTRA_Paging_Time_Window_s3_val,
	__si_amf__EUTRA_Paging_Time_Window_s4_val,
	__si_amf__EUTRA_Paging_Time_Window_s5_val,
	__si_amf__EUTRA_Paging_Time_Window_s6_val,
	__si_amf__EUTRA_Paging_Time_Window_s7_val,
	__si_amf__EUTRA_Paging_Time_Window_s8_val,
	__si_amf__EUTRA_Paging_Time_Window_s9_val,
	__si_amf__EUTRA_Paging_Time_Window_s10_val,
	__si_amf__EUTRA_Paging_Time_Window_s11_val,
	__si_amf__EUTRA_Paging_Time_Window_s12_val,
	__si_amf__EUTRA_Paging_Time_Window_s13_val,
	__si_amf__EUTRA_Paging_Time_Window_s14_val,
	__si_amf__EUTRA_Paging_Time_Window_s15_val,
	__si_amf__EUTRA_Paging_Time_Window_s16_val
} SI_AMF_DT_EUTRA_Paging_Time_Window;


// L:2442
typedef enum __si_amf_dt_EUTRA_Paging_Time_Window2
{
	EUTRA_Paging_Time_Window_s1_val,
	EUTRA_Paging_Time_Window_s2_val,
	EUTRA_Paging_Time_Window_s3_val,
	EUTRA_Paging_Time_Window_s4_val,
	EUTRA_Paging_Time_Window_s5_val,
	EUTRA_Paging_Time_Window_s6_val,
	EUTRA_Paging_Time_Window_s7_val,
	EUTRA_Paging_Time_Window_s8_val,
	EUTRA_Paging_Time_Window_s9_val,
	EUTRA_Paging_Time_Window_s10_val,
	EUTRA_Paging_Time_Window_s11_val,
	EUTRA_Paging_Time_Window_s12_val,
	EUTRA_Paging_Time_Window_s13_val,
	EUTRA_Paging_Time_Window_s14_val,
	EUTRA_Paging_Time_Window_s15_val,
	EUTRA_Paging_Time_Window_s16_val
} SI_AMF_DT_EUTRA_Paging_Time_Window2;


// L:2469
typedef struct __si_amf_dt_EUTRA_Paging_Time_Window_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EUTRA_Paging_Time_Window_EnumProxy;


// EUTRA-PagingeDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRA_PagingeDRXInformation
{
	uint8_t selected_eeUTRA_paging_eDRX_Cycle;
	int extSelected_eeUTRA_paging_eDRX_Cycle;

	uint8_t selected_eeUTRA_paging_Time_Window;
	int extSelected_eeUTRA_paging_Time_Window;
	int isPresent_eUTRA_paging_Time_Window;

} SI_AMF_DT_EUTRA_PagingeDRXInformation;


// EUTRAencryptionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_EUTRAencryptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_EUTRAencryptionAlgorithms;

// EUTRAintegrityProtectionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_EUTRAintegrityProtectionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_EUTRAintegrityProtectionAlgorithms;

// EventType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EventType
{
	__si_amf__EventType_direct_val,
	__si_amf__EventType_change_of_serve_cell_val,
	__si_amf__EventType_ue_presence_in_area_of_interest_val,
	__si_amf__EventType_stop_change_of_serve_cell_val,
	__si_amf__EventType_stop_ue_presence_in_area_of_interest_val,
	__si_amf__EventType_cancel_location_reporting_for_the_ue_val,
	__si_amf__EventType_change_of_serving_cell_and_UE_presence_in_the_Area_of_Interest_val_ext
} SI_AMF_DT_EventType;


// L:2442
typedef enum __si_amf_dt_EventType2
{
	EventType_direct_val,
	EventType_change_of_serve_cell_val,
	EventType_ue_presence_in_area_of_interest_val,
	EventType_stop_change_of_serve_cell_val,
	EventType_stop_ue_presence_in_area_of_interest_val,
	EventType_cancel_location_reporting_for_the_ue_val,
	EventType_change_of_serving_cell_and_UE_presence_in_the_Area_of_Interest_val_ext
} SI_AMF_DT_EventType2;


// L:2469
typedef struct __si_amf_dt_EventType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EventType_EnumProxy;


// ExcessPacketDelayThresholdConfiguration
//SEQUENCE OF ExcessPacketDelayThresholdItem, MIN=1, MAX=maxnoofThresholdsForExcessPacketDelay  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ExcessPacketDelayThresholdConfiguration
{
	SI_LinkedList * ExcessPacketDelayThresholdItem;
} SI_AMF_DT_ExcessPacketDelayThresholdConfiguration;


// ExcessPacketDelayThresholdValue
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ExcessPacketDelayThresholdValue
{
	__si_amf__ExcessPacketDelayThresholdValue_ms0dot25_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms0dot5_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms1_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms2_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms4_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms5_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms10_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms20_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms30_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms40_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms50_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms60_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms70_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms80_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms90_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms100_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms150_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms300_val,
	__si_amf__ExcessPacketDelayThresholdValue_ms500_val
} SI_AMF_DT_ExcessPacketDelayThresholdValue;


// L:2442
typedef enum __si_amf_dt_ExcessPacketDelayThresholdValue2
{
	ExcessPacketDelayThresholdValue_ms0dot25_val,
	ExcessPacketDelayThresholdValue_ms0dot5_val,
	ExcessPacketDelayThresholdValue_ms1_val,
	ExcessPacketDelayThresholdValue_ms2_val,
	ExcessPacketDelayThresholdValue_ms4_val,
	ExcessPacketDelayThresholdValue_ms5_val,
	ExcessPacketDelayThresholdValue_ms10_val,
	ExcessPacketDelayThresholdValue_ms20_val,
	ExcessPacketDelayThresholdValue_ms30_val,
	ExcessPacketDelayThresholdValue_ms40_val,
	ExcessPacketDelayThresholdValue_ms50_val,
	ExcessPacketDelayThresholdValue_ms60_val,
	ExcessPacketDelayThresholdValue_ms70_val,
	ExcessPacketDelayThresholdValue_ms80_val,
	ExcessPacketDelayThresholdValue_ms90_val,
	ExcessPacketDelayThresholdValue_ms100_val,
	ExcessPacketDelayThresholdValue_ms150_val,
	ExcessPacketDelayThresholdValue_ms300_val,
	ExcessPacketDelayThresholdValue_ms500_val
} SI_AMF_DT_ExcessPacketDelayThresholdValue2;


// L:2469
typedef struct __si_amf_dt_ExcessPacketDelayThresholdValue_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ExcessPacketDelayThresholdValue_EnumProxy;


// ExcessPacketDelayThresholdItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ExcessPacketDelayThresholdItem
{
	unsigned long long int fiveQi;

	uint8_t selected_eexcessPacketDelayThresholdValue;
	int extSelected_eexcessPacketDelayThresholdValue;

} SI_AMF_DT_ExcessPacketDelayThresholdItem;


// ExpectedUEMovingTrajectoryItem_timeStayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem_timeStayedInCell
{
	unsigned long long int data;
} SI_AMF_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell;

// ExpectedUEMovingTrajectoryItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

	unsigned long long int timeStayedInCell;
	int isPresent_timeStayedInCell;

} SI_AMF_DT_ExpectedUEMovingTrajectoryItem;


// Extended-AMFName
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_Extended_AMFName
{
	SI_AMF_DT_AMFNameVisibleString * aMFNameVisibleString;
	int isPresent_aMFNameVisibleString;

	SI_AMF_DT_AMFNameUTF8String * aMFNameUTF8String;
	int isPresent_aMFNameUTF8String;

} SI_AMF_DT_Extended_AMFName;


// ExtendedPacketDelayBudget
// INTEGER,INTEGER(1..65535,..., 65536..109999),MIN=1,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ExtendedPacketDelayBudget
{
	unsigned long long int data;
} SI_AMF_DT_ExtendedPacketDelayBudget;

// RANNodeNameVisibleString
// PrintableString,VisibleString(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_RANNodeNameVisibleString
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RANNodeNameVisibleString;

// RANNodeNameUTF8String
// PrintableString,UTF8String(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_RANNodeNameUTF8String
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RANNodeNameUTF8String;

// Extended-RANNodeName
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_Extended_RANNodeName
{
	SI_AMF_DT_RANNodeNameVisibleString * rANNodeNameVisibleString;
	int isPresent_rANNodeNameVisibleString;

	SI_AMF_DT_RANNodeNameUTF8String * rANNodeNameUTF8String;
	int isPresent_rANNodeNameUTF8String;

} SI_AMF_DT_Extended_RANNodeName;


// ExtendedRATRestrictionInformation_primaryRATRestriction
// BITSTRING,BIT STRING(SIZE(8,..., 16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_primaryRATRestriction
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction;

// ExtendedRATRestrictionInformation_secondaryRATRestriction
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_secondaryRATRestriction
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction;

// ExtendedRATRestrictionInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation
{
	SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * primaryRATRestriction;

	SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * secondaryRATRestriction;

} SI_AMF_DT_ExtendedRATRestrictionInformation;


// ExtendedRNC-ID
// INTEGER,INTEGER(4096..65535),MIN=4096,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ExtendedRNC_ID
{
	unsigned long long int data;
} SI_AMF_DT_ExtendedRNC_ID;

// ExtendedSliceSupportList
//SEQUENCE OF SliceSupportItem, MIN=1, MAX=maxnoofExtSliceItems  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ExtendedSliceSupportList
{
	SI_LinkedList * SliceSupportItem;
} SI_AMF_DT_ExtendedSliceSupportList;


// ExtendedUEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ExtendedUEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ExtendedUEIdentityIndexValue;

// EventTrigger_outOfCoverage
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_EventTrigger_outOfCoverage
{
	__si_amf__EventTrigger_outOfCoverage_true_val
} SI_AMF_DT_EventTrigger_outOfCoverage;


// L:2442
typedef enum __si_amf_dt_EventTrigger_outOfCoverage2
{
	EventTrigger_outOfCoverage_true_val
} SI_AMF_DT_EventTrigger_outOfCoverage2;


// L:2469
typedef struct __si_amf_dt_EventTrigger_outOfCoverage_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_EventTrigger_outOfCoverage_EnumProxy;


// Threshold-RSRP
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Threshold_RSRP
{
	unsigned long long int data;
} SI_AMF_DT_Threshold_RSRP;

// Threshold-RSRQ
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Threshold_RSRQ
{
	unsigned long long int data;
} SI_AMF_DT_Threshold_RSRQ;

// MeasurementThresholdL1LoggedMDT
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MeasurementThresholdL1LoggedMDT
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MeasurementThresholdL1LoggedMDT;


// Hysteresis
// INTEGER,INTEGER(0..30),MIN=0,MAX=30  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Hysteresis
{
	unsigned long long int data;
} SI_AMF_DT_Hysteresis;

// TimeToTrigger
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TimeToTrigger
{
	__si_amf__TimeToTrigger_ms0_val,
	__si_amf__TimeToTrigger_ms40_val,
	__si_amf__TimeToTrigger_ms64_val,
	__si_amf__TimeToTrigger_ms80_val,
	__si_amf__TimeToTrigger_ms100_val,
	__si_amf__TimeToTrigger_ms128_val,
	__si_amf__TimeToTrigger_ms160_val,
	__si_amf__TimeToTrigger_ms256_val,
	__si_amf__TimeToTrigger_ms320_val,
	__si_amf__TimeToTrigger_ms480_val,
	__si_amf__TimeToTrigger_ms512_val,
	__si_amf__TimeToTrigger_ms640_val,
	__si_amf__TimeToTrigger_ms1024_val,
	__si_amf__TimeToTrigger_ms1280_val,
	__si_amf__TimeToTrigger_ms2560_val,
	__si_amf__TimeToTrigger_ms5120_val
} SI_AMF_DT_TimeToTrigger;


// L:2442
typedef enum __si_amf_dt_TimeToTrigger2
{
	TimeToTrigger_ms0_val,
	TimeToTrigger_ms40_val,
	TimeToTrigger_ms64_val,
	TimeToTrigger_ms80_val,
	TimeToTrigger_ms100_val,
	TimeToTrigger_ms128_val,
	TimeToTrigger_ms160_val,
	TimeToTrigger_ms256_val,
	TimeToTrigger_ms320_val,
	TimeToTrigger_ms480_val,
	TimeToTrigger_ms512_val,
	TimeToTrigger_ms640_val,
	TimeToTrigger_ms1024_val,
	TimeToTrigger_ms1280_val,
	TimeToTrigger_ms2560_val,
	TimeToTrigger_ms5120_val
} SI_AMF_DT_TimeToTrigger2;


// L:2469
typedef struct __si_amf_dt_TimeToTrigger_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TimeToTrigger_EnumProxy;


// EventL1LoggedMDTConfig
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EventL1LoggedMDTConfig
{
	SI_AMF_DT_MeasurementThresholdL1LoggedMDT * l1Threshold;

	unsigned long long int hysteresis;

	uint8_t selected_etimeToTrigger;
	int extSelected_etimeToTrigger;

} SI_AMF_DT_EventL1LoggedMDTConfig;


// EventTrigger
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_EventTrigger
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t outOfCoverage;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_EventL1LoggedMDTConfig * eventL1LoggedMDTConfig;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_EventTrigger_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_EventTrigger;


// EquivalentSNPNsList
//SEQUENCE OF EquivalentSNPNsItem, MIN=1, MAX=maxnoofESNPNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EquivalentSNPNsList
{
	SI_LinkedList * EquivalentSNPNsItem;
} SI_AMF_DT_EquivalentSNPNsList;


// EquivalentSNPNsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EquivalentSNPNsItem
{
	SI_AMF_DT_PLMNIdentity * plmnIdentity;

	SI_AMF_DT_NID * nID;

} SI_AMF_DT_EquivalentSNPNsItem;


// NRUERLFReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NRUERLFReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NRUERLFReportContainer;

// LTEUERLFReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_LTEUERLFReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_LTEUERLFReportContainer;

// UERLFReportContainer
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UERLFReportContainer
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_NRUERLFReportContainer * nR;

		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_LTEUERLFReportContainer * lTE;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UERLFReportContainer;


// FailureIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FailureIndication
{
	SI_AMF_DT_UERLFReportContainer * uERLFReportContainer;

} SI_AMF_DT_FailureIndication;


// NR-Paging-Long-eDRX-Cycle-for-RRC-INACTIVE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE
{
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf2_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf4_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf8_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf16_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf32_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf64_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf128_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf256_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf512_val,
	__si_amf__NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf1024_val
} SI_AMF_DT_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE;


// L:2442
typedef enum __si_amf_dt_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE2
{
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf2_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf4_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf8_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf16_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf32_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf64_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf128_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf256_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf512_val,
	NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_hf1024_val
} SI_AMF_DT_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE2;


// L:2469
typedef struct __si_amf_dt_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE_EnumProxy;


// NR-Paging-Time-Window-for-RRC-INACTIVE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NR_Paging_Time_Window_for_RRC_INACTIVE
{
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s1_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s2_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s3_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s4_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s5_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s6_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s7_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s8_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s9_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s10_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s11_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s12_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s13_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s14_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s15_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s16_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s17_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s18_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s19_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s20_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s21_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s22_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s23_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s24_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s25_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s26_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s27_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s28_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s29_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s30_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s31_val,
	__si_amf__NR_Paging_Time_Window_for_RRC_INACTIVE_s32_val
} SI_AMF_DT_NR_Paging_Time_Window_for_RRC_INACTIVE;


// L:2442
typedef enum __si_amf_dt_NR_Paging_Time_Window_for_RRC_INACTIVE2
{
	NR_Paging_Time_Window_for_RRC_INACTIVE_s1_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s2_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s3_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s4_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s5_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s6_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s7_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s8_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s9_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s10_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s11_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s12_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s13_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s14_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s15_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s16_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s17_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s18_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s19_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s20_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s21_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s22_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s23_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s24_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s25_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s26_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s27_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s28_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s29_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s30_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s31_val,
	NR_Paging_Time_Window_for_RRC_INACTIVE_s32_val
} SI_AMF_DT_NR_Paging_Time_Window_for_RRC_INACTIVE2;


// L:2469
typedef struct __si_amf_dt_NR_Paging_Time_Window_for_RRC_INACTIVE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NR_Paging_Time_Window_for_RRC_INACTIVE_EnumProxy;


// NR-Paging-Long-eDRX-Information-for-RRC-INACTIVE
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE
{
	uint8_t selected_enR_paging_Long_eDRX_Cycle_for_RRC_INACTIVE;
	int extSelected_enR_paging_Long_eDRX_Cycle_for_RRC_INACTIVE;

	uint8_t selected_enR_paging_Time_Window_for_RRC_INACTIVE;
	int extSelected_enR_paging_Time_Window_for_RRC_INACTIVE;

} SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE;


// HLComActivate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HLComActivate
{
	SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE * nR_Paging_Long_eDRX_Information_for_RRC_INACTIVE;

} SI_AMF_DT_HLComActivate;


// HLComDeactivate_uEReachabilityIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_HLComDeactivate_uEReachabilityIndication
{
	__si_amf__HLComDeactivate_uEReachabilityIndication_true_val
} SI_AMF_DT_HLComDeactivate_uEReachabilityIndication;


// L:2442
typedef enum __si_amf_dt_HLComDeactivate_uEReachabilityIndication2
{
	HLComDeactivate_uEReachabilityIndication_true_val
} SI_AMF_DT_HLComDeactivate_uEReachabilityIndication2;


// L:2469
typedef struct __si_amf_dt_HLComDeactivate_uEReachabilityIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_HLComDeactivate_uEReachabilityIndication_EnumProxy;


// HLComDeactivate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HLComDeactivate
{
	uint8_t selected_euEReachabilityIndication;
	int extSelected_euEReachabilityIndication;

} SI_AMF_DT_HLComDeactivate;


// FiveGCAction
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_FiveGCAction
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_HLComActivate * hLComActivate;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_HLComDeactivate * hLComDeactivate;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_FiveGCAction_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_FiveGCAction;


// FiveGProSeDirectDiscovery
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeDirectDiscovery
{
	__si_amf__FiveGProSeDirectDiscovery_authorized_val,
	__si_amf__FiveGProSeDirectDiscovery_not_authorized_val
} SI_AMF_DT_FiveGProSeDirectDiscovery;


// L:2442
typedef enum __si_amf_dt_FiveGProSeDirectDiscovery2
{
	FiveGProSeDirectDiscovery_authorized_val,
	FiveGProSeDirectDiscovery_not_authorized_val
} SI_AMF_DT_FiveGProSeDirectDiscovery2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeDirectDiscovery_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeDirectDiscovery_EnumProxy;


// FiveGProSeDirectCommunication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeDirectCommunication
{
	__si_amf__FiveGProSeDirectCommunication_authorized_val,
	__si_amf__FiveGProSeDirectCommunication_not_authorized_val
} SI_AMF_DT_FiveGProSeDirectCommunication;


// L:2442
typedef enum __si_amf_dt_FiveGProSeDirectCommunication2
{
	FiveGProSeDirectCommunication_authorized_val,
	FiveGProSeDirectCommunication_not_authorized_val
} SI_AMF_DT_FiveGProSeDirectCommunication2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeDirectCommunication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeDirectCommunication_EnumProxy;


// FiveGProSeLayer2UEtoNetworkRelay
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoNetworkRelay
{
	__si_amf__FiveGProSeLayer2UEtoNetworkRelay_authorized_val,
	__si_amf__FiveGProSeLayer2UEtoNetworkRelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoNetworkRelay;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoNetworkRelay2
{
	FiveGProSeLayer2UEtoNetworkRelay_authorized_val,
	FiveGProSeLayer2UEtoNetworkRelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoNetworkRelay2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer2UEtoNetworkRelay_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer2UEtoNetworkRelay_EnumProxy;


// FiveGProSeLayer3UEtoNetworkRelay
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer3UEtoNetworkRelay
{
	__si_amf__FiveGProSeLayer3UEtoNetworkRelay_authorized_val,
	__si_amf__FiveGProSeLayer3UEtoNetworkRelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer3UEtoNetworkRelay;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer3UEtoNetworkRelay2
{
	FiveGProSeLayer3UEtoNetworkRelay_authorized_val,
	FiveGProSeLayer3UEtoNetworkRelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer3UEtoNetworkRelay2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer3UEtoNetworkRelay_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer3UEtoNetworkRelay_EnumProxy;


// FiveGProSeLayer2RemoteUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer2RemoteUE
{
	__si_amf__FiveGProSeLayer2RemoteUE_authorized_val,
	__si_amf__FiveGProSeLayer2RemoteUE_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2RemoteUE;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer2RemoteUE2
{
	FiveGProSeLayer2RemoteUE_authorized_val,
	FiveGProSeLayer2RemoteUE_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2RemoteUE2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer2RemoteUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer2RemoteUE_EnumProxy;


// FiveG-ProSeAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FiveG_ProSeAuthorized
{
	uint8_t selected_efiveGProSeDirectDiscovery;
	int extSelected_efiveGProSeDirectDiscovery;
	int isPresent_fiveGProSeDirectDiscovery;

	uint8_t selected_efiveGProSeDirectCommunication;
	int extSelected_efiveGProSeDirectCommunication;
	int isPresent_fiveGProSeDirectCommunication;

	uint8_t selected_efiveGProSeLayer2UEtoNetworkRelay;
	int extSelected_efiveGProSeLayer2UEtoNetworkRelay;
	int isPresent_fiveGProSeLayer2UEtoNetworkRelay;

	uint8_t selected_efiveGProSeLayer3UEtoNetworkRelay;
	int extSelected_efiveGProSeLayer3UEtoNetworkRelay;
	int isPresent_fiveGProSeLayer3UEtoNetworkRelay;

	uint8_t selected_efiveGProSeLayer2RemoteUE;
	int extSelected_efiveGProSeLayer2RemoteUE;
	int isPresent_fiveGProSeLayer2RemoteUE;

} SI_AMF_DT_FiveG_ProSeAuthorized;


// FiveGProSeLayer2Multipath
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer2Multipath
{
	__si_amf__FiveGProSeLayer2Multipath_authorized_val,
	__si_amf__FiveGProSeLayer2Multipath_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2Multipath;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer2Multipath2
{
	FiveGProSeLayer2Multipath_authorized_val,
	FiveGProSeLayer2Multipath_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2Multipath2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer2Multipath_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer2Multipath_EnumProxy;


// FiveGProSeLayer2UEtoUERelay
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoUERelay
{
	__si_amf__FiveGProSeLayer2UEtoUERelay_authorized_val,
	__si_amf__FiveGProSeLayer2UEtoUERelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoUERelay;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoUERelay2
{
	FiveGProSeLayer2UEtoUERelay_authorized_val,
	FiveGProSeLayer2UEtoUERelay_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoUERelay2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer2UEtoUERelay_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer2UEtoUERelay_EnumProxy;


// FiveGProSeLayer2UEtoUERemote
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoUERemote
{
	__si_amf__FiveGProSeLayer2UEtoUERemote_authorized_val,
	__si_amf__FiveGProSeLayer2UEtoUERemote_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoUERemote;


// L:2442
typedef enum __si_amf_dt_FiveGProSeLayer2UEtoUERemote2
{
	FiveGProSeLayer2UEtoUERemote_authorized_val,
	FiveGProSeLayer2UEtoUERemote_not_authorized_val
} SI_AMF_DT_FiveGProSeLayer2UEtoUERemote2;


// L:2469
typedef struct __si_amf_dt_FiveGProSeLayer2UEtoUERemote_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_FiveGProSeLayer2UEtoUERemote_EnumProxy;


// FiveGProSePC5QoSFlowList
//SEQUENCE OF FiveGProSePC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowList
{
	SI_LinkedList * FiveGProSePC5QoSFlowItem;
} SI_AMF_DT_FiveGProSePC5QoSFlowList;


// FiveG-ProSePC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FiveG_ProSePC5QoSParameters
{
	SI_AMF_DT_FiveGProSePC5QoSFlowList * fiveGProSepc5QoSFlowList;

	unsigned long long int fiveGProSepc5LinkAggregateBitRates;
	int isPresent_fiveGProSepc5LinkAggregateBitRates;

} SI_AMF_DT_FiveG_ProSePC5QoSParameters;


// FiveGProSePC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FiveGProSePC5FlowBitRates
{
	unsigned long long int fiveGproSeguaranteedFlowBitRate;

	unsigned long long int fiveGproSemaximumFlowBitRate;

} SI_AMF_DT_FiveGProSePC5FlowBitRates;


// Range
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Range
{
	__si_amf__Range_m50_val,
	__si_amf__Range_m80_val,
	__si_amf__Range_m180_val,
	__si_amf__Range_m200_val,
	__si_amf__Range_m350_val,
	__si_amf__Range_m400_val,
	__si_amf__Range_m500_val,
	__si_amf__Range_m700_val,
	__si_amf__Range_m1000_val
} SI_AMF_DT_Range;


// L:2442
typedef enum __si_amf_dt_Range2
{
	Range_m50_val,
	Range_m80_val,
	Range_m180_val,
	Range_m200_val,
	Range_m350_val,
	Range_m400_val,
	Range_m500_val,
	Range_m700_val,
	Range_m1000_val
} SI_AMF_DT_Range2;


// L:2469
typedef struct __si_amf_dt_Range_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Range_EnumProxy;


// FiveGProSePC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowItem
{
	unsigned long long int fiveGproSepQI;

	SI_AMF_DT_FiveGProSePC5FlowBitRates * fiveGproSepc5FlowBitRates;
	int isPresent_fiveGproSepc5FlowBitRates;

	uint8_t selected_efiveGproSerange;
	int extSelected_efiveGproSerange;
	int isPresent_fiveGproSerange;

} SI_AMF_DT_FiveGProSePC5QoSFlowItem;


// FiveG-TMSI
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_FiveG_TMSI
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_FiveG_TMSI;

// FiveG-S-TMSI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FiveG_S_TMSI
{
	SI_AMF_DT_AMFSetID * aMFSetID;

	SI_AMF_DT_AMFPointer * aMFPointer;

	SI_AMF_DT_FiveG_TMSI * fiveG_TMSI;

} SI_AMF_DT_FiveG_S_TMSI;


// ForbiddenAreaInformation
//SEQUENCE OF ForbiddenAreaInformation-Item, MIN=1, MAX= maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ForbiddenAreaInformation
{
	SI_LinkedList * ForbiddenAreaInformation_Item;
} SI_AMF_DT_ForbiddenAreaInformation;


// ForbiddenTACs
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofForbTACs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ForbiddenTACs
{
	SI_LinkedList * TAC;
} SI_AMF_DT_ForbiddenTACs;


// ForbiddenAreaInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ForbiddenAreaInformation_Item
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_ForbiddenTACs * forbiddenTACs;

} SI_AMF_DT_ForbiddenAreaInformation_Item;


// GlobalENB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalENB_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNidentity;

	SI_AMF_DT_ENB_ID * eNB_ID;

} SI_AMF_DT_GlobalENB_ID;


// IntersystemSONeNBID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemSONeNBID
{
	SI_AMF_DT_GlobalENB_ID * globaleNBID;

	SI_AMF_DT_EPS_TAI * selectedEPSTAI;

} SI_AMF_DT_IntersystemSONeNBID;


// IntersystemSONNGRANnodeID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemSONNGRANnodeID
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

	SI_AMF_DT_TAI * selectedTAI;

} SI_AMF_DT_IntersystemSONNGRANnodeID;


// FromEUTRANtoNGRAN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FromEUTRANtoNGRAN
{
	SI_AMF_DT_IntersystemSONeNBID * sourceeNBID;

	SI_AMF_DT_IntersystemSONNGRANnodeID * targetNGRANnodeID;

} SI_AMF_DT_FromEUTRANtoNGRAN;


// FromNGRANtoEUTRAN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_FromNGRANtoEUTRAN
{
	SI_AMF_DT_IntersystemSONNGRANnodeID * sourceNGRANnodeID;

	SI_AMF_DT_IntersystemSONeNBID * targeteNBID;

} SI_AMF_DT_FromNGRANtoEUTRAN;


// NotificationControl
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NotificationControl
{
	__si_amf__NotificationControl_notification_requested_val
} SI_AMF_DT_NotificationControl;


// L:2442
typedef enum __si_amf_dt_NotificationControl2
{
	NotificationControl_notification_requested_val
} SI_AMF_DT_NotificationControl2;


// L:2469
typedef struct __si_amf_dt_NotificationControl_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NotificationControl_EnumProxy;


// PacketLossRate
// INTEGER,INTEGER(0..1000,...),MIN=0,MAX=1000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PacketLossRate
{
	unsigned long long int data;
} SI_AMF_DT_PacketLossRate;

// GBR-QosInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GBR_QosInformation
{
	unsigned long long int maximumFlowBitRateDL;

	unsigned long long int maximumFlowBitRateUL;

	unsigned long long int guaranteedFlowBitRateDL;

	unsigned long long int guaranteedFlowBitRateUL;

	uint8_t selected_enotificationControl;
	int extSelected_enotificationControl;
	int isPresent_notificationControl;

	unsigned long long int maximumPacketLossRateDL;
	int isPresent_maximumPacketLossRateDL;

	unsigned long long int maximumPacketLossRateUL;
	int isPresent_maximumPacketLossRateUL;

} SI_AMF_DT_GBR_QosInformation;


// GlobalCable-ID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_GlobalCable_ID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_GlobalCable_ID;

// GlobalCable-ID-new
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalCable_ID_new
{
	SI_AMF_DT_GlobalCable_ID * globalCable_ID;

	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_GlobalCable_ID_new;


// GlobalLineIdentity
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_GlobalLineIdentity
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_GlobalLineIdentity;

// LineType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LineType
{
	__si_amf__LineType_dsl_val,
	__si_amf__LineType_pon_val
} SI_AMF_DT_LineType;


// L:2442
typedef enum __si_amf_dt_LineType2
{
	LineType_dsl_val,
	LineType_pon_val
} SI_AMF_DT_LineType2;


// L:2469
typedef struct __si_amf_dt_LineType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LineType_EnumProxy;


// GlobalLine-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalLine_ID
{
	SI_AMF_DT_GlobalLineIdentity * globalLineIdentity;

	uint8_t selected_elineType;
	int extSelected_elineType;
	int isPresent_lineType;

} SI_AMF_DT_GlobalLine_ID;


// TNGFID_tNGF-ID
// BITSTRING,BIT STRING(SIZE(32,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_TNGFID_tNGF_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_TNGFID_tNGF_ID;

// TNGF-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_TNGF_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_TNGFID_tNGF_ID * tNGF_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_TNGF_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_TNGF_ID;


// GlobalTNGF-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalTNGF_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_TNGF_ID * tNGF_ID;

} SI_AMF_DT_GlobalTNGF_ID;


// TWIFID_tWIF-ID
// BITSTRING,BIT STRING(SIZE(32,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_TWIFID_tWIF_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_TWIFID_tWIF_ID;

// TWIF-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_TWIF_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_TWIFID_tWIF_ID * tWIF_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_TWIF_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_TWIF_ID;


// GlobalTWIF-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalTWIF_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_TWIF_ID * tWIF_ID;

} SI_AMF_DT_GlobalTWIF_ID;


// WAGFID_w-AGF-ID
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_WAGFID_w_AGF_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_WAGFID_w_AGF_ID;

// W-AGF-ID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_W_AGF_ID
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_WAGFID_w_AGF_ID * w_AGF_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_W_AGF_ID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_W_AGF_ID;


// GlobalW-AGF-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GlobalW_AGF_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_W_AGF_ID * w_AGF_ID;

} SI_AMF_DT_GlobalW_AGF_ID;


// GUAMI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_GUAMI
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_AMFRegionID * aMFRegionID;

	SI_AMF_DT_AMFSetID * aMFSetID;

	SI_AMF_DT_AMFPointer * aMFPointer;

} SI_AMF_DT_GUAMI;


// GUAMIType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_GUAMIType
{
	__si_amf__GUAMIType_native_val,
	__si_amf__GUAMIType_mapped_val
} SI_AMF_DT_GUAMIType;


// L:2442
typedef enum __si_amf_dt_GUAMIType2
{
	GUAMIType_native_val,
	GUAMIType_mapped_val
} SI_AMF_DT_GUAMIType2;


// L:2469
typedef struct __si_amf_dt_GUAMIType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_GUAMIType_EnumProxy;


// QosFlowToBeForwardedList
//SEQUENCE OF QosFlowToBeForwardedItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowToBeForwardedList
{
	SI_LinkedList * QosFlowToBeForwardedItem;
} SI_AMF_DT_QosFlowToBeForwardedList;


// HandoverCommandTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HandoverCommandTransfer
{
	SI_AMF_DT_UPTransportLayerInformation * dLForwardingUP_TNLInformation;
	int isPresent_dLForwardingUP_TNLInformation;

	SI_AMF_DT_QosFlowToBeForwardedList * qosFlowToBeForwardedList;
	int isPresent_qosFlowToBeForwardedList;

	SI_AMF_DT_DataForwardingResponseDRBList * dataForwardingResponseDRBList;
	int isPresent_dataForwardingResponseDRBList;

} SI_AMF_DT_HandoverCommandTransfer;


// HandoverFlag
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_HandoverFlag
{
	__si_amf__HandoverFlag_handover_preparation_val
} SI_AMF_DT_HandoverFlag;


// L:2442
typedef enum __si_amf_dt_HandoverFlag2
{
	HandoverFlag_handover_preparation_val
} SI_AMF_DT_HandoverFlag2;


// L:2469
typedef struct __si_amf_dt_HandoverFlag_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_HandoverFlag_EnumProxy;


// HandoverPreparationUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HandoverPreparationUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer;


// IntegrityProtectionResult
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IntegrityProtectionResult
{
	__si_amf__IntegrityProtectionResult_performed_val,
	__si_amf__IntegrityProtectionResult_not_performed_val
} SI_AMF_DT_IntegrityProtectionResult;


// L:2442
typedef enum __si_amf_dt_IntegrityProtectionResult2
{
	IntegrityProtectionResult_performed_val,
	IntegrityProtectionResult_not_performed_val
} SI_AMF_DT_IntegrityProtectionResult2;


// L:2469
typedef struct __si_amf_dt_IntegrityProtectionResult_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IntegrityProtectionResult_EnumProxy;


// SecurityResult
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SecurityResult
{
	uint8_t selected_eintegrityProtectionResult;
	int extSelected_eintegrityProtectionResult;

	uint8_t selected_econfidentialityProtectionResult;
	int extSelected_econfidentialityProtectionResult;

} SI_AMF_DT_SecurityResult;


// QosFlowListWithCause
//SEQUENCE OF QosFlowWithCauseItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowListWithCause
{
	SI_LinkedList * QosFlowWithCauseItem;
} SI_AMF_DT_QosFlowListWithCause;


// HandoverRequestAcknowledgeTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HandoverRequestAcknowledgeTransfer
{
	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * dLForwardingUP_TNLInformation;
	int isPresent_dLForwardingUP_TNLInformation;

	SI_AMF_DT_SecurityResult * securityResult;
	int isPresent_securityResult;

	SI_AMF_DT_QosFlowListWithDataForwarding * qosFlowSetupResponseList;

	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToSetupList;
	int isPresent_qosFlowFailedToSetupList;

	SI_AMF_DT_DataForwardingResponseDRBList * dataForwardingResponseDRBList;
	int isPresent_dataForwardingResponseDRBList;

} SI_AMF_DT_HandoverRequestAcknowledgeTransfer;


// HandoverRequiredTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HandoverRequiredTransfer
{
	uint8_t selected_edirectForwardingPathAvailability;
	int extSelected_edirectForwardingPathAvailability;
	int isPresent_directForwardingPathAvailability;

} SI_AMF_DT_HandoverRequiredTransfer;


// HandoverResourceAllocationUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HandoverResourceAllocationUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer;


// HandoverType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_HandoverType
{
	__si_amf__HandoverType_intra5gs_val,
	__si_amf__HandoverType_fivegs_to_eps_val,
	__si_amf__HandoverType_eps_to_5gs_val,
	__si_amf__HandoverType_fivegs_to_utran_val_ext
} SI_AMF_DT_HandoverType;


// L:2442
typedef enum __si_amf_dt_HandoverType2
{
	HandoverType_intra5gs_val,
	HandoverType_fivegs_to_eps_val,
	HandoverType_eps_to_5gs_val,
	HandoverType_fivegs_to_utran_val_ext
} SI_AMF_DT_HandoverType2;


// L:2469
typedef struct __si_amf_dt_HandoverType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_HandoverType_EnumProxy;


// HashedUEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(13,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_HashedUEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_HashedUEIdentityIndexValue;

// HFCNode-ID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_HFCNode_ID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_HFCNode_ID;

// HFCNode-ID-new
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HFCNode_ID_new
{
	SI_AMF_DT_HFCNode_ID * hFCNode_ID;

	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_HFCNode_ID_new;


// HOReport_handoverReportType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_HOReport_handoverReportType
{
	__si_amf__HOReport_handoverReportType_ho_too_early_val,
	__si_amf__HOReport_handoverReportType_ho_to_wrong_cell_val,
	__si_amf__HOReport_handoverReportType_intersystem_ping_pong_val
} SI_AMF_DT_HOReport_handoverReportType;


// L:2442
typedef enum __si_amf_dt_HOReport_handoverReportType2
{
	HOReport_handoverReportType_ho_too_early_val,
	HOReport_handoverReportType_ho_to_wrong_cell_val,
	HOReport_handoverReportType_intersystem_ping_pong_val
} SI_AMF_DT_HOReport_handoverReportType2;


// L:2469
typedef struct __si_amf_dt_HOReport_handoverReportType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_HOReport_handoverReportType_EnumProxy;


// HOReport_sourcecellC-RNTI
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_HOReport_sourcecellC_RNTI
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_HOReport_sourcecellC_RNTI;

// MobilityInformation
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_MobilityInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_MobilityInformation;

// HOReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_HOReport
{
	uint8_t selected_ehandoverReportType;
	int extSelected_ehandoverReportType;

	SI_AMF_DT_Cause * handoverCause;

	SI_AMF_DT_NGRAN_CGI * sourcecellCGI;

	SI_AMF_DT_NGRAN_CGI * targetcellCGI;

	SI_AMF_DT_NGRAN_CGI * reestablishmentcellCGI;
	int isPresent_reestablishmentcellCGI;

	SI_AMF_DT_HOReport_sourcecellC_RNTI * sourcecellC_RNTI;
	int isPresent_sourcecellC_RNTI;

	SI_AMF_DT_EUTRA_CGI * targetcellinE_UTRAN;
	int isPresent_targetcellinE_UTRAN;

	SI_AMF_DT_MobilityInformation * mobilityInformation;
	int isPresent_mobilityInformation;

	SI_AMF_DT_UERLFReportContainer * uERLFReportContainer;
	int isPresent_uERLFReportContainer;

} SI_AMF_DT_HOReport;


// IAB-Authorized
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IAB_Authorized
{
	__si_amf__IAB_Authorized_authorized_val,
	__si_amf__IAB_Authorized_not_authorized_val
} SI_AMF_DT_IAB_Authorized;


// L:2442
typedef enum __si_amf_dt_IAB_Authorized2
{
	IAB_Authorized_authorized_val,
	IAB_Authorized_not_authorized_val
} SI_AMF_DT_IAB_Authorized2;


// L:2469
typedef struct __si_amf_dt_IAB_Authorized_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IAB_Authorized_EnumProxy;


// MobileIAB-MTUserLocationInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MobileIAB_MTUserLocationInformation
{
	SI_AMF_DT_NR_CGI * nRCGI;

	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_MobileIAB_MTUserLocationInformation;


// IAB-Supported
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IAB_Supported
{
	__si_amf__IAB_Supported_true_val
} SI_AMF_DT_IAB_Supported;


// L:2442
typedef enum __si_amf_dt_IAB_Supported2
{
	IAB_Supported_true_val
} SI_AMF_DT_IAB_Supported2;


// L:2469
typedef struct __si_amf_dt_IAB_Supported_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IAB_Supported_EnumProxy;


// IABNodeIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IABNodeIndication
{
	__si_amf__IABNodeIndication_true_val
} SI_AMF_DT_IABNodeIndication;


// L:2442
typedef enum __si_amf_dt_IABNodeIndication2
{
	IABNodeIndication_true_val
} SI_AMF_DT_IABNodeIndication2;


// L:2469
typedef struct __si_amf_dt_IABNodeIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IABNodeIndication_EnumProxy;


// IMSVoiceSupportIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IMSVoiceSupportIndicator
{
	__si_amf__IMSVoiceSupportIndicator_supported_val,
	__si_amf__IMSVoiceSupportIndicator_not_supported_val
} SI_AMF_DT_IMSVoiceSupportIndicator;


// L:2442
typedef enum __si_amf_dt_IMSVoiceSupportIndicator2
{
	IMSVoiceSupportIndicator_supported_val,
	IMSVoiceSupportIndicator_not_supported_val
} SI_AMF_DT_IMSVoiceSupportIndicator2;


// L:2469
typedef struct __si_amf_dt_IMSVoiceSupportIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IMSVoiceSupportIndicator_EnumProxy;


// IndexToRFSP
// INTEGER,INTEGER(1..256,...),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_IndexToRFSP
{
	unsigned long long int data;
} SI_AMF_DT_IndexToRFSP;

// RecommendedRANNodeList
//SEQUENCE OF RecommendedRANNodeItem, MIN=1, MAX=maxnoofRecommendedRANNodes  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_RecommendedRANNodeList
{
	SI_LinkedList * RecommendedRANNodeItem;
} SI_AMF_DT_RecommendedRANNodeList;


// RecommendedRANNodesForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RecommendedRANNodesForPaging
{
	SI_AMF_DT_RecommendedRANNodeList * recommendedRANNodeList;

} SI_AMF_DT_RecommendedRANNodesForPaging;


// InfoOnRecommendedCellsAndRANNodesForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_InfoOnRecommendedCellsAndRANNodesForPaging
{
	SI_AMF_DT_RecommendedCellsForPaging * recommendedCellsForPaging;

	SI_AMF_DT_RecommendedRANNodesForPaging * recommendRANNodesForPaging;

} SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging;


// IntegrityProtectionIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IntegrityProtectionIndication
{
	__si_amf__IntegrityProtectionIndication_required_val,
	__si_amf__IntegrityProtectionIndication_preferred_val,
	__si_amf__IntegrityProtectionIndication_not_needed_val
} SI_AMF_DT_IntegrityProtectionIndication;


// L:2442
typedef enum __si_amf_dt_IntegrityProtectionIndication2
{
	IntegrityProtectionIndication_required_val,
	IntegrityProtectionIndication_preferred_val,
	IntegrityProtectionIndication_not_needed_val
} SI_AMF_DT_IntegrityProtectionIndication2;


// L:2469
typedef struct __si_amf_dt_IntegrityProtectionIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IntegrityProtectionIndication_EnumProxy;


// InterfacesToTrace
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_InterfacesToTrace
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_InterfacesToTrace;

// MeasurementsToActivate
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_MeasurementsToActivate
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_MeasurementsToActivate;

// M1ReportingTrigger
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M1ReportingTrigger
{
	__si_amf__M1ReportingTrigger_periodic_val,
	__si_amf__M1ReportingTrigger_a2eventtriggered_val,
	__si_amf__M1ReportingTrigger_a2eventtriggered_periodic_val
} SI_AMF_DT_M1ReportingTrigger;


// L:2442
typedef enum __si_amf_dt_M1ReportingTrigger2
{
	M1ReportingTrigger_periodic_val,
	M1ReportingTrigger_a2eventtriggered_val,
	M1ReportingTrigger_a2eventtriggered_periodic_val
} SI_AMF_DT_M1ReportingTrigger2;


// L:2469
typedef struct __si_amf_dt_M1ReportingTrigger_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M1ReportingTrigger_EnumProxy;


// Threshold-SINR
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Threshold_SINR
{
	unsigned long long int data;
} SI_AMF_DT_Threshold_SINR;

// M1ThresholdType
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_M1ThresholdType
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_SINR;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_M1ThresholdType_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_M1ThresholdType;


// M1ThresholdEventA2
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M1ThresholdEventA2
{
	SI_AMF_DT_M1ThresholdType * m1ThresholdType;

} SI_AMF_DT_M1ThresholdEventA2;


// ReportIntervalMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ReportIntervalMDT
{
	__si_amf__ReportIntervalMDT_ms120_val,
	__si_amf__ReportIntervalMDT_ms240_val,
	__si_amf__ReportIntervalMDT_ms480_val,
	__si_amf__ReportIntervalMDT_ms640_val,
	__si_amf__ReportIntervalMDT_ms1024_val,
	__si_amf__ReportIntervalMDT_ms2048_val,
	__si_amf__ReportIntervalMDT_ms5120_val,
	__si_amf__ReportIntervalMDT_ms10240_val,
	__si_amf__ReportIntervalMDT_min1_val,
	__si_amf__ReportIntervalMDT_min6_val,
	__si_amf__ReportIntervalMDT_min12_val,
	__si_amf__ReportIntervalMDT_min30_val,
	__si_amf__ReportIntervalMDT_min60_val
} SI_AMF_DT_ReportIntervalMDT;


// L:2442
typedef enum __si_amf_dt_ReportIntervalMDT2
{
	ReportIntervalMDT_ms120_val,
	ReportIntervalMDT_ms240_val,
	ReportIntervalMDT_ms480_val,
	ReportIntervalMDT_ms640_val,
	ReportIntervalMDT_ms1024_val,
	ReportIntervalMDT_ms2048_val,
	ReportIntervalMDT_ms5120_val,
	ReportIntervalMDT_ms10240_val,
	ReportIntervalMDT_min1_val,
	ReportIntervalMDT_min6_val,
	ReportIntervalMDT_min12_val,
	ReportIntervalMDT_min30_val,
	ReportIntervalMDT_min60_val
} SI_AMF_DT_ReportIntervalMDT2;


// L:2469
typedef struct __si_amf_dt_ReportIntervalMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ReportIntervalMDT_EnumProxy;


// ReportAmountMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ReportAmountMDT
{
	__si_amf__ReportAmountMDT_r1_val,
	__si_amf__ReportAmountMDT_r2_val,
	__si_amf__ReportAmountMDT_r4_val,
	__si_amf__ReportAmountMDT_r8_val,
	__si_amf__ReportAmountMDT_r16_val,
	__si_amf__ReportAmountMDT_r32_val,
	__si_amf__ReportAmountMDT_r64_val,
	__si_amf__ReportAmountMDT_rinfinity_val
} SI_AMF_DT_ReportAmountMDT;


// L:2442
typedef enum __si_amf_dt_ReportAmountMDT2
{
	ReportAmountMDT_r1_val,
	ReportAmountMDT_r2_val,
	ReportAmountMDT_r4_val,
	ReportAmountMDT_r8_val,
	ReportAmountMDT_r16_val,
	ReportAmountMDT_r32_val,
	ReportAmountMDT_r64_val,
	ReportAmountMDT_rinfinity_val
} SI_AMF_DT_ReportAmountMDT2;


// L:2469
typedef struct __si_amf_dt_ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ReportAmountMDT_EnumProxy;


// M1PeriodicReporting
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M1PeriodicReporting
{
	uint8_t selected_ereportInterval;
	int extSelected_ereportInterval;

	uint8_t selected_ereportAmount;
	int extSelected_ereportAmount;

} SI_AMF_DT_M1PeriodicReporting;


// M1Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M1Configuration
{
	uint8_t selected_em1reportingTrigger;
	int extSelected_em1reportingTrigger;

	SI_AMF_DT_M1ThresholdEventA2 * m1thresholdEventA2;
	int isPresent_m1thresholdEventA2;

	SI_AMF_DT_M1PeriodicReporting * m1periodicReporting;
	int isPresent_m1periodicReporting;

} SI_AMF_DT_M1Configuration;


// M4period
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M4period
{
	__si_amf__M4period_ms1024_val,
	__si_amf__M4period_ms2048_val,
	__si_amf__M4period_ms5120_val,
	__si_amf__M4period_ms10240_val,
	__si_amf__M4period_min1_val
} SI_AMF_DT_M4period;


// L:2442
typedef enum __si_amf_dt_M4period2
{
	M4period_ms1024_val,
	M4period_ms2048_val,
	M4period_ms5120_val,
	M4period_ms10240_val,
	M4period_min1_val
} SI_AMF_DT_M4period2;


// L:2469
typedef struct __si_amf_dt_M4period_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M4period_EnumProxy;


// Links-to-log
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Links_to_log
{
	__si_amf__Links_to_log_uplink_val,
	__si_amf__Links_to_log_downlink_val,
	__si_amf__Links_to_log_both_uplink_and_downlink_val
} SI_AMF_DT_Links_to_log;


// L:2442
typedef enum __si_amf_dt_Links_to_log2
{
	Links_to_log_uplink_val,
	Links_to_log_downlink_val,
	Links_to_log_both_uplink_and_downlink_val
} SI_AMF_DT_Links_to_log2;


// L:2469
typedef struct __si_amf_dt_Links_to_log_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Links_to_log_EnumProxy;


// M4Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M4Configuration
{
	uint8_t selected_em4period;
	int extSelected_em4period;

	uint8_t selected_em4_links_to_log;
	int extSelected_em4_links_to_log;

} SI_AMF_DT_M4Configuration;


// M5period
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M5period
{
	__si_amf__M5period_ms1024_val,
	__si_amf__M5period_ms2048_val,
	__si_amf__M5period_ms5120_val,
	__si_amf__M5period_ms10240_val,
	__si_amf__M5period_min1_val
} SI_AMF_DT_M5period;


// L:2442
typedef enum __si_amf_dt_M5period2
{
	M5period_ms1024_val,
	M5period_ms2048_val,
	M5period_ms5120_val,
	M5period_ms10240_val,
	M5period_min1_val
} SI_AMF_DT_M5period2;


// L:2469
typedef struct __si_amf_dt_M5period_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M5period_EnumProxy;


// M5Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M5Configuration
{
	uint8_t selected_em5period;
	int extSelected_em5period;

	uint8_t selected_em5_links_to_log;
	int extSelected_em5_links_to_log;

} SI_AMF_DT_M5Configuration;


// M6report-Interval
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M6report_Interval
{
	__si_amf__M6report_Interval_ms120_val,
	__si_amf__M6report_Interval_ms240_val,
	__si_amf__M6report_Interval_ms480_val,
	__si_amf__M6report_Interval_ms640_val,
	__si_amf__M6report_Interval_ms1024_val,
	__si_amf__M6report_Interval_ms2048_val,
	__si_amf__M6report_Interval_ms5120_val,
	__si_amf__M6report_Interval_ms10240_val,
	__si_amf__M6report_Interval_ms20480_val,
	__si_amf__M6report_Interval_ms40960_val,
	__si_amf__M6report_Interval_min1_val,
	__si_amf__M6report_Interval_min6_val,
	__si_amf__M6report_Interval_min12_val,
	__si_amf__M6report_Interval_min30_val
} SI_AMF_DT_M6report_Interval;


// L:2442
typedef enum __si_amf_dt_M6report_Interval2
{
	M6report_Interval_ms120_val,
	M6report_Interval_ms240_val,
	M6report_Interval_ms480_val,
	M6report_Interval_ms640_val,
	M6report_Interval_ms1024_val,
	M6report_Interval_ms2048_val,
	M6report_Interval_ms5120_val,
	M6report_Interval_ms10240_val,
	M6report_Interval_ms20480_val,
	M6report_Interval_ms40960_val,
	M6report_Interval_min1_val,
	M6report_Interval_min6_val,
	M6report_Interval_min12_val,
	M6report_Interval_min30_val
} SI_AMF_DT_M6report_Interval2;


// L:2469
typedef struct __si_amf_dt_M6report_Interval_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M6report_Interval_EnumProxy;


// M6Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M6Configuration
{
	uint8_t selected_em6report_Interval;
	int extSelected_em6report_Interval;

	uint8_t selected_em6_links_to_log;
	int extSelected_em6_links_to_log;

} SI_AMF_DT_M6Configuration;


// M7period
// INTEGER,INTEGER(1..60,...),MIN=1,MAX=60  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_M7period
{
	unsigned long long int data;
} SI_AMF_DT_M7period;

// M7Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_M7Configuration
{
	unsigned long long int m7period;

	uint8_t selected_em7_links_to_log;
	int extSelected_em7_links_to_log;

} SI_AMF_DT_M7Configuration;


// WLANMeasConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_WLANMeasConfig
{
	__si_amf__WLANMeasConfig_setup_val
} SI_AMF_DT_WLANMeasConfig;


// L:2442
typedef enum __si_amf_dt_WLANMeasConfig2
{
	WLANMeasConfig_setup_val
} SI_AMF_DT_WLANMeasConfig2;


// L:2469
typedef struct __si_amf_dt_WLANMeasConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_WLANMeasConfig_EnumProxy;


// WLANMeasConfigNameList
//SEQUENCE OF WLANMeasConfigNameItem, MIN=1, MAX=maxnoofWLANName  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_WLANMeasConfigNameList
{
	SI_LinkedList * WLANMeasConfigNameItem;
} SI_AMF_DT_WLANMeasConfigNameList;


// WLANMeasurementConfiguration_wlan-rssi
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_WLANMeasurementConfiguration_wlan_rssi
{
	__si_amf__WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rssi;


// L:2442
typedef enum __si_amf_dt_WLANMeasurementConfiguration_wlan_rssi2
{
	WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rssi2;


// L:2469
typedef struct __si_amf_dt_WLANMeasurementConfiguration_wlan_rssi_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rssi_EnumProxy;


// WLANMeasurementConfiguration_wlan-rtt
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_WLANMeasurementConfiguration_wlan_rtt
{
	__si_amf__WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rtt;


// L:2442
typedef enum __si_amf_dt_WLANMeasurementConfiguration_wlan_rtt2
{
	WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rtt2;


// L:2469
typedef struct __si_amf_dt_WLANMeasurementConfiguration_wlan_rtt_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_WLANMeasurementConfiguration_wlan_rtt_EnumProxy;


// WLANMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_WLANMeasurementConfiguration
{
	uint8_t selected_ewlanMeasConfig;
	int extSelected_ewlanMeasConfig;

	SI_AMF_DT_WLANMeasConfigNameList * wlanMeasConfigNameList;
	int isPresent_wlanMeasConfigNameList;

	uint8_t selected_ewlan_rssi;
	int extSelected_ewlan_rssi;
	int isPresent_wlan_rssi;

	uint8_t selected_ewlan_rtt;
	int extSelected_ewlan_rtt;
	int isPresent_wlan_rtt;

} SI_AMF_DT_WLANMeasurementConfiguration;


// MDT-Location-Information
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_MDT_Location_Information
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_MDT_Location_Information;

// MDT-Location-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MDT_Location_Info
{
	SI_AMF_DT_MDT_Location_Information * mDT_Location_Information;

} SI_AMF_DT_MDT_Location_Info;


// SensorMeasConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SensorMeasConfig
{
	__si_amf__SensorMeasConfig_setup_val
} SI_AMF_DT_SensorMeasConfig;


// L:2442
typedef enum __si_amf_dt_SensorMeasConfig2
{
	SensorMeasConfig_setup_val
} SI_AMF_DT_SensorMeasConfig2;


// L:2469
typedef struct __si_amf_dt_SensorMeasConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SensorMeasConfig_EnumProxy;


// SensorMeasConfigNameList
//SEQUENCE OF SensorMeasConfigNameItem, MIN=1, MAX=maxnoofSensorName  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SensorMeasConfigNameList
{
	SI_LinkedList * SensorMeasConfigNameItem;
} SI_AMF_DT_SensorMeasConfigNameList;


// SensorMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SensorMeasurementConfiguration
{
	uint8_t selected_esensorMeasConfig;
	int extSelected_esensorMeasConfig;

	SI_AMF_DT_SensorMeasConfigNameList * sensorMeasConfigNameList;
	int isPresent_sensorMeasConfigNameList;

} SI_AMF_DT_SensorMeasurementConfiguration;


// ImmediateMDTNr
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ImmediateMDTNr
{
	SI_AMF_DT_MeasurementsToActivate * measurementsToActivate;

	SI_AMF_DT_M1Configuration * m1Configuration;
	int isPresent_m1Configuration;

	SI_AMF_DT_M4Configuration * m4Configuration;
	int isPresent_m4Configuration;

	SI_AMF_DT_M5Configuration * m5Configuration;
	int isPresent_m5Configuration;

	SI_AMF_DT_M6Configuration * m6Configuration;
	int isPresent_m6Configuration;

	SI_AMF_DT_M7Configuration * m7Configuration;
	int isPresent_m7Configuration;

	SI_AMF_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int isPresent_bluetoothMeasurementConfiguration;

	SI_AMF_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int isPresent_wLANMeasurementConfiguration;

	SI_AMF_DT_MDT_Location_Info * mDT_Location_Info;
	int isPresent_mDT_Location_Info;

	SI_AMF_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int isPresent_sensorMeasurementConfiguration;

} SI_AMF_DT_ImmediateMDTNr;


// InterSystemFailureIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_InterSystemFailureIndication
{
	SI_AMF_DT_UERLFReportContainer * uERLFReportContainer;
	int isPresent_uERLFReportContainer;

} SI_AMF_DT_InterSystemFailureIndication;


// IntersystemSONTransferType
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_IntersystemSONTransferType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_FromEUTRANtoNGRAN * fromEUTRANtoNGRAN;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_FromNGRANtoEUTRAN * fromNGRANtoEUTRAN;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_IntersystemSONTransferType;


// TooearlyIntersystemHO
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TooearlyIntersystemHO
{
	SI_AMF_DT_EUTRA_CGI * sourcecellID;

	SI_AMF_DT_NGRAN_CGI * failurecellID;

	SI_AMF_DT_UERLFReportContainer * uERLFReportContainer;
	int isPresent_uERLFReportContainer;

} SI_AMF_DT_TooearlyIntersystemHO;


// IntersystemUnnecessaryHO_earlyIRATHO
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IntersystemUnnecessaryHO_earlyIRATHO
{
	__si_amf__IntersystemUnnecessaryHO_earlyIRATHO_true_val,
	__si_amf__IntersystemUnnecessaryHO_earlyIRATHO_false_val
} SI_AMF_DT_IntersystemUnnecessaryHO_earlyIRATHO;


// L:2442
typedef enum __si_amf_dt_IntersystemUnnecessaryHO_earlyIRATHO2
{
	IntersystemUnnecessaryHO_earlyIRATHO_true_val,
	IntersystemUnnecessaryHO_earlyIRATHO_false_val
} SI_AMF_DT_IntersystemUnnecessaryHO_earlyIRATHO2;


// L:2469
typedef struct __si_amf_dt_IntersystemUnnecessaryHO_earlyIRATHO_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IntersystemUnnecessaryHO_earlyIRATHO_EnumProxy;


// IntersystemUnnecessaryHO
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemUnnecessaryHO
{
	SI_AMF_DT_NGRAN_CGI * sourcecellID;

	SI_AMF_DT_EUTRA_CGI * targetcellID;

	uint8_t selected_eearlyIRATHO;
	int extSelected_eearlyIRATHO;

	SI_AMF_DT_CandidateCellList * candidateCellList;

} SI_AMF_DT_IntersystemUnnecessaryHO;


// InterSystemHandoverReportType
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_InterSystemHandoverReportType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TooearlyIntersystemHO * tooearlyIntersystemHO;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_IntersystemUnnecessaryHO * intersystemUnnecessaryHO;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_InterSystemHandoverReportType;


// InterSystemHOReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_InterSystemHOReport
{
	SI_AMF_DT_InterSystemHandoverReportType * handoverReportType;

} SI_AMF_DT_InterSystemHOReport;


// IntersystemSONInformationReport
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_IntersystemSONInformationReport
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_InterSystemHOReport * hOReportInformation;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_InterSystemFailureIndication * failureIndicationInformation;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_IntersystemSONInformationReport;


// IntersystemSONInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_IntersystemSONInformation
{
	union 
	{
		// ParserName = CHOICE - NonEP false;
		SI_AMF_DT_IntersystemSONInformationReport * intersystemSONInformationReport;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_IntersystemSONInformation;


// IntersystemSONConfigurationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemSONConfigurationTransfer
{
	SI_AMF_DT_IntersystemSONTransferType * transferType;

	SI_AMF_DT_IntersystemSONInformation * intersystemSONInformation;

} SI_AMF_DT_IntersystemSONConfigurationTransfer;


// IntersystemCellActivationRequest_activationID
// INTEGER,INTEGER(0..16384,...),MIN=0,MAX=16384  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_IntersystemCellActivationRequest_activationID
{
	unsigned long long int data;
} SI_AMF_DT_IntersystemCellActivationRequest_activationID;

// CellsToActivateList
//SEQUENCE OF NGRAN-CGI, MIN=1, MAX=maxnoofCellsinNGRANNode  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_CellsToActivateList
{
	SI_LinkedList * NGRAN_CGI;
} SI_AMF_DT_CellsToActivateList;


// IntersystemCellActivationRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemCellActivationRequest
{
	unsigned long long int activationID;

	SI_AMF_DT_CellsToActivateList * cellsToActivateList;

} SI_AMF_DT_IntersystemCellActivationRequest;


// EUTRAN-CellToReportList
//SEQUENCE OF EUTRAN-CellToReportItem, MIN=1, MAX=maxnoofReportedCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EUTRAN_CellToReportList
{
	SI_LinkedList * EUTRAN_CellToReportItem;
} SI_AMF_DT_EUTRAN_CellToReportList;


// EUTRAN-ReportingSystemIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_ReportingSystemIEs
{
	SI_AMF_DT_EUTRAN_CellToReportList * eUTRAN_CellToReportList;

} SI_AMF_DT_EUTRAN_ReportingSystemIEs;


// NGRAN-CellToReportList
//SEQUENCE OF NGRAN-CellToReportItem, MIN=1, MAX= maxnoofReportedCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NGRAN_CellToReportList
{
	SI_LinkedList * NGRAN_CellToReportItem;
} SI_AMF_DT_NGRAN_CellToReportList;


// NGRAN-ReportingSystemIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_ReportingSystemIEs
{
	SI_AMF_DT_NGRAN_CellToReportList * nGRAN_CellToReportList;

} SI_AMF_DT_NGRAN_ReportingSystemIEs;


// ReportingSystem
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ReportingSystem
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_EUTRAN_ReportingSystemIEs * eUTRAN;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_NGRAN_ReportingSystemIEs * nGRAN;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int noReporting;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ReportingSystem_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ReportingSystem;


// ReportCharacteristics
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ReportCharacteristics
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ReportCharacteristics;

// IntersystemResourceThreshold
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_IntersystemResourceThreshold
{
	unsigned long long int data;
} SI_AMF_DT_IntersystemResourceThreshold;

// NumberOfMeasurementReportingLevels
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NumberOfMeasurementReportingLevels
{
	__si_amf__NumberOfMeasurementReportingLevels_n2_val,
	__si_amf__NumberOfMeasurementReportingLevels_n3_val,
	__si_amf__NumberOfMeasurementReportingLevels_n4_val,
	__si_amf__NumberOfMeasurementReportingLevels_n5_val,
	__si_amf__NumberOfMeasurementReportingLevels_n10_val,
	__si_amf__NumberOfMeasurementReportingLevels_n0_val_ext
} SI_AMF_DT_NumberOfMeasurementReportingLevels;


// L:2442
typedef enum __si_amf_dt_NumberOfMeasurementReportingLevels2
{
	NumberOfMeasurementReportingLevels_n2_val,
	NumberOfMeasurementReportingLevels_n3_val,
	NumberOfMeasurementReportingLevels_n4_val,
	NumberOfMeasurementReportingLevels_n5_val,
	NumberOfMeasurementReportingLevels_n10_val,
	NumberOfMeasurementReportingLevels_n0_val_ext
} SI_AMF_DT_NumberOfMeasurementReportingLevels2;


// L:2469
typedef struct __si_amf_dt_NumberOfMeasurementReportingLevels_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NumberOfMeasurementReportingLevels_EnumProxy;


// EventBasedReportingIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EventBasedReportingIEs
{
	unsigned long long int intersystemResourceThresholdLow;

	unsigned long long int intersystemResourceThresholdHigh;

	uint8_t selected_enumberOfMeasurementReportingLevels;
	int extSelected_enumberOfMeasurementReportingLevels;

} SI_AMF_DT_EventBasedReportingIEs;


// ReportingPeriodicity
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ReportingPeriodicity
{
	__si_amf__ReportingPeriodicity_stop_val,
	__si_amf__ReportingPeriodicity_single_val,
	__si_amf__ReportingPeriodicity_ms1000_val,
	__si_amf__ReportingPeriodicity_ms2000_val,
	__si_amf__ReportingPeriodicity_ms5000_val,
	__si_amf__ReportingPeriodicity_ms10000_val
} SI_AMF_DT_ReportingPeriodicity;


// L:2442
typedef enum __si_amf_dt_ReportingPeriodicity2
{
	ReportingPeriodicity_stop_val,
	ReportingPeriodicity_single_val,
	ReportingPeriodicity_ms1000_val,
	ReportingPeriodicity_ms2000_val,
	ReportingPeriodicity_ms5000_val,
	ReportingPeriodicity_ms10000_val
} SI_AMF_DT_ReportingPeriodicity2;


// L:2469
typedef struct __si_amf_dt_ReportingPeriodicity_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ReportingPeriodicity_EnumProxy;


// PeriodicReportingIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PeriodicReportingIEs
{
	uint8_t selected_ereportingPeriodicity;
	int extSelected_ereportingPeriodicity;

} SI_AMF_DT_PeriodicReportingIEs;


// ReportType
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ReportType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_EventBasedReportingIEs * eventBasedReporting;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_PeriodicReportingIEs * periodicReporting;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ReportType_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ReportType;


// IntersystemResourceStatusRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemResourceStatusRequest
{
	SI_AMF_DT_ReportingSystem * reportingSystem;

	SI_AMF_DT_ReportCharacteristics * reportCharacteristics;

	SI_AMF_DT_ReportType * reportType;

} SI_AMF_DT_IntersystemResourceStatusRequest;


// IntersystemSONInformationRequest
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_IntersystemSONInformationRequest
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_IntersystemCellActivationRequest * nGRAN_CellActivation;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_IntersystemResourceStatusRequest * resourceStatus;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_IntersystemSONInformationRequest;


// EUTRAN-CellToReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_CellToReportItem
{
	SI_AMF_DT_EUTRA_CGI * eCGI;

} SI_AMF_DT_EUTRAN_CellToReportItem;


// NGRAN-CellToReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_CellToReportItem
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

} SI_AMF_DT_NGRAN_CellToReportItem;


// ActivatedCellList
//SEQUENCE OF NGRAN-CGI, MIN=1, MAX=maxnoofCellsinNGRANNode  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ActivatedCellList
{
	SI_LinkedList * NGRAN_CGI;
} SI_AMF_DT_ActivatedCellList;


// IntersystemCellActivationReply_activation-ID
// INTEGER,INTEGER(0..16384,...),MIN=0,MAX=16384  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_IntersystemCellActivationReply_activation_ID
{
	unsigned long long int data;
} SI_AMF_DT_IntersystemCellActivationReply_activation_ID;

// IntersystemCellActivationReply
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemCellActivationReply
{
	SI_AMF_DT_ActivatedCellList * activatedCellList;

	unsigned long long int activation_ID;

} SI_AMF_DT_IntersystemCellActivationReply;


// IntersystemResourceStatusReply
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemResourceStatusReply
{
	SI_AMF_DT_ReportingSystem * reportingsystem;

} SI_AMF_DT_IntersystemResourceStatusReply;


// IntersystemSONInformationReply
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_IntersystemSONInformationReply
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_IntersystemCellActivationReply * nGRAN_CellActivation;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_IntersystemResourceStatusReply * resourceStatus;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_IntersystemSONInformationReply;


// NotificationCellList
//SEQUENCE OF NotificationCell-Item, MIN=1, MAX= maxnoofCellsinNGRANNode  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NotificationCellList
{
	SI_LinkedList * NotificationCell_Item;
} SI_AMF_DT_NotificationCellList;


// IntersystemCellStateIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemCellStateIndication
{
	SI_AMF_DT_NotificationCellList * notificationCellList;

} SI_AMF_DT_IntersystemCellStateIndication;


// NotificationCellItem_notifyFlag
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NotificationCellItem_notifyFlag
{
	__si_amf__NotificationCellItem_notifyFlag_activated_val,
	__si_amf__NotificationCellItem_notifyFlag_deactivated_val
} SI_AMF_DT_NotificationCellItem_notifyFlag;


// L:2442
typedef enum __si_amf_dt_NotificationCellItem_notifyFlag2
{
	NotificationCellItem_notifyFlag_activated_val,
	NotificationCellItem_notifyFlag_deactivated_val
} SI_AMF_DT_NotificationCellItem_notifyFlag2;


// L:2469
typedef struct __si_amf_dt_NotificationCellItem_notifyFlag_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NotificationCellItem_notifyFlag_EnumProxy;


// NotificationCell-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NotificationCell_Item
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

	uint8_t selected_enotifyFlag;
	int extSelected_enotifyFlag;

} SI_AMF_DT_NotificationCell_Item;


// EUTRAN-CellReportList
//SEQUENCE OF EUTRAN-CellReportItem, MIN=1, MAX=maxnoofReportedCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_EUTRAN_CellReportList
{
	SI_LinkedList * EUTRAN_CellReportItem;
} SI_AMF_DT_EUTRAN_CellReportList;


// EUTRAN-ReportingStatusIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_ReportingStatusIEs
{
	SI_AMF_DT_EUTRAN_CellReportList * eUTRAN_CellReportList;

} SI_AMF_DT_EUTRAN_ReportingStatusIEs;


// NGRAN-CellReportList
//SEQUENCE OF NGRAN-CellReportItem, MIN=1, MAX=maxnoofReportedCells  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NGRAN_CellReportList
{
	SI_LinkedList * NGRAN_CellReportItem;
} SI_AMF_DT_NGRAN_CellReportList;


// NGRAN-ReportingStatusIEs
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_ReportingStatusIEs
{
	SI_AMF_DT_NGRAN_CellReportList * nGRAN_CellReportList;

} SI_AMF_DT_NGRAN_ReportingStatusIEs;


// ResourceStatusReportingSystem
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ResourceStatusReportingSystem
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_EUTRAN_ReportingStatusIEs * eUTRAN_ReportingStatus;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_NGRAN_ReportingStatusIEs * nGRAN_ReportingStatus;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ResourceStatusReportingSystem;


// IntersystemResourceStatusReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemResourceStatusReport
{
	SI_AMF_DT_ResourceStatusReportingSystem * reportingSystem;

} SI_AMF_DT_IntersystemResourceStatusReport;


// CompositeAvailableCapacity_cellCapacityClassValue
// INTEGER,INTEGER(1..100,...),MIN=1,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_CompositeAvailableCapacity_cellCapacityClassValue
{
	unsigned long long int data;
} SI_AMF_DT_CompositeAvailableCapacity_cellCapacityClassValue;

// CompositeAvailableCapacity_capacityValue
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_CompositeAvailableCapacity_capacityValue
{
	unsigned long long int data;
} SI_AMF_DT_CompositeAvailableCapacity_capacityValue;

// CompositeAvailableCapacity
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_CompositeAvailableCapacity
{
	unsigned long long int cellCapacityClassValue;
	int isPresent_cellCapacityClassValue;

	unsigned long long int capacityValue;

} SI_AMF_DT_CompositeAvailableCapacity;


// EUTRAN-CompositeAvailableCapacityGroup
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_CompositeAvailableCapacityGroup
{
	SI_AMF_DT_CompositeAvailableCapacity * dL_CompositeAvailableCapacity;

	SI_AMF_DT_CompositeAvailableCapacity * uL_CompositeAvailableCapacity;

} SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup;


// EUTRAN-NumberOfActiveUEs
// INTEGER,INTEGER(0..16777215,...),MIN=0,MAX=16777215  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRAN_NumberOfActiveUEs
{
	unsigned long long int data;
} SI_AMF_DT_EUTRAN_NumberOfActiveUEs;

// NGRAN-NoofRRCConnections
// INTEGER,INTEGER(1..65536,...),MIN=1,MAX=65536  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRAN_NoofRRCConnections
{
	unsigned long long int data;
} SI_AMF_DT_NGRAN_NoofRRCConnections;

// EUTRANRadioResourceStatus_dL-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_GBR_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_dL_GBR_PRB_usage;

// EUTRANRadioResourceStatus_uL-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_GBR_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_uL_GBR_PRB_usage;

// EUTRANRadioResourceStatus_dL-non-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage;

// EUTRANRadioResourceStatus_uL-non-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage;

// EUTRANRadioResourceStatus_dL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_Total_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_dL_Total_PRB_usage;

// EUTRANRadioResourceStatus_uL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_Total_PRB_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_uL_Total_PRB_usage;

// EUTRANRadioResourceStatus_dL-scheduling-PDCCH-CCE-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage;

// EUTRANRadioResourceStatus_uL-scheduling-PDCCH-CCE-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage
{
	unsigned long long int data;
} SI_AMF_DT_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage;

// EUTRAN-RadioResourceStatus
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_RadioResourceStatus
{
	unsigned long long int dL_GBR_PRB_usage;

	unsigned long long int uL_GBR_PRB_usage;

	unsigned long long int dL_non_GBR_PRB_usage;

	unsigned long long int uL_non_GBR_PRB_usage;

	unsigned long long int dL_Total_PRB_usage;

	unsigned long long int uL_Total_PRB_usage;

	unsigned long long int dL_scheduling_PDCCH_CCE_usage;
	int isPresent_dL_scheduling_PDCCH_CCE_usage;

	unsigned long long int uL_scheduling_PDCCH_CCE_usage;
	int isPresent_uL_scheduling_PDCCH_CCE_usage;

} SI_AMF_DT_EUTRAN_RadioResourceStatus;


// EUTRAN-CellReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_EUTRAN_CellReportItem
{
	SI_AMF_DT_EUTRA_CGI * eCGI;

	SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup * eUTRAN_CompositeAvailableCapacityGroup;

	unsigned long long int eUTRAN_NumberOfActiveUEs;
	int isPresent_eUTRAN_NumberOfActiveUEs;

	unsigned long long int eUTRAN_NoofRRCConnections;
	int isPresent_eUTRAN_NoofRRCConnections;

	SI_AMF_DT_EUTRAN_RadioResourceStatus * eUTRAN_RadioResourceStatus;
	int isPresent_eUTRAN_RadioResourceStatus;

} SI_AMF_DT_EUTRAN_CellReportItem;


// NGRAN-NumberOfActiveUEs
// INTEGER,INTEGER(0..16777215,...),MIN=0,MAX=16777215  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRAN_NumberOfActiveUEs
{
	unsigned long long int data;
} SI_AMF_DT_NGRAN_NumberOfActiveUEs;

// NGRANRadioResourceStatus_dL-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO;

// NGRANRadioResourceStatus_uL-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO;

// NGRANRadioResourceStatus_dL-non-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO;

// NGRANRadioResourceStatus_uL-non-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO;

// NGRANRadioResourceStatus_dL-Total-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO;

// NGRANRadioResourceStatus_uL-Total-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_AMF_DT_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO;

// NGRAN-RadioResourceStatus
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_RadioResourceStatus
{
	unsigned long long int dL_GBR_PRB_usage_for_MIMO;

	unsigned long long int uL_GBR_PRB_usage_for_MIMO;

	unsigned long long int dL_non_GBR_PRB_usage_for_MIMO;

	unsigned long long int uL_non_GBR_PRB_usage_for_MIMO;

	unsigned long long int dL_Total_PRB_usage_for_MIMO;

	unsigned long long int uL_Total_PRB_usage_for_MIMO;

} SI_AMF_DT_NGRAN_RadioResourceStatus;


// NGRAN-CellReportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_CellReportItem
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

	SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup * nGRAN_CompositeAvailableCapacityGroup;

	unsigned long long int nGRAN_NumberOfActiveUEs;
	int isPresent_nGRAN_NumberOfActiveUEs;

	unsigned long long int nGRAN_NoofRRCConnections;
	int isPresent_nGRAN_NoofRRCConnections;

	SI_AMF_DT_NGRAN_RadioResourceStatus * nGRAN_RadioResourceStatus;
	int isPresent_nGRAN_RadioResourceStatus;

} SI_AMF_DT_NGRAN_CellReportItem;


// IntersystemMobilityFailureforVoiceFallback
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_IntersystemMobilityFailureforVoiceFallback
{
	SI_AMF_DT_NGRAN_CGI * sourcecellID;

	SI_AMF_DT_EUTRA_CGI * targetcellID;

	SI_AMF_DT_EUTRA_CGI * reconnectCellID;
	int isPresent_reconnectCellID;

	SI_AMF_DT_UERLFReportContainer * uERLFReportContainer;
	int isPresent_uERLFReportContainer;

} SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback;


// LAC
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_LAC
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_LAC;

// LAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LAI
{
	SI_AMF_DT_PLMNIdentity * pLMNidentity;

	SI_AMF_DT_LAC * lAC;

} SI_AMF_DT_LAI;


// TimeUEStayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TimeUEStayedInCell
{
	unsigned long long int data;
} SI_AMF_DT_TimeUEStayedInCell;

// TimeUEStayedInCellEnhancedGranularity
// INTEGER,INTEGER(0..40950),MIN=0,MAX=40950  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TimeUEStayedInCellEnhancedGranularity
{
	unsigned long long int data;
} SI_AMF_DT_TimeUEStayedInCellEnhancedGranularity;

// LastVisitedNGRANCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LastVisitedNGRANCellInformation
{
	SI_AMF_DT_NGRAN_CGI * globalCellID;

	SI_AMF_DT_CellType * cellType;

	unsigned long long int timeUEStayedInCell;

	unsigned long long int timeUEStayedInCellEnhancedGranularity;
	int isPresent_timeUEStayedInCellEnhancedGranularity;

	SI_AMF_DT_Cause * hOCauseValue;
	int isPresent_hOCauseValue;

} SI_AMF_DT_LastVisitedNGRANCellInformation;


// LastVisitedEUTRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_LastVisitedEUTRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_LastVisitedEUTRANCellInformation;

// LastVisitedUTRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_LastVisitedUTRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_LastVisitedUTRANCellInformation;

// LastVisitedGERANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_LastVisitedGERANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_LastVisitedGERANCellInformation;

// LastVisitedCellInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_LastVisitedCellInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_LastVisitedNGRANCellInformation * nGRANCell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_LastVisitedEUTRANCellInformation * eUTRANCell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_LastVisitedUTRANCellInformation * uTRANCell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_LastVisitedGERANCellInformation * gERANCell;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_LastVisitedCellInformation;


// LastVisitedCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LastVisitedCellItem
{
	SI_AMF_DT_LastVisitedCellInformation * lastVisitedCellInformation;

} SI_AMF_DT_LastVisitedCellItem;


// LastVisitedPSCellList
//SEQUENCE OF LastVisitedPSCellInformation, MIN=1, MAX=maxnoofPSCellsPerPrimaryCellinUEHistoryInfo  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_LastVisitedPSCellList
{
	SI_LinkedList * LastVisitedPSCellInformation;
} SI_AMF_DT_LastVisitedPSCellList;


// LastVisitedPSCellInformation_timeStay
// INTEGER,INTEGER(0..40950),MIN=0,MAX=40950  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_LastVisitedPSCellInformation_timeStay
{
	unsigned long long int data;
} SI_AMF_DT_LastVisitedPSCellInformation_timeStay;

// LastVisitedPSCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LastVisitedPSCellInformation
{
	SI_AMF_DT_NGRAN_CGI * pSCellID;
	int isPresent_pSCellID;

	unsigned long long int timeStay;

} SI_AMF_DT_LastVisitedPSCellInformation;


// LocationReportingAdditionalInfo
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LocationReportingAdditionalInfo
{
	__si_amf__LocationReportingAdditionalInfo_includePSCell_val
} SI_AMF_DT_LocationReportingAdditionalInfo;


// L:2442
typedef enum __si_amf_dt_LocationReportingAdditionalInfo2
{
	LocationReportingAdditionalInfo_includePSCell_val
} SI_AMF_DT_LocationReportingAdditionalInfo2;


// L:2469
typedef struct __si_amf_dt_LocationReportingAdditionalInfo_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LocationReportingAdditionalInfo_EnumProxy;


// ReportArea
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ReportArea
{
	__si_amf__ReportArea_cell_val
} SI_AMF_DT_ReportArea;


// L:2442
typedef enum __si_amf_dt_ReportArea2
{
	ReportArea_cell_val
} SI_AMF_DT_ReportArea2;


// L:2469
typedef struct __si_amf_dt_ReportArea_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ReportArea_EnumProxy;


// LocationReportingRequestType
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LocationReportingRequestType
{
	uint8_t selected_eeventType;
	int extSelected_eeventType;

	uint8_t selected_ereportArea;
	int extSelected_ereportArea;

	SI_AMF_DT_AreaOfInterestList * areaOfInterestList;
	int isPresent_areaOfInterestList;

	unsigned long long int locationReportingReferenceIDToBeCancelled;
	int isPresent_locationReportingReferenceIDToBeCancelled;

} SI_AMF_DT_LocationReportingRequestType;


// LoggingInterval
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LoggingInterval
{
	__si_amf__LoggingInterval_ms320_val,
	__si_amf__LoggingInterval_ms640_val,
	__si_amf__LoggingInterval_ms1280_val,
	__si_amf__LoggingInterval_ms2560_val,
	__si_amf__LoggingInterval_ms5120_val,
	__si_amf__LoggingInterval_ms10240_val,
	__si_amf__LoggingInterval_ms20480_val,
	__si_amf__LoggingInterval_ms30720_val,
	__si_amf__LoggingInterval_ms40960_val,
	__si_amf__LoggingInterval_ms61440_val,
	__si_amf__LoggingInterval_infinity_val
} SI_AMF_DT_LoggingInterval;


// L:2442
typedef enum __si_amf_dt_LoggingInterval2
{
	LoggingInterval_ms320_val,
	LoggingInterval_ms640_val,
	LoggingInterval_ms1280_val,
	LoggingInterval_ms2560_val,
	LoggingInterval_ms5120_val,
	LoggingInterval_ms10240_val,
	LoggingInterval_ms20480_val,
	LoggingInterval_ms30720_val,
	LoggingInterval_ms40960_val,
	LoggingInterval_ms61440_val,
	LoggingInterval_infinity_val
} SI_AMF_DT_LoggingInterval2;


// L:2469
typedef struct __si_amf_dt_LoggingInterval_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LoggingInterval_EnumProxy;


// LoggingDuration
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LoggingDuration
{
	__si_amf__LoggingDuration_m10_val,
	__si_amf__LoggingDuration_m20_val,
	__si_amf__LoggingDuration_m40_val,
	__si_amf__LoggingDuration_m60_val,
	__si_amf__LoggingDuration_m90_val,
	__si_amf__LoggingDuration_m120_val
} SI_AMF_DT_LoggingDuration;


// L:2442
typedef enum __si_amf_dt_LoggingDuration2
{
	LoggingDuration_m10_val,
	LoggingDuration_m20_val,
	LoggingDuration_m40_val,
	LoggingDuration_m60_val,
	LoggingDuration_m90_val,
	LoggingDuration_m120_val
} SI_AMF_DT_LoggingDuration2;


// L:2469
typedef struct __si_amf_dt_LoggingDuration_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LoggingDuration_EnumProxy;


// LoggedMDTTrigger
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_LoggedMDTTrigger
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int periodical;

		// ParserName = CHOICE - NonEP false;
		SI_AMF_DT_EventTrigger * eventTrigger;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_LoggedMDTTrigger;


// LoggedMDTNr
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LoggedMDTNr
{
	uint8_t selected_eloggingInterval;
	int extSelected_eloggingInterval;

	uint8_t selected_eloggingDuration;
	int extSelected_eloggingDuration;

	SI_AMF_DT_LoggedMDTTrigger * loggedMDTTrigger;

	SI_AMF_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int isPresent_bluetoothMeasurementConfiguration;

	SI_AMF_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int isPresent_wLANMeasurementConfiguration;

	SI_AMF_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int isPresent_sensorMeasurementConfiguration;

	SI_AMF_DT_AreaScopeOfNeighCellsList * areaScopeOfNeighCellsList;
	int isPresent_areaScopeOfNeighCellsList;

} SI_AMF_DT_LoggedMDTNr;


// LTEM-Indication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LTEM_Indication
{
	__si_amf__LTEM_Indication_lte_m_val
} SI_AMF_DT_LTEM_Indication;


// L:2442
typedef enum __si_amf_dt_LTEM_Indication2
{
	LTEM_Indication_lte_m_val
} SI_AMF_DT_LTEM_Indication2;


// L:2469
typedef struct __si_amf_dt_LTEM_Indication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LTEM_Indication_EnumProxy;


// VehicleUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_VehicleUE
{
	__si_amf__VehicleUE_authorized_val,
	__si_amf__VehicleUE_not_authorized_val
} SI_AMF_DT_VehicleUE;


// L:2442
typedef enum __si_amf_dt_VehicleUE2
{
	VehicleUE_authorized_val,
	VehicleUE_not_authorized_val
} SI_AMF_DT_VehicleUE2;


// L:2469
typedef struct __si_amf_dt_VehicleUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_VehicleUE_EnumProxy;


// PedestrianUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PedestrianUE
{
	__si_amf__PedestrianUE_authorized_val,
	__si_amf__PedestrianUE_not_authorized_val
} SI_AMF_DT_PedestrianUE;


// L:2442
typedef enum __si_amf_dt_PedestrianUE2
{
	PedestrianUE_authorized_val,
	PedestrianUE_not_authorized_val
} SI_AMF_DT_PedestrianUE2;


// L:2469
typedef struct __si_amf_dt_PedestrianUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PedestrianUE_EnumProxy;


// LTEV2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LTEV2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_AMF_DT_LTEV2XServicesAuthorized;


// LTEUESidelinkAggregateMaximumBitrate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LTEUESidelinkAggregateMaximumBitrate
{
	unsigned long long int uESidelinkAggregateMaximumBitRate;

} SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate;


// LTEA2XServicesAuthorized_aerialUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LTEA2XServicesAuthorized_aerialUE
{
	__si_amf__LTEA2XServicesAuthorized_aerialUE_authorized_val,
	__si_amf__LTEA2XServicesAuthorized_aerialUE_not_authorized_val
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialUE;


// L:2442
typedef enum __si_amf_dt_LTEA2XServicesAuthorized_aerialUE2
{
	LTEA2XServicesAuthorized_aerialUE_authorized_val,
	LTEA2XServicesAuthorized_aerialUE_not_authorized_val
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialUE2;


// L:2469
typedef struct __si_amf_dt_LTEA2XServicesAuthorized_aerialUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialUE_EnumProxy;


// LTEA2XServicesAuthorized_aerialControllerUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_LTEA2XServicesAuthorized_aerialControllerUE
{
	__si_amf__LTEA2XServicesAuthorized_aerialControllerUE_authorized_val,
	__si_amf__LTEA2XServicesAuthorized_aerialControllerUE_not_authorized_val
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialControllerUE;


// L:2442
typedef enum __si_amf_dt_LTEA2XServicesAuthorized_aerialControllerUE2
{
	LTEA2XServicesAuthorized_aerialControllerUE_authorized_val,
	LTEA2XServicesAuthorized_aerialControllerUE_not_authorized_val
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialControllerUE2;


// L:2469
typedef struct __si_amf_dt_LTEA2XServicesAuthorized_aerialControllerUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_LTEA2XServicesAuthorized_aerialControllerUE_EnumProxy;


// LTE-A2X-ServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_LTE_A2X_ServicesAuthorized
{
	uint8_t selected_eaerialUE;
	int extSelected_eaerialUE;
	int isPresent_aerialUE;

	uint8_t selected_eaerialControllerUE;
	int extSelected_eaerialControllerUE;
	int isPresent_aerialControllerUE;

} SI_AMF_DT_LTE_A2X_ServicesAuthorized;


// MaskedIMEISV
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_MaskedIMEISV
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_MaskedIMEISV;

// MessageIdentifier
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_MessageIdentifier
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_MessageIdentifier;

// MaximumIntegrityProtectedDataRate
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MaximumIntegrityProtectedDataRate
{
	__si_amf__MaximumIntegrityProtectedDataRate_bitrate64kbs_val,
	__si_amf__MaximumIntegrityProtectedDataRate_maximum_UE_rate_val
} SI_AMF_DT_MaximumIntegrityProtectedDataRate;


// L:2442
typedef enum __si_amf_dt_MaximumIntegrityProtectedDataRate2
{
	MaximumIntegrityProtectedDataRate_bitrate64kbs_val,
	MaximumIntegrityProtectedDataRate_maximum_UE_rate_val
} SI_AMF_DT_MaximumIntegrityProtectedDataRate2;


// L:2469
typedef struct __si_amf_dt_MaximumIntegrityProtectedDataRate_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MaximumIntegrityProtectedDataRate_EnumProxy;


// MBS-AreaSessionID
// INTEGER,INTEGER(0..65535,...),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MBS_AreaSessionID
{
	unsigned long long int data;
} SI_AMF_DT_MBS_AreaSessionID;

// MBSCommServiceType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MBSCommServiceType
{
	__si_amf__MBSCommServiceType_broadcast_val,
	__si_amf__MBSCommServiceType_multicast_val
} SI_AMF_DT_MBSCommServiceType;


// L:2442
typedef enum __si_amf_dt_MBSCommServiceType2
{
	MBSCommServiceType_broadcast_val,
	MBSCommServiceType_multicast_val
} SI_AMF_DT_MBSCommServiceType2;


// L:2469
typedef struct __si_amf_dt_MBSCommServiceType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MBSCommServiceType_EnumProxy;


// MBS-DataForwardingResponseMRBList
//SEQUENCE OF MBS-DataForwardingResponseMRBItem, MIN=1, MAX=maxnoofMRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBList
{
	SI_LinkedList * MBS_DataForwardingResponseMRBItem;
} SI_AMF_DT_MBS_DataForwardingResponseMRBList;


// MRB-ID
// INTEGER,INTEGER(1..512,...),MIN=1,MAX=512  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MRB_ID
{
	unsigned long long int data;
} SI_AMF_DT_MRB_ID;

// MRBProgressInformation_pDCP-SN-Length12
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MRBProgressInformation_pDCP_SN_Length12
{
	unsigned long long int data;
} SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length12;

// MRBProgressInformation_pDCP-SN-Length18
// INTEGER,INTEGER(0..262143),MIN=0,MAX=262143  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_MRBProgressInformation_pDCP_SN_Length18
{
	unsigned long long int data;
} SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length18;

// MRB-ProgressInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MRB_ProgressInformation
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int pDCP_SN_Length12;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int pDCP_SN_Length18;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MRB_ProgressInformation;


// MBS-DataForwardingResponseMRBItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBItem
{
	unsigned long long int mRB_ID;

	SI_AMF_DT_UPTransportLayerInformation * dL_Forwarding_UPTNLInformation;

	SI_AMF_DT_MRB_ProgressInformation * mRB_ProgressInformation;
	int isPresent_mRB_ProgressInformation;

} SI_AMF_DT_MBS_DataForwardingResponseMRBItem;


// MBS-MappingandDataForwardingRequestList
//SEQUENCE OF MBS-MappingandDataForwardingRequestItem, MIN=1, MAX=maxnoofMRBs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestList
{
	SI_LinkedList * MBS_MappingandDataForwardingRequestItem;
} SI_AMF_DT_MBS_MappingandDataForwardingRequestList;


// MBS-QoSFlowList
//SEQUENCE OF QosFlowIdentifier, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_QoSFlowList
{
	SI_LinkedList * QosFlowIdentifier;
} SI_AMF_DT_MBS_QoSFlowList;


// MBS-MappingandDataForwardingRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestItem
{
	unsigned long long int mRB_ID;

	SI_AMF_DT_MBS_QoSFlowList * mBS_QoSFlowList;

	SI_AMF_DT_MRB_ProgressInformation * mRB_ProgressInformation;
	int isPresent_mRB_ProgressInformation;

} SI_AMF_DT_MBS_MappingandDataForwardingRequestItem;


// MBS-QoSFlowsToBeSetupList
//SEQUENCE OF MBS-QoSFlowsToBeSetupItem, MIN=1, MAX= maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupList
{
	SI_LinkedList * MBS_QoSFlowsToBeSetupItem;
} SI_AMF_DT_MBS_QoSFlowsToBeSetupList;


// NonDynamic5QIDescriptor
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NonDynamic5QIDescriptor
{
	unsigned long long int fiveQI;

	unsigned long long int priorityLevelQos;
	int isPresent_priorityLevelQos;

	unsigned long long int averagingWindow;
	int isPresent_averagingWindow;

	unsigned long long int maximumDataBurstVolume;
	int isPresent_maximumDataBurstVolume;

} SI_AMF_DT_NonDynamic5QIDescriptor;


// QosCharacteristics
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_QosCharacteristics
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_NonDynamic5QIDescriptor * nonDynamic5QI;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_Dynamic5QIDescriptor * dynamic5QI;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_QosCharacteristics_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_QosCharacteristics;


// ReflectiveQosAttribute
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ReflectiveQosAttribute
{
	__si_amf__ReflectiveQosAttribute_subject_to_val
} SI_AMF_DT_ReflectiveQosAttribute;


// L:2442
typedef enum __si_amf_dt_ReflectiveQosAttribute2
{
	ReflectiveQosAttribute_subject_to_val
} SI_AMF_DT_ReflectiveQosAttribute2;


// L:2469
typedef struct __si_amf_dt_ReflectiveQosAttribute_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ReflectiveQosAttribute_EnumProxy;


// QosFlowLevelQosParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowLevelQosParameters
{
	SI_AMF_DT_QosCharacteristics * qosCharacteristics;

	SI_AMF_DT_AllocationAndRetentionPriority * allocationAndRetentionPriority;

	SI_AMF_DT_GBR_QosInformation * gBR_QosInformation;
	int isPresent_gBR_QosInformation;

	uint8_t selected_ereflectiveQosAttribute;
	int extSelected_ereflectiveQosAttribute;
	int isPresent_reflectiveQosAttribute;

	uint8_t selected_eadditionalQosFlowInformation;
	int extSelected_eadditionalQosFlowInformation;
	int isPresent_additionalQosFlowInformation;

} SI_AMF_DT_QosFlowLevelQosParameters;


// MBS-QoSFlowsToBeSetupItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupItem
{
	unsigned long long int mBSqosFlowIdentifier;

	SI_AMF_DT_QosFlowLevelQosParameters * mBSqosFlowLevelQosParameters;

} SI_AMF_DT_MBS_QoSFlowsToBeSetupItem;


// MBS-ServiceAreaCellList
//SEQUENCE OF NR-CGI, MIN=1, MAX= maxnoofCellsforMBS  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_ServiceAreaCellList
{
	SI_LinkedList * NR_CGI;
} SI_AMF_DT_MBS_ServiceAreaCellList;


// MBS-ServiceAreaTAIList
//SEQUENCE OF TAI, MIN=1, MAX= maxnoofTAIforMBS  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_ServiceAreaTAIList
{
	SI_LinkedList * TAI;
} SI_AMF_DT_MBS_ServiceAreaTAIList;


// MBS-ServiceAreaInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_ServiceAreaInformation
{
	SI_AMF_DT_MBS_ServiceAreaCellList * mBS_ServiceAreaCellList;
	int isPresent_mBS_ServiceAreaCellList;

	SI_AMF_DT_MBS_ServiceAreaTAIList * mBS_ServiceAreaTAIList;
	int isPresent_mBS_ServiceAreaTAIList;

} SI_AMF_DT_MBS_ServiceAreaInformation;


// MBS-ServiceAreaInformationList
//SEQUENCE OF MBS-ServiceAreaInformationItem, MIN=1, MAX=maxnoofMBSServiceAreaInformation  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_ServiceAreaInformationList
{
	SI_LinkedList * MBS_ServiceAreaInformationItem;
} SI_AMF_DT_MBS_ServiceAreaInformationList;


// MBS-ServiceArea
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MBS_ServiceArea
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_MBS_ServiceAreaInformation * locationindependent;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_MBS_ServiceAreaInformationList * locationdependent;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MBS_ServiceArea;


// MBS-ServiceAreaInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_ServiceAreaInformationItem
{
	unsigned long long int mBS_AreaSessionID;

	SI_AMF_DT_MBS_ServiceAreaInformation * mBS_ServiceAreaInformation;

} SI_AMF_DT_MBS_ServiceAreaInformationItem;


// MBSSessionFailedtoSetupList
//SEQUENCE OF MBSSessionFailedtoSetupItem, MIN=1, MAX= maxnoofMBSSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBSSessionFailedtoSetupList
{
	SI_LinkedList * MBSSessionFailedtoSetupItem;
} SI_AMF_DT_MBSSessionFailedtoSetupList;


// MBSSessionFailedtoSetupItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionFailedtoSetupItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_MBSSessionFailedtoSetupItem;


// MBS-ActiveSessionInformation-SourcetoTargetList
//SEQUENCE OF MBS-ActiveSessionInformation-SourcetoTargetItem, MIN=1, MAX=maxnoofMBSSessionsofUE  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetList
{
	SI_LinkedList * MBS_ActiveSessionInformation_SourcetoTargetItem;
} SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList;


// MBS-ActiveSessionInformation-SourcetoTargetItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_MBS_ServiceArea * mBS_ServiceArea;
	int isPresent_mBS_ServiceArea;

	SI_AMF_DT_MBS_QoSFlowsToBeSetupList * mBS_QoSFlowsToBeSetupList;

	SI_AMF_DT_MBS_MappingandDataForwardingRequestList * mBS_MappingandDataForwardingRequestList;
	int isPresent_mBS_MappingandDataForwardingRequestList;

} SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem;


// MBS-ActiveSessionInformation-TargettoSourceList
//SEQUENCE OF MBS-ActiveSessionInformation-TargettoSourceItem, MIN=1, MAX=maxnoofMBSSessionsofUE  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceList
{
	SI_LinkedList * MBS_ActiveSessionInformation_TargettoSourceItem;
} SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList;


// MBS-ActiveSessionInformation-TargettoSourceItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	SI_AMF_DT_MBS_DataForwardingResponseMRBList * mBS_DataForwardingResponseMRBList;
	int isPresent_mBS_DataForwardingResponseMRBList;

} SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem;


// MBS-AssistanceInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MBS_AssistanceInformation
{
	__si_amf__MBS_AssistanceInformation_true_val
} SI_AMF_DT_MBS_AssistanceInformation;


// L:2442
typedef enum __si_amf_dt_MBS_AssistanceInformation2
{
	MBS_AssistanceInformation_true_val
} SI_AMF_DT_MBS_AssistanceInformation2;


// L:2469
typedef struct __si_amf_dt_MBS_AssistanceInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MBS_AssistanceInformation_EnumProxy;


// MBSSessionSetupOrModFailureTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionSetupOrModFailureTransfer
{
	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_MBSSessionSetupOrModFailureTransfer;


// MBSSessionSetupResponseList
//SEQUENCE OF MBSSessionSetupResponseItem, MIN=1, MAX= maxnoofMBSSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBSSessionSetupResponseList
{
	SI_LinkedList * MBSSessionSetupResponseItem;
} SI_AMF_DT_MBSSessionSetupResponseList;


// MBSSessionSetupResponseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionSetupResponseItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

} SI_AMF_DT_MBSSessionSetupResponseItem;


// SupportedUETypeList
//SEQUENCE OF SupportedUEType, MIN=1, MAX= maxnoofUETypes  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SupportedUETypeList
{
	SI_LinkedList * SupportedUEType;
} SI_AMF_DT_SupportedUETypeList;


// SupportedUEType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SupportedUEType
{
	__si_amf__SupportedUEType_non_RedCap_eRedCap_UE_val,
	__si_amf__SupportedUEType_redCap_eRedCap_UE_val
} SI_AMF_DT_SupportedUEType;


// L:2442
typedef enum __si_amf_dt_SupportedUEType2
{
	SupportedUEType_non_RedCap_eRedCap_UE_val,
	SupportedUEType_redCap_eRedCap_UE_val
} SI_AMF_DT_SupportedUEType2;


// L:2469
typedef struct __si_amf_dt_SupportedUEType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SupportedUEType_EnumProxy;


// MBS-SessionFSAIDList
//SEQUENCE OF MBS-SessionFSAID, MIN=1, MAX= maxnoofMBSFSAs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_SessionFSAIDList
{
	SI_LinkedList * MBS_SessionFSAID;
} SI_AMF_DT_MBS_SessionFSAIDList;


// MBS-SessionFSAID
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_MBS_SessionFSAID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_MBS_SessionFSAID;

// MBSSessionReleaseResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionReleaseResponseTransfer
{
	SI_AMF_DT_MBS_SessionTNLInfoNGRAN * mBS_SessionTNLInfoNGRAN;
	int isPresent_mBS_SessionTNLInfoNGRAN;

} SI_AMF_DT_MBSSessionReleaseResponseTransfer;


// MBSSessionSetupOrModResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionSetupOrModResponseTransfer
{
	SI_AMF_DT_MBS_SessionTNLInfoNGRAN * mBS_SessionTNLInfoNGRAN;
	int isPresent_mBS_SessionTNLInfoNGRAN;

} SI_AMF_DT_MBSSessionSetupOrModResponseTransfer;


// MBS-SupportIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MBS_SupportIndicator
{
	__si_amf__MBS_SupportIndicator_multicast_supported_val,
	__si_amf__MBS_SupportIndicator_multicast_supported_with_reception_in_RRC_inactive_val_ext
} SI_AMF_DT_MBS_SupportIndicator;


// L:2442
typedef enum __si_amf_dt_MBS_SupportIndicator2
{
	MBS_SupportIndicator_multicast_supported_val,
	MBS_SupportIndicator_multicast_supported_with_reception_in_RRC_inactive_val_ext
} SI_AMF_DT_MBS_SupportIndicator2;


// L:2469
typedef struct __si_amf_dt_MBS_SupportIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MBS_SupportIndicator_EnumProxy;


// SharedNGU-MulticastTNLInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SharedNGU_MulticastTNLInformation
{
	SI_AMF_DT_TransportLayerAddress * iP_MulticastAddress;

	SI_AMF_DT_TransportLayerAddress * iP_SourceAddress;

	SI_AMF_DT_GTP_TEID * gTP_TEID;

} SI_AMF_DT_SharedNGU_MulticastTNLInformation;


// MBS-SessionTNLInfo5GCList
//SEQUENCE OF MBS-SessionTNLInfo5GCItem, MIN=1, MAX=maxnoofMBSServiceAreaInformation  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCList
{
	SI_LinkedList * MBS_SessionTNLInfo5GCItem;
} SI_AMF_DT_MBS_SessionTNLInfo5GCList;


// MBS-SessionTNLInfo5GC
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GC
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_SharedNGU_MulticastTNLInformation * locationindependent;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_MBS_SessionTNLInfo5GCList * locationdependent;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MBS_SessionTNLInfo5GC;


// MBS-SessionTNLInfo5GCItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCItem
{
	unsigned long long int mBS_AreaSessionID;

	SI_AMF_DT_SharedNGU_MulticastTNLInformation * sharedNGU_MulticastTNLInformation;

} SI_AMF_DT_MBS_SessionTNLInfo5GCItem;


// MBS-SessionTNLInfoNGRANItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANItem
{
	unsigned long long int mBS_AreaSessionID;

	SI_AMF_DT_UPTransportLayerInformation * sharedNGU_UnicastTNLInformation;
	int isPresent_sharedNGU_UnicastTNLInformation;

} SI_AMF_DT_MBS_SessionTNLInfoNGRANItem;


// MBS-DistributionReleaseRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_DistributionReleaseRequestTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_UPTransportLayerInformation * sharedNGU_UnicastTNLInformation;
	int isPresent_sharedNGU_UnicastTNLInformation;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_MBS_DistributionReleaseRequestTransfer;


// MBS-DistributionSetupRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_DistributionSetupRequestTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_UPTransportLayerInformation * sharedNGU_UnicastTNLInformation;
	int isPresent_sharedNGU_UnicastTNLInformation;

} SI_AMF_DT_MBS_DistributionSetupRequestTransfer;


// MBSSessionStatus
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MBSSessionStatus
{
	__si_amf__MBSSessionStatus_activated_val,
	__si_amf__MBSSessionStatus_deactivated_val
} SI_AMF_DT_MBSSessionStatus;


// L:2442
typedef enum __si_amf_dt_MBSSessionStatus2
{
	MBSSessionStatus_activated_val,
	MBSSessionStatus_deactivated_val
} SI_AMF_DT_MBSSessionStatus2;


// L:2469
typedef struct __si_amf_dt_MBSSessionStatus_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MBSSessionStatus_EnumProxy;


// MBS-DistributionSetupResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_DistributionSetupResponseTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_SharedNGU_MulticastTNLInformation * sharedNGU_MulticastTNLInformation;
	int isPresent_sharedNGU_MulticastTNLInformation;

	SI_AMF_DT_MBS_QoSFlowsToBeSetupList * mBS_QoSFlowsToBeSetupList;

	uint8_t selected_emBSSessionStatus;
	int extSelected_emBSSessionStatus;

	SI_AMF_DT_MBS_ServiceArea * mBS_ServiceArea;
	int isPresent_mBS_ServiceArea;

} SI_AMF_DT_MBS_DistributionSetupResponseTransfer;


// MBS-DistributionSetupUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_DistributionSetupUnsuccessfulTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer;


// MBS-UP-FailureIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MBS_UP_FailureIndication
{
	__si_amf__MBS_UP_FailureIndication_ng_u_path_failure_detected_val
} SI_AMF_DT_MBS_UP_FailureIndication;


// L:2442
typedef enum __si_amf_dt_MBS_UP_FailureIndication2
{
	MBS_UP_FailureIndication_ng_u_path_failure_detected_val
} SI_AMF_DT_MBS_UP_FailureIndication2;


// L:2469
typedef struct __si_amf_dt_MBS_UP_FailureIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MBS_UP_FailureIndication_EnumProxy;


// MBS-UP-FailureIndicationList
//SEQUENCE OF MBS-UP-FailureIndicationItem, MIN=1, MAX=maxnoofMBSServiceAreaInformation  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_UP_FailureIndicationList
{
	SI_LinkedList * MBS_UP_FailureIndicationItem;
} SI_AMF_DT_MBS_UP_FailureIndicationList;


// MBS-NGUFailureIndication
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MBS_NGUFailureIndication
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t locationindependent;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_MBS_UP_FailureIndicationList * locationdependent;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MBS_NGUFailureIndication;


// MBS-UP-FailureIndicationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBS_UP_FailureIndicationItem
{
	unsigned long long int mBS_AreaSessionID;

	uint8_t selected_emBS_UP_FailureIndication;
	int extSelected_emBS_UP_FailureIndication;

} SI_AMF_DT_MBS_UP_FailureIndicationItem;


// MBSSessionSetupRequestList
//SEQUENCE OF MBSSessionSetupRequestItem, MIN=1, MAX=maxnoofMBSSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBSSessionSetupRequestList
{
	SI_LinkedList * MBSSessionSetupRequestItem;
} SI_AMF_DT_MBSSessionSetupRequestList;


// MBSSessionSetupRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionSetupRequestItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList * associatedMBSQosFlowSetupRequestList;
	int isPresent_associatedMBSQosFlowSetupRequestList;

} SI_AMF_DT_MBSSessionSetupRequestItem;


// MBSSessionSetuporModifyRequestList
//SEQUENCE OF MBSSessionSetuporModifyRequestItem, MIN=1, MAX=maxnoofMBSSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestList
{
	SI_LinkedList * MBSSessionSetuporModifyRequestItem;
} SI_AMF_DT_MBSSessionSetuporModifyRequestList;


// MBSSessionSetuporModifyRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	unsigned long long int mBS_AreaSessionID;
	int isPresent_mBS_AreaSessionID;

	SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList * associatedMBSQosFlowSetuporModifyRequestList;
	int isPresent_associatedMBSQosFlowSetuporModifyRequestList;

	SI_AMF_DT_QosFlowListWithCause * mBS_QosFlowToReleaseList;
	int isPresent_mBS_QosFlowToReleaseList;

} SI_AMF_DT_MBSSessionSetuporModifyRequestItem;


// MBSSessionToReleaseList
//SEQUENCE OF MBSSessionToReleaseItem, MIN=1, MAX=maxnoofMBSSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBSSessionToReleaseList
{
	SI_LinkedList * MBSSessionToReleaseItem;
} SI_AMF_DT_MBSSessionToReleaseList;


// MBSSessionToReleaseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MBSSessionToReleaseItem
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_MBSSessionToReleaseItem;


// MicoAllPLMN
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MicoAllPLMN
{
	__si_amf__MicoAllPLMN_true_val
} SI_AMF_DT_MicoAllPLMN;


// L:2442
typedef enum __si_amf_dt_MicoAllPLMN2
{
	MicoAllPLMN_true_val
} SI_AMF_DT_MicoAllPLMN2;


// L:2469
typedef struct __si_amf_dt_MicoAllPLMN_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MicoAllPLMN_EnumProxy;


// ExtendedMobilityInformation
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ExtendedMobilityInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ExtendedMobilityInformation;

// RATRestrictions
//SEQUENCE OF RATRestrictions-Item, MIN=1, MAX=maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_RATRestrictions
{
	SI_LinkedList * RATRestrictions_Item;
} SI_AMF_DT_RATRestrictions;


// ServiceAreaInformation
//SEQUENCE OF ServiceAreaInformation-Item, MIN=1, MAX= maxnoofEPLMNsPlusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ServiceAreaInformation
{
	SI_LinkedList * ServiceAreaInformation_Item;
} SI_AMF_DT_ServiceAreaInformation;


// MobilityRestrictionList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MobilityRestrictionList
{
	SI_AMF_DT_PLMNIdentity * servingPLMN;

	SI_AMF_DT_EquivalentPLMNs * equivalentPLMNs;
	int isPresent_equivalentPLMNs;

	SI_AMF_DT_RATRestrictions * rATRestrictions;
	int isPresent_rATRestrictions;

	SI_AMF_DT_ForbiddenAreaInformation * forbiddenAreaInformation;
	int isPresent_forbiddenAreaInformation;

	SI_AMF_DT_ServiceAreaInformation * serviceAreaInformation;
	int isPresent_serviceAreaInformation;

} SI_AMF_DT_MobilityRestrictionList;


// NGRANTraceID
// OCTETSTRING,OCTET STRING(SIZE(8))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NGRANTraceID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NGRANTraceID;

// MDT-AlignmentInfo
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MDT_AlignmentInfo
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_NGRANTraceID * s_basedMDT;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MDT_AlignmentInfo;


// MDTPLMNList
//SEQUENCE OF PLMNIdentity, MIN=1, MAX=maxnoofMDTPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MDTPLMNList
{
	SI_LinkedList * PLMNIdentity;
} SI_AMF_DT_MDTPLMNList;


// MDTPLMNModificationList
//SEQUENCE OF PLMNIdentity, MIN=0, MAX=maxnoofMDTPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MDTPLMNModificationList
{
	SI_LinkedList * PLMNIdentity;
} SI_AMF_DT_MDTPLMNModificationList;


// MDT-Activation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MDT_Activation
{
	__si_amf__MDT_Activation_immediate_MDT_only_val,
	__si_amf__MDT_Activation_logged_MDT_only_val,
	__si_amf__MDT_Activation_immediate_MDT_and_Trace_val
} SI_AMF_DT_MDT_Activation;


// L:2442
typedef enum __si_amf_dt_MDT_Activation2
{
	MDT_Activation_immediate_MDT_only_val,
	MDT_Activation_logged_MDT_only_val,
	MDT_Activation_immediate_MDT_and_Trace_val
} SI_AMF_DT_MDT_Activation2;


// L:2469
typedef struct __si_amf_dt_MDT_Activation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MDT_Activation_EnumProxy;


// MDTModeNr
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_MDTModeNr
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_ImmediateMDTNr * immediateMDTNr;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_LoggedMDTNr * loggedMDTNr;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_MDTModeNr_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_MDTModeNr;


// MDT-Configuration-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MDT_Configuration_NR
{
	uint8_t selected_emdt_Activation;
	int extSelected_emdt_Activation;

	SI_AMF_DT_AreaScopeOfMDT_NR * areaScopeOfMDT;

	SI_AMF_DT_MDTModeNr * mDTModeNr;

	SI_AMF_DT_MDTPLMNList * signallingBasedMDTPLMNList;
	int isPresent_signallingBasedMDTPLMNList;

} SI_AMF_DT_MDT_Configuration_NR;


// MDTModeEutra
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_MDTModeEutra
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_MDTModeEutra;

// MDT-Configuration-EUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MDT_Configuration_EUTRA
{
	uint8_t selected_emdt_Activation;
	int extSelected_emdt_Activation;

	SI_AMF_DT_AreaScopeOfMDT_EUTRA * areaScopeOfMDT;

	SI_AMF_DT_MDTModeEutra * mDTMode;

	SI_AMF_DT_MDTPLMNList * signallingBasedMDTPLMNList;
	int isPresent_signallingBasedMDTPLMNList;

} SI_AMF_DT_MDT_Configuration_EUTRA;


// MDT-Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MDT_Configuration
{
	SI_AMF_DT_MDT_Configuration_NR * mdt_Config_NR;
	int isPresent_mdt_Config_NR;

	SI_AMF_DT_MDT_Configuration_EUTRA * mdt_Config_EUTRA;
	int isPresent_mdt_Config_EUTRA;

} SI_AMF_DT_MDT_Configuration;


// MN-only-MDT-collection
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MN_only_MDT_collection
{
	__si_amf__MN_only_MDT_collection_mn_only_val
} SI_AMF_DT_MN_only_MDT_collection;


// L:2442
typedef enum __si_amf_dt_MN_only_MDT_collection2
{
	MN_only_MDT_collection_mn_only_val
} SI_AMF_DT_MN_only_MDT_collection2;


// L:2469
typedef struct __si_amf_dt_MN_only_MDT_collection_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MN_only_MDT_collection_EnumProxy;


// MobileIAB-Authorized
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MobileIAB_Authorized
{
	__si_amf__MobileIAB_Authorized_authorized_val,
	__si_amf__MobileIAB_Authorized_not_authorized_val
} SI_AMF_DT_MobileIAB_Authorized;


// L:2442
typedef enum __si_amf_dt_MobileIAB_Authorized2
{
	MobileIAB_Authorized_authorized_val,
	MobileIAB_Authorized_not_authorized_val
} SI_AMF_DT_MobileIAB_Authorized2;


// L:2469
typedef struct __si_amf_dt_MobileIAB_Authorized_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MobileIAB_Authorized_EnumProxy;


// MobileIABNodeIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MobileIABNodeIndication
{
	__si_amf__MobileIABNodeIndication_true_val
} SI_AMF_DT_MobileIABNodeIndication;


// L:2442
typedef enum __si_amf_dt_MobileIABNodeIndication2
{
	MobileIABNodeIndication_true_val
} SI_AMF_DT_MobileIABNodeIndication2;


// L:2469
typedef struct __si_amf_dt_MobileIABNodeIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MobileIABNodeIndication_EnumProxy;


// MobileIAB-Supported
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_MobileIAB_Supported
{
	__si_amf__MobileIAB_Supported_true_val
} SI_AMF_DT_MobileIAB_Supported;


// L:2442
typedef enum __si_amf_dt_MobileIAB_Supported2
{
	MobileIAB_Supported_true_val
} SI_AMF_DT_MobileIAB_Supported2;


// L:2469
typedef struct __si_amf_dt_MobileIAB_Supported_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_MobileIAB_Supported_EnumProxy;


// MulticastSessionActivationRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MulticastSessionActivationRequestTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

} SI_AMF_DT_MulticastSessionActivationRequestTransfer;


// MulticastSessionDeactivationRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MulticastSessionDeactivationRequestTransfer
{
	SI_AMF_DT_MBS_SessionID * mBS_SessionID;

} SI_AMF_DT_MulticastSessionDeactivationRequestTransfer;


// MulticastGroupPagingAreaList
//SEQUENCE OF MulticastGroupPagingAreaItem, MIN=1, MAX=maxnoofPagingAreas  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MulticastGroupPagingAreaList
{
	SI_LinkedList * MulticastGroupPagingAreaItem;
} SI_AMF_DT_MulticastGroupPagingAreaList;


// MBS-AreaTAIList
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAIforPaging  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_MBS_AreaTAIList
{
	SI_LinkedList * TAI;
} SI_AMF_DT_MBS_AreaTAIList;


// MulticastGroupPagingArea
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MulticastGroupPagingArea
{
	SI_AMF_DT_MBS_AreaTAIList * mBS_AreaTAIList;

} SI_AMF_DT_MulticastGroupPagingArea;


// UE-PagingList
//SEQUENCE OF UE-PagingItem, MIN=1, MAX=maxnoofUEsforPaging  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UE_PagingList
{
	SI_LinkedList * UE_PagingItem;
} SI_AMF_DT_UE_PagingList;


// MulticastGroupPagingAreaItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_MulticastGroupPagingAreaItem
{
	SI_AMF_DT_MulticastGroupPagingArea * multicastGroupPagingArea;

	SI_AMF_DT_UE_PagingList * uE_PagingList;
	int isPresent_uE_PagingList;

} SI_AMF_DT_MulticastGroupPagingAreaItem;


// UE-PagingItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UE_PagingItem
{
	SI_AMF_DT_UEIdentityIndexValue * uEIdentityIndexValue;

	uint8_t selected_epagingDRX;
	int extSelected_epagingDRX;
	int isPresent_pagingDRX;

} SI_AMF_DT_UE_PagingItem;


// IncludeBeamMeasurementsIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_IncludeBeamMeasurementsIndication
{
	__si_amf__IncludeBeamMeasurementsIndication_true_val
} SI_AMF_DT_IncludeBeamMeasurementsIndication;


// L:2442
typedef enum __si_amf_dt_IncludeBeamMeasurementsIndication2
{
	IncludeBeamMeasurementsIndication_true_val
} SI_AMF_DT_IncludeBeamMeasurementsIndication2;


// L:2469
typedef struct __si_amf_dt_IncludeBeamMeasurementsIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_IncludeBeamMeasurementsIndication_EnumProxy;


// M4ReportAmountMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M4ReportAmountMDT
{
	__si_amf__M4ReportAmountMDT_r1_val,
	__si_amf__M4ReportAmountMDT_r2_val,
	__si_amf__M4ReportAmountMDT_r4_val,
	__si_amf__M4ReportAmountMDT_r8_val,
	__si_amf__M4ReportAmountMDT_r16_val,
	__si_amf__M4ReportAmountMDT_r32_val,
	__si_amf__M4ReportAmountMDT_r64_val,
	__si_amf__M4ReportAmountMDT_infinity_val
} SI_AMF_DT_M4ReportAmountMDT;


// L:2442
typedef enum __si_amf_dt_M4ReportAmountMDT2
{
	M4ReportAmountMDT_r1_val,
	M4ReportAmountMDT_r2_val,
	M4ReportAmountMDT_r4_val,
	M4ReportAmountMDT_r8_val,
	M4ReportAmountMDT_r16_val,
	M4ReportAmountMDT_r32_val,
	M4ReportAmountMDT_r64_val,
	M4ReportAmountMDT_infinity_val
} SI_AMF_DT_M4ReportAmountMDT2;


// L:2469
typedef struct __si_amf_dt_M4ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M4ReportAmountMDT_EnumProxy;


// M5ReportAmountMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M5ReportAmountMDT
{
	__si_amf__M5ReportAmountMDT_r1_val,
	__si_amf__M5ReportAmountMDT_r2_val,
	__si_amf__M5ReportAmountMDT_r4_val,
	__si_amf__M5ReportAmountMDT_r8_val,
	__si_amf__M5ReportAmountMDT_r16_val,
	__si_amf__M5ReportAmountMDT_r32_val,
	__si_amf__M5ReportAmountMDT_r64_val,
	__si_amf__M5ReportAmountMDT_infinity_val
} SI_AMF_DT_M5ReportAmountMDT;


// L:2442
typedef enum __si_amf_dt_M5ReportAmountMDT2
{
	M5ReportAmountMDT_r1_val,
	M5ReportAmountMDT_r2_val,
	M5ReportAmountMDT_r4_val,
	M5ReportAmountMDT_r8_val,
	M5ReportAmountMDT_r16_val,
	M5ReportAmountMDT_r32_val,
	M5ReportAmountMDT_r64_val,
	M5ReportAmountMDT_infinity_val
} SI_AMF_DT_M5ReportAmountMDT2;


// L:2469
typedef struct __si_amf_dt_M5ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M5ReportAmountMDT_EnumProxy;


// M6ReportAmountMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M6ReportAmountMDT
{
	__si_amf__M6ReportAmountMDT_r1_val,
	__si_amf__M6ReportAmountMDT_r2_val,
	__si_amf__M6ReportAmountMDT_r4_val,
	__si_amf__M6ReportAmountMDT_r8_val,
	__si_amf__M6ReportAmountMDT_r16_val,
	__si_amf__M6ReportAmountMDT_r32_val,
	__si_amf__M6ReportAmountMDT_r64_val,
	__si_amf__M6ReportAmountMDT_infinity_val
} SI_AMF_DT_M6ReportAmountMDT;


// L:2442
typedef enum __si_amf_dt_M6ReportAmountMDT2
{
	M6ReportAmountMDT_r1_val,
	M6ReportAmountMDT_r2_val,
	M6ReportAmountMDT_r4_val,
	M6ReportAmountMDT_r8_val,
	M6ReportAmountMDT_r16_val,
	M6ReportAmountMDT_r32_val,
	M6ReportAmountMDT_r64_val,
	M6ReportAmountMDT_infinity_val
} SI_AMF_DT_M6ReportAmountMDT2;


// L:2469
typedef struct __si_amf_dt_M6ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M6ReportAmountMDT_EnumProxy;


// M7ReportAmountMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_M7ReportAmountMDT
{
	__si_amf__M7ReportAmountMDT_r1_val,
	__si_amf__M7ReportAmountMDT_r2_val,
	__si_amf__M7ReportAmountMDT_r4_val,
	__si_amf__M7ReportAmountMDT_r8_val,
	__si_amf__M7ReportAmountMDT_r16_val,
	__si_amf__M7ReportAmountMDT_r32_val,
	__si_amf__M7ReportAmountMDT_r64_val,
	__si_amf__M7ReportAmountMDT_infinity_val
} SI_AMF_DT_M7ReportAmountMDT;


// L:2442
typedef enum __si_amf_dt_M7ReportAmountMDT2
{
	M7ReportAmountMDT_r1_val,
	M7ReportAmountMDT_r2_val,
	M7ReportAmountMDT_r4_val,
	M7ReportAmountMDT_r8_val,
	M7ReportAmountMDT_r16_val,
	M7ReportAmountMDT_r32_val,
	M7ReportAmountMDT_r64_val,
	M7ReportAmountMDT_infinity_val
} SI_AMF_DT_M7ReportAmountMDT2;


// L:2469
typedef struct __si_amf_dt_M7ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_M7ReportAmountMDT_EnumProxy;


// N6JitterInformation_n6JitterLowerBound
// INTEGER,INTEGER(-127..127),MIN=-127,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_N6JitterInformation_n6JitterLowerBound
{
	unsigned long long int data;
} SI_AMF_DT_N6JitterInformation_n6JitterLowerBound;

// N6JitterInformation_n6JitterUpperBound
// INTEGER,INTEGER(-127..127),MIN=-127,MAX=127  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_N6JitterInformation_n6JitterUpperBound
{
	unsigned long long int data;
} SI_AMF_DT_N6JitterInformation_n6JitterUpperBound;

// N6JitterInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_N6JitterInformation
{
	unsigned long long int n6JitterLowerBound;

	unsigned long long int n6JitterUpperBound;

} SI_AMF_DT_N6JitterInformation;


// NAS-PDU
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NAS_PDU
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NAS_PDU;

// NASSecurityParametersFromNGRAN
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NASSecurityParametersFromNGRAN
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NASSecurityParametersFromNGRAN;

// NB-IoT-DefaultPagingDRX
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NB_IoT_DefaultPagingDRX
{
	__si_amf__NB_IoT_DefaultPagingDRX_rf128_val,
	__si_amf__NB_IoT_DefaultPagingDRX_rf256_val,
	__si_amf__NB_IoT_DefaultPagingDRX_rf512_val,
	__si_amf__NB_IoT_DefaultPagingDRX_rf1024_val
} SI_AMF_DT_NB_IoT_DefaultPagingDRX;


// L:2442
typedef enum __si_amf_dt_NB_IoT_DefaultPagingDRX2
{
	NB_IoT_DefaultPagingDRX_rf128_val,
	NB_IoT_DefaultPagingDRX_rf256_val,
	NB_IoT_DefaultPagingDRX_rf512_val,
	NB_IoT_DefaultPagingDRX_rf1024_val
} SI_AMF_DT_NB_IoT_DefaultPagingDRX2;


// L:2469
typedef struct __si_amf_dt_NB_IoT_DefaultPagingDRX_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NB_IoT_DefaultPagingDRX_EnumProxy;


// NB-IoT-PagingDRX
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NB_IoT_PagingDRX
{
	__si_amf__NB_IoT_PagingDRX_rf32_val,
	__si_amf__NB_IoT_PagingDRX_rf64_val,
	__si_amf__NB_IoT_PagingDRX_rf128_val,
	__si_amf__NB_IoT_PagingDRX_rf256_val,
	__si_amf__NB_IoT_PagingDRX_rf512_val,
	__si_amf__NB_IoT_PagingDRX_rf1024_val
} SI_AMF_DT_NB_IoT_PagingDRX;


// L:2442
typedef enum __si_amf_dt_NB_IoT_PagingDRX2
{
	NB_IoT_PagingDRX_rf32_val,
	NB_IoT_PagingDRX_rf64_val,
	NB_IoT_PagingDRX_rf128_val,
	NB_IoT_PagingDRX_rf256_val,
	NB_IoT_PagingDRX_rf512_val,
	NB_IoT_PagingDRX_rf1024_val
} SI_AMF_DT_NB_IoT_PagingDRX2;


// L:2469
typedef struct __si_amf_dt_NB_IoT_PagingDRX_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NB_IoT_PagingDRX_EnumProxy;


// NB-IoT-Paging-eDRXCycle
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NB_IoT_Paging_eDRXCycle
{
	__si_amf__NB_IoT_Paging_eDRXCycle_hf2_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf4_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf6_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf8_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf10_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf12_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf14_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf16_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf32_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf64_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf128_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf256_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf512_val,
	__si_amf__NB_IoT_Paging_eDRXCycle_hf1024_val
} SI_AMF_DT_NB_IoT_Paging_eDRXCycle;


// L:2442
typedef enum __si_amf_dt_NB_IoT_Paging_eDRXCycle2
{
	NB_IoT_Paging_eDRXCycle_hf2_val,
	NB_IoT_Paging_eDRXCycle_hf4_val,
	NB_IoT_Paging_eDRXCycle_hf6_val,
	NB_IoT_Paging_eDRXCycle_hf8_val,
	NB_IoT_Paging_eDRXCycle_hf10_val,
	NB_IoT_Paging_eDRXCycle_hf12_val,
	NB_IoT_Paging_eDRXCycle_hf14_val,
	NB_IoT_Paging_eDRXCycle_hf16_val,
	NB_IoT_Paging_eDRXCycle_hf32_val,
	NB_IoT_Paging_eDRXCycle_hf64_val,
	NB_IoT_Paging_eDRXCycle_hf128_val,
	NB_IoT_Paging_eDRXCycle_hf256_val,
	NB_IoT_Paging_eDRXCycle_hf512_val,
	NB_IoT_Paging_eDRXCycle_hf1024_val
} SI_AMF_DT_NB_IoT_Paging_eDRXCycle2;


// L:2469
typedef struct __si_amf_dt_NB_IoT_Paging_eDRXCycle_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NB_IoT_Paging_eDRXCycle_EnumProxy;


// NB-IoT-Paging-TimeWindow
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NB_IoT_Paging_TimeWindow
{
	__si_amf__NB_IoT_Paging_TimeWindow_s1_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s2_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s3_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s4_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s5_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s6_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s7_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s8_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s9_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s10_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s11_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s12_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s13_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s14_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s15_val,
	__si_amf__NB_IoT_Paging_TimeWindow_s16_val
} SI_AMF_DT_NB_IoT_Paging_TimeWindow;


// L:2442
typedef enum __si_amf_dt_NB_IoT_Paging_TimeWindow2
{
	NB_IoT_Paging_TimeWindow_s1_val,
	NB_IoT_Paging_TimeWindow_s2_val,
	NB_IoT_Paging_TimeWindow_s3_val,
	NB_IoT_Paging_TimeWindow_s4_val,
	NB_IoT_Paging_TimeWindow_s5_val,
	NB_IoT_Paging_TimeWindow_s6_val,
	NB_IoT_Paging_TimeWindow_s7_val,
	NB_IoT_Paging_TimeWindow_s8_val,
	NB_IoT_Paging_TimeWindow_s9_val,
	NB_IoT_Paging_TimeWindow_s10_val,
	NB_IoT_Paging_TimeWindow_s11_val,
	NB_IoT_Paging_TimeWindow_s12_val,
	NB_IoT_Paging_TimeWindow_s13_val,
	NB_IoT_Paging_TimeWindow_s14_val,
	NB_IoT_Paging_TimeWindow_s15_val,
	NB_IoT_Paging_TimeWindow_s16_val
} SI_AMF_DT_NB_IoT_Paging_TimeWindow2;


// L:2469
typedef struct __si_amf_dt_NB_IoT_Paging_TimeWindow_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NB_IoT_Paging_TimeWindow_EnumProxy;


// NB-IoT-Paging-eDRXInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NB_IoT_Paging_eDRXInfo
{
	uint8_t selected_enB_IoT_Paging_eDRXCycle;
	int extSelected_enB_IoT_Paging_eDRXCycle;

	uint8_t selected_enB_IoT_Paging_TimeWindow;
	int extSelected_enB_IoT_Paging_TimeWindow;
	int isPresent_nB_IoT_Paging_TimeWindow;

} SI_AMF_DT_NB_IoT_Paging_eDRXInfo;


// NB-IoT-UEPriority
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NB_IoT_UEPriority
{
	unsigned long long int data;
} SI_AMF_DT_NB_IoT_UEPriority;

// NetworkControlledRepeaterAuthorized
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NetworkControlledRepeaterAuthorized
{
	__si_amf__NetworkControlledRepeaterAuthorized_authorized_val,
	__si_amf__NetworkControlledRepeaterAuthorized_not_authorized_val
} SI_AMF_DT_NetworkControlledRepeaterAuthorized;


// L:2442
typedef enum __si_amf_dt_NetworkControlledRepeaterAuthorized2
{
	NetworkControlledRepeaterAuthorized_authorized_val,
	NetworkControlledRepeaterAuthorized_not_authorized_val
} SI_AMF_DT_NetworkControlledRepeaterAuthorized2;


// L:2469
typedef struct __si_amf_dt_NetworkControlledRepeaterAuthorized_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NetworkControlledRepeaterAuthorized_EnumProxy;


// NetworkInstance
// INTEGER,INTEGER(1..256,...),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NetworkInstance
{
	unsigned long long int data;
} SI_AMF_DT_NetworkInstance;

// NewSecurityContextInd
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NewSecurityContextInd
{
	__si_amf__NewSecurityContextInd_true_val
} SI_AMF_DT_NewSecurityContextInd;


// L:2442
typedef enum __si_amf_dt_NewSecurityContextInd2
{
	NewSecurityContextInd_true_val
} SI_AMF_DT_NewSecurityContextInd2;


// L:2469
typedef struct __si_amf_dt_NewSecurityContextInd_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NewSecurityContextInd_EnumProxy;


// NextHopChainingCount
// INTEGER,INTEGER(0..7),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NextHopChainingCount
{
	unsigned long long int data;
} SI_AMF_DT_NextHopChainingCount;

// NGAPIESupportInformationRequestList
//SEQUENCE OF NGAPIESupportInformationRequestItem, MIN=1, MAX= maxnoofNGAPIESupportInfo  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NGAPIESupportInformationRequestList
{
	SI_LinkedList * NGAPIESupportInformationRequestItem;
} SI_AMF_DT_NGAPIESupportInformationRequestList;


// NGAPIESupportInformationRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGAPIESupportInformationRequestItem
{
	unsigned long long int ngap_ProtocolIE_Id;

} SI_AMF_DT_NGAPIESupportInformationRequestItem;


// NGAPIESupportInformationResponseList
//SEQUENCE OF NGAPIESupportInformationResponseItem, MIN=1, MAX= maxnoofNGAPIESupportInfo  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NGAPIESupportInformationResponseList
{
	SI_LinkedList * NGAPIESupportInformationResponseItem;
} SI_AMF_DT_NGAPIESupportInformationResponseList;


// NGAPIESupportInformationResponseItem_ngap-ProtocolIESupportInfo
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo
{
	__si_amf__NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_supported_val,
	__si_amf__NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_not_supported_val
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo;


// L:2442
typedef enum __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo2
{
	NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_supported_val,
	NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_not_supported_val
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo2;


// L:2469
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo_EnumProxy;


// NGAPIESupportInformationResponseItem_ngap-ProtocolIEPresenceInfo
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo
{
	__si_amf__NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_present_val,
	__si_amf__NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_not_present_val
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo;


// L:2442
typedef enum __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo2
{
	NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_present_val,
	NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_not_present_val
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo2;


// L:2469
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo_EnumProxy;


// NGAPIESupportInformationResponseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem
{
	unsigned long long int ngap_ProtocolIE_Id;

	uint8_t selected_engap_ProtocolIESupportInfo;
	int extSelected_engap_ProtocolIESupportInfo;

	uint8_t selected_engap_ProtocolIEPresenceInfo;
	int extSelected_engap_ProtocolIEPresenceInfo;

} SI_AMF_DT_NGAPIESupportInformationResponseItem;


// NotifySourceNGRANNode
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NotifySourceNGRANNode
{
	__si_amf__NotifySourceNGRANNode_notifySource_val
} SI_AMF_DT_NotifySourceNGRANNode;


// L:2442
typedef enum __si_amf_dt_NotifySourceNGRANNode2
{
	NotifySourceNGRANNode_notifySource_val
} SI_AMF_DT_NotifySourceNGRANNode2;


// L:2469
typedef struct __si_amf_dt_NotifySourceNGRANNode_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NotifySourceNGRANNode_EnumProxy;


// NGRAN-TNLAssociationToRemoveList
//SEQUENCE OF NGRAN-TNLAssociationToRemoveItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveList
{
	SI_LinkedList * NGRAN_TNLAssociationToRemoveItem;
} SI_AMF_DT_NGRAN_TNLAssociationToRemoveList;


// NGRAN-TNLAssociationToRemoveItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveItem
{
	SI_AMF_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

	SI_AMF_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddressAMF;
	int isPresent_tNLAssociationTransportLayerAddressAMF;

} SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem;


// NoPDUSessionIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NoPDUSessionIndication
{
	__si_amf__NoPDUSessionIndication_true_val
} SI_AMF_DT_NoPDUSessionIndication;


// L:2442
typedef enum __si_amf_dt_NoPDUSessionIndication2
{
	NoPDUSessionIndication_true_val
} SI_AMF_DT_NoPDUSessionIndication2;


// L:2469
typedef struct __si_amf_dt_NoPDUSessionIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NoPDUSessionIndication_EnumProxy;


// NotAllowedTACs
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofAllowedAreas  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NotAllowedTACs
{
	SI_LinkedList * TAC;
} SI_AMF_DT_NotAllowedTACs;


// NotificationCause
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NotificationCause
{
	__si_amf__NotificationCause_fulfilled_val,
	__si_amf__NotificationCause_not_fulfilled_val
} SI_AMF_DT_NotificationCause;


// L:2442
typedef enum __si_amf_dt_NotificationCause2
{
	NotificationCause_fulfilled_val,
	NotificationCause_not_fulfilled_val
} SI_AMF_DT_NotificationCause2;


// L:2469
typedef struct __si_amf_dt_NotificationCause_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NotificationCause_EnumProxy;


// NPN-AccessInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NPN_AccessInformation
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_CellCAGList * pNI_NPN_Access_Information;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NPN_AccessInformation;


// SNPN-MobilityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPN_MobilityInformation
{
	SI_AMF_DT_NID * serving_NID;

} SI_AMF_DT_SNPN_MobilityInformation;


// PNI-NPN-MobilityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PNI_NPN_MobilityInformation
{
	SI_AMF_DT_Allowed_PNI_NPN_List * allowed_PNI_NPI_List;

} SI_AMF_DT_PNI_NPN_MobilityInformation;


// NPN-MobilityInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NPN_MobilityInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_SNPN_MobilityInformation * sNPN_MobilityInformation;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_PNI_NPN_MobilityInformation * pNI_NPN_MobilityInformation;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NPN_MobilityInformation;


// NPN-PagingAssistanceInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NPN_PagingAssistanceInformation
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_Allowed_PNI_NPN_List * pNI_NPN_PagingAssistance;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NPN_PagingAssistanceInformation;


// NPN-Support
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_NPN_Support
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_AMF_DT_NID * sNPN;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_NPN_Support_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_NPN_Support;


// NR-CGIListForWarning
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellIDforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_NR_CGIListForWarning
{
	SI_LinkedList * NR_CGI;
} SI_AMF_DT_NR_CGIListForWarning;


// NR-Paging-eDRX-Cycle
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NR_Paging_eDRX_Cycle
{
	__si_amf__NR_Paging_eDRX_Cycle_hfquarter_val,
	__si_amf__NR_Paging_eDRX_Cycle_hfhalf_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf1_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf2_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf4_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf8_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf16_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf32_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf64_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf128_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf256_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf512_val,
	__si_amf__NR_Paging_eDRX_Cycle_hf1024_val
} SI_AMF_DT_NR_Paging_eDRX_Cycle;


// L:2442
typedef enum __si_amf_dt_NR_Paging_eDRX_Cycle2
{
	NR_Paging_eDRX_Cycle_hfquarter_val,
	NR_Paging_eDRX_Cycle_hfhalf_val,
	NR_Paging_eDRX_Cycle_hf1_val,
	NR_Paging_eDRX_Cycle_hf2_val,
	NR_Paging_eDRX_Cycle_hf4_val,
	NR_Paging_eDRX_Cycle_hf8_val,
	NR_Paging_eDRX_Cycle_hf16_val,
	NR_Paging_eDRX_Cycle_hf32_val,
	NR_Paging_eDRX_Cycle_hf64_val,
	NR_Paging_eDRX_Cycle_hf128_val,
	NR_Paging_eDRX_Cycle_hf256_val,
	NR_Paging_eDRX_Cycle_hf512_val,
	NR_Paging_eDRX_Cycle_hf1024_val
} SI_AMF_DT_NR_Paging_eDRX_Cycle2;


// L:2469
typedef struct __si_amf_dt_NR_Paging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NR_Paging_eDRX_Cycle_EnumProxy;


// NR-Paging-Time-Window
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NR_Paging_Time_Window
{
	__si_amf__NR_Paging_Time_Window_s1_val,
	__si_amf__NR_Paging_Time_Window_s2_val,
	__si_amf__NR_Paging_Time_Window_s3_val,
	__si_amf__NR_Paging_Time_Window_s4_val,
	__si_amf__NR_Paging_Time_Window_s5_val,
	__si_amf__NR_Paging_Time_Window_s6_val,
	__si_amf__NR_Paging_Time_Window_s7_val,
	__si_amf__NR_Paging_Time_Window_s8_val,
	__si_amf__NR_Paging_Time_Window_s9_val,
	__si_amf__NR_Paging_Time_Window_s10_val,
	__si_amf__NR_Paging_Time_Window_s11_val,
	__si_amf__NR_Paging_Time_Window_s12_val,
	__si_amf__NR_Paging_Time_Window_s13_val,
	__si_amf__NR_Paging_Time_Window_s14_val,
	__si_amf__NR_Paging_Time_Window_s15_val,
	__si_amf__NR_Paging_Time_Window_s16_val,
	__si_amf__NR_Paging_Time_Window_s17_val_ext,
	__si_amf__NR_Paging_Time_Window_s18_val_ext,
	__si_amf__NR_Paging_Time_Window_s19_val_ext,
	__si_amf__NR_Paging_Time_Window_s20_val_ext,
	__si_amf__NR_Paging_Time_Window_s21_val_ext,
	__si_amf__NR_Paging_Time_Window_s22_val_ext,
	__si_amf__NR_Paging_Time_Window_s23_val_ext,
	__si_amf__NR_Paging_Time_Window_s24_val_ext,
	__si_amf__NR_Paging_Time_Window_s25_val_ext,
	__si_amf__NR_Paging_Time_Window_s26_val_ext,
	__si_amf__NR_Paging_Time_Window_s27_val_ext,
	__si_amf__NR_Paging_Time_Window_s28_val_ext,
	__si_amf__NR_Paging_Time_Window_s29_val_ext,
	__si_amf__NR_Paging_Time_Window_s30_val_ext,
	__si_amf__NR_Paging_Time_Window_s31_val_ext,
	__si_amf__NR_Paging_Time_Window_s32_val_ext
} SI_AMF_DT_NR_Paging_Time_Window;


// L:2442
typedef enum __si_amf_dt_NR_Paging_Time_Window2
{
	NR_Paging_Time_Window_s1_val,
	NR_Paging_Time_Window_s2_val,
	NR_Paging_Time_Window_s3_val,
	NR_Paging_Time_Window_s4_val,
	NR_Paging_Time_Window_s5_val,
	NR_Paging_Time_Window_s6_val,
	NR_Paging_Time_Window_s7_val,
	NR_Paging_Time_Window_s8_val,
	NR_Paging_Time_Window_s9_val,
	NR_Paging_Time_Window_s10_val,
	NR_Paging_Time_Window_s11_val,
	NR_Paging_Time_Window_s12_val,
	NR_Paging_Time_Window_s13_val,
	NR_Paging_Time_Window_s14_val,
	NR_Paging_Time_Window_s15_val,
	NR_Paging_Time_Window_s16_val,
	NR_Paging_Time_Window_s17_val_ext,
	NR_Paging_Time_Window_s18_val_ext,
	NR_Paging_Time_Window_s19_val_ext,
	NR_Paging_Time_Window_s20_val_ext,
	NR_Paging_Time_Window_s21_val_ext,
	NR_Paging_Time_Window_s22_val_ext,
	NR_Paging_Time_Window_s23_val_ext,
	NR_Paging_Time_Window_s24_val_ext,
	NR_Paging_Time_Window_s25_val_ext,
	NR_Paging_Time_Window_s26_val_ext,
	NR_Paging_Time_Window_s27_val_ext,
	NR_Paging_Time_Window_s28_val_ext,
	NR_Paging_Time_Window_s29_val_ext,
	NR_Paging_Time_Window_s30_val_ext,
	NR_Paging_Time_Window_s31_val_ext,
	NR_Paging_Time_Window_s32_val_ext
} SI_AMF_DT_NR_Paging_Time_Window2;


// L:2469
typedef struct __si_amf_dt_NR_Paging_Time_Window_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NR_Paging_Time_Window_EnumProxy;


// NR-PagingeDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NR_PagingeDRXInformation
{
	uint8_t selected_enR_paging_eDRX_Cycle;
	int extSelected_enR_paging_eDRX_Cycle;

	uint8_t selected_enR_paging_Time_Window;
	int extSelected_enR_paging_Time_Window;
	int isPresent_nR_paging_Time_Window;

} SI_AMF_DT_NR_PagingeDRXInformation;


// NRencryptionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NRencryptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NRencryptionAlgorithms;

// NRintegrityProtectionAlgorithms
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_NRintegrityProtectionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_NRintegrityProtectionAlgorithms;

// NRMobilityHistoryReport
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NRMobilityHistoryReport
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NRMobilityHistoryReport;

// NRPPa-PDU
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_NRPPa_PDU
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_NRPPa_PDU;

// TACListInNRNTN
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTACsinNTN  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TACListInNRNTN
{
	SI_LinkedList * TAC;
} SI_AMF_DT_TACListInNRNTN;


// NRNTNTAIInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NRNTNTAIInformation
{
	SI_AMF_DT_PLMNIdentity * servingPLMN;

	SI_AMF_DT_TACListInNRNTN * tACListInNRNTN;

	SI_AMF_DT_TAC * uELocationDerivedTACInNRNTN;
	int isPresent_uELocationDerivedTACInNRNTN;

} SI_AMF_DT_NRNTNTAIInformation;


// NumberOfBroadcastsRequested
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NumberOfBroadcastsRequested
{
	unsigned long long int data;
} SI_AMF_DT_NumberOfBroadcastsRequested;

// NRFrequencyBand
// INTEGER,INTEGER(1..1024,...),MIN=1,MAX=1024  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NRFrequencyBand
{
	unsigned long long int data;
} SI_AMF_DT_NRFrequencyBand;

// NRFrequencyBandItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NRFrequencyBandItem
{
	unsigned long long int nr_frequency_band;

} SI_AMF_DT_NRFrequencyBandItem;


// NR-PCI
// INTEGER,INTEGER(0..1007,...),MIN=0,MAX=1007  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NR_PCI
{
	unsigned long long int data;
} SI_AMF_DT_NR_PCI;

// NRV2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NRV2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_AMF_DT_NRV2XServicesAuthorized;


// NRUESidelinkAggregateMaximumBitrate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NRUESidelinkAggregateMaximumBitrate
{
	unsigned long long int uESidelinkAggregateMaximumBitRate;

} SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate;


// NSAG-ID
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_NSAG_ID
{
	unsigned long long int data;
} SI_AMF_DT_NSAG_ID;

// NRA2XServicesAuthorized_aerialUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NRA2XServicesAuthorized_aerialUE
{
	__si_amf__NRA2XServicesAuthorized_aerialUE_authorized_val,
	__si_amf__NRA2XServicesAuthorized_aerialUE_not_authorized_val
} SI_AMF_DT_NRA2XServicesAuthorized_aerialUE;


// L:2442
typedef enum __si_amf_dt_NRA2XServicesAuthorized_aerialUE2
{
	NRA2XServicesAuthorized_aerialUE_authorized_val,
	NRA2XServicesAuthorized_aerialUE_not_authorized_val
} SI_AMF_DT_NRA2XServicesAuthorized_aerialUE2;


// L:2469
typedef struct __si_amf_dt_NRA2XServicesAuthorized_aerialUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NRA2XServicesAuthorized_aerialUE_EnumProxy;


// NRA2XServicesAuthorized_aerialControllerUE
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_NRA2XServicesAuthorized_aerialControllerUE
{
	__si_amf__NRA2XServicesAuthorized_aerialControllerUE_authorized_val,
	__si_amf__NRA2XServicesAuthorized_aerialControllerUE_not_authorized_val
} SI_AMF_DT_NRA2XServicesAuthorized_aerialControllerUE;


// L:2442
typedef enum __si_amf_dt_NRA2XServicesAuthorized_aerialControllerUE2
{
	NRA2XServicesAuthorized_aerialControllerUE_authorized_val,
	NRA2XServicesAuthorized_aerialControllerUE_not_authorized_val
} SI_AMF_DT_NRA2XServicesAuthorized_aerialControllerUE2;


// L:2469
typedef struct __si_amf_dt_NRA2XServicesAuthorized_aerialControllerUE_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_NRA2XServicesAuthorized_aerialControllerUE_EnumProxy;


// NR-A2X-ServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_NR_A2X_ServicesAuthorized
{
	uint8_t selected_eaerialUE;
	int extSelected_eaerialUE;
	int isPresent_aerialUE;

	uint8_t selected_eaerialControllerUE;
	int extSelected_eaerialControllerUE;
	int isPresent_aerialControllerUE;

} SI_AMF_DT_NR_A2X_ServicesAuthorized;


// OnboardingSupport
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_OnboardingSupport
{
	__si_amf__OnboardingSupport_true_val
} SI_AMF_DT_OnboardingSupport;


// L:2442
typedef enum __si_amf_dt_OnboardingSupport2
{
	OnboardingSupport_true_val
} SI_AMF_DT_OnboardingSupport2;


// L:2469
typedef struct __si_amf_dt_OnboardingSupport_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_OnboardingSupport_EnumProxy;


// OverloadAction
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_OverloadAction
{
	__si_amf__OverloadAction_reject_non_emergency_mo_dt_val,
	__si_amf__OverloadAction_reject_rrc_cr_signalling_val,
	__si_amf__OverloadAction_permit_emergency_sessions_and_mobile_terminated_services_only_val,
	__si_amf__OverloadAction_permit_high_priority_sessions_and_mobile_terminated_services_only_val
} SI_AMF_DT_OverloadAction;


// L:2442
typedef enum __si_amf_dt_OverloadAction2
{
	OverloadAction_reject_non_emergency_mo_dt_val,
	OverloadAction_reject_rrc_cr_signalling_val,
	OverloadAction_permit_emergency_sessions_and_mobile_terminated_services_only_val,
	OverloadAction_permit_high_priority_sessions_and_mobile_terminated_services_only_val
} SI_AMF_DT_OverloadAction2;


// L:2469
typedef struct __si_amf_dt_OverloadAction_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_OverloadAction_EnumProxy;


// OverloadResponse
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_OverloadResponse
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t overloadAction;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_OverloadResponse_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_OverloadResponse;


// OverloadStartNSSAIList
//SEQUENCE OF OverloadStartNSSAIItem, MIN=1, MAX=maxnoofSliceItems  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_OverloadStartNSSAIList
{
	SI_LinkedList * OverloadStartNSSAIItem;
} SI_AMF_DT_OverloadStartNSSAIList;


// SliceOverloadList
//SEQUENCE OF SliceOverloadItem, MIN=1, MAX=maxnoofSliceItems  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SliceOverloadList
{
	SI_LinkedList * SliceOverloadItem;
} SI_AMF_DT_SliceOverloadList;


// TrafficLoadReductionIndication
// INTEGER,INTEGER(1..99),MIN=1,MAX=99  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TrafficLoadReductionIndication
{
	unsigned long long int data;
} SI_AMF_DT_TrafficLoadReductionIndication;

// OverloadStartNSSAIItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_OverloadStartNSSAIItem
{
	SI_AMF_DT_SliceOverloadList * sliceOverloadList;

	SI_AMF_DT_OverloadResponse * sliceOverloadResponse;
	int isPresent_sliceOverloadResponse;

	unsigned long long int sliceTrafficLoadReductionIndication;
	int isPresent_sliceTrafficLoadReductionIndication;

} SI_AMF_DT_OverloadStartNSSAIItem;


// PagingAssisDataforCEcapabUE
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PagingAssisDataforCEcapabUE
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

	SI_AMF_DT_CoverageEnhancementLevel * coverageEnhancementLevel;

} SI_AMF_DT_PagingAssisDataforCEcapabUE;


// PagingCause
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingCause
{
	__si_amf__PagingCause_voice_val
} SI_AMF_DT_PagingCause;


// L:2442
typedef enum __si_amf_dt_PagingCause2
{
	PagingCause_voice_val
} SI_AMF_DT_PagingCause2;


// L:2469
typedef struct __si_amf_dt_PagingCause_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingCause_EnumProxy;


// PagingCauseIndicationForVoiceService
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingCauseIndicationForVoiceService
{
	__si_amf__PagingCauseIndicationForVoiceService_supported_val
} SI_AMF_DT_PagingCauseIndicationForVoiceService;


// L:2442
typedef enum __si_amf_dt_PagingCauseIndicationForVoiceService2
{
	PagingCauseIndicationForVoiceService_supported_val
} SI_AMF_DT_PagingCauseIndicationForVoiceService2;


// L:2469
typedef struct __si_amf_dt_PagingCauseIndicationForVoiceService_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingCauseIndicationForVoiceService_EnumProxy;


// PagingOrigin
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingOrigin
{
	__si_amf__PagingOrigin_non_3gpp_val
} SI_AMF_DT_PagingOrigin;


// L:2442
typedef enum __si_amf_dt_PagingOrigin2
{
	PagingOrigin_non_3gpp_val
} SI_AMF_DT_PagingOrigin2;


// L:2469
typedef struct __si_amf_dt_PagingOrigin_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingOrigin_EnumProxy;


// PDUSessionForPagingList
//SEQUENCE OF PDUSessionForPagingItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionForPagingList
{
	SI_LinkedList * PDUSessionForPagingItem;
} SI_AMF_DT_PDUSessionForPagingList;


// PagingPolicyDifferentiation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PagingPolicyDifferentiation
{
	SI_AMF_DT_PDUSessionForPagingList * pDUSessionForPagingList;

} SI_AMF_DT_PagingPolicyDifferentiation;


// PDUSessionID
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PDUSessionID
{
	unsigned long long int data;
} SI_AMF_DT_PDUSessionID;

// PagingPolicyDifferentiationList
//SEQUENCE OF PagingPolicyDifferentiationItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PagingPolicyDifferentiationList
{
	SI_LinkedList * PagingPolicyDifferentiationItem;
} SI_AMF_DT_PagingPolicyDifferentiationList;


// PDUSessionForPagingItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionForPagingItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PagingPolicyDifferentiationList * pagingPolicyDifferentiationList;

} SI_AMF_DT_PDUSessionForPagingItem;


// PagingPolicyDifferentiationItem_dl-DataSize
// INTEGER,INTEGER(0..96000,...),MIN=0,MAX=96000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem_dl_DataSize
{
	unsigned long long int data;
} SI_AMF_DT_PagingPolicyDifferentiationItem_dl_DataSize;

// PagingPolicyIndicator
// INTEGER,INTEGER(0..7,...),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PagingPolicyIndicator
{
	unsigned long long int data;
} SI_AMF_DT_PagingPolicyIndicator;

// PagingPolicyDifferentiationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem
{
	unsigned long long int qosFlowIdentifier;
	int isPresent_qosFlowIdentifier;

	unsigned long long int pagingPolicyIndicator;
	int isPresent_pagingPolicyIndicator;

	SI_AMF_DT_AllocationAndRetentionPriority * allocationAndRetentionPriority;
	int isPresent_allocationAndRetentionPriority;

	unsigned long long int fiveQI;
	int isPresent_fiveQI;

	unsigned long long int dl_DataSize;
	int isPresent_dl_DataSize;

} SI_AMF_DT_PagingPolicyDifferentiationItem;


// PagingPriority
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingPriority
{
	__si_amf__PagingPriority_priolevel1_val,
	__si_amf__PagingPriority_priolevel2_val,
	__si_amf__PagingPriority_priolevel3_val,
	__si_amf__PagingPriority_priolevel4_val,
	__si_amf__PagingPriority_priolevel5_val,
	__si_amf__PagingPriority_priolevel6_val,
	__si_amf__PagingPriority_priolevel7_val,
	__si_amf__PagingPriority_priolevel8_val
} SI_AMF_DT_PagingPriority;


// L:2442
typedef enum __si_amf_dt_PagingPriority2
{
	PagingPriority_priolevel1_val,
	PagingPriority_priolevel2_val,
	PagingPriority_priolevel3_val,
	PagingPriority_priolevel4_val,
	PagingPriority_priolevel5_val,
	PagingPriority_priolevel6_val,
	PagingPriority_priolevel7_val,
	PagingPriority_priolevel8_val
} SI_AMF_DT_PagingPriority2;


// L:2469
typedef struct __si_amf_dt_PagingPriority_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingPriority_EnumProxy;


// PagingProbabilityInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PagingProbabilityInformation
{
	__si_amf__PagingProbabilityInformation_p00_val,
	__si_amf__PagingProbabilityInformation_p05_val,
	__si_amf__PagingProbabilityInformation_p10_val,
	__si_amf__PagingProbabilityInformation_p15_val,
	__si_amf__PagingProbabilityInformation_p20_val,
	__si_amf__PagingProbabilityInformation_p25_val,
	__si_amf__PagingProbabilityInformation_p30_val,
	__si_amf__PagingProbabilityInformation_p35_val,
	__si_amf__PagingProbabilityInformation_p40_val,
	__si_amf__PagingProbabilityInformation_p45_val,
	__si_amf__PagingProbabilityInformation_p50_val,
	__si_amf__PagingProbabilityInformation_p55_val,
	__si_amf__PagingProbabilityInformation_p60_val,
	__si_amf__PagingProbabilityInformation_p65_val,
	__si_amf__PagingProbabilityInformation_p70_val,
	__si_amf__PagingProbabilityInformation_p75_val,
	__si_amf__PagingProbabilityInformation_p80_val,
	__si_amf__PagingProbabilityInformation_p85_val,
	__si_amf__PagingProbabilityInformation_p90_val,
	__si_amf__PagingProbabilityInformation_p95_val,
	__si_amf__PagingProbabilityInformation_p100_val
} SI_AMF_DT_PagingProbabilityInformation;


// L:2442
typedef enum __si_amf_dt_PagingProbabilityInformation2
{
	PagingProbabilityInformation_p00_val,
	PagingProbabilityInformation_p05_val,
	PagingProbabilityInformation_p10_val,
	PagingProbabilityInformation_p15_val,
	PagingProbabilityInformation_p20_val,
	PagingProbabilityInformation_p25_val,
	PagingProbabilityInformation_p30_val,
	PagingProbabilityInformation_p35_val,
	PagingProbabilityInformation_p40_val,
	PagingProbabilityInformation_p45_val,
	PagingProbabilityInformation_p50_val,
	PagingProbabilityInformation_p55_val,
	PagingProbabilityInformation_p60_val,
	PagingProbabilityInformation_p65_val,
	PagingProbabilityInformation_p70_val,
	PagingProbabilityInformation_p75_val,
	PagingProbabilityInformation_p80_val,
	PagingProbabilityInformation_p85_val,
	PagingProbabilityInformation_p90_val,
	PagingProbabilityInformation_p95_val,
	PagingProbabilityInformation_p100_val
} SI_AMF_DT_PagingProbabilityInformation2;


// L:2469
typedef struct __si_amf_dt_PagingProbabilityInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PagingProbabilityInformation_EnumProxy;


// ParentTImeSource
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ParentTImeSource
{
	__si_amf__ParentTImeSource_synce_val,
	__si_amf__ParentTImeSource_ptp_val,
	__si_amf__ParentTImeSource_gnss_val,
	__si_amf__ParentTImeSource_atomicclock_val,
	__si_amf__ParentTImeSource_terrestrialradio_val,
	__si_amf__ParentTImeSource_serialtimecode_val,
	__si_amf__ParentTImeSource_ntp_val,
	__si_amf__ParentTImeSource_handset_val,
	__si_amf__ParentTImeSource_other_val
} SI_AMF_DT_ParentTImeSource;


// L:2442
typedef enum __si_amf_dt_ParentTImeSource2
{
	ParentTImeSource_synce_val,
	ParentTImeSource_ptp_val,
	ParentTImeSource_gnss_val,
	ParentTImeSource_atomicclock_val,
	ParentTImeSource_terrestrialradio_val,
	ParentTImeSource_serialtimecode_val,
	ParentTImeSource_ntp_val,
	ParentTImeSource_handset_val,
	ParentTImeSource_other_val
} SI_AMF_DT_ParentTImeSource2;


// L:2469
typedef struct __si_amf_dt_ParentTImeSource_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ParentTImeSource_EnumProxy;


// Partially-Allowed-NSSAI
//SEQUENCE OF PartiallyAllowedNSSAI-Item, MIN=1, MAX= maxnoofPartiallyAllowedS-NSSAIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_Partially_Allowed_NSSAI
{
	SI_LinkedList * PartiallyAllowedNSSAI_Item;
} SI_AMF_DT_Partially_Allowed_NSSAI;


// PartiallyAllowedNSSAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PartiallyAllowedNSSAI_Item
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_PartiallyAllowedNSSAI_Item;


// SecurityIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SecurityIndication
{
	uint8_t selected_eintegrityProtectionIndication;
	int extSelected_eintegrityProtectionIndication;

	uint8_t selected_econfidentialityProtectionIndication;
	int extSelected_econfidentialityProtectionIndication;

	uint8_t selected_emaximumIntegrityProtectedDataRate_UL;
	int extSelected_emaximumIntegrityProtectedDataRate_UL;
	int isPresent_maximumIntegrityProtectedDataRate_UL;

} SI_AMF_DT_SecurityIndication;


// PathSwitchRequestAcknowledgeTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PathSwitchRequestAcknowledgeTransfer
{
	SI_AMF_DT_UPTransportLayerInformation * uL_NGU_UP_TNLInformation;
	int isPresent_uL_NGU_UP_TNLInformation;

	SI_AMF_DT_SecurityIndication * securityIndication;
	int isPresent_securityIndication;

} SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer;


// PathSwitchRequestSetupFailedTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PathSwitchRequestSetupFailedTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PathSwitchRequestSetupFailedTransfer;


// UserPlaneSecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserPlaneSecurityInformation
{
	SI_AMF_DT_SecurityResult * securityResult;

	SI_AMF_DT_SecurityIndication * securityIndication;

} SI_AMF_DT_UserPlaneSecurityInformation;


// QosFlowAcceptedList
//SEQUENCE OF QosFlowAcceptedItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowAcceptedList
{
	SI_LinkedList * QosFlowAcceptedItem;
} SI_AMF_DT_QosFlowAcceptedList;


// PathSwitchRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PathSwitchRequestTransfer
{
	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;

	uint8_t selected_edL_NGU_TNLInformationReused;
	int extSelected_edL_NGU_TNLInformationReused;
	int isPresent_dL_NGU_TNLInformationReused;

	SI_AMF_DT_UserPlaneSecurityInformation * userPlaneSecurityInformation;
	int isPresent_userPlaneSecurityInformation;

	SI_AMF_DT_QosFlowAcceptedList * qosFlowAcceptedList;

} SI_AMF_DT_PathSwitchRequestTransfer;


// PathSwitchRequestUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PathSwitchRequestUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer;


// PC5QoSFlowList
//SEQUENCE OF PC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PC5QoSFlowList
{
	SI_LinkedList * PC5QoSFlowItem;
} SI_AMF_DT_PC5QoSFlowList;


// PC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PC5QoSParameters
{
	SI_AMF_DT_PC5QoSFlowList * pc5QoSFlowList;

	unsigned long long int pc5LinkAggregateBitRates;
	int isPresent_pc5LinkAggregateBitRates;

} SI_AMF_DT_PC5QoSParameters;


// PC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PC5FlowBitRates
{
	unsigned long long int guaranteedFlowBitRate;

	unsigned long long int maximumFlowBitRate;

} SI_AMF_DT_PC5FlowBitRates;


// PC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PC5QoSFlowItem
{
	unsigned long long int pQI;

	SI_AMF_DT_PC5FlowBitRates * pc5FlowBitRates;
	int isPresent_pc5FlowBitRates;

	uint8_t selected_erange;
	int extSelected_erange;
	int isPresent_range;

} SI_AMF_DT_PC5QoSFlowItem;


// PrivacyIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PrivacyIndicator
{
	__si_amf__PrivacyIndicator_immediate_MDT_val,
	__si_amf__PrivacyIndicator_logged_MDT_val
} SI_AMF_DT_PrivacyIndicator;


// L:2442
typedef enum __si_amf_dt_PrivacyIndicator2
{
	PrivacyIndicator_immediate_MDT_val,
	PrivacyIndicator_logged_MDT_val
} SI_AMF_DT_PrivacyIndicator2;


// L:2469
typedef struct __si_amf_dt_PrivacyIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PrivacyIndicator_EnumProxy;


// PDUSessionAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionAggregateMaximumBitRate
{
	unsigned long long int pDUSessionAggregateMaximumBitRateDL;

	unsigned long long int pDUSessionAggregateMaximumBitRateUL;

} SI_AMF_DT_PDUSessionAggregateMaximumBitRate;


// PDUSessionPairID
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_PDUSessionPairID
{
	unsigned long long int data;
} SI_AMF_DT_PDUSessionPairID;

// PDUSessionResourceAdmittedList
//SEQUENCE OF PDUSessionResourceAdmittedItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceAdmittedList
{
	SI_LinkedList * PDUSessionResourceAdmittedItem;
} SI_AMF_DT_PDUSessionResourceAdmittedList;


// PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer
// OCTETSTRING,OCTET STRING(CONTAINING HandoverRequestAcknowledgeTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer;

// PDUSessionResourceAdmittedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer * handoverRequestAcknowledgeTransfer;

} SI_AMF_DT_PDUSessionResourceAdmittedItem;


// PDUSessionResourceFailedToModifyListModCfm
//SEQUENCE OF PDUSessionResourceFailedToModifyItemModCfm, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyListModCfm
{
	SI_LinkedList * PDUSessionResourceFailedToModifyItemModCfm;
} SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm;


// PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyIndicationUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer;

// PDUSessionResourceFailedToModifyItemModCfm
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer * pDUSessionResourceModifyIndicationUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm;


// PDUSessionResourceFailedToModifyListModRes
//SEQUENCE OF PDUSessionResourceFailedToModifyItemModRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyListModRes
{
	SI_LinkedList * PDUSessionResourceFailedToModifyItemModRes;
} SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes;


// PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer;

// PDUSessionResourceFailedToModifyItemModRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer * pDUSessionResourceModifyUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes;


// PDUSessionResourceFailedToResumeListRESReq
//SEQUENCE OF PDUSessionResourceFailedToResumeItemRESReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeListRESReq
{
	SI_LinkedList * PDUSessionResourceFailedToResumeItemRESReq;
} SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq;


// PDUSessionResourceFailedToResumeItemRESReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq;


// PDUSessionResourceFailedToResumeListRESRes
//SEQUENCE OF PDUSessionResourceFailedToResumeItemRESRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeListRESRes
{
	SI_LinkedList * PDUSessionResourceFailedToResumeItemRESRes;
} SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes;


// PDUSessionResourceFailedToResumeItemRESRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes;


// PDUSessionResourceFailedToSetupListCxtFail
//SEQUENCE OF PDUSessionResourceFailedToSetupItemCxtFail, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListCxtFail
{
	SI_LinkedList * PDUSessionResourceFailedToSetupItemCxtFail;
} SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail;


// PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer;

// PDUSessionResourceFailedToSetupItemCxtFail
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer * pDUSessionResourceSetupUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail;


// PDUSessionResourceFailedToSetupListCxtRes
//SEQUENCE OF PDUSessionResourceFailedToSetupItemCxtRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListCxtRes
{
	SI_LinkedList * PDUSessionResourceFailedToSetupItemCxtRes;
} SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes;


// PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer;

// PDUSessionResourceFailedToSetupItemCxtRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer * pDUSessionResourceSetupUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes;


// PDUSessionResourceFailedToSetupListHOAck
//SEQUENCE OF PDUSessionResourceFailedToSetupItemHOAck, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListHOAck
{
	SI_LinkedList * PDUSessionResourceFailedToSetupItemHOAck;
} SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck;


// PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING HandoverResourceAllocationUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer;

// PDUSessionResourceFailedToSetupItemHOAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer * handoverResourceAllocationUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck;


// PDUSessionResourceFailedToSetupListPSReq
//SEQUENCE OF PDUSessionResourceFailedToSetupItemPSReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListPSReq
{
	SI_LinkedList * PDUSessionResourceFailedToSetupItemPSReq;
} SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq;


// PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PathSwitchRequestSetupFailedTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer;

// PDUSessionResourceFailedToSetupItemPSReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer * pathSwitchRequestSetupFailedTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq;


// PDUSessionResourceFailedToSetupListSURes
//SEQUENCE OF PDUSessionResourceFailedToSetupItemSURes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupListSURes
{
	SI_LinkedList * PDUSessionResourceFailedToSetupItemSURes;
} SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes;


// PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer;

// PDUSessionResourceFailedToSetupItemSURes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer * pDUSessionResourceSetupUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes;


// PDUSessionResourceHandoverList
//SEQUENCE OF PDUSessionResourceHandoverItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceHandoverList
{
	SI_LinkedList * PDUSessionResourceHandoverItem;
} SI_AMF_DT_PDUSessionResourceHandoverList;


// PDUSessionResourceHandoverItem_handoverCommandTransfer
// OCTETSTRING,OCTET STRING(CONTAINING HandoverCommandTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem_handoverCommandTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer;

// PDUSessionResourceHandoverItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer * handoverCommandTransfer;

} SI_AMF_DT_PDUSessionResourceHandoverItem;


// PDUSessionResourceInformationList
//SEQUENCE OF PDUSessionResourceInformationItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceInformationList
{
	SI_LinkedList * PDUSessionResourceInformationItem;
} SI_AMF_DT_PDUSessionResourceInformationList;


// QosFlowInformationList
//SEQUENCE OF QosFlowInformationItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowInformationList
{
	SI_LinkedList * QosFlowInformationItem;
} SI_AMF_DT_QosFlowInformationList;


// PDUSessionResourceInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceInformationItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_QosFlowInformationList * qosFlowInformationList;

	SI_AMF_DT_DRBsToQosFlowsMappingList * dRBsToQosFlowsMappingList;
	int isPresent_dRBsToQosFlowsMappingList;

} SI_AMF_DT_PDUSessionResourceInformationItem;


// PDUSessionResourceListCxtRelCpl
//SEQUENCE OF PDUSessionResourceItemCxtRelCpl, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceListCxtRelCpl
{
	SI_LinkedList * PDUSessionResourceItemCxtRelCpl;
} SI_AMF_DT_PDUSessionResourceListCxtRelCpl;


// PDUSessionResourceItemCxtRelCpl
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl
{
	unsigned long long int pDUSessionID;

} SI_AMF_DT_PDUSessionResourceItemCxtRelCpl;


// PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceReleaseResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer;

// PDUSessionResourceListCxtRelReq
//SEQUENCE OF PDUSessionResourceItemCxtRelReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceListCxtRelReq
{
	SI_LinkedList * PDUSessionResourceItemCxtRelReq;
} SI_AMF_DT_PDUSessionResourceListCxtRelReq;


// PDUSessionResourceItemCxtRelReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelReq
{
	unsigned long long int pDUSessionID;

} SI_AMF_DT_PDUSessionResourceItemCxtRelReq;


// PDUSessionResourceListHORqd
//SEQUENCE OF PDUSessionResourceItemHORqd, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceListHORqd
{
	SI_LinkedList * PDUSessionResourceItemHORqd;
} SI_AMF_DT_PDUSessionResourceListHORqd;


// PDUSessionResourceItemHORqd_handoverRequiredTransfer
// OCTETSTRING,OCTET STRING(CONTAINING HandoverRequiredTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd_handoverRequiredTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer;

// PDUSessionResourceItemHORqd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer * handoverRequiredTransfer;

} SI_AMF_DT_PDUSessionResourceItemHORqd;


// PDUSessionListMTCommHReq
//SEQUENCE OF PDUSessionListMTCommHReq-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionListMTCommHReq
{
	SI_LinkedList * PDUSessionListMTCommHReq_Item;
} SI_AMF_DT_PDUSessionListMTCommHReq;


// PDUSessionListMTCommHReq-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionListMTCommHReq_Item
{
	unsigned long long int pDUSessionID;

} SI_AMF_DT_PDUSessionListMTCommHReq_Item;


// QosFlowModifyConfirmList
//SEQUENCE OF QosFlowModifyConfirmItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowModifyConfirmList
{
	SI_LinkedList * QosFlowModifyConfirmItem;
} SI_AMF_DT_QosFlowModifyConfirmList;


// UPTransportLayerInformationPairList
//SEQUENCE OF UPTransportLayerInformationPairItem, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UPTransportLayerInformationPairList
{
	SI_LinkedList * UPTransportLayerInformationPairItem;
} SI_AMF_DT_UPTransportLayerInformationPairList;


// PDUSessionResourceModifyConfirmTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirmTransfer
{
	SI_AMF_DT_QosFlowModifyConfirmList * qosFlowModifyConfirmList;

	SI_AMF_DT_UPTransportLayerInformation * uLNGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformationPairList * additionalNG_UUPTNLInformation;
	int isPresent_additionalNG_UUPTNLInformation;

	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToModifyList;
	int isPresent_qosFlowFailedToModifyList;

} SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer;


// PDUSessionResourceModifyIndicationUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer;


// QosFlowAddOrModifyResponseList
//SEQUENCE OF QosFlowAddOrModifyResponseItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseList
{
	SI_LinkedList * QosFlowAddOrModifyResponseItem;
} SI_AMF_DT_QosFlowAddOrModifyResponseList;


// QosFlowPerTNLInformationList
//SEQUENCE OF QosFlowPerTNLInformationItem, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowPerTNLInformationList
{
	SI_LinkedList * QosFlowPerTNLInformationItem;
} SI_AMF_DT_QosFlowPerTNLInformationList;


// PDUSessionResourceModifyResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyResponseTransfer
{
	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;
	int isPresent_dL_NGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * uL_NGU_UP_TNLInformation;
	int isPresent_uL_NGU_UP_TNLInformation;

	SI_AMF_DT_QosFlowAddOrModifyResponseList * qosFlowAddOrModifyResponseList;
	int isPresent_qosFlowAddOrModifyResponseList;

	SI_AMF_DT_QosFlowPerTNLInformationList * additionalDLQosFlowPerTNLInformation;
	int isPresent_additionalDLQosFlowPerTNLInformation;

	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToAddOrModifyList;
	int isPresent_qosFlowFailedToAddOrModifyList;

} SI_AMF_DT_PDUSessionResourceModifyResponseTransfer;


// QosFlowPerTNLInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowPerTNLInformation
{
	SI_AMF_DT_UPTransportLayerInformation * uPTransportLayerInformation;

	SI_AMF_DT_AssociatedQosFlowList * associatedQosFlowList;

} SI_AMF_DT_QosFlowPerTNLInformation;


// PDUSessionResourceModifyIndicationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationTransfer
{
	SI_AMF_DT_QosFlowPerTNLInformation * dLQosFlowPerTNLInformation;

	SI_AMF_DT_QosFlowPerTNLInformationList * additionalDLQosFlowPerTNLInformation;
	int isPresent_additionalDLQosFlowPerTNLInformation;

} SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer;


// PDUSessionResourceModifyListModCfm
//SEQUENCE OF PDUSessionResourceModifyItemModCfm, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceModifyListModCfm
{
	SI_LinkedList * PDUSessionResourceModifyItemModCfm;
} SI_AMF_DT_PDUSessionResourceModifyListModCfm;


// PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyConfirmTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer;

// PDUSessionResourceModifyItemModCfm
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer * pDUSessionResourceModifyConfirmTransfer;

} SI_AMF_DT_PDUSessionResourceModifyItemModCfm;


// PDUSessionResourceModifyListModInd
//SEQUENCE OF PDUSessionResourceModifyItemModInd, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceModifyListModInd
{
	SI_LinkedList * PDUSessionResourceModifyItemModInd;
} SI_AMF_DT_PDUSessionResourceModifyListModInd;


// PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyIndicationTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer;

// PDUSessionResourceModifyItemModInd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer * pDUSessionResourceModifyIndicationTransfer;

} SI_AMF_DT_PDUSessionResourceModifyItemModInd;


// PDUSessionResourceModifyListModReq
//SEQUENCE OF PDUSessionResourceModifyItemModReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceModifyListModReq
{
	SI_LinkedList * PDUSessionResourceModifyItemModReq;
} SI_AMF_DT_PDUSessionResourceModifyListModReq;


// PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer;

// PDUSessionResourceModifyItemModReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_NAS_PDU * nAS_PDU;
	int isPresent_nAS_PDU;

	SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer * pDUSessionResourceModifyRequestTransfer;

} SI_AMF_DT_PDUSessionResourceModifyItemModReq;


// PDUSessionResourceModifyListModRes
//SEQUENCE OF PDUSessionResourceModifyItemModRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceModifyListModRes
{
	SI_LinkedList * PDUSessionResourceModifyItemModRes;
} SI_AMF_DT_PDUSessionResourceModifyListModRes;


// PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceModifyResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer;

// PDUSessionResourceModifyItemModRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer * pDUSessionResourceModifyResponseTransfer;

} SI_AMF_DT_PDUSessionResourceModifyItemModRes;


// PDUSessionResourceModifyUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceModifyUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer;


// PDUSessionResourceNotifyList
//SEQUENCE OF PDUSessionResourceNotifyItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceNotifyList
{
	SI_LinkedList * PDUSessionResourceNotifyItem;
} SI_AMF_DT_PDUSessionResourceNotifyList;


// PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceNotifyTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer;

// PDUSessionResourceNotifyItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer * pDUSessionResourceNotifyTransfer;

} SI_AMF_DT_PDUSessionResourceNotifyItem;


// PDUSessionResourceNotifyReleasedTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceNotifyReleasedTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer;


// UserPlaneErrorIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UserPlaneErrorIndicator
{
	__si_amf__UserPlaneErrorIndicator_gTP_U_error_indication_received_val
} SI_AMF_DT_UserPlaneErrorIndicator;


// L:2442
typedef enum __si_amf_dt_UserPlaneErrorIndicator2
{
	UserPlaneErrorIndicator_gTP_U_error_indication_received_val
} SI_AMF_DT_UserPlaneErrorIndicator2;


// L:2469
typedef struct __si_amf_dt_UserPlaneErrorIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UserPlaneErrorIndicator_EnumProxy;


// QosFlowNotifyList
//SEQUENCE OF QosFlowNotifyItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowNotifyList
{
	SI_LinkedList * QosFlowNotifyItem;
} SI_AMF_DT_QosFlowNotifyList;


// PDUSessionResourceNotifyTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceNotifyTransfer
{
	SI_AMF_DT_QosFlowNotifyList * qosFlowNotifyList;
	int isPresent_qosFlowNotifyList;

	SI_AMF_DT_QosFlowListWithCause * qosFlowReleasedList;
	int isPresent_qosFlowReleasedList;

} SI_AMF_DT_PDUSessionResourceNotifyTransfer;


// PDUSessionResourceReleaseCommandTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommandTransfer
{
	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer;


// PDUSessionResourceReleasedListNot
//SEQUENCE OF PDUSessionResourceReleasedItemNot, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceReleasedListNot
{
	SI_LinkedList * PDUSessionResourceReleasedItemNot;
} SI_AMF_DT_PDUSessionResourceReleasedListNot;


// PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceNotifyReleasedTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer;

// PDUSessionResourceReleasedItemNot
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer * pDUSessionResourceNotifyReleasedTransfer;

} SI_AMF_DT_PDUSessionResourceReleasedItemNot;


// PDUSessionResourceReleasedListPSAck
//SEQUENCE OF PDUSessionResourceReleasedItemPSAck, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceReleasedListPSAck
{
	SI_LinkedList * PDUSessionResourceReleasedItemPSAck;
} SI_AMF_DT_PDUSessionResourceReleasedListPSAck;


// PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PathSwitchRequestUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer;

// PDUSessionResourceReleasedItemPSAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer * pathSwitchRequestUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceReleasedItemPSAck;


// PDUSessionResourceReleasedListPSFail
//SEQUENCE OF PDUSessionResourceReleasedItemPSFail, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceReleasedListPSFail
{
	SI_LinkedList * PDUSessionResourceReleasedItemPSFail;
} SI_AMF_DT_PDUSessionResourceReleasedListPSFail;


// PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PathSwitchRequestUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer;

// PDUSessionResourceReleasedItemPSFail
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer * pathSwitchRequestUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceReleasedItemPSFail;


// PDUSessionResourceReleasedListRelRes
//SEQUENCE OF PDUSessionResourceReleasedItemRelRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceReleasedListRelRes
{
	SI_LinkedList * PDUSessionResourceReleasedItemRelRes;
} SI_AMF_DT_PDUSessionResourceReleasedListRelRes;


// PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceReleaseResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer;

// PDUSessionResourceReleasedItemRelRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer * pDUSessionResourceReleaseResponseTransfer;

} SI_AMF_DT_PDUSessionResourceReleasedItemRelRes;


// PDUSessionResourceReleaseResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponseTransfer
{
} SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer;


// PDUSessionResourceResumeListRESReq
//SEQUENCE OF PDUSessionResourceResumeItemRESReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceResumeListRESReq
{
	SI_LinkedList * PDUSessionResourceResumeItemRESReq;
} SI_AMF_DT_PDUSessionResourceResumeListRESReq;


// PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING UEContextResumeRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer;

// PDUSessionResourceResumeItemRESReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer * uEContextResumeRequestTransfer;

} SI_AMF_DT_PDUSessionResourceResumeItemRESReq;


// PDUSessionResourceResumeListRESRes
//SEQUENCE OF PDUSessionResourceResumeItemRESRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceResumeListRESRes
{
	SI_LinkedList * PDUSessionResourceResumeItemRESRes;
} SI_AMF_DT_PDUSessionResourceResumeListRESRes;


// PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING UEContextResumeResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer;

// PDUSessionResourceResumeItemRESRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer * uEContextResumeResponseTransfer;

} SI_AMF_DT_PDUSessionResourceResumeItemRESRes;


// PDUSessionResourceSecondaryRATUsageList
//SEQUENCE OF PDUSessionResourceSecondaryRATUsageItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageList
{
	SI_LinkedList * PDUSessionResourceSecondaryRATUsageItem;
} SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList;


// PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer
// OCTETSTRING,OCTET STRING(CONTAINING SecondaryRATDataUsageReportTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer;

// PDUSessionResourceSecondaryRATUsageItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer * secondaryRATDataUsageReportTransfer;

} SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem;


// PDUSessionResourceSetupListCxtReq
//SEQUENCE OF PDUSessionResourceSetupItemCxtReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSetupListCxtReq
{
	SI_LinkedList * PDUSessionResourceSetupItemCxtReq;
} SI_AMF_DT_PDUSessionResourceSetupListCxtReq;


// PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer;

// PDUSessionResourceSetupItemCxtReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_NAS_PDU * nAS_PDU;
	int isPresent_nAS_PDU;

	SI_AMF_DT_S_NSSAI * s_NSSAI;

	SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer * pDUSessionResourceSetupRequestTransfer;

} SI_AMF_DT_PDUSessionResourceSetupItemCxtReq;


// PDUSessionResourceSetupListCxtRes
//SEQUENCE OF PDUSessionResourceSetupItemCxtRes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSetupListCxtRes
{
	SI_LinkedList * PDUSessionResourceSetupItemCxtRes;
} SI_AMF_DT_PDUSessionResourceSetupListCxtRes;


// PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer;

// PDUSessionResourceSetupItemCxtRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer * pDUSessionResourceSetupResponseTransfer;

} SI_AMF_DT_PDUSessionResourceSetupItemCxtRes;


// PDUSessionResourceSetupListHOReq
//SEQUENCE OF PDUSessionResourceSetupItemHOReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSetupListHOReq
{
	SI_LinkedList * PDUSessionResourceSetupItemHOReq;
} SI_AMF_DT_PDUSessionResourceSetupListHOReq;


// PDUSessionResourceSetupItemHOReq_handoverRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer;

// PDUSessionResourceSetupItemHOReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_S_NSSAI * s_NSSAI;

	SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer * handoverRequestTransfer;

} SI_AMF_DT_PDUSessionResourceSetupItemHOReq;


// PDUSessionResourceSetupListSUReq
//SEQUENCE OF PDUSessionResourceSetupItemSUReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSetupListSUReq
{
	SI_LinkedList * PDUSessionResourceSetupItemSUReq;
} SI_AMF_DT_PDUSessionResourceSetupListSUReq;


// PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer;

// PDUSessionResourceSetupItemSUReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_NAS_PDU * pDUSessionNAS_PDU;
	int isPresent_pDUSessionNAS_PDU;

	SI_AMF_DT_S_NSSAI * s_NSSAI;

	SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer * pDUSessionResourceSetupRequestTransfer;

} SI_AMF_DT_PDUSessionResourceSetupItemSUReq;


// PDUSessionResourceSetupListSURes
//SEQUENCE OF PDUSessionResourceSetupItemSURes, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSetupListSURes
{
	SI_LinkedList * PDUSessionResourceSetupItemSURes;
} SI_AMF_DT_PDUSessionResourceSetupListSURes;


// PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceSetupResponseTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer;

// PDUSessionResourceSetupItemSURes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer * pDUSessionResourceSetupResponseTransfer;

} SI_AMF_DT_PDUSessionResourceSetupItemSURes;


// PDUSessionResourceSetupResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupResponseTransfer
{
	SI_AMF_DT_QosFlowPerTNLInformation * dLQosFlowPerTNLInformation;

	SI_AMF_DT_QosFlowPerTNLInformationList * additionalDLQosFlowPerTNLInformation;
	int isPresent_additionalDLQosFlowPerTNLInformation;

	SI_AMF_DT_SecurityResult * securityResult;
	int isPresent_securityResult;

	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToSetupList;
	int isPresent_qosFlowFailedToSetupList;

} SI_AMF_DT_PDUSessionResourceSetupResponseTransfer;


// PDUSessionResourceSetupUnsuccessfulTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSetupUnsuccessfulTransfer
{
	SI_AMF_DT_Cause * cause;

	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int isPresent_criticalityDiagnostics;

} SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer;


// PDUSessionResourceSuspendListSUSReq
//SEQUENCE OF PDUSessionResourceSuspendItemSUSReq, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSuspendListSUSReq
{
	SI_LinkedList * PDUSessionResourceSuspendItemSUSReq;
} SI_AMF_DT_PDUSessionResourceSuspendListSUSReq;


// PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING UEContextSuspendRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer;

// PDUSessionResourceSuspendItemSUSReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer * uEContextSuspendRequestTransfer;

} SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq;


// PDUSessionResourceSwitchedList
//SEQUENCE OF PDUSessionResourceSwitchedItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceSwitchedList
{
	SI_LinkedList * PDUSessionResourceSwitchedItem;
} SI_AMF_DT_PDUSessionResourceSwitchedList;


// PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PathSwitchRequestAcknowledgeTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer;

// PDUSessionResourceSwitchedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer * pathSwitchRequestAcknowledgeTransfer;

} SI_AMF_DT_PDUSessionResourceSwitchedItem;


// PDUSessionResourceToBeSwitchedDLList
//SEQUENCE OF PDUSessionResourceToBeSwitchedDLItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLList
{
	SI_LinkedList * PDUSessionResourceToBeSwitchedDLItem;
} SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList;


// PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PathSwitchRequestTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer;

// PDUSessionResourceToBeSwitchedDLItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer * pathSwitchRequestTransfer;

} SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem;


// PDUSessionResourceToReleaseListHOCmd
//SEQUENCE OF PDUSessionResourceToReleaseItemHOCmd, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceToReleaseListHOCmd
{
	SI_LinkedList * PDUSessionResourceToReleaseItemHOCmd;
} SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd;


// PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer
// OCTETSTRING,OCTET STRING(CONTAINING HandoverPreparationUnsuccessfulTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer;

// PDUSessionResourceToReleaseItemHOCmd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer * handoverPreparationUnsuccessfulTransfer;

} SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd;


// PDUSessionResourceToReleaseListRelCmd
//SEQUENCE OF PDUSessionResourceToReleaseItemRelCmd, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PDUSessionResourceToReleaseListRelCmd
{
	SI_LinkedList * PDUSessionResourceToReleaseItemRelCmd;
} SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd;


// PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer
// OCTETSTRING,OCTET STRING(CONTAINING PDUSessionResourceReleaseCommandTransfer)
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer;

// PDUSessionResourceToReleaseItemRelCmd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd
{
	unsigned long long int pDUSessionID;

	SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer * pDUSessionResourceReleaseCommandTransfer;

} SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd;


// PDUSessionType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PDUSessionType
{
	__si_amf__PDUSessionType_ipv4_val,
	__si_amf__PDUSessionType_ipv6_val,
	__si_amf__PDUSessionType_ipv4v6_val,
	__si_amf__PDUSessionType_ethernet_val,
	__si_amf__PDUSessionType_unstructured_val
} SI_AMF_DT_PDUSessionType;


// L:2442
typedef enum __si_amf_dt_PDUSessionType2
{
	PDUSessionType_ipv4_val,
	PDUSessionType_ipv6_val,
	PDUSessionType_ipv4v6_val,
	PDUSessionType_ethernet_val,
	PDUSessionType_unstructured_val
} SI_AMF_DT_PDUSessionType2;


// L:2469
typedef struct __si_amf_dt_PDUSessionType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PDUSessionType_EnumProxy;


// PDUSessionUsageReport_rATType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PDUSessionUsageReport_rATType
{
	__si_amf__PDUSessionUsageReport_rATType_nr_val,
	__si_amf__PDUSessionUsageReport_rATType_eutra_val,
	__si_amf__PDUSessionUsageReport_rATType_nr_unlicensed_val_ext,
	__si_amf__PDUSessionUsageReport_rATType_e_utra_unlicensed_val_ext
} SI_AMF_DT_PDUSessionUsageReport_rATType;


// L:2442
typedef enum __si_amf_dt_PDUSessionUsageReport_rATType2
{
	PDUSessionUsageReport_rATType_nr_val,
	PDUSessionUsageReport_rATType_eutra_val,
	PDUSessionUsageReport_rATType_nr_unlicensed_val_ext,
	PDUSessionUsageReport_rATType_e_utra_unlicensed_val_ext
} SI_AMF_DT_PDUSessionUsageReport_rATType2;


// L:2469
typedef struct __si_amf_dt_PDUSessionUsageReport_rATType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PDUSessionUsageReport_rATType_EnumProxy;


// VolumeTimedReportList
//SEQUENCE OF VolumeTimedReport-Item, MIN=1, MAX=maxnoofTimePeriods  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_VolumeTimedReportList
{
	SI_LinkedList * VolumeTimedReport_Item;
} SI_AMF_DT_VolumeTimedReportList;


// PDUSessionUsageReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUSessionUsageReport
{
	uint8_t selected_erATType;
	int extSelected_erATType;

	SI_AMF_DT_VolumeTimedReportList * pDUSessionTimedReportList;

} SI_AMF_DT_PDUSessionUsageReport;


// PDUsetQoSInformation_pduSetIntegratedHandlingInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PDUsetQoSInformation_pduSetIntegratedHandlingInformation
{
	__si_amf__PDUsetQoSInformation_pduSetIntegratedHandlingInformation_true_val,
	__si_amf__PDUsetQoSInformation_pduSetIntegratedHandlingInformation_false_val
} SI_AMF_DT_PDUsetQoSInformation_pduSetIntegratedHandlingInformation;


// L:2442
typedef enum __si_amf_dt_PDUsetQoSInformation_pduSetIntegratedHandlingInformation2
{
	PDUsetQoSInformation_pduSetIntegratedHandlingInformation_true_val,
	PDUsetQoSInformation_pduSetIntegratedHandlingInformation_false_val
} SI_AMF_DT_PDUsetQoSInformation_pduSetIntegratedHandlingInformation2;


// L:2469
typedef struct __si_amf_dt_PDUsetQoSInformation_pduSetIntegratedHandlingInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PDUsetQoSInformation_pduSetIntegratedHandlingInformation_EnumProxy;


// PDUsetQoSInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUsetQoSInformation
{
	unsigned long long int pduSetDelayBudget;
	int isPresent_pduSetDelayBudget;

	SI_AMF_DT_PacketErrorRate * pduSetErrorRate;
	int isPresent_pduSetErrorRate;

	uint8_t selected_epduSetIntegratedHandlingInformation;
	int extSelected_epduSetIntegratedHandlingInformation;
	int isPresent_pduSetIntegratedHandlingInformation;

} SI_AMF_DT_PDUsetQoSInformation;


// PDUsetQoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PDUsetQoSParameters
{
	SI_AMF_DT_PDUsetQoSInformation * ulPDUSetQoSInformation;
	int isPresent_ulPDUSetQoSInformation;

	SI_AMF_DT_PDUsetQoSInformation * dlPDUSetQoSInformation;
	int isPresent_dlPDUSetQoSInformation;

} SI_AMF_DT_PDUsetQoSParameters;


// PDUSetbasedHandlingIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_PDUSetbasedHandlingIndicator
{
	__si_amf__PDUSetbasedHandlingIndicator_supported_val
} SI_AMF_DT_PDUSetbasedHandlingIndicator;


// L:2442
typedef enum __si_amf_dt_PDUSetbasedHandlingIndicator2
{
	PDUSetbasedHandlingIndicator_supported_val
} SI_AMF_DT_PDUSetbasedHandlingIndicator2;


// L:2469
typedef struct __si_amf_dt_PDUSetbasedHandlingIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_PDUSetbasedHandlingIndicator_EnumProxy;


// PEIPSassistanceInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PEIPSassistanceInformation
{
	unsigned long long int cNsubgroupID;

} SI_AMF_DT_PEIPSassistanceInformation;


// Periodicity
// INTEGER,INTEGER(0..640000,...),MIN=0,MAX=640000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_Periodicity
{
	unsigned long long int data;
} SI_AMF_DT_Periodicity;

// PeriodicityBound
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PeriodicityBound
{
	unsigned long long int periodicityLowerBound;

	unsigned long long int periodicityUpperBound;

} SI_AMF_DT_PeriodicityBound;


// AllowedPeriodicityList
//SEQUENCE OF Periodicity, MIN=1, MAX=maxnoofPeriodicities  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_AllowedPeriodicityList
{
	SI_LinkedList * Periodicity;
} SI_AMF_DT_AllowedPeriodicityList;


// PeriodicityList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PeriodicityList
{
	SI_AMF_DT_AllowedPeriodicityList * allowedPeriodicityList;

} SI_AMF_DT_PeriodicityList;


// PeriodicityRange
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_PeriodicityRange
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_PeriodicityBound * periodicityBound;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_AllowedPeriodicityList * periodicityList;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_PeriodicityRange_ExtIEs * choice_extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_PeriodicityRange;


// PLMNSupportList
//SEQUENCE OF PLMNSupportItem, MIN=1, MAX=maxnoofPLMNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_PLMNSupportList
{
	SI_LinkedList * PLMNSupportItem;
} SI_AMF_DT_PLMNSupportList;


// PLMNSupportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PLMNSupportItem
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_SliceSupportList * sliceSupportList;

} SI_AMF_DT_PLMNSupportItem;


// PWSFailedCellIDList
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_PWSFailedCellIDList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EUTRA_CGIList * eUTRA_CGI_PWSFailedList;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_NR_CGIList * nR_CGI_PWSFailedList;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_PWSFailedCellIDList;


// PNI-NPN-AreaScopeofMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PNI_NPN_AreaScopeofMDT
{
	SI_AMF_DT_CAGListforMDT * cAGListforMDT;

} SI_AMF_DT_PNI_NPN_AreaScopeofMDT;


// PNI-NPNBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_PNI_NPNBasedMDT
{
	SI_AMF_DT_CAGListforMDT * cAGListforMDT;

} SI_AMF_DT_PNI_NPNBasedMDT;


// UEAppLayerMeasInfoList
//SEQUENCE OF UEAppLayerMeasInfoItem, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UEAppLayerMeasInfoList
{
	SI_LinkedList * UEAppLayerMeasInfoItem;
} SI_AMF_DT_UEAppLayerMeasInfoList;


// QMCConfigInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QMCConfigInfo
{
	SI_AMF_DT_UEAppLayerMeasInfoList * uEAppLayerMeasInfoList;

} SI_AMF_DT_QMCConfigInfo;


// QoEReferenceList
//SEQUENCE OF QoEReference, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QoEReferenceList
{
	SI_LinkedList * QoEReference;
} SI_AMF_DT_QoEReferenceList;


// QMCDeactivation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QMCDeactivation
{
	SI_AMF_DT_QoEReferenceList * qoEReferenceList;

} SI_AMF_DT_QMCDeactivation;


// QoEReference
// OCTETSTRING,OCTET STRING(SIZE(6))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_QoEReference
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_QoEReference;

// QoERVQoEReportingPaths_qoEReportingPath
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_QoERVQoEReportingPaths_qoEReportingPath
{
	__si_amf__QoERVQoEReportingPaths_qoEReportingPath_srb4_val,
	__si_amf__QoERVQoEReportingPaths_qoEReportingPath_srb5_val
} SI_AMF_DT_QoERVQoEReportingPaths_qoEReportingPath;


// L:2442
typedef enum __si_amf_dt_QoERVQoEReportingPaths_qoEReportingPath2
{
	QoERVQoEReportingPaths_qoEReportingPath_srb4_val,
	QoERVQoEReportingPaths_qoEReportingPath_srb5_val
} SI_AMF_DT_QoERVQoEReportingPaths_qoEReportingPath2;


// L:2469
typedef struct __si_amf_dt_QoERVQoEReportingPaths_qoEReportingPath_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_QoERVQoEReportingPaths_qoEReportingPath_EnumProxy;


// QoERVQoEReportingPaths_rVQoEReportingPath
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_QoERVQoEReportingPaths_rVQoEReportingPath
{
	__si_amf__QoERVQoEReportingPaths_rVQoEReportingPath_srb4_val,
	__si_amf__QoERVQoEReportingPaths_rVQoEReportingPath_srb5_val
} SI_AMF_DT_QoERVQoEReportingPaths_rVQoEReportingPath;


// L:2442
typedef enum __si_amf_dt_QoERVQoEReportingPaths_rVQoEReportingPath2
{
	QoERVQoEReportingPaths_rVQoEReportingPath_srb4_val,
	QoERVQoEReportingPaths_rVQoEReportingPath_srb5_val
} SI_AMF_DT_QoERVQoEReportingPaths_rVQoEReportingPath2;


// L:2469
typedef struct __si_amf_dt_QoERVQoEReportingPaths_rVQoEReportingPath_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_QoERVQoEReportingPaths_rVQoEReportingPath_EnumProxy;


// QoERVQoEReportingPaths
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QoERVQoEReportingPaths
{
	uint8_t selected_eqoEReportingPath;
	int extSelected_eqoEReportingPath;
	int isPresent_qoEReportingPath;

	uint8_t selected_erVQoEReportingPath;
	int extSelected_erVQoEReportingPath;
	int isPresent_rVQoEReportingPath;

} SI_AMF_DT_QoERVQoEReportingPaths;


// QosFlowAcceptedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowAcceptedItem
{
	unsigned long long int qosFlowIdentifier;

} SI_AMF_DT_QosFlowAcceptedItem;


// QosFlowAdditionalInfoListRelCom
//SEQUENCE OF QosFlowAdditionalInfoItemRelCom, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowAdditionalInfoListRelCom
{
	SI_LinkedList * QosFlowAdditionalInfoItemRelCom;
} SI_AMF_DT_QosFlowAdditionalInfoListRelCom;


// TLContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TLContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TLContainer;

// QosFlowAdditionalInfoItemRelCom
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelCom
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_TLContainer * downlinkTLContainer;
	int isPresent_downlinkTLContainer;

} SI_AMF_DT_QosFlowAdditionalInfoItemRelCom;


// QosFlowAdditionalInfoListRelRes
//SEQUENCE OF QosFlowAdditionalInfoItemRelRes, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowAdditionalInfoListRelRes
{
	SI_LinkedList * QosFlowAdditionalInfoItemRelRes;
} SI_AMF_DT_QosFlowAdditionalInfoListRelRes;


// QosFlowAdditionalInfoItemRelRes
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelRes
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_TLContainer * uplinkTLContainer;
	int isPresent_uplinkTLContainer;

} SI_AMF_DT_QosFlowAdditionalInfoItemRelRes;


// QosFlowAddOrModifyRequestList
//SEQUENCE OF QosFlowAddOrModifyRequestItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestList
{
	SI_LinkedList * QosFlowAddOrModifyRequestItem;
} SI_AMF_DT_QosFlowAddOrModifyRequestList;


// QosFlowAddOrModifyRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_QosFlowLevelQosParameters * qosFlowLevelQosParameters;
	int isPresent_qosFlowLevelQosParameters;

	unsigned long long int e_RAB_ID;
	int isPresent_e_RAB_ID;

} SI_AMF_DT_QosFlowAddOrModifyRequestItem;


// QosFlowAddOrModifyResponseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseItem
{
	unsigned long long int qosFlowIdentifier;

} SI_AMF_DT_QosFlowAddOrModifyResponseItem;


// QosFlowFeedbackList
//SEQUENCE OF QosFlowFeedbackItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowFeedbackList
{
	SI_LinkedList * QosFlowFeedbackItem;
} SI_AMF_DT_QosFlowFeedbackList;


// UpdateFeedback
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_UpdateFeedback
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_UpdateFeedback;

// QosFlowFeedbackItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowFeedbackItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_UpdateFeedback * updateFeedback;
	int isPresent_updateFeedback;

	unsigned long long int cNpacketDelayBudgetDL;
	int isPresent_cNpacketDelayBudgetDL;

	unsigned long long int cNpacketDelayBudgetUL;
	int isPresent_cNpacketDelayBudgetUL;

} SI_AMF_DT_QosFlowFeedbackItem;


// QosFlowInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowInformationItem
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_edLForwarding;
	int extSelected_edLForwarding;
	int isPresent_dLForwarding;

} SI_AMF_DT_QosFlowInformationItem;


// QosMonitoringRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_QosMonitoringRequest
{
	__si_amf__QosMonitoringRequest_ul_val,
	__si_amf__QosMonitoringRequest_dl_val,
	__si_amf__QosMonitoringRequest_both_val,
	__si_amf__QosMonitoringRequest_stop_val_ext
} SI_AMF_DT_QosMonitoringRequest;


// L:2442
typedef enum __si_amf_dt_QosMonitoringRequest2
{
	QosMonitoringRequest_ul_val,
	QosMonitoringRequest_dl_val,
	QosMonitoringRequest_both_val,
	QosMonitoringRequest_stop_val_ext
} SI_AMF_DT_QosMonitoringRequest2;


// L:2469
typedef struct __si_amf_dt_QosMonitoringRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_QosMonitoringRequest_EnumProxy;


// QosMonitoringReportingFrequency
// INTEGER,INTEGER(1..1800,...),MIN=1,MAX=1800  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_QosMonitoringReportingFrequency
{
	unsigned long long int data;
} SI_AMF_DT_QosMonitoringReportingFrequency;

// QoSFlowList
//SEQUENCE OF QosFlowIdentifier, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QoSFlowList
{
	SI_LinkedList * QosFlowIdentifier;
} SI_AMF_DT_QoSFlowList;


// QosFlowWithCauseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowWithCauseItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_QosFlowWithCauseItem;


// QosFlowModifyConfirmItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowModifyConfirmItem
{
	unsigned long long int qosFlowIdentifier;

} SI_AMF_DT_QosFlowModifyConfirmItem;


// QosFlowNotifyItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowNotifyItem
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_enotificationCause;
	int extSelected_enotificationCause;

} SI_AMF_DT_QosFlowNotifyItem;


// QosFlowParametersList
//SEQUENCE OF QosFlowParametersItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowParametersList
{
	SI_LinkedList * QosFlowParametersItem;
} SI_AMF_DT_QosFlowParametersList;


// QosFlowParametersItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowParametersItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_AlternativeQoSParaSetList * alternativeQoSParaSetList;
	int isPresent_alternativeQoSParaSetList;

} SI_AMF_DT_QosFlowParametersItem;


// QosFlowPerTNLInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowPerTNLInformationItem
{
	SI_AMF_DT_QosFlowPerTNLInformation * qosFlowPerTNLInformation;

} SI_AMF_DT_QosFlowPerTNLInformationItem;


// QosFlowSetupRequestList
//SEQUENCE OF QosFlowSetupRequestItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QosFlowSetupRequestList
{
	SI_LinkedList * QosFlowSetupRequestItem;
} SI_AMF_DT_QosFlowSetupRequestList;


// QosFlowSetupRequestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowSetupRequestItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_QosFlowLevelQosParameters * qosFlowLevelQosParameters;

	unsigned long long int e_RAB_ID;
	int isPresent_e_RAB_ID;

} SI_AMF_DT_QosFlowSetupRequestItem;


// QosFlowItemWithDataForwarding
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowItemWithDataForwarding
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_edataForwardingAccepted;
	int extSelected_edataForwardingAccepted;
	int isPresent_dataForwardingAccepted;

} SI_AMF_DT_QosFlowItemWithDataForwarding;


// QosFlowToBeForwardedItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QosFlowToBeForwardedItem
{
	unsigned long long int qosFlowIdentifier;

} SI_AMF_DT_QosFlowToBeForwardedItem;


// QoSFlowTSCList
//SEQUENCE OF QoSFlowTSCItem, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QoSFlowTSCList
{
	SI_LinkedList * QoSFlowTSCItem;
} SI_AMF_DT_QoSFlowTSCList;


// TSCFeedbackInformation_burstArrivalTimeOffset
// INTEGER,INTEGER(-640000..640000,...),MIN=-640000,MAX=640000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TSCFeedbackInformation_burstArrivalTimeOffset
{
	unsigned long long int data;
} SI_AMF_DT_TSCFeedbackInformation_burstArrivalTimeOffset;

// TSCFeedbackInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TSCFeedbackInformation
{
	unsigned long long int burstArrivalTimeOffset;

	unsigned long long int adjustedPeriodicity;
	int isPresent_adjustedPeriodicity;

} SI_AMF_DT_TSCFeedbackInformation;


// TSCTrafficCharacteristicsFeedback
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TSCTrafficCharacteristicsFeedback
{
	SI_AMF_DT_TSCFeedbackInformation * tSCFeedbackInformationDL;
	int isPresent_tSCFeedbackInformationDL;

	SI_AMF_DT_TSCFeedbackInformation * tSCFeedbackInformationUL;
	int isPresent_tSCFeedbackInformationUL;

} SI_AMF_DT_TSCTrafficCharacteristicsFeedback;


// QoSFlowTSCItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QoSFlowTSCItem
{
	unsigned long long int qosFlowIdentifier;

	SI_AMF_DT_TSCTrafficCharacteristicsFeedback * tSCTrafficCharacteristicsFeedback;
	int isPresent_tSCTrafficCharacteristicsFeedback;

	unsigned long long int aNPacketDelayBudgetUL;
	int isPresent_aNPacketDelayBudgetUL;

} SI_AMF_DT_QoSFlowTSCItem;


// QoSFlowsUsageReportList
//SEQUENCE OF QoSFlowsUsageReport-Item, MIN=1, MAX=maxnoofQosFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_QoSFlowsUsageReportList
{
	SI_LinkedList * QoSFlowsUsageReport_Item;
} SI_AMF_DT_QoSFlowsUsageReportList;


// QoSFlowsUsageReportItem_rATType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_QoSFlowsUsageReportItem_rATType
{
	__si_amf__QoSFlowsUsageReportItem_rATType_nr_val,
	__si_amf__QoSFlowsUsageReportItem_rATType_eutra_val,
	__si_amf__QoSFlowsUsageReportItem_rATType_nr_unlicensed_val_ext,
	__si_amf__QoSFlowsUsageReportItem_rATType_e_utra_unlicensed_val_ext
} SI_AMF_DT_QoSFlowsUsageReportItem_rATType;


// L:2442
typedef enum __si_amf_dt_QoSFlowsUsageReportItem_rATType2
{
	QoSFlowsUsageReportItem_rATType_nr_val,
	QoSFlowsUsageReportItem_rATType_eutra_val,
	QoSFlowsUsageReportItem_rATType_nr_unlicensed_val_ext,
	QoSFlowsUsageReportItem_rATType_e_utra_unlicensed_val_ext
} SI_AMF_DT_QoSFlowsUsageReportItem_rATType2;


// L:2469
typedef struct __si_amf_dt_QoSFlowsUsageReportItem_rATType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_QoSFlowsUsageReportItem_rATType_EnumProxy;


// QoSFlowsUsageReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_QoSFlowsUsageReport_Item
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_erATType;
	int extSelected_erATType;

	SI_AMF_DT_VolumeTimedReportList * qoSFlowsTimedReportList;

} SI_AMF_DT_QoSFlowsUsageReport_Item;


// RANfeedbacktype-proactive
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RANfeedbacktype_proactive
{
	SI_AMF_DT_BurstArrivalTimeWindow * burstArrivalTimeWindow;

	SI_AMF_DT_PeriodicityRange * periodicityRange;
	int isPresent_periodicityRange;

} SI_AMF_DT_RANfeedbacktype_proactive;


// RANfeedbacktypereactive_capabilityForBATAdaptation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RANfeedbacktypereactive_capabilityForBATAdaptation
{
	__si_amf__RANfeedbacktypereactive_capabilityForBATAdaptation_true_val
} SI_AMF_DT_RANfeedbacktypereactive_capabilityForBATAdaptation;


// L:2442
typedef enum __si_amf_dt_RANfeedbacktypereactive_capabilityForBATAdaptation2
{
	RANfeedbacktypereactive_capabilityForBATAdaptation_true_val
} SI_AMF_DT_RANfeedbacktypereactive_capabilityForBATAdaptation2;


// L:2469
typedef struct __si_amf_dt_RANfeedbacktypereactive_capabilityForBATAdaptation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RANfeedbacktypereactive_capabilityForBATAdaptation_EnumProxy;


// RANfeedbacktype-reactive
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RANfeedbacktype_reactive
{
	uint8_t selected_ecapabilityForBATAdaptation;
	int extSelected_ecapabilityForBATAdaptation;

} SI_AMF_DT_RANfeedbacktype_reactive;


// RANfeedbacktype
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_RANfeedbacktype
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_RANfeedbacktype_proactive * proactive;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_RANfeedbacktype_reactive * reactive;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs * choice_extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_RANfeedbacktype;


// RANNodeName
// PrintableString,PrintableString(SIZE(1..150,...))
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_RANNodeName
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RANNodeName;

// RANPagingPriority
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RANPagingPriority
{
	unsigned long long int data;
} SI_AMF_DT_RANPagingPriority;

// RANStatusTransfer-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RANStatusTransfer_TransparentContainer
{
	SI_AMF_DT_DRBsSubjectToStatusTransferList * dRBsSubjectToStatusTransferList;

} SI_AMF_DT_RANStatusTransfer_TransparentContainer;


// RANTimingSynchronisationStatusInfo_synchronisationState
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_synchronisationState
{
	__si_amf__RANTimingSynchronisationStatusInfo_synchronisationState_locked_val,
	__si_amf__RANTimingSynchronisationStatusInfo_synchronisationState_holdover_val,
	__si_amf__RANTimingSynchronisationStatusInfo_synchronisationState_freerun_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_synchronisationState;


// L:2442
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_synchronisationState2
{
	RANTimingSynchronisationStatusInfo_synchronisationState_locked_val,
	RANTimingSynchronisationStatusInfo_synchronisationState_holdover_val,
	RANTimingSynchronisationStatusInfo_synchronisationState_freerun_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_synchronisationState2;


// L:2469
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_synchronisationState_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_synchronisationState_EnumProxy;


// RANTimingSynchronisationStatusInfo_traceabletoUTC
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoUTC
{
	__si_amf__RANTimingSynchronisationStatusInfo_traceabletoUTC_true_val,
	__si_amf__RANTimingSynchronisationStatusInfo_traceabletoUTC_false_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoUTC;


// L:2442
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoUTC2
{
	RANTimingSynchronisationStatusInfo_traceabletoUTC_true_val,
	RANTimingSynchronisationStatusInfo_traceabletoUTC_false_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoUTC2;


// L:2469
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoUTC_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoUTC_EnumProxy;


// RANTimingSynchronisationStatusInfo_traceabletoGNSS
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoGNSS
{
	__si_amf__RANTimingSynchronisationStatusInfo_traceabletoGNSS_true_val,
	__si_amf__RANTimingSynchronisationStatusInfo_traceabletoGNSS_false_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoGNSS;


// L:2442
typedef enum __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoGNSS2
{
	RANTimingSynchronisationStatusInfo_traceabletoGNSS_true_val,
	RANTimingSynchronisationStatusInfo_traceabletoGNSS_false_val
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoGNSS2;


// L:2469
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_traceabletoGNSS_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_traceabletoGNSS_EnumProxy;


// RANTimingSynchronisationStatusInfo_clockFrequencyStability
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_clockFrequencyStability
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability;

// RANTimingSynchronisationStatusInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo
{
	uint8_t selected_esynchronisationState;
	int extSelected_esynchronisationState;
	int isPresent_synchronisationState;

	uint8_t selected_etraceabletoUTC;
	int extSelected_etraceabletoUTC;
	int isPresent_traceabletoUTC;

	uint8_t selected_etraceabletoGNSS;
	int extSelected_etraceabletoGNSS;
	int isPresent_traceabletoGNSS;

	SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability * clockFrequencyStability;
	int isPresent_clockFrequencyStability;

	SI_AMF_DT_ClockAccuracy * clockAccuracy;
	int isPresent_clockAccuracy;

	uint8_t selected_eparentTImeSource;
	int extSelected_eparentTImeSource;
	int isPresent_parentTImeSource;

} SI_AMF_DT_RANTimingSynchronisationStatusInfo;


// RAN-TSSRequestType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RAN_TSSRequestType
{
	__si_amf__RAN_TSSRequestType_start_val,
	__si_amf__RAN_TSSRequestType_stop_val
} SI_AMF_DT_RAN_TSSRequestType;


// L:2442
typedef enum __si_amf_dt_RAN_TSSRequestType2
{
	RAN_TSSRequestType_start_val,
	RAN_TSSRequestType_stop_val
} SI_AMF_DT_RAN_TSSRequestType2;


// L:2469
typedef struct __si_amf_dt_RAN_TSSRequestType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RAN_TSSRequestType_EnumProxy;


// RANTSSCellList
//SEQUENCE OF RANTSSCellItem, MIN=1, MAX=maxnoofCellsTSS  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_RANTSSCellList
{
	SI_LinkedList * RANTSSCellItem;
} SI_AMF_DT_RANTSSCellList;


// RAN-TSSScope
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_RAN_TSSScope
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalGNB_ID * rANNodeLevel;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_RANTSSCellList * cellListLevel;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_RAN_TSSScope;


// RANTSSCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RANTSSCellItem
{
	SI_AMF_DT_NR_CGI * nRCGI;

} SI_AMF_DT_RANTSSCellItem;


// RAN-UE-NGAP-ID
// INTEGER,INTEGER(0..4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RAN_UE_NGAP_ID
{
	unsigned long long int data;
} SI_AMF_DT_RAN_UE_NGAP_ID;

// RAT-Information
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RAT_Information
{
	__si_amf__RAT_Information_unlicensed_val,
	__si_amf__RAT_Information_nb_IoT_val,
	__si_amf__RAT_Information_nR_LEO_val_ext,
	__si_amf__RAT_Information_nR_MEO_val_ext,
	__si_amf__RAT_Information_nR_GEO_val_ext,
	__si_amf__RAT_Information_nR_OTHERSAT_val_ext
} SI_AMF_DT_RAT_Information;


// L:2442
typedef enum __si_amf_dt_RAT_Information2
{
	RAT_Information_unlicensed_val,
	RAT_Information_nb_IoT_val,
	RAT_Information_nR_LEO_val_ext,
	RAT_Information_nR_MEO_val_ext,
	RAT_Information_nR_GEO_val_ext,
	RAT_Information_nR_OTHERSAT_val_ext
} SI_AMF_DT_RAT_Information2;


// L:2469
typedef struct __si_amf_dt_RAT_Information_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RAT_Information_EnumProxy;


// RATRestrictionInformation
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_RATRestrictionInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_RATRestrictionInformation;

// RATRestrictions-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RATRestrictions_Item
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_RATRestrictionInformation * rATRestrictionInformation;

} SI_AMF_DT_RATRestrictions_Item;


// RecommendedCellItem_timeStayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RecommendedCellItem_timeStayedInCell
{
	unsigned long long int data;
} SI_AMF_DT_RecommendedCellItem_timeStayedInCell;

// RecommendedCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RecommendedCellItem
{
	SI_AMF_DT_NGRAN_CGI * nGRAN_CGI;

	unsigned long long int timeStayedInCell;
	int isPresent_timeStayedInCell;

} SI_AMF_DT_RecommendedCellItem;


// RecommendedRANNodeItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RecommendedRANNodeItem
{
	SI_AMF_DT_AMFPagingTarget * aMFPagingTarget;

} SI_AMF_DT_RecommendedRANNodeItem;


// RedCapIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RedCapIndication
{
	__si_amf__RedCapIndication_redcap_val
} SI_AMF_DT_RedCapIndication;


// L:2442
typedef enum __si_amf_dt_RedCapIndication2
{
	RedCapIndication_redcap_val
} SI_AMF_DT_RedCapIndication2;


// L:2469
typedef struct __si_amf_dt_RedCapIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RedCapIndication_EnumProxy;


// RedirectionVoiceFallback
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RedirectionVoiceFallback
{
	__si_amf__RedirectionVoiceFallback_possible_val,
	__si_amf__RedirectionVoiceFallback_not_possible_val
} SI_AMF_DT_RedirectionVoiceFallback;


// L:2442
typedef enum __si_amf_dt_RedirectionVoiceFallback2
{
	RedirectionVoiceFallback_possible_val,
	RedirectionVoiceFallback_not_possible_val
} SI_AMF_DT_RedirectionVoiceFallback2;


// L:2469
typedef struct __si_amf_dt_RedirectionVoiceFallback_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RedirectionVoiceFallback_EnumProxy;


// RSN
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RSN
{
	__si_amf__RSN_v1_val,
	__si_amf__RSN_v2_val
} SI_AMF_DT_RSN;


// L:2442
typedef enum __si_amf_dt_RSN2
{
	RSN_v1_val,
	RSN_v2_val
} SI_AMF_DT_RSN2;


// L:2469
typedef struct __si_amf_dt_RSN_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RSN_EnumProxy;


// RedundantPDUSessionInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RedundantPDUSessionInformation
{
	uint8_t selected_erSN;
	int extSelected_erSN;

} SI_AMF_DT_RedundantPDUSessionInformation;


// RedundantQosFlowIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RedundantQosFlowIndicator
{
	__si_amf__RedundantQosFlowIndicator_true_val,
	__si_amf__RedundantQosFlowIndicator_false_val
} SI_AMF_DT_RedundantQosFlowIndicator;


// L:2442
typedef enum __si_amf_dt_RedundantQosFlowIndicator2
{
	RedundantQosFlowIndicator_true_val,
	RedundantQosFlowIndicator_false_val
} SI_AMF_DT_RedundantQosFlowIndicator2;


// L:2469
typedef struct __si_amf_dt_RedundantQosFlowIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RedundantQosFlowIndicator_EnumProxy;


// RelativeAMFCapacity
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RelativeAMFCapacity
{
	unsigned long long int data;
} SI_AMF_DT_RelativeAMFCapacity;

// RepetitionPeriod
// INTEGER,INTEGER(0..131071),MIN=0,MAX=131071  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RepetitionPeriod
{
	unsigned long long int data;
} SI_AMF_DT_RepetitionPeriod;

// ResetAll
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ResetAll
{
	__si_amf__ResetAll_reset_all_val
} SI_AMF_DT_ResetAll;


// L:2442
typedef enum __si_amf_dt_ResetAll2
{
	ResetAll_reset_all_val
} SI_AMF_DT_ResetAll2;


// L:2469
typedef struct __si_amf_dt_ResetAll_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ResetAll_EnumProxy;


// ExtendedReportIntervalMDT
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ExtendedReportIntervalMDT
{
	__si_amf__ExtendedReportIntervalMDT_ms20480_val,
	__si_amf__ExtendedReportIntervalMDT_ms40960_val
} SI_AMF_DT_ExtendedReportIntervalMDT;


// L:2442
typedef enum __si_amf_dt_ExtendedReportIntervalMDT2
{
	ExtendedReportIntervalMDT_ms20480_val,
	ExtendedReportIntervalMDT_ms40960_val
} SI_AMF_DT_ExtendedReportIntervalMDT2;


// L:2469
typedef struct __si_amf_dt_ExtendedReportIntervalMDT_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ExtendedReportIntervalMDT_EnumProxy;


// UE-associatedLogicalNG-connectionList
//SEQUENCE OF UE-associatedLogicalNG-connectionItem, MIN=1, MAX=maxnoofNGConnectionsToReset  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionList
{
	SI_LinkedList * UE_associatedLogicalNG_connectionItem;
} SI_AMF_DT_UE_associatedLogicalNG_connectionList;


// ResetType
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_ResetType
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t nG_Interface;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_UE_associatedLogicalNG_connectionList * partOfNG_Interface;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_ResetType_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_ResetType;


// RGLevelWirelineAccessCharacteristics
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_RGLevelWirelineAccessCharacteristics
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RGLevelWirelineAccessCharacteristics;

// RNC-ID
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_RNC_ID
{
	unsigned long long int data;
} SI_AMF_DT_RNC_ID;

// RoutingID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_RoutingID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RoutingID;

// RRCContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_RRCContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RRCContainer;

// RRCEstablishmentCause
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RRCEstablishmentCause
{
	__si_amf__RRCEstablishmentCause_emergency_val,
	__si_amf__RRCEstablishmentCause_highPriorityAccess_val,
	__si_amf__RRCEstablishmentCause_mt_Access_val,
	__si_amf__RRCEstablishmentCause_mo_Signalling_val,
	__si_amf__RRCEstablishmentCause_mo_Data_val,
	__si_amf__RRCEstablishmentCause_mo_VoiceCall_val,
	__si_amf__RRCEstablishmentCause_mo_VideoCall_val,
	__si_amf__RRCEstablishmentCause_mo_SMS_val,
	__si_amf__RRCEstablishmentCause_mps_PriorityAccess_val,
	__si_amf__RRCEstablishmentCause_mcs_PriorityAccess_val,
	__si_amf__RRCEstablishmentCause_notAvailable_val_ext,
	__si_amf__RRCEstablishmentCause_mo_ExceptionData_val_ext
} SI_AMF_DT_RRCEstablishmentCause;


// L:2442
typedef enum __si_amf_dt_RRCEstablishmentCause2
{
	RRCEstablishmentCause_emergency_val,
	RRCEstablishmentCause_highPriorityAccess_val,
	RRCEstablishmentCause_mt_Access_val,
	RRCEstablishmentCause_mo_Signalling_val,
	RRCEstablishmentCause_mo_Data_val,
	RRCEstablishmentCause_mo_VoiceCall_val,
	RRCEstablishmentCause_mo_VideoCall_val,
	RRCEstablishmentCause_mo_SMS_val,
	RRCEstablishmentCause_mps_PriorityAccess_val,
	RRCEstablishmentCause_mcs_PriorityAccess_val,
	RRCEstablishmentCause_notAvailable_val_ext,
	RRCEstablishmentCause_mo_ExceptionData_val_ext
} SI_AMF_DT_RRCEstablishmentCause2;


// L:2469
typedef struct __si_amf_dt_RRCEstablishmentCause_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RRCEstablishmentCause_EnumProxy;


// RRCInactiveTransitionReportRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RRCInactiveTransitionReportRequest
{
	__si_amf__RRCInactiveTransitionReportRequest_subsequent_state_transition_report_val,
	__si_amf__RRCInactiveTransitionReportRequest_single_rrc_connected_state_report_val,
	__si_amf__RRCInactiveTransitionReportRequest_cancel_report_val
} SI_AMF_DT_RRCInactiveTransitionReportRequest;


// L:2442
typedef enum __si_amf_dt_RRCInactiveTransitionReportRequest2
{
	RRCInactiveTransitionReportRequest_subsequent_state_transition_report_val,
	RRCInactiveTransitionReportRequest_single_rrc_connected_state_report_val,
	RRCInactiveTransitionReportRequest_cancel_report_val
} SI_AMF_DT_RRCInactiveTransitionReportRequest2;


// L:2469
typedef struct __si_amf_dt_RRCInactiveTransitionReportRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RRCInactiveTransitionReportRequest_EnumProxy;


// RRCState
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RRCState
{
	__si_amf__RRCState_inactive_val,
	__si_amf__RRCState_connected_val
} SI_AMF_DT_RRCState;


// L:2442
typedef enum __si_amf_dt_RRCState2
{
	RRCState_inactive_val,
	RRCState_connected_val
} SI_AMF_DT_RRCState2;


// L:2469
typedef struct __si_amf_dt_RRCState_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RRCState_EnumProxy;


// TargetRANNodeID-RIM
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetRANNodeID_RIM
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

	SI_AMF_DT_TAI * selectedTAI;

} SI_AMF_DT_TargetRANNodeID_RIM;


// SourceRANNodeID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SourceRANNodeID
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

	SI_AMF_DT_TAI * selectedTAI;

} SI_AMF_DT_SourceRANNodeID;


// GNBSetID
// BITSTRING,BIT STRING(SIZE(22))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_GNBSetID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_GNBSetID;

// RIMInformation_rIM-RSDetection
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_RIMInformation_rIM_RSDetection
{
	__si_amf__RIMInformation_rIM_RSDetection_rs_detected_val,
	__si_amf__RIMInformation_rIM_RSDetection_rs_disappeared_val
} SI_AMF_DT_RIMInformation_rIM_RSDetection;


// L:2442
typedef enum __si_amf_dt_RIMInformation_rIM_RSDetection2
{
	RIMInformation_rIM_RSDetection_rs_detected_val,
	RIMInformation_rIM_RSDetection_rs_disappeared_val
} SI_AMF_DT_RIMInformation_rIM_RSDetection2;


// L:2469
typedef struct __si_amf_dt_RIMInformation_rIM_RSDetection_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_RIMInformation_rIM_RSDetection_EnumProxy;


// RIMInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RIMInformation
{
	SI_AMF_DT_GNBSetID * targetgNBSetID;

	uint8_t selected_erIM_RSDetection;
	int extSelected_erIM_RSDetection;

} SI_AMF_DT_RIMInformation;


// RIMInformationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RIMInformationTransfer
{
	SI_AMF_DT_TargetRANNodeID_RIM * targetRANNodeID_RIM;

	SI_AMF_DT_SourceRANNodeID * sourceRANNodeID;

	SI_AMF_DT_RIMInformation * rIMInformation;

} SI_AMF_DT_RIMInformationTransfer;


// RSPPQoSFlowList
//SEQUENCE OF RSPPQoSFlowItem, MIN=1, MAX=maxnoofRSPPQoSFlows  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_RSPPQoSFlowList
{
	SI_LinkedList * RSPPQoSFlowItem;
} SI_AMF_DT_RSPPQoSFlowList;


// RSPPFlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RSPPFlowBitRates
{
	unsigned long long int guaranteedFlowBitRate;

	unsigned long long int maximumFlowBitRate;

} SI_AMF_DT_RSPPFlowBitRates;


// RSPPQoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_RSPPQoSFlowItem
{
	unsigned long long int pQI;

	SI_AMF_DT_RSPPFlowBitRates * rSPPFlowBitRates;
	int isPresent_rSPPFlowBitRates;

	uint8_t selected_erange;
	int extSelected_erange;
	int isPresent_range;

} SI_AMF_DT_RSPPQoSFlowItem;


// ScheduledCommunicationTime_dayofWeek
// BITSTRING,BIT STRING(SIZE(7))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_ScheduledCommunicationTime_dayofWeek
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_ScheduledCommunicationTime_dayofWeek;

// ScheduledCommunicationTime_timeofDayStart
// INTEGER,INTEGER(0..86399,...),MIN=0,MAX=86399  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ScheduledCommunicationTime_timeofDayStart
{
	unsigned long long int data;
} SI_AMF_DT_ScheduledCommunicationTime_timeofDayStart;

// ScheduledCommunicationTime_timeofDayEnd
// INTEGER,INTEGER(0..86399,...),MIN=0,MAX=86399  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_ScheduledCommunicationTime_timeofDayEnd
{
	unsigned long long int data;
} SI_AMF_DT_ScheduledCommunicationTime_timeofDayEnd;

// ScheduledCommunicationTime
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ScheduledCommunicationTime
{
	SI_AMF_DT_ScheduledCommunicationTime_dayofWeek * dayofWeek;
	int isPresent_dayofWeek;

	unsigned long long int timeofDayStart;
	int isPresent_timeofDayStart;

	unsigned long long int timeofDayEnd;
	int isPresent_timeofDayEnd;

} SI_AMF_DT_ScheduledCommunicationTime;


// SCTP-TLAs
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX=maxnoofXnTLAs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SCTP_TLAs
{
	SI_LinkedList * TransportLayerAddress;
} SI_AMF_DT_SCTP_TLAs;


// SecondaryRATUsageInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SecondaryRATUsageInformation
{
	SI_AMF_DT_PDUSessionUsageReport * pDUSessionUsageReport;
	int isPresent_pDUSessionUsageReport;

	SI_AMF_DT_QoSFlowsUsageReportList * qosFlowsUsageReportList;
	int isPresent_qosFlowsUsageReportList;

} SI_AMF_DT_SecondaryRATUsageInformation;


// SecondaryRATDataUsageReportTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SecondaryRATDataUsageReportTransfer
{
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int isPresent_secondaryRATUsageInformation;

} SI_AMF_DT_SecondaryRATDataUsageReportTransfer;


// SecurityKey
// BITSTRING,BIT STRING(SIZE(256))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_SecurityKey
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_SecurityKey;

// SecurityContext
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SecurityContext
{
	unsigned long long int nextHopChainingCount;

	SI_AMF_DT_SecurityKey * nextHopNH;

} SI_AMF_DT_SecurityContext;


// SensorNameConfig_uncompensatedBarometricConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SensorNameConfig_uncompensatedBarometricConfig
{
	__si_amf__SensorNameConfig_uncompensatedBarometricConfig_true_val
} SI_AMF_DT_SensorNameConfig_uncompensatedBarometricConfig;


// L:2442
typedef enum __si_amf_dt_SensorNameConfig_uncompensatedBarometricConfig2
{
	SensorNameConfig_uncompensatedBarometricConfig_true_val
} SI_AMF_DT_SensorNameConfig_uncompensatedBarometricConfig2;


// L:2469
typedef struct __si_amf_dt_SensorNameConfig_uncompensatedBarometricConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SensorNameConfig_uncompensatedBarometricConfig_EnumProxy;


// SensorNameConfig_ueSpeedConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SensorNameConfig_ueSpeedConfig
{
	__si_amf__SensorNameConfig_ueSpeedConfig_true_val
} SI_AMF_DT_SensorNameConfig_ueSpeedConfig;


// L:2442
typedef enum __si_amf_dt_SensorNameConfig_ueSpeedConfig2
{
	SensorNameConfig_ueSpeedConfig_true_val
} SI_AMF_DT_SensorNameConfig_ueSpeedConfig2;


// L:2469
typedef struct __si_amf_dt_SensorNameConfig_ueSpeedConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SensorNameConfig_ueSpeedConfig_EnumProxy;


// SensorNameConfig_ueOrientationConfig
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SensorNameConfig_ueOrientationConfig
{
	__si_amf__SensorNameConfig_ueOrientationConfig_true_val
} SI_AMF_DT_SensorNameConfig_ueOrientationConfig;


// L:2442
typedef enum __si_amf_dt_SensorNameConfig_ueOrientationConfig2
{
	SensorNameConfig_ueOrientationConfig_true_val
} SI_AMF_DT_SensorNameConfig_ueOrientationConfig2;


// L:2469
typedef struct __si_amf_dt_SensorNameConfig_ueOrientationConfig_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SensorNameConfig_ueOrientationConfig_EnumProxy;


// SensorNameConfig
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_SensorNameConfig
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t uncompensatedBarometricConfig;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t ueSpeedConfig;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t ueOrientationConfig;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_SensorNameConfig_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_SensorNameConfig;


// SensorMeasConfigNameItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SensorMeasConfigNameItem
{
	SI_AMF_DT_SensorNameConfig * sensorNameConfig;

} SI_AMF_DT_SensorMeasConfigNameItem;


// SerialNumber
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_SerialNumber
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_SerialNumber;

// ServedGUAMIList
//SEQUENCE OF ServedGUAMIItem, MIN=1, MAX=maxnoofServedGUAMIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_ServedGUAMIList
{
	SI_LinkedList * ServedGUAMIItem;
} SI_AMF_DT_ServedGUAMIList;


// ServedGUAMIItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ServedGUAMIItem
{
	SI_AMF_DT_GUAMI * gUAMI;

	SI_AMF_DT_AMFName * backupAMFName;
	int isPresent_backupAMFName;

} SI_AMF_DT_ServedGUAMIItem;


// ServiceAreaInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_ServiceAreaInformation_Item
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_AllowedTACs * allowedTACs;
	int isPresent_allowedTACs;

	SI_AMF_DT_NotAllowedTACs * notAllowedTACs;
	int isPresent_notAllowedTACs;

} SI_AMF_DT_ServiceAreaInformation_Item;


// ServiceType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ServiceType
{
	__si_amf__ServiceType_streaming_val,
	__si_amf__ServiceType_mTSI_val,
	__si_amf__ServiceType_vR_val
} SI_AMF_DT_ServiceType;


// L:2442
typedef enum __si_amf_dt_ServiceType2
{
	ServiceType_streaming_val,
	ServiceType_mTSI_val,
	ServiceType_vR_val
} SI_AMF_DT_ServiceType2;


// L:2469
typedef struct __si_amf_dt_ServiceType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ServiceType_EnumProxy;


// SgNB-UE-X2AP-ID
// INTEGER,INTEGER(0..4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_SgNB_UE_X2AP_ID
{
	unsigned long long int data;
} SI_AMF_DT_SgNB_UE_X2AP_ID;

// SliceOverloadItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SliceOverloadItem
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_SliceOverloadItem;


// SliceSupportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SliceSupportItem
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_SliceSupportItem;


// SliceSupportListQMC
//SEQUENCE OF SliceSupportQMC-Item, MIN=1, MAX=maxnoofSNSSAIforQMC  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SliceSupportListQMC
{
	SI_LinkedList * SliceSupportQMC_Item;
} SI_AMF_DT_SliceSupportListQMC;


// SliceSupportQMC-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SliceSupportQMC_Item
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_SliceSupportQMC_Item;


// TargetRANNodeID-SON
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetRANNodeID_SON
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

	SI_AMF_DT_TAI * selectedTAI;

} SI_AMF_DT_TargetRANNodeID_SON;


// SONInformationRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SONInformationRequest
{
	__si_amf__SONInformationRequest_xn_TNL_configuration_info_val
} SI_AMF_DT_SONInformationRequest;


// L:2442
typedef enum __si_amf_dt_SONInformationRequest2
{
	SONInformationRequest_xn_TNL_configuration_info_val
} SI_AMF_DT_SONInformationRequest2;


// L:2469
typedef struct __si_amf_dt_SONInformationRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SONInformationRequest_EnumProxy;


// XnTLAs
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX=maxnoofXnTLAs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_XnTLAs
{
	SI_LinkedList * TransportLayerAddress;
} SI_AMF_DT_XnTLAs;


// XnExtTLAs
//SEQUENCE OF XnExtTLA-Item, MIN=1, MAX=maxnoofXnExtTLAs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_XnExtTLAs
{
	SI_LinkedList * XnExtTLA_Item;
} SI_AMF_DT_XnExtTLAs;


// XnTNLConfigurationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_XnTNLConfigurationInfo
{
	SI_AMF_DT_XnTLAs * xnTransportLayerAddresses;

	SI_AMF_DT_XnExtTLAs * xnExtendedTransportLayerAddresses;
	int isPresent_xnExtendedTransportLayerAddresses;

} SI_AMF_DT_XnTNLConfigurationInfo;


// SONInformationReply
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SONInformationReply
{
	SI_AMF_DT_XnTNLConfigurationInfo * xnTNLConfigurationInfo;
	int isPresent_xnTNLConfigurationInfo;

} SI_AMF_DT_SONInformationReply;


// SONInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_SONInformation
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t sONInformationRequest;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_SONInformationReply * sONInformationReply;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_SONInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_SONInformation;


// SONConfigurationTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SONConfigurationTransfer
{
	SI_AMF_DT_TargetRANNodeID_SON * targetRANNodeID_SON;

	SI_AMF_DT_SourceRANNodeID * sourceRANNodeID;

	SI_AMF_DT_SONInformation * sONInformation;

	SI_AMF_DT_XnTNLConfigurationInfo * xnTNLConfigurationInfo;
	int isPresent_xnTNLConfigurationInfo;

} SI_AMF_DT_SONConfigurationTransfer;


// SONInformationReport
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_SONInformationReport
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_FailureIndication * failureIndicationInformation;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_HOReport * hOReportInformation;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_SONInformationReport_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_SONInformationReport;


// SNPNCellIdListforMDT
//SEQUENCE OF SNPNCellIdListforMDTItem, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SNPNCellIdListforMDT
{
	SI_LinkedList * SNPNCellIdListforMDTItem;
} SI_AMF_DT_SNPNCellIdListforMDT;


// SNPN-CellBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPN_CellBasedMDT
{
	SI_AMF_DT_SNPNCellIdListforMDT * sNPNcellIdListforMDT;

} SI_AMF_DT_SNPN_CellBasedMDT;


// SNPNCellIdListforMDTItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPNCellIdListforMDTItem
{
	SI_AMF_DT_NR_CGI * nR_CGI;

	SI_AMF_DT_NID * nID;

} SI_AMF_DT_SNPNCellIdListforMDTItem;


// SNPNTAIListforMDT
//SEQUENCE OF SNPNTAIListforMDTItem, MIN=1, MAX= maxnoofTAforMDT  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SNPNTAIListforMDT
{
	SI_LinkedList * SNPNTAIListforMDTItem;
} SI_AMF_DT_SNPNTAIListforMDT;


// SNPN-TAIBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPN_TAIBasedMDT
{
	SI_AMF_DT_SNPNTAIListforMDT * sNPNTAIListforMDT;

} SI_AMF_DT_SNPN_TAIBasedMDT;


// SNPNTAIListforMDTItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPNTAIListforMDTItem
{
	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_NID * nID;

} SI_AMF_DT_SNPNTAIListforMDTItem;


// SNPNListforMDT
//SEQUENCE OF SNPNListforMDTItem, MIN=1, MAX= maxnoofMDTSNPNs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SNPNListforMDT
{
	SI_LinkedList * SNPNListforMDTItem;
} SI_AMF_DT_SNPNListforMDT;


// SNPN-BasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPN_BasedMDT
{
	SI_AMF_DT_SNPNListforMDT * sNPNListforMDT;

} SI_AMF_DT_SNPN_BasedMDT;


// SNPNListforMDTItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SNPNListforMDTItem
{
	SI_AMF_DT_PLMNIdentity * pLMNIdentity;

	SI_AMF_DT_NID * nID;

} SI_AMF_DT_SNPNListforMDTItem;


// SuccessfulHandoverReportList
//SEQUENCE OF SuccessfulHandoverReport-Item, MIN=1, MAX=maxnoofSuccessfulHOReports  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SuccessfulHandoverReportList
{
	SI_LinkedList * SuccessfulHandoverReport_Item;
} SI_AMF_DT_SuccessfulHandoverReportList;


// SuccessfulHandoverReportItem_successfulHOReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_SuccessfulHandoverReportItem_successfulHOReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer;

// SuccessfulHandoverReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SuccessfulHandoverReport_Item
{
	SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer * successfulHOReportContainer;

} SI_AMF_DT_SuccessfulHandoverReport_Item;


// SuccessfulPSCellChangeReportList
//SEQUENCE OF SuccessfulPSCellChangeReport-Item, MIN=1, MAX=maxnoofSuccessfulPSCellChangeReports  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SuccessfulPSCellChangeReportList
{
	SI_LinkedList * SuccessfulPSCellChangeReport_Item;
} SI_AMF_DT_SuccessfulPSCellChangeReportList;


// SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer;

// SuccessfulPSCellChangeReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SuccessfulPSCellChangeReport_Item
{
	SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer * successfulPSCellChangeReportContainer;

} SI_AMF_DT_SuccessfulPSCellChangeReport_Item;


// UEHistoryInformation
//SEQUENCE OF LastVisitedCellItem, MIN=1, MAX=maxnoofCellsinUEHistoryInfo  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UEHistoryInformation
{
	SI_LinkedList * LastVisitedCellItem;
} SI_AMF_DT_UEHistoryInformation;


// SourceNGRANNode-ToTargetNGRANNode-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer
{
	SI_AMF_DT_RRCContainer * rRCContainer;

	SI_AMF_DT_PDUSessionResourceInformationList * pDUSessionResourceInformationList;
	int isPresent_pDUSessionResourceInformationList;

	SI_AMF_DT_E_RABInformationList * e_RABInformationList;
	int isPresent_e_RABInformationList;

	SI_AMF_DT_NGRAN_CGI * targetCell_ID;

	unsigned long long int indexToRFSP;
	int isPresent_indexToRFSP;

	SI_AMF_DT_UEHistoryInformation * uEHistoryInformation;

} SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer;


// SourceNodeID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_SourceNodeID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalGNB_ID * sourceengNB_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_SourceNodeID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_SourceNodeID;


// SourceToTarget-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_SourceToTarget_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_SourceToTarget_TransparentContainer;

// ConfiguredNSSAI
// OCTETSTRING,OCTET STRING(SIZE(128))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_ConfiguredNSSAI
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_ConfiguredNSSAI;

// RejectedNSSAIinPLMN
// OCTETSTRING,OCTET STRING(SIZE(32))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_RejectedNSSAIinPLMN
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RejectedNSSAIinPLMN;

// RejectedNSSAIinTA
// OCTETSTRING,OCTET STRING(SIZE(32))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_RejectedNSSAIinTA
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_RejectedNSSAIinTA;

// SourceToTarget-AMFInformationReroute
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SourceToTarget_AMFInformationReroute
{
	SI_AMF_DT_ConfiguredNSSAI * configuredNSSAI;
	int isPresent_configuredNSSAI;

	SI_AMF_DT_RejectedNSSAIinPLMN * rejectedNSSAIinPLMN;
	int isPresent_rejectedNSSAIinPLMN;

	SI_AMF_DT_RejectedNSSAIinTA * rejectedNSSAIinTA;
	int isPresent_rejectedNSSAIinTA;

} SI_AMF_DT_SourceToTarget_AMFInformationReroute;


// SRVCCOperationPossible
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SRVCCOperationPossible
{
	__si_amf__SRVCCOperationPossible_possible_val,
	__si_amf__SRVCCOperationPossible_notPossible_val
} SI_AMF_DT_SRVCCOperationPossible;


// L:2442
typedef enum __si_amf_dt_SRVCCOperationPossible2
{
	SRVCCOperationPossible_possible_val,
	SRVCCOperationPossible_notPossible_val
} SI_AMF_DT_SRVCCOperationPossible2;


// L:2469
typedef struct __si_amf_dt_SRVCCOperationPossible_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SRVCCOperationPossible_EnumProxy;


// SupportedTAList
//SEQUENCE OF SupportedTAItem, MIN=1, MAX=maxnoofTACs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_SupportedTAList
{
	SI_LinkedList * SupportedTAItem;
} SI_AMF_DT_SupportedTAList;


// SupportedTAItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SupportedTAItem
{
	SI_AMF_DT_TAC * tAC;

	SI_AMF_DT_BroadcastPLMNList * broadcastPLMNList;

} SI_AMF_DT_SupportedTAItem;


// SuspendIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SuspendIndicator
{
	__si_amf__SuspendIndicator_true_val
} SI_AMF_DT_SuspendIndicator;


// L:2442
typedef enum __si_amf_dt_SuspendIndicator2
{
	SuspendIndicator_true_val
} SI_AMF_DT_SuspendIndicator2;


// L:2469
typedef struct __si_amf_dt_SuspendIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SuspendIndicator_EnumProxy;


// Suspend-Request-Indication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Suspend_Request_Indication
{
	__si_amf__Suspend_Request_Indication_suspend_requested_val
} SI_AMF_DT_Suspend_Request_Indication;


// L:2442
typedef enum __si_amf_dt_Suspend_Request_Indication2
{
	Suspend_Request_Indication_suspend_requested_val
} SI_AMF_DT_Suspend_Request_Indication2;


// L:2469
typedef struct __si_amf_dt_Suspend_Request_Indication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Suspend_Request_Indication_EnumProxy;


// Suspend-Response-Indication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_Suspend_Response_Indication
{
	__si_amf__Suspend_Response_Indication_suspend_indicated_val
} SI_AMF_DT_Suspend_Response_Indication;


// L:2442
typedef enum __si_amf_dt_Suspend_Response_Indication2
{
	Suspend_Response_Indication_suspend_indicated_val
} SI_AMF_DT_Suspend_Response_Indication2;


// L:2469
typedef struct __si_amf_dt_Suspend_Response_Indication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_Suspend_Response_Indication_EnumProxy;


// SurvivalTime
// INTEGER,INTEGER(0..1920000,...),MIN=0,MAX=1920000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_SurvivalTime
{
	unsigned long long int data;
} SI_AMF_DT_SurvivalTime;

// SLPositioningRangingAuthorized
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_SLPositioningRangingAuthorized
{
	__si_amf__SLPositioningRangingAuthorized_authorized_val,
	__si_amf__SLPositioningRangingAuthorized_not_authorized_val
} SI_AMF_DT_SLPositioningRangingAuthorized;


// L:2442
typedef enum __si_amf_dt_SLPositioningRangingAuthorized2
{
	SLPositioningRangingAuthorized_authorized_val,
	SLPositioningRangingAuthorized_not_authorized_val
} SI_AMF_DT_SLPositioningRangingAuthorized2;


// L:2469
typedef struct __si_amf_dt_SLPositioningRangingAuthorized_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_SLPositioningRangingAuthorized_EnumProxy;


// SLPositioningRangingQoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SLPositioningRangingQoSParameters
{
	SI_AMF_DT_RSPPQoSFlowList * rSPPQoSFlowList;

	unsigned long long int rSPPLinkAggregateBitRates;
	int isPresent_rSPPLinkAggregateBitRates;

} SI_AMF_DT_SLPositioningRangingQoSParameters;


// SLPositioningRangingServiceInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_SLPositioningRangingServiceInfo
{
	uint8_t selected_esLPositioningRangingAuthorized;
	int extSelected_esLPositioningRangingAuthorized;

	SI_AMF_DT_SLPositioningRangingQoSParameters * sLPositioningRangingQoSParameters;
	int isPresent_sLPositioningRangingQoSParameters;

} SI_AMF_DT_SLPositioningRangingServiceInfo;


// TAIBroadcastEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIBroadcastEUTRA_Item
{
	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_CompletedCellsInTAI_EUTRA * completedCellsInTAI_EUTRA;

} SI_AMF_DT_TAIBroadcastEUTRA_Item;


// TAIBroadcastNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIBroadcastNR_Item
{
	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_CompletedCellsInTAI_NR * completedCellsInTAI_NR;

} SI_AMF_DT_TAIBroadcastNR_Item;


// TAICancelledEUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAICancelledEUTRA_Item
{
	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_CancelledCellsInTAI_EUTRA * cancelledCellsInTAI_EUTRA;

} SI_AMF_DT_TAICancelledEUTRA_Item;


// TAICancelledNR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAICancelledNR_Item
{
	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_CancelledCellsInTAI_NR * cancelledCellsInTAI_NR;

} SI_AMF_DT_TAICancelledNR_Item;


// TAIListForInactiveItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIListForInactiveItem
{
	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_TAIListForInactiveItem;


// TAIListForPaging
//SEQUENCE OF TAIListForPagingItem, MIN=1, MAX=maxnoofTAIforPaging  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListForPaging
{
	SI_LinkedList * TAIListForPagingItem;
} SI_AMF_DT_TAIListForPaging;


// TAIListForPagingItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAIListForPagingItem
{
	SI_AMF_DT_TAI * tAI;

} SI_AMF_DT_TAIListForPagingItem;


// TAIListForRestart
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAIforRestart  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListForRestart
{
	SI_LinkedList * TAI;
} SI_AMF_DT_TAIListForRestart;


// TAIListForWarning
//SEQUENCE OF TAI, MIN=1, MAX=maxnoofTAIforWarning  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAIListForWarning
{
	SI_LinkedList * TAI;
} SI_AMF_DT_TAIListForWarning;


// TAINSAGSupportList
//SEQUENCE OF TAINSAGSupportItem, MIN=1, MAX=maxnoofNSAGs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TAINSAGSupportList
{
	SI_LinkedList * TAINSAGSupportItem;
} SI_AMF_DT_TAINSAGSupportList;


// TAINSAGSupportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TAINSAGSupportItem
{
	unsigned long long int nSAG_ID;

	SI_AMF_DT_ExtendedSliceSupportList * nSAGSliceSupportList;

} SI_AMF_DT_TAINSAGSupportItem;


// TargeteNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargeteNB_ID
{
	SI_AMF_DT_GlobalNgENB_ID * globalENB_ID;

	SI_AMF_DT_EPS_TAI * selected_EPS_TAI;

} SI_AMF_DT_TargeteNB_ID;


// TargetHomeENBID_homeENB-ID
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_TargetHomeENBID_homeENB_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_TargetHomeENBID_homeENB_ID;

// TargetHomeENB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetHomeENB_ID
{
	SI_AMF_DT_PLMNIdentity * pLMNidentity;

	SI_AMF_DT_TargetHomeENBID_homeENB_ID * homeENB_ID;

	SI_AMF_DT_EPS_TAI * selected_EPS_TAI;

} SI_AMF_DT_TargetHomeENB_ID;


// TargetRANNodeID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetRANNodeID
{
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;

	SI_AMF_DT_TAI * selectedTAI;

} SI_AMF_DT_TargetRANNodeID;


// TargetID
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_TargetID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TargetRANNodeID * targetRANNodeID;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_TargeteNB_ID * targeteNB_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_TargetID_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_TargetID;


// TargetNGRANNode-ToSourceNGRANNode-TransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer
{
	SI_AMF_DT_RRCContainer * rRCContainer;

} SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer;


// TargetNGRANNode-ToSourceNGRANNode-FailureTransparentContainer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer
{
	SI_AMF_DT_Cell_CAGInformation * cell_CAGInformation;
	int isPresent_cell_CAGInformation;

} SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer;


// TargetNSSAI
//SEQUENCE OF TargetNSSAI-Item, MIN=1, MAX=maxnoofTargetS-NSSAIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TargetNSSAI
{
	SI_LinkedList * TargetNSSAI_Item;
} SI_AMF_DT_TargetNSSAI;


// TargetNSSAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetNSSAI_Item
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

} SI_AMF_DT_TargetNSSAI_Item;


// TargetNSSAIInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetNSSAIInformation
{
	SI_AMF_DT_TargetNSSAI * targetNSSAI;

	unsigned long long int indexToRFSP;

} SI_AMF_DT_TargetNSSAIInformation;


// TargetRNC-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TargetRNC_ID
{
	SI_AMF_DT_LAI * lAI;

	unsigned long long int rNC_ID;

	unsigned long long int extendedRNC_ID;
	int isPresent_extendedRNC_ID;

} SI_AMF_DT_TargetRNC_ID;


// TargetToSource-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TargetToSource_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TargetToSource_TransparentContainer;

// TargettoSource-Failure-TransparentContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TargettoSource_Failure_TransparentContainer
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TargettoSource_Failure_TransparentContainer;

// HandoverWindowStart
// INTEGER,INTEGER(0..549755813887),MIN=0,MAX=549755813887  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_HandoverWindowStart
{
	unsigned long long int data;
} SI_AMF_DT_HandoverWindowStart;

// HandoverWindowDuration
// INTEGER,INTEGER(1..6000),MIN=1,MAX=6000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_HandoverWindowDuration
{
	unsigned long long int data;
} SI_AMF_DT_HandoverWindowDuration;

// TimeBasedHandoverInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TimeBasedHandoverInformation
{
	unsigned long long int hOWindowStart;

	unsigned long long int hOWindowDuration;

} SI_AMF_DT_TimeBasedHandoverInformation;


// TimerApproachForGUAMIRemoval
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TimerApproachForGUAMIRemoval
{
	__si_amf__TimerApproachForGUAMIRemoval_apply_timer_val
} SI_AMF_DT_TimerApproachForGUAMIRemoval;


// L:2442
typedef enum __si_amf_dt_TimerApproachForGUAMIRemoval2
{
	TimerApproachForGUAMIRemoval_apply_timer_val
} SI_AMF_DT_TimerApproachForGUAMIRemoval2;


// L:2469
typedef struct __si_amf_dt_TimerApproachForGUAMIRemoval_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TimerApproachForGUAMIRemoval_EnumProxy;


// TimeSinceFailure
// INTEGER,INTEGER(0..172800,...),MIN=0,MAX=172800  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TimeSinceFailure
{
	unsigned long long int data;
} SI_AMF_DT_TimeSinceFailure;

// TimeStamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TimeStamp
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TimeStamp;

// TimeSyncAssistanceInfo_timeDistributionIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TimeSyncAssistanceInfo_timeDistributionIndication
{
	__si_amf__TimeSyncAssistanceInfo_timeDistributionIndication_enabled_val,
	__si_amf__TimeSyncAssistanceInfo_timeDistributionIndication_disabled_val
} SI_AMF_DT_TimeSyncAssistanceInfo_timeDistributionIndication;


// L:2442
typedef enum __si_amf_dt_TimeSyncAssistanceInfo_timeDistributionIndication2
{
	TimeSyncAssistanceInfo_timeDistributionIndication_enabled_val,
	TimeSyncAssistanceInfo_timeDistributionIndication_disabled_val
} SI_AMF_DT_TimeSyncAssistanceInfo_timeDistributionIndication2;


// L:2469
typedef struct __si_amf_dt_TimeSyncAssistanceInfo_timeDistributionIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TimeSyncAssistanceInfo_timeDistributionIndication_EnumProxy;


// TimeSyncAssistanceInfo_uUTimeSyncErrorBudget
// INTEGER,INTEGER(1..1000000,...),MIN=1,MAX=1000000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget
{
	unsigned long long int data;
} SI_AMF_DT_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget;

// TimeSyncAssistanceInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TimeSyncAssistanceInfo
{
	uint8_t selected_etimeDistributionIndication;
	int extSelected_etimeDistributionIndication;

	unsigned long long int uUTimeSyncErrorBudget;
	int isPresent_uUTimeSyncErrorBudget;

} SI_AMF_DT_TimeSyncAssistanceInfo;


// TimeToWait
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TimeToWait
{
	__si_amf__TimeToWait_v1s_val,
	__si_amf__TimeToWait_v2s_val,
	__si_amf__TimeToWait_v5s_val,
	__si_amf__TimeToWait_v10s_val,
	__si_amf__TimeToWait_v20s_val,
	__si_amf__TimeToWait_v60s_val
} SI_AMF_DT_TimeToWait;


// L:2442
typedef enum __si_amf_dt_TimeToWait2
{
	TimeToWait_v1s_val,
	TimeToWait_v2s_val,
	TimeToWait_v5s_val,
	TimeToWait_v10s_val,
	TimeToWait_v20s_val,
	TimeToWait_v60s_val
} SI_AMF_DT_TimeToWait2;


// L:2469
typedef struct __si_amf_dt_TimeToWait_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TimeToWait_EnumProxy;


// TNAP-ID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TNAP_ID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TNAP_ID;

// TNLAssociationList
//SEQUENCE OF TNLAssociationItem, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_TNLAssociationList
{
	SI_LinkedList * TNLAssociationItem;
} SI_AMF_DT_TNLAssociationList;


// TNLAssociationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TNLAssociationItem
{
	SI_AMF_DT_CPTransportLayerInformation * tNLAssociationAddress;

	SI_AMF_DT_Cause * cause;

} SI_AMF_DT_TNLAssociationItem;


// TraceDepth
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_TraceDepth
{
	__si_amf__TraceDepth_minimum_val,
	__si_amf__TraceDepth_medium_val,
	__si_amf__TraceDepth_maximum_val,
	__si_amf__TraceDepth_minimumWithoutVendorSpecificExtension_val,
	__si_amf__TraceDepth_mediumWithoutVendorSpecificExtension_val,
	__si_amf__TraceDepth_maximumWithoutVendorSpecificExtension_val
} SI_AMF_DT_TraceDepth;


// L:2442
typedef enum __si_amf_dt_TraceDepth2
{
	TraceDepth_minimum_val,
	TraceDepth_medium_val,
	TraceDepth_maximum_val,
	TraceDepth_minimumWithoutVendorSpecificExtension_val,
	TraceDepth_mediumWithoutVendorSpecificExtension_val,
	TraceDepth_maximumWithoutVendorSpecificExtension_val
} SI_AMF_DT_TraceDepth2;


// L:2469
typedef struct __si_amf_dt_TraceDepth_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_TraceDepth_EnumProxy;


// TraceActivation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TraceActivation
{
	SI_AMF_DT_NGRANTraceID * nGRANTraceID;

	SI_AMF_DT_InterfacesToTrace * interfacesToTrace;

	uint8_t selected_etraceDepth;
	int extSelected_etraceDepth;

	SI_AMF_DT_TransportLayerAddress * traceCollectionEntityIPAddress;

} SI_AMF_DT_TraceActivation;


// TWAP-ID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_TWAP_ID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_TWAP_ID;

// TSCAssistanceInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TSCAssistanceInformation
{
	unsigned long long int periodicity;

	SI_AMF_DT_BurstArrivalTime * burstArrivalTime;
	int isPresent_burstArrivalTime;

} SI_AMF_DT_TSCAssistanceInformation;


// TSCTrafficCharacteristics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_TSCTrafficCharacteristics
{
	SI_AMF_DT_TSCAssistanceInformation * tSCAssistanceInformationDL;
	int isPresent_tSCAssistanceInformationDL;

	SI_AMF_DT_TSCAssistanceInformation * tSCAssistanceInformationUL;
	int isPresent_tSCAssistanceInformationUL;

} SI_AMF_DT_TSCTrafficCharacteristics;


// UEAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEAggregateMaximumBitRate
{
	unsigned long long int uEAggregateMaximumBitRateDL;

	unsigned long long int uEAggregateMaximumBitRateUL;

} SI_AMF_DT_UEAggregateMaximumBitRate;


// UEAppLayerMeasConfigInfo_qoEMeasurementStatus
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEAppLayerMeasConfigInfo_qoEMeasurementStatus
{
	__si_amf__UEAppLayerMeasConfigInfo_qoEMeasurementStatus_ongoing_val
} SI_AMF_DT_UEAppLayerMeasConfigInfo_qoEMeasurementStatus;


// L:2442
typedef enum __si_amf_dt_UEAppLayerMeasConfigInfo_qoEMeasurementStatus2
{
	UEAppLayerMeasConfigInfo_qoEMeasurementStatus_ongoing_val
} SI_AMF_DT_UEAppLayerMeasConfigInfo_qoEMeasurementStatus2;


// L:2469
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_qoEMeasurementStatus_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEAppLayerMeasConfigInfo_qoEMeasurementStatus_EnumProxy;


// UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig
// OCTETSTRING,OCTET STRING(SIZE(1..8000))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig;

// UEAppLayerMeasConfigInfo_measConfigAppLayerID
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_measConfigAppLayerID
{
	unsigned long long int data;
} SI_AMF_DT_UEAppLayerMeasConfigInfo_measConfigAppLayerID;

// UEAppLayerMeasConfigInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo
{
	SI_AMF_DT_QoEReference * qoEReference;

	uint8_t selected_eserviceType;
	int extSelected_eserviceType;

	SI_AMF_DT_AreaScopeOfQMC * areaScopeOfQMC;
	int isPresent_areaScopeOfQMC;

	SI_AMF_DT_TransportLayerAddress * measCollEntityIPAddress;

	uint8_t selected_eqoEMeasurementStatus;
	int extSelected_eqoEMeasurementStatus;
	int isPresent_qoEMeasurementStatus;

	SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig * containerForAppLayerMeasConfig;
	int isPresent_containerForAppLayerMeasConfig;

	unsigned long long int measConfigAppLayerID;
	int isPresent_measConfigAppLayerID;

	SI_AMF_DT_SliceSupportListQMC * sliceSupportListQMC;
	int isPresent_sliceSupportListQMC;

	SI_AMF_DT_MDT_AlignmentInfo * mDT_AlignmentInfo;
	int isPresent_mDT_AlignmentInfo;

	SI_AMF_DT_AvailableRANVisibleQoEMetrics * availableRANVisibleQoEMetrics;
	int isPresent_availableRANVisibleQoEMetrics;

} SI_AMF_DT_UEAppLayerMeasConfigInfo;


// UEAppLayerMeasInfoItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEAppLayerMeasInfoItem
{
	SI_AMF_DT_UEAppLayerMeasConfigInfo * uEAppLayerMeasConfigInfo;

} SI_AMF_DT_UEAppLayerMeasInfoItem;


// UE-associatedLogicalNG-connectionItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionItem
{
	unsigned long long int aMF_UE_NGAP_ID;
	int isPresent_aMF_UE_NGAP_ID;

	unsigned long long int rAN_UE_NGAP_ID;
	int isPresent_rAN_UE_NGAP_ID;

} SI_AMF_DT_UE_associatedLogicalNG_connectionItem;


// UECapabilityInfoRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UECapabilityInfoRequest
{
	__si_amf__UECapabilityInfoRequest_requested_val
} SI_AMF_DT_UECapabilityInfoRequest;


// L:2442
typedef enum __si_amf_dt_UECapabilityInfoRequest2
{
	UECapabilityInfoRequest_requested_val
} SI_AMF_DT_UECapabilityInfoRequest2;


// L:2469
typedef struct __si_amf_dt_UECapabilityInfoRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UECapabilityInfoRequest_EnumProxy;


// UEContextRequest
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEContextRequest
{
	__si_amf__UEContextRequest_requested_val
} SI_AMF_DT_UEContextRequest;


// L:2442
typedef enum __si_amf_dt_UEContextRequest2
{
	UEContextRequest_requested_val
} SI_AMF_DT_UEContextRequest2;


// L:2469
typedef struct __si_amf_dt_UEContextRequest_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEContextRequest_EnumProxy;


// UEContextResumeRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEContextResumeRequestTransfer
{
	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToResumeList;
	int isPresent_qosFlowFailedToResumeList;

} SI_AMF_DT_UEContextResumeRequestTransfer;


// UEContextResumeResponseTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEContextResumeResponseTransfer
{
	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToResumeList;
	int isPresent_qosFlowFailedToResumeList;

} SI_AMF_DT_UEContextResumeResponseTransfer;


// UEContextSuspendRequestTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEContextSuspendRequestTransfer
{
	uint8_t selected_esuspendIndicator;
	int extSelected_esuspendIndicator;
	int isPresent_suspendIndicator;

} SI_AMF_DT_UEContextSuspendRequestTransfer;


// UEDifferentiationInfo_periodicCommunicationIndicator
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEDifferentiationInfo_periodicCommunicationIndicator
{
	__si_amf__UEDifferentiationInfo_periodicCommunicationIndicator_periodically_val,
	__si_amf__UEDifferentiationInfo_periodicCommunicationIndicator_ondemand_val
} SI_AMF_DT_UEDifferentiationInfo_periodicCommunicationIndicator;


// L:2442
typedef enum __si_amf_dt_UEDifferentiationInfo_periodicCommunicationIndicator2
{
	UEDifferentiationInfo_periodicCommunicationIndicator_periodically_val,
	UEDifferentiationInfo_periodicCommunicationIndicator_ondemand_val
} SI_AMF_DT_UEDifferentiationInfo_periodicCommunicationIndicator2;


// L:2469
typedef struct __si_amf_dt_UEDifferentiationInfo_periodicCommunicationIndicator_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEDifferentiationInfo_periodicCommunicationIndicator_EnumProxy;


// UEDifferentiationInfo_periodicTime
// INTEGER,INTEGER(1..3600,...),MIN=1,MAX=3600  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_UEDifferentiationInfo_periodicTime
{
	unsigned long long int data;
} SI_AMF_DT_UEDifferentiationInfo_periodicTime;

// UEDifferentiationInfo_stationaryIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEDifferentiationInfo_stationaryIndication
{
	__si_amf__UEDifferentiationInfo_stationaryIndication_stationary_val,
	__si_amf__UEDifferentiationInfo_stationaryIndication_mobile_val
} SI_AMF_DT_UEDifferentiationInfo_stationaryIndication;


// L:2442
typedef enum __si_amf_dt_UEDifferentiationInfo_stationaryIndication2
{
	UEDifferentiationInfo_stationaryIndication_stationary_val,
	UEDifferentiationInfo_stationaryIndication_mobile_val
} SI_AMF_DT_UEDifferentiationInfo_stationaryIndication2;


// L:2469
typedef struct __si_amf_dt_UEDifferentiationInfo_stationaryIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEDifferentiationInfo_stationaryIndication_EnumProxy;


// UEDifferentiationInfo_trafficProfile
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEDifferentiationInfo_trafficProfile
{
	__si_amf__UEDifferentiationInfo_trafficProfile_single_packet_val,
	__si_amf__UEDifferentiationInfo_trafficProfile_dual_packets_val,
	__si_amf__UEDifferentiationInfo_trafficProfile_multiple_packets_val
} SI_AMF_DT_UEDifferentiationInfo_trafficProfile;


// L:2442
typedef enum __si_amf_dt_UEDifferentiationInfo_trafficProfile2
{
	UEDifferentiationInfo_trafficProfile_single_packet_val,
	UEDifferentiationInfo_trafficProfile_dual_packets_val,
	UEDifferentiationInfo_trafficProfile_multiple_packets_val
} SI_AMF_DT_UEDifferentiationInfo_trafficProfile2;


// L:2469
typedef struct __si_amf_dt_UEDifferentiationInfo_trafficProfile_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEDifferentiationInfo_trafficProfile_EnumProxy;


// UEDifferentiationInfo_batteryIndication
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEDifferentiationInfo_batteryIndication
{
	__si_amf__UEDifferentiationInfo_batteryIndication_battery_powered_val,
	__si_amf__UEDifferentiationInfo_batteryIndication_battery_powered_not_rechargeable_or_replaceable_val,
	__si_amf__UEDifferentiationInfo_batteryIndication_not_battery_powered_val
} SI_AMF_DT_UEDifferentiationInfo_batteryIndication;


// L:2442
typedef enum __si_amf_dt_UEDifferentiationInfo_batteryIndication2
{
	UEDifferentiationInfo_batteryIndication_battery_powered_val,
	UEDifferentiationInfo_batteryIndication_battery_powered_not_rechargeable_or_replaceable_val,
	UEDifferentiationInfo_batteryIndication_not_battery_powered_val
} SI_AMF_DT_UEDifferentiationInfo_batteryIndication2;


// L:2469
typedef struct __si_amf_dt_UEDifferentiationInfo_batteryIndication_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEDifferentiationInfo_batteryIndication_EnumProxy;


// UE-DifferentiationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UE_DifferentiationInfo
{
	uint8_t selected_eperiodicCommunicationIndicator;
	int extSelected_eperiodicCommunicationIndicator;
	int isPresent_periodicCommunicationIndicator;

	unsigned long long int periodicTime;
	int isPresent_periodicTime;

	SI_AMF_DT_ScheduledCommunicationTime * scheduledCommunicationTime;
	int isPresent_scheduledCommunicationTime;

	uint8_t selected_estationaryIndication;
	int extSelected_estationaryIndication;
	int isPresent_stationaryIndication;

	uint8_t selected_etrafficProfile;
	int extSelected_etrafficProfile;
	int isPresent_trafficProfile;

	uint8_t selected_ebatteryIndication;
	int extSelected_ebatteryIndication;
	int isPresent_batteryIndication;

} SI_AMF_DT_UE_DifferentiationInfo;


// UEHistoryInformationFromTheUE
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UEHistoryInformationFromTheUE
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_NRMobilityHistoryReport * nR;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UEHistoryInformationFromTheUE;


// UE-NGAP-ID-pair
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UE_NGAP_ID_pair
{
	unsigned long long int aMF_UE_NGAP_ID;

	unsigned long long int rAN_UE_NGAP_ID;

} SI_AMF_DT_UE_NGAP_ID_pair;


// UE-NGAP-IDs
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UE_NGAP_IDs
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_UE_NGAP_ID_pair * uE_NGAP_ID_pair;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int aMF_UE_NGAP_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UE_NGAP_IDs;


// UEPagingIdentity
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UEPagingIdentity
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_FiveG_S_TMSI * fiveG_S_TMSI;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UEPagingIdentity;


// UEPresence
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UEPresence
{
	__si_amf__UEPresence_in_val,
	__si_amf__UEPresence_out_val,
	__si_amf__UEPresence_unknown_val
} SI_AMF_DT_UEPresence;


// L:2442
typedef enum __si_amf_dt_UEPresence2
{
	UEPresence_in_val,
	UEPresence_out_val,
	UEPresence_unknown_val
} SI_AMF_DT_UEPresence2;


// L:2469
typedef struct __si_amf_dt_UEPresence_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UEPresence_EnumProxy;


// UEPresenceInAreaOfInterestList
//SEQUENCE OF UEPresenceInAreaOfInterestItem, MIN=1, MAX=maxnoofAoI  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestList
{
	SI_LinkedList * UEPresenceInAreaOfInterestItem;
} SI_AMF_DT_UEPresenceInAreaOfInterestList;


// UEPresenceInAreaOfInterestItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestItem
{
	unsigned long long int locationReportingReferenceID;

	uint8_t selected_euEPresence;
	int extSelected_euEPresence;

} SI_AMF_DT_UEPresenceInAreaOfInterestItem;


// UERadioCapability
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UERadioCapability
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UERadioCapability;

// UERadioCapabilityForPagingOfNR
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfNR
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UERadioCapabilityForPagingOfNR;

// UERadioCapabilityForPagingOfEUTRA
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfEUTRA
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA;

// UERadioCapabilityForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UERadioCapabilityForPaging
{
	SI_AMF_DT_UERadioCapabilityForPagingOfNR * uERadioCapabilityForPagingOfNR;
	int isPresent_uERadioCapabilityForPagingOfNR;

	SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA * uERadioCapabilityForPagingOfEUTRA;
	int isPresent_uERadioCapabilityForPagingOfEUTRA;

} SI_AMF_DT_UERadioCapabilityForPaging;


// UERadioCapabilityForPagingOfNB-IoT
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UERadioCapabilityForPagingOfNB_IoT
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT;

// UERadioCapabilityID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_UERadioCapabilityID
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_UERadioCapabilityID;

// UERetentionInformation
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UERetentionInformation
{
	__si_amf__UERetentionInformation_ues_retained_val
} SI_AMF_DT_UERetentionInformation;


// L:2442
typedef enum __si_amf_dt_UERetentionInformation2
{
	UERetentionInformation_ues_retained_val
} SI_AMF_DT_UERetentionInformation2;


// L:2469
typedef struct __si_amf_dt_UERetentionInformation_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UERetentionInformation_EnumProxy;


// UESecurityCapabilities
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UESecurityCapabilities
{
	SI_AMF_DT_NRencryptionAlgorithms * nRencryptionAlgorithms;

	SI_AMF_DT_NRintegrityProtectionAlgorithms * nRintegrityProtectionAlgorithms;

	SI_AMF_DT_EUTRAencryptionAlgorithms * eUTRAencryptionAlgorithms;

	SI_AMF_DT_EUTRAintegrityProtectionAlgorithms * eUTRAintegrityProtectionAlgorithms;

} SI_AMF_DT_UESecurityCapabilities;


// UESliceMaximumBitRateList
//SEQUENCE OF UESliceMaximumBitRateItem, MIN=1, MAX=maxnoofAllowedS-NSSAIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UESliceMaximumBitRateList
{
	SI_LinkedList * UESliceMaximumBitRateItem;
} SI_AMF_DT_UESliceMaximumBitRateList;


// UESliceMaximumBitRateItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UESliceMaximumBitRateItem
{
	SI_AMF_DT_S_NSSAI * s_NSSAI;

	unsigned long long int uESliceMaximumBitRateDL;

	unsigned long long int uESliceMaximumBitRateUL;

} SI_AMF_DT_UESliceMaximumBitRateItem;


// UE-UP-CIoT-Support
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UE_UP_CIoT_Support
{
	__si_amf__UE_UP_CIoT_Support_supported_val
} SI_AMF_DT_UE_UP_CIoT_Support;


// L:2442
typedef enum __si_amf_dt_UE_UP_CIoT_Support2
{
	UE_UP_CIoT_Support_supported_val
} SI_AMF_DT_UE_UP_CIoT_Support2;


// L:2469
typedef struct __si_amf_dt_UE_UP_CIoT_Support_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UE_UP_CIoT_Support_EnumProxy;


// UL-NAS-MAC
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_UL_NAS_MAC
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_UL_NAS_MAC;

// UL-NAS-Count
// BITSTRING,BIT STRING(SIZE(5))
// ADT=0  DT=2
// L:5115
typedef struct __si_amf_dt_UL_NAS_Count
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_AMF_DT_UL_NAS_Count;

// UL-CP-SecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UL_CP_SecurityInformation
{
	SI_AMF_DT_UL_NAS_MAC * ul_NAS_MAC;

	SI_AMF_DT_UL_NAS_Count * ul_NAS_Count;

} SI_AMF_DT_UL_CP_SecurityInformation;


// UL-NGU-UP-TNLModifyList
//SEQUENCE OF UL-NGU-UP-TNLModifyItem, MIN=1, MAX=maxnoofMultiConnectivity  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyList
{
	SI_LinkedList * UL_NGU_UP_TNLModifyItem;
} SI_AMF_DT_UL_NGU_UP_TNLModifyList;


// UL-NGU-UP-TNLModifyItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyItem
{
	SI_AMF_DT_UPTransportLayerInformation * uL_NGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;

} SI_AMF_DT_UL_NGU_UP_TNLModifyItem;


// UnavailableGUAMIList
//SEQUENCE OF UnavailableGUAMIItem, MIN=1, MAX=maxnoofServedGUAMIs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UnavailableGUAMIList
{
	SI_LinkedList * UnavailableGUAMIItem;
} SI_AMF_DT_UnavailableGUAMIList;


// UnavailableGUAMIItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UnavailableGUAMIItem
{
	SI_AMF_DT_GUAMI * gUAMI;

	uint8_t selected_etimerApproachForGUAMIRemoval;
	int extSelected_etimerApproachForGUAMIRemoval;
	int isPresent_timerApproachForGUAMIRemoval;

	SI_AMF_DT_AMFName * backupAMFName;
	int isPresent_backupAMFName;

} SI_AMF_DT_UnavailableGUAMIItem;


// ULForwarding
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_ULForwarding
{
	__si_amf__ULForwarding_ul_forwarding_proposed_val
} SI_AMF_DT_ULForwarding;


// L:2442
typedef enum __si_amf_dt_ULForwarding2
{
	ULForwarding_ul_forwarding_proposed_val
} SI_AMF_DT_ULForwarding2;


// L:2469
typedef struct __si_amf_dt_ULForwarding_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_ULForwarding_EnumProxy;


// UPTransportLayerInformationList
//SEQUENCE OF UPTransportLayerInformationItem, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_UPTransportLayerInformationList
{
	SI_LinkedList * UPTransportLayerInformationItem;
} SI_AMF_DT_UPTransportLayerInformationList;


// UPTransportLayerInformationItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UPTransportLayerInformationItem
{
	SI_AMF_DT_UPTransportLayerInformation * nGU_UP_TNLInformation;

} SI_AMF_DT_UPTransportLayerInformationItem;


// UPTransportLayerInformationPairItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UPTransportLayerInformationPairItem
{
	SI_AMF_DT_UPTransportLayerInformation * uL_NGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;

} SI_AMF_DT_UPTransportLayerInformationPairItem;


// URI-address
// PrintableString,VisibleString
// ADT=0  DT=2
// L:5997
typedef struct __si_amf_dt_URI_address
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_URI_address;

// UserLocationInformationEUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationEUTRA
{
	SI_AMF_DT_EUTRA_CGI * eUTRA_CGI;

	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_TimeStamp * timeStamp;
	int isPresent_timeStamp;

} SI_AMF_DT_UserLocationInformationEUTRA;


// UserLocationInformationNR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationNR
{
	SI_AMF_DT_NR_CGI * nR_CGI;

	SI_AMF_DT_TAI * tAI;

	SI_AMF_DT_TimeStamp * timeStamp;
	int isPresent_timeStamp;

} SI_AMF_DT_UserLocationInformationNR;


// UserLocationInformationN3IWF-with-PortNumber
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationN3IWF_with_PortNumber
{
	SI_AMF_DT_TransportLayerAddress * iPAddress;

	SI_AMF_DT_PortNumber * portNumber;

} SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber;


// UserLocationInformation
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UserLocationInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_UserLocationInformationEUTRA * userLocationInformationEUTRA;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_UserLocationInformationNR * userLocationInformationNR;

		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber * userLocationInformationN3IWF_with_PortNumber;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UserLocationInformation_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UserLocationInformation;


// UserLocationInformationN3IWF-without-PortNumber
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationN3IWF_without_PortNumber
{
	SI_AMF_DT_TransportLayerAddress * iPAddress;

	SI_AMF_DT_TAI * tAI;
	int isPresent_tAI;

} SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber;


// UserLocationInformationTNGF
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationTNGF
{
	SI_AMF_DT_TNAP_ID * tNAP_ID;

	SI_AMF_DT_TransportLayerAddress * iPAddress;

	SI_AMF_DT_PortNumber * portNumber;
	int isPresent_portNumber;

} SI_AMF_DT_UserLocationInformationTNGF;


// UserLocationInformationTWIF
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserLocationInformationTWIF
{
	SI_AMF_DT_TWAP_ID * tWAP_ID;

	SI_AMF_DT_TransportLayerAddress * iPAddress;

	SI_AMF_DT_PortNumber * portNumber;
	int isPresent_portNumber;

} SI_AMF_DT_UserLocationInformationTWIF;


// UserLocationInformationW-AGF
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_UserLocationInformationW_AGF
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_AMF_DT_GlobalLine_ID * globalLine_ID;

		// ParserName = OCTETSTRING - NonEP false;
		SI_AMF_DT_HFCNode_ID * hFCNode_ID;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_UserLocationInformationW_AGF;


// UserPlaneFailureType
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UserPlaneFailureType
{
	__si_amf__UserPlaneFailureType_gtp_u_error_indication_received_val,
	__si_amf__UserPlaneFailureType_up_path_failure_val
} SI_AMF_DT_UserPlaneFailureType;


// L:2442
typedef enum __si_amf_dt_UserPlaneFailureType2
{
	UserPlaneFailureType_gtp_u_error_indication_received_val,
	UserPlaneFailureType_up_path_failure_val
} SI_AMF_DT_UserPlaneFailureType2;


// L:2469
typedef struct __si_amf_dt_UserPlaneFailureType_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UserPlaneFailureType_EnumProxy;


// UserPlaneFailureIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_UserPlaneFailureIndication
{
	uint8_t selected_euserPlaneFailureType;
	int extSelected_euserPlaneFailureType;

	SI_AMF_DT_UPTransportLayerInformation * uL_NGU_UP_TNLInformation;

	SI_AMF_DT_UPTransportLayerInformation * dL_NGU_UP_TNLInformation;

} SI_AMF_DT_UserPlaneFailureIndication;


// UserPlaneFailureIndicationReport
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_UserPlaneFailureIndicationReport
{
	__si_amf__UserPlaneFailureIndicationReport_qos_flows_and_tunnel_to_be_released_val,
	__si_amf__UserPlaneFailureIndicationReport_qoS_flows_to_be_moved_val,
	__si_amf__UserPlaneFailureIndicationReport_new_transport_address_allocated_val
} SI_AMF_DT_UserPlaneFailureIndicationReport;


// L:2442
typedef enum __si_amf_dt_UserPlaneFailureIndicationReport2
{
	UserPlaneFailureIndicationReport_qos_flows_and_tunnel_to_be_released_val,
	UserPlaneFailureIndicationReport_qoS_flows_to_be_moved_val,
	UserPlaneFailureIndicationReport_new_transport_address_allocated_val
} SI_AMF_DT_UserPlaneFailureIndicationReport2;


// L:2469
typedef struct __si_amf_dt_UserPlaneFailureIndicationReport_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_UserPlaneFailureIndicationReport_EnumProxy;


// VolumeTimedReportItem_startTimeStamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_VolumeTimedReportItem_startTimeStamp
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_VolumeTimedReportItem_startTimeStamp;

// VolumeTimedReportItem_endTimeStamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_VolumeTimedReportItem_endTimeStamp
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_VolumeTimedReportItem_endTimeStamp;

// VolumeTimedReportItem_usageCountUL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_VolumeTimedReportItem_usageCountUL
{
	unsigned long long int data;
} SI_AMF_DT_VolumeTimedReportItem_usageCountUL;

// VolumeTimedReportItem_usageCountDL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5531
typedef struct __si_amf_dt_VolumeTimedReportItem_usageCountDL
{
	unsigned long long int data;
} SI_AMF_DT_VolumeTimedReportItem_usageCountDL;

// VolumeTimedReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_VolumeTimedReport_Item
{
	SI_AMF_DT_VolumeTimedReportItem_startTimeStamp * startTimeStamp;

	SI_AMF_DT_VolumeTimedReportItem_endTimeStamp * endTimeStamp;

	unsigned long long int usageCountUL;

	unsigned long long int usageCountDL;

} SI_AMF_DT_VolumeTimedReport_Item;


// WarningAreaCoordinates
// OCTETSTRING,OCTET STRING(SIZE(1..1024))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_WarningAreaCoordinates
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_WarningAreaCoordinates;

// WarningAreaList
// ADT=0  DT=1
// L:3570
typedef struct __si_amf_dt_WarningAreaList
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EUTRA_CGIListForWarning * eUTRA_CGIListForWarning;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_NR_CGIListForWarning * nR_CGIListForWarning;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_TAIListForWarning * tAIListForWarning;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_AMF_DT_EmergencyAreaIDList * emergencyAreaIDList;

		// ParserName =  - NonEP true;
		SI_AMF_DT_PDU_WarningAreaList_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_AMF_DT_WarningAreaList;


// WarningMessageContents
// OCTETSTRING,OCTET STRING(SIZE(1..9600))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_WarningMessageContents
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_WarningMessageContents;

// WarningSecurityInfo
// OCTETSTRING,OCTET STRING(SIZE(50))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_WarningSecurityInfo
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_WarningSecurityInfo;

// WarningType
// OCTETSTRING,OCTET STRING(SIZE(2))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_WarningType
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_WarningType;

// WLANName
// OCTETSTRING,OCTET STRING(SIZE(1..32))
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_WLANName
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_WLANName;

// WLANMeasConfigNameItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_WLANMeasConfigNameItem
{
	SI_AMF_DT_WLANName * wLANName;

} SI_AMF_DT_WLANMeasConfigNameItem;


// WUS-Assistance-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_WUS_Assistance_Information
{
	uint8_t selected_epagingProbabilityInformation;
	int extSelected_epagingProbabilityInformation;

} SI_AMF_DT_WUS_Assistance_Information;


// XnGTP-TLAs
//SEQUENCE OF TransportLayerAddress, MIN=1, MAX=maxnoofXnGTP-TLAs  ADT=0  DT=2
// L:2088
typedef struct __si_amf_dt_XnGTP_TLAs
{
	SI_LinkedList * TransportLayerAddress;
} SI_AMF_DT_XnGTP_TLAs;


// XnExtTLA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1102
typedef struct __si_amf_dt_XnExtTLA_Item
{
	SI_AMF_DT_TransportLayerAddress * iPsecTLA;
	int isPresent_iPsecTLA;

	SI_AMF_DT_XnGTP_TLAs * gTP_TLAs;
	int isPresent_gTP_TLAs;

} SI_AMF_DT_XnExtTLA_Item;


// XrDeviceWith2Rx
// ADT=0  DT=1
// L:2416
typedef enum __si_amf_dt_XrDeviceWith2Rx
{
	__si_amf__XrDeviceWith2Rx_true_val
} SI_AMF_DT_XrDeviceWith2Rx;


// L:2442
typedef enum __si_amf_dt_XrDeviceWith2Rx2
{
	XrDeviceWith2Rx_true_val
} SI_AMF_DT_XrDeviceWith2Rx2;


// L:2469
typedef struct __si_amf_dt_XrDeviceWith2Rx_EnumProxy
{
	uint8_t data;
} SI_AMF_DT_XrDeviceWith2Rx_EnumProxy;


// DefaultOctetString
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4647
typedef struct __si_amf_dt_DefaultOctetString
{
	unsigned char * data;
	unsigned int length;
} SI_AMF_DT_DefaultOctetString;

//TODO: DataType -><- Got NULL  L:7287

void __si_amf_debug_Criticality( char * key, uint8_t eCriticality, int lvl);

int __si_amf_Encode_Criticality( uint8_t eCriticality, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Presence( char * key, uint8_t ePresence, int lvl);

int __si_amf_Encode_Presence( uint8_t ePresence, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PrivateIEID_local( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PrivateIEID_local( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PrivateIEID_local( SI_AMF_DT_PrivateIEID_local * data);


void __si_amf_init_PrivateIE_ID( SI_AMF_DT_PrivateIE_ID ** data);

void __si_amf_debug_PrivateIE_ID( char * key, SI_AMF_DT_PrivateIE_ID * data, int lvl);

void __si_amf_memfree_PrivateIE_ID( SI_AMF_DT_PrivateIE_ID * data);

int __si_amf_Encode_PrivateIE_ID( SI_AMF_DT_PrivateIE_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ProcedureCode( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ProcedureCode( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ProcedureCode( SI_AMF_DT_ProcedureCode * data);


void __si_amf_debug_ProtocolExtensionID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ProtocolExtensionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ProtocolExtensionID( SI_AMF_DT_ProtocolExtensionID * data);


void __si_amf_debug_ProtocolIE_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ProtocolIE_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ProtocolIE_ID( SI_AMF_DT_ProtocolIE_ID * data);


void __si_amf_debug_TriggeringMessage( char * key, uint8_t eTriggeringMessage, int lvl);

int __si_amf_Encode_TriggeringMessage( uint8_t eTriggeringMessage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NULL( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NULL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NULL( SI_AMF_DT_NULL * data);


void __si_amf_init_AdditionalDLUPTNLInformationForHOList( SI_AMF_DT_AdditionalDLUPTNLInformationForHOList ** data);

void __si_amf_debug_AdditionalDLUPTNLInformationForHOList( char * key, SI_AMF_DT_AdditionalDLUPTNLInformationForHOList * data, int lvl);

void __si_amf_memfree_AdditionalDLUPTNLInformationForHOList( SI_AMF_DT_AdditionalDLUPTNLInformationForHOList * data);

int __si_amf_Encode_AdditionalDLUPTNLInformationForHOList( SI_AMF_DT_AdditionalDLUPTNLInformationForHOList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TransportLayerAddress( SI_AMF_DT_TransportLayerAddress ** data);

void __si_amf_init_TransportLayerAddress2( SI_AMF_DT_TransportLayerAddress ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_TransportLayerAddress( char * key, SI_AMF_DT_TransportLayerAddress * data, int lvl);

void __si_amf_memfree_TransportLayerAddress( SI_AMF_DT_TransportLayerAddress * data);

int __si_amf_Encode_TransportLayerAddress( SI_AMF_DT_TransportLayerAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GTP_TEID( SI_AMF_DT_GTP_TEID ** data);

void __si_amf_init_GTP_TEID2( SI_AMF_DT_GTP_TEID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_GTP_TEID( char * key, SI_AMF_DT_GTP_TEID * data, int lvl);

void __si_amf_memfree_GTP_TEID( SI_AMF_DT_GTP_TEID * data);

int __si_amf_Encode_GTP_TEID( SI_AMF_DT_GTP_TEID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GTPTunnel( SI_AMF_DT_GTPTunnel ** data);

void __si_amf_debug_GTPTunnel( char * key, SI_AMF_DT_GTPTunnel * data, int lvl);

void __si_amf_memfree_GTPTunnel( SI_AMF_DT_GTPTunnel * data);

int __si_amf_Encode_GTPTunnel( SI_AMF_DT_GTPTunnel * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UPTransportLayerInformation( SI_AMF_DT_UPTransportLayerInformation ** data);

void __si_amf_debug_UPTransportLayerInformation( char * key, SI_AMF_DT_UPTransportLayerInformation * data, int lvl);

void __si_amf_memfree_UPTransportLayerInformation( SI_AMF_DT_UPTransportLayerInformation * data);

int __si_amf_Encode_UPTransportLayerInformation( SI_AMF_DT_UPTransportLayerInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowListWithDataForwarding( SI_AMF_DT_QosFlowListWithDataForwarding ** data);

void __si_amf_debug_QosFlowListWithDataForwarding( char * key, SI_AMF_DT_QosFlowListWithDataForwarding * data, int lvl);

void __si_amf_memfree_QosFlowListWithDataForwarding( SI_AMF_DT_QosFlowListWithDataForwarding * data);

int __si_amf_Encode_QosFlowListWithDataForwarding( SI_AMF_DT_QosFlowListWithDataForwarding * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AdditionalDLUPTNLInformationForHOItem( SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem ** data);

void __si_amf_debug_AdditionalDLUPTNLInformationForHOItem( char * key, SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem * data, int lvl);

void __si_amf_memfree_AdditionalDLUPTNLInformationForHOItem( SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem * data);

int __si_amf_Encode_AdditionalDLUPTNLInformationForHOItem( SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AdditionalQosFlowInformation( char * key, uint8_t eAdditionalQosFlowInformation, int lvl);

int __si_amf_Encode_AdditionalQosFlowInformation( uint8_t eAdditionalQosFlowInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AerialUEsubscriptionInformation( char * key, uint8_t eAerialUEsubscriptionInformation, int lvl);

int __si_amf_Encode_AerialUEsubscriptionInformation( uint8_t eAerialUEsubscriptionInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BitRate( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_BitRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_BitRate( SI_AMF_DT_BitRate * data);


void __si_amf_init_A2X_PC5_FlowBitRates( SI_AMF_DT_A2X_PC5_FlowBitRates ** data);

void __si_amf_debug_A2X_PC5_FlowBitRates( char * key, SI_AMF_DT_A2X_PC5_FlowBitRates * data, int lvl);

void __si_amf_memfree_A2X_PC5_FlowBitRates( SI_AMF_DT_A2X_PC5_FlowBitRates * data);

int __si_amf_Encode_A2X_PC5_FlowBitRates( SI_AMF_DT_A2X_PC5_FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_A2X_PC5_QoS_Flow_List( SI_AMF_DT_A2X_PC5_QoS_Flow_List ** data);

void __si_amf_debug_A2X_PC5_QoS_Flow_List( char * key, SI_AMF_DT_A2X_PC5_QoS_Flow_List * data, int lvl);

void __si_amf_memfree_A2X_PC5_QoS_Flow_List( SI_AMF_DT_A2X_PC5_QoS_Flow_List * data);

int __si_amf_Encode_A2X_PC5_QoS_Flow_List( SI_AMF_DT_A2X_PC5_QoS_Flow_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_A2XPC5QoSFlowItem_a2X_PQI( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_A2XPC5QoSFlowItem_a2X_PQI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_A2XPC5QoSFlowItem_a2X_PQI( SI_AMF_DT_A2XPC5QoSFlowItem_a2X_PQI * data);


void __si_amf_debug_A2XPC5QoSFlowItem_a2X_Range( char * key, uint8_t eA2XPC5QoSFlowItem_a2X_Range, int lvl);

int __si_amf_Encode_A2XPC5QoSFlowItem_a2X_Range( uint8_t eA2XPC5QoSFlowItem_a2X_Range, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_A2X_PC5_QoS_Flow_Item( SI_AMF_DT_A2X_PC5_QoS_Flow_Item ** data);

void __si_amf_debug_A2X_PC5_QoS_Flow_Item( char * key, SI_AMF_DT_A2X_PC5_QoS_Flow_Item * data, int lvl);

void __si_amf_memfree_A2X_PC5_QoS_Flow_Item( SI_AMF_DT_A2X_PC5_QoS_Flow_Item * data);

int __si_amf_Encode_A2X_PC5_QoS_Flow_Item( SI_AMF_DT_A2X_PC5_QoS_Flow_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_A2X_PC5_QoS_Parameters( SI_AMF_DT_A2X_PC5_QoS_Parameters ** data);

void __si_amf_debug_A2X_PC5_QoS_Parameters( char * key, SI_AMF_DT_A2X_PC5_QoS_Parameters * data, int lvl);

void __si_amf_memfree_A2X_PC5_QoS_Parameters( SI_AMF_DT_A2X_PC5_QoS_Parameters * data);

int __si_amf_Encode_A2X_PC5_QoS_Parameters( SI_AMF_DT_A2X_PC5_QoS_Parameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AdditionalCancelledlocationReportingReferenceIDList( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList ** data);

void __si_amf_debug_AdditionalCancelledlocationReportingReferenceIDList( char * key, SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList * data, int lvl);

void __si_amf_memfree_AdditionalCancelledlocationReportingReferenceIDList( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList * data);

int __si_amf_Encode_AdditionalCancelledlocationReportingReferenceIDList( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LocationReportingReferenceID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_LocationReportingReferenceID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_LocationReportingReferenceID( SI_AMF_DT_LocationReportingReferenceID * data);


void __si_amf_init_AdditionalCancelledlocationReportingReferenceIDItem( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem ** data);

void __si_amf_debug_AdditionalCancelledlocationReportingReferenceIDItem( char * key, SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem * data, int lvl);

void __si_amf_memfree_AdditionalCancelledlocationReportingReferenceIDItem( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem * data);

int __si_amf_Encode_AdditionalCancelledlocationReportingReferenceIDItem( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PriorityLevelARP( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PriorityLevelARP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PriorityLevelARP( SI_AMF_DT_PriorityLevelARP * data);


void __si_amf_debug_Pre_emptionCapability( char * key, uint8_t ePre_emptionCapability, int lvl);

int __si_amf_Encode_Pre_emptionCapability( uint8_t ePre_emptionCapability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Pre_emptionVulnerability( char * key, uint8_t ePre_emptionVulnerability, int lvl);

int __si_amf_Encode_Pre_emptionVulnerability( uint8_t ePre_emptionVulnerability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AllocationAndRetentionPriority( SI_AMF_DT_AllocationAndRetentionPriority ** data);

void __si_amf_debug_AllocationAndRetentionPriority( char * key, SI_AMF_DT_AllocationAndRetentionPriority * data, int lvl);

void __si_amf_memfree_AllocationAndRetentionPriority( SI_AMF_DT_AllocationAndRetentionPriority * data);

int __si_amf_Encode_AllocationAndRetentionPriority( SI_AMF_DT_AllocationAndRetentionPriority * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Allowed_CAG_List_per_PLMN( SI_AMF_DT_Allowed_CAG_List_per_PLMN ** data);

void __si_amf_debug_Allowed_CAG_List_per_PLMN( char * key, SI_AMF_DT_Allowed_CAG_List_per_PLMN * data, int lvl);

void __si_amf_memfree_Allowed_CAG_List_per_PLMN( SI_AMF_DT_Allowed_CAG_List_per_PLMN * data);

int __si_amf_Encode_Allowed_CAG_List_per_PLMN( SI_AMF_DT_Allowed_CAG_List_per_PLMN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AllowedNSSAI( SI_AMF_DT_AllowedNSSAI ** data);

void __si_amf_debug_AllowedNSSAI( char * key, SI_AMF_DT_AllowedNSSAI * data, int lvl);

void __si_amf_memfree_AllowedNSSAI( SI_AMF_DT_AllowedNSSAI * data);

int __si_amf_Encode_AllowedNSSAI( SI_AMF_DT_AllowedNSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SST( SI_AMF_DT_SST ** data);

void __si_amf_init_SST2( SI_AMF_DT_SST ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_SST( char * key, SI_AMF_DT_SST * data, int lvl);

void __si_amf_memfree_SST( SI_AMF_DT_SST * data);

int __si_amf_Encode_SST( SI_AMF_DT_SST * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SD( SI_AMF_DT_SD ** data);

void __si_amf_init_SD2( SI_AMF_DT_SD ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_SD( char * key, SI_AMF_DT_SD * data, int lvl);

void __si_amf_memfree_SD( SI_AMF_DT_SD * data);

int __si_amf_Encode_SD( SI_AMF_DT_SD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_S_NSSAI( SI_AMF_DT_S_NSSAI ** data);

void __si_amf_debug_S_NSSAI( char * key, SI_AMF_DT_S_NSSAI * data, int lvl);

void __si_amf_memfree_S_NSSAI( SI_AMF_DT_S_NSSAI * data);

int __si_amf_Encode_S_NSSAI( SI_AMF_DT_S_NSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AllowedNSSAI_Item( SI_AMF_DT_AllowedNSSAI_Item ** data);

void __si_amf_debug_AllowedNSSAI_Item( char * key, SI_AMF_DT_AllowedNSSAI_Item * data, int lvl);

void __si_amf_memfree_AllowedNSSAI_Item( SI_AMF_DT_AllowedNSSAI_Item * data);

int __si_amf_Encode_AllowedNSSAI_Item( SI_AMF_DT_AllowedNSSAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Allowed_PNI_NPN_List( SI_AMF_DT_Allowed_PNI_NPN_List ** data);

void __si_amf_debug_Allowed_PNI_NPN_List( char * key, SI_AMF_DT_Allowed_PNI_NPN_List * data, int lvl);

void __si_amf_memfree_Allowed_PNI_NPN_List( SI_AMF_DT_Allowed_PNI_NPN_List * data);

int __si_amf_Encode_Allowed_PNI_NPN_List( SI_AMF_DT_Allowed_PNI_NPN_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AllowedPNINPNItem_pNI_NPN_restricted( char * key, uint8_t eAllowedPNINPNItem_pNI_NPN_restricted, int lvl);

int __si_amf_Encode_AllowedPNINPNItem_pNI_NPN_restricted( uint8_t eAllowedPNINPNItem_pNI_NPN_restricted, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PLMNIdentity( SI_AMF_DT_PLMNIdentity ** data);

void __si_amf_init_PLMNIdentity2( SI_AMF_DT_PLMNIdentity ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PLMNIdentity( char * key, SI_AMF_DT_PLMNIdentity * data, int lvl);

void __si_amf_memfree_PLMNIdentity( SI_AMF_DT_PLMNIdentity * data);

int __si_amf_Encode_PLMNIdentity( SI_AMF_DT_PLMNIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Allowed_PNI_NPN_Item( SI_AMF_DT_Allowed_PNI_NPN_Item ** data);

void __si_amf_debug_Allowed_PNI_NPN_Item( char * key, SI_AMF_DT_Allowed_PNI_NPN_Item * data, int lvl);

void __si_amf_memfree_Allowed_PNI_NPN_Item( SI_AMF_DT_Allowed_PNI_NPN_Item * data);

int __si_amf_Encode_Allowed_PNI_NPN_Item( SI_AMF_DT_Allowed_PNI_NPN_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AllowedTACs( SI_AMF_DT_AllowedTACs ** data);

void __si_amf_debug_AllowedTACs( char * key, SI_AMF_DT_AllowedTACs * data, int lvl);

void __si_amf_memfree_AllowedTACs( SI_AMF_DT_AllowedTACs * data);

int __si_amf_Encode_AllowedTACs( SI_AMF_DT_AllowedTACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AlternativeQoSParaSetIndex( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_AlternativeQoSParaSetIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_AlternativeQoSParaSetIndex( SI_AMF_DT_AlternativeQoSParaSetIndex * data);


void __si_amf_debug_AlternativeQoSParaSetNotifyIndex( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_AlternativeQoSParaSetNotifyIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_AlternativeQoSParaSetNotifyIndex( SI_AMF_DT_AlternativeQoSParaSetNotifyIndex * data);


void __si_amf_init_AlternativeQoSParaSetList( SI_AMF_DT_AlternativeQoSParaSetList ** data);

void __si_amf_debug_AlternativeQoSParaSetList( char * key, SI_AMF_DT_AlternativeQoSParaSetList * data, int lvl);

void __si_amf_memfree_AlternativeQoSParaSetList( SI_AMF_DT_AlternativeQoSParaSetList * data);

int __si_amf_Encode_AlternativeQoSParaSetList( SI_AMF_DT_AlternativeQoSParaSetList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PacketDelayBudget( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PacketDelayBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PacketDelayBudget( SI_AMF_DT_PacketDelayBudget * data);


void __si_amf_debug_PacketErrorRate_pERScalar( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PacketErrorRate_pERScalar( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PacketErrorRate_pERScalar( SI_AMF_DT_PacketErrorRate_pERScalar * data);


void __si_amf_debug_PacketErrorRate_pERExponent( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PacketErrorRate_pERExponent( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PacketErrorRate_pERExponent( SI_AMF_DT_PacketErrorRate_pERExponent * data);


void __si_amf_init_PacketErrorRate( SI_AMF_DT_PacketErrorRate ** data);

void __si_amf_debug_PacketErrorRate( char * key, SI_AMF_DT_PacketErrorRate * data, int lvl);

void __si_amf_memfree_PacketErrorRate( SI_AMF_DT_PacketErrorRate * data);

int __si_amf_Encode_PacketErrorRate( SI_AMF_DT_PacketErrorRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AlternativeQoSParaSetItem( SI_AMF_DT_AlternativeQoSParaSetItem ** data);

void __si_amf_debug_AlternativeQoSParaSetItem( char * key, SI_AMF_DT_AlternativeQoSParaSetItem * data, int lvl);

void __si_amf_memfree_AlternativeQoSParaSetItem( SI_AMF_DT_AlternativeQoSParaSetItem * data);

int __si_amf_Encode_AlternativeQoSParaSetItem( SI_AMF_DT_AlternativeQoSParaSetItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AssistanceInformationQoE_Meas( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_AssistanceInformationQoE_Meas( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_AssistanceInformationQoE_Meas( SI_AMF_DT_AssistanceInformationQoE_Meas * data);


void __si_amf_init_AMFName( SI_AMF_DT_AMFName ** data);

void __si_amf_init_AMFName2( SI_AMF_DT_AMFName ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_AMFName( char * key, SI_AMF_DT_AMFName * data, int lvl);

void __si_amf_memfree_AMFName( SI_AMF_DT_AMFName * data);

int __si_amf_Encode_AMFName( SI_AMF_DT_AMFName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFNameVisibleString( SI_AMF_DT_AMFNameVisibleString ** data);

void __si_amf_init_AMFNameVisibleString2( SI_AMF_DT_AMFNameVisibleString ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_AMFNameVisibleString( char * key, SI_AMF_DT_AMFNameVisibleString * data, int lvl);

void __si_amf_memfree_AMFNameVisibleString( SI_AMF_DT_AMFNameVisibleString * data);

int __si_amf_Encode_AMFNameVisibleString( SI_AMF_DT_AMFNameVisibleString * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFNameUTF8String( SI_AMF_DT_AMFNameUTF8String ** data);

void __si_amf_init_AMFNameUTF8String2( SI_AMF_DT_AMFNameUTF8String ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_AMFNameUTF8String( char * key, SI_AMF_DT_AMFNameUTF8String * data, int lvl);

void __si_amf_memfree_AMFNameUTF8String( SI_AMF_DT_AMFNameUTF8String * data);

int __si_amf_Encode_AMFNameUTF8String( SI_AMF_DT_AMFNameUTF8String * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GNBID_gNB_ID( SI_AMF_DT_GNBID_gNB_ID ** data);

void __si_amf_init_GNBID_gNB_ID2( SI_AMF_DT_GNBID_gNB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_GNBID_gNB_ID( char * key, SI_AMF_DT_GNBID_gNB_ID * data, int lvl);

void __si_amf_memfree_GNBID_gNB_ID( SI_AMF_DT_GNBID_gNB_ID * data);

int __si_amf_Encode_GNBID_gNB_ID( SI_AMF_DT_GNBID_gNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GNB_ID( SI_AMF_DT_GNB_ID ** data);

void __si_amf_debug_GNB_ID( char * key, SI_AMF_DT_GNB_ID * data, int lvl);

void __si_amf_memfree_GNB_ID( SI_AMF_DT_GNB_ID * data);

int __si_amf_Encode_GNB_ID( SI_AMF_DT_GNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalGNB_ID( SI_AMF_DT_GlobalGNB_ID ** data);

void __si_amf_debug_GlobalGNB_ID( char * key, SI_AMF_DT_GlobalGNB_ID * data, int lvl);

void __si_amf_memfree_GlobalGNB_ID( SI_AMF_DT_GlobalGNB_ID * data);

int __si_amf_Encode_GlobalGNB_ID( SI_AMF_DT_GlobalGNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NgENBID_macroNgENB_ID( SI_AMF_DT_NgENBID_macroNgENB_ID ** data);

void __si_amf_init_NgENBID_macroNgENB_ID2( SI_AMF_DT_NgENBID_macroNgENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NgENBID_macroNgENB_ID( char * key, SI_AMF_DT_NgENBID_macroNgENB_ID * data, int lvl);

void __si_amf_memfree_NgENBID_macroNgENB_ID( SI_AMF_DT_NgENBID_macroNgENB_ID * data);

int __si_amf_Encode_NgENBID_macroNgENB_ID( SI_AMF_DT_NgENBID_macroNgENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NgENBID_shortMacroNgENB_ID( SI_AMF_DT_NgENBID_shortMacroNgENB_ID ** data);

void __si_amf_init_NgENBID_shortMacroNgENB_ID2( SI_AMF_DT_NgENBID_shortMacroNgENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NgENBID_shortMacroNgENB_ID( char * key, SI_AMF_DT_NgENBID_shortMacroNgENB_ID * data, int lvl);

void __si_amf_memfree_NgENBID_shortMacroNgENB_ID( SI_AMF_DT_NgENBID_shortMacroNgENB_ID * data);

int __si_amf_Encode_NgENBID_shortMacroNgENB_ID( SI_AMF_DT_NgENBID_shortMacroNgENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NgENBID_longMacroNgENB_ID( SI_AMF_DT_NgENBID_longMacroNgENB_ID ** data);

void __si_amf_init_NgENBID_longMacroNgENB_ID2( SI_AMF_DT_NgENBID_longMacroNgENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NgENBID_longMacroNgENB_ID( char * key, SI_AMF_DT_NgENBID_longMacroNgENB_ID * data, int lvl);

void __si_amf_memfree_NgENBID_longMacroNgENB_ID( SI_AMF_DT_NgENBID_longMacroNgENB_ID * data);

int __si_amf_Encode_NgENBID_longMacroNgENB_ID( SI_AMF_DT_NgENBID_longMacroNgENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NgENB_ID( SI_AMF_DT_NgENB_ID ** data);

void __si_amf_debug_NgENB_ID( char * key, SI_AMF_DT_NgENB_ID * data, int lvl);

void __si_amf_memfree_NgENB_ID( SI_AMF_DT_NgENB_ID * data);

int __si_amf_Encode_NgENB_ID( SI_AMF_DT_NgENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalNgENB_ID( SI_AMF_DT_GlobalNgENB_ID ** data);

void __si_amf_debug_GlobalNgENB_ID( char * key, SI_AMF_DT_GlobalNgENB_ID * data, int lvl);

void __si_amf_memfree_GlobalNgENB_ID( SI_AMF_DT_GlobalNgENB_ID * data);

int __si_amf_Encode_GlobalNgENB_ID( SI_AMF_DT_GlobalNgENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_N3IWFID_n3IWF_ID( SI_AMF_DT_N3IWFID_n3IWF_ID ** data);

void __si_amf_init_N3IWFID_n3IWF_ID2( SI_AMF_DT_N3IWFID_n3IWF_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_N3IWFID_n3IWF_ID( char * key, SI_AMF_DT_N3IWFID_n3IWF_ID * data, int lvl);

void __si_amf_memfree_N3IWFID_n3IWF_ID( SI_AMF_DT_N3IWFID_n3IWF_ID * data);

int __si_amf_Encode_N3IWFID_n3IWF_ID( SI_AMF_DT_N3IWFID_n3IWF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_N3IWF_ID( SI_AMF_DT_N3IWF_ID ** data);

void __si_amf_debug_N3IWF_ID( char * key, SI_AMF_DT_N3IWF_ID * data, int lvl);

void __si_amf_memfree_N3IWF_ID( SI_AMF_DT_N3IWF_ID * data);

int __si_amf_Encode_N3IWF_ID( SI_AMF_DT_N3IWF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalN3IWF_ID( SI_AMF_DT_GlobalN3IWF_ID ** data);

void __si_amf_debug_GlobalN3IWF_ID( char * key, SI_AMF_DT_GlobalN3IWF_ID * data, int lvl);

void __si_amf_memfree_GlobalN3IWF_ID( SI_AMF_DT_GlobalN3IWF_ID * data);

int __si_amf_Encode_GlobalN3IWF_ID( SI_AMF_DT_GlobalN3IWF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalRANNodeID( SI_AMF_DT_GlobalRANNodeID ** data);

void __si_amf_debug_GlobalRANNodeID( char * key, SI_AMF_DT_GlobalRANNodeID * data, int lvl);

void __si_amf_memfree_GlobalRANNodeID( SI_AMF_DT_GlobalRANNodeID * data);

int __si_amf_Encode_GlobalRANNodeID( SI_AMF_DT_GlobalRANNodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAC( SI_AMF_DT_TAC ** data);

void __si_amf_init_TAC2( SI_AMF_DT_TAC ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TAC( char * key, SI_AMF_DT_TAC * data, int lvl);

void __si_amf_memfree_TAC( SI_AMF_DT_TAC * data);

int __si_amf_Encode_TAC( SI_AMF_DT_TAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAI( SI_AMF_DT_TAI ** data);

void __si_amf_debug_TAI( char * key, SI_AMF_DT_TAI * data, int lvl);

void __si_amf_memfree_TAI( SI_AMF_DT_TAI * data);

int __si_amf_Encode_TAI( SI_AMF_DT_TAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFPagingTarget( SI_AMF_DT_AMFPagingTarget ** data);

void __si_amf_debug_AMFPagingTarget( char * key, SI_AMF_DT_AMFPagingTarget * data, int lvl);

void __si_amf_memfree_AMFPagingTarget( SI_AMF_DT_AMFPagingTarget * data);

int __si_amf_Encode_AMFPagingTarget( SI_AMF_DT_AMFPagingTarget * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFPointer( SI_AMF_DT_AMFPointer ** data);

void __si_amf_init_AMFPointer2( SI_AMF_DT_AMFPointer ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_AMFPointer( char * key, SI_AMF_DT_AMFPointer * data, int lvl);

void __si_amf_memfree_AMFPointer( SI_AMF_DT_AMFPointer * data);

int __si_amf_Encode_AMFPointer( SI_AMF_DT_AMFPointer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFRegionID( SI_AMF_DT_AMFRegionID ** data);

void __si_amf_init_AMFRegionID2( SI_AMF_DT_AMFRegionID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_AMFRegionID( char * key, SI_AMF_DT_AMFRegionID * data, int lvl);

void __si_amf_memfree_AMFRegionID( SI_AMF_DT_AMFRegionID * data);

int __si_amf_Encode_AMFRegionID( SI_AMF_DT_AMFRegionID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMFSetID( SI_AMF_DT_AMFSetID ** data);

void __si_amf_init_AMFSetID2( SI_AMF_DT_AMFSetID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_AMFSetID( char * key, SI_AMF_DT_AMFSetID * data, int lvl);

void __si_amf_memfree_AMFSetID( SI_AMF_DT_AMFSetID * data);

int __si_amf_Encode_AMFSetID( SI_AMF_DT_AMFSetID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationSetupList( SI_AMF_DT_AMF_TNLAssociationSetupList ** data);

void __si_amf_debug_AMF_TNLAssociationSetupList( char * key, SI_AMF_DT_AMF_TNLAssociationSetupList * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationSetupList( SI_AMF_DT_AMF_TNLAssociationSetupList * data);

int __si_amf_Encode_AMF_TNLAssociationSetupList( SI_AMF_DT_AMF_TNLAssociationSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CPTransportLayerInformation( SI_AMF_DT_CPTransportLayerInformation ** data);

void __si_amf_debug_CPTransportLayerInformation( char * key, SI_AMF_DT_CPTransportLayerInformation * data, int lvl);

void __si_amf_memfree_CPTransportLayerInformation( SI_AMF_DT_CPTransportLayerInformation * data);

int __si_amf_Encode_CPTransportLayerInformation( SI_AMF_DT_CPTransportLayerInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationSetupItem( SI_AMF_DT_AMF_TNLAssociationSetupItem ** data);

void __si_amf_debug_AMF_TNLAssociationSetupItem( char * key, SI_AMF_DT_AMF_TNLAssociationSetupItem * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationSetupItem( SI_AMF_DT_AMF_TNLAssociationSetupItem * data);

int __si_amf_Encode_AMF_TNLAssociationSetupItem( SI_AMF_DT_AMF_TNLAssociationSetupItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationToAddList( SI_AMF_DT_AMF_TNLAssociationToAddList ** data);

void __si_amf_debug_AMF_TNLAssociationToAddList( char * key, SI_AMF_DT_AMF_TNLAssociationToAddList * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToAddList( SI_AMF_DT_AMF_TNLAssociationToAddList * data);

int __si_amf_Encode_AMF_TNLAssociationToAddList( SI_AMF_DT_AMF_TNLAssociationToAddList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TNLAssociationUsage( char * key, uint8_t eTNLAssociationUsage, int lvl);

int __si_amf_Encode_TNLAssociationUsage( uint8_t eTNLAssociationUsage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TNLAddressWeightFactor( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TNLAddressWeightFactor( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TNLAddressWeightFactor( SI_AMF_DT_TNLAddressWeightFactor * data);


void __si_amf_init_AMF_TNLAssociationToAddItem( SI_AMF_DT_AMF_TNLAssociationToAddItem ** data);

void __si_amf_debug_AMF_TNLAssociationToAddItem( char * key, SI_AMF_DT_AMF_TNLAssociationToAddItem * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToAddItem( SI_AMF_DT_AMF_TNLAssociationToAddItem * data);

int __si_amf_Encode_AMF_TNLAssociationToAddItem( SI_AMF_DT_AMF_TNLAssociationToAddItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationToRemoveList( SI_AMF_DT_AMF_TNLAssociationToRemoveList ** data);

void __si_amf_debug_AMF_TNLAssociationToRemoveList( char * key, SI_AMF_DT_AMF_TNLAssociationToRemoveList * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToRemoveList( SI_AMF_DT_AMF_TNLAssociationToRemoveList * data);

int __si_amf_Encode_AMF_TNLAssociationToRemoveList( SI_AMF_DT_AMF_TNLAssociationToRemoveList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationToRemoveItem( SI_AMF_DT_AMF_TNLAssociationToRemoveItem ** data);

void __si_amf_debug_AMF_TNLAssociationToRemoveItem( char * key, SI_AMF_DT_AMF_TNLAssociationToRemoveItem * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToRemoveItem( SI_AMF_DT_AMF_TNLAssociationToRemoveItem * data);

int __si_amf_Encode_AMF_TNLAssociationToRemoveItem( SI_AMF_DT_AMF_TNLAssociationToRemoveItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationToUpdateList( SI_AMF_DT_AMF_TNLAssociationToUpdateList ** data);

void __si_amf_debug_AMF_TNLAssociationToUpdateList( char * key, SI_AMF_DT_AMF_TNLAssociationToUpdateList * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToUpdateList( SI_AMF_DT_AMF_TNLAssociationToUpdateList * data);

int __si_amf_Encode_AMF_TNLAssociationToUpdateList( SI_AMF_DT_AMF_TNLAssociationToUpdateList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AMF_TNLAssociationToUpdateItem( SI_AMF_DT_AMF_TNLAssociationToUpdateItem ** data);

void __si_amf_debug_AMF_TNLAssociationToUpdateItem( char * key, SI_AMF_DT_AMF_TNLAssociationToUpdateItem * data, int lvl);

void __si_amf_memfree_AMF_TNLAssociationToUpdateItem( SI_AMF_DT_AMF_TNLAssociationToUpdateItem * data);

int __si_amf_Encode_AMF_TNLAssociationToUpdateItem( SI_AMF_DT_AMF_TNLAssociationToUpdateItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AMF_UE_NGAP_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_AMF_UE_NGAP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_AMF_UE_NGAP_ID( SI_AMF_DT_AMF_UE_NGAP_ID * data);


void __si_amf_init_AreaOfInterestTAIList( SI_AMF_DT_AreaOfInterestTAIList ** data);

void __si_amf_debug_AreaOfInterestTAIList( char * key, SI_AMF_DT_AreaOfInterestTAIList * data, int lvl);

void __si_amf_memfree_AreaOfInterestTAIList( SI_AMF_DT_AreaOfInterestTAIList * data);

int __si_amf_Encode_AreaOfInterestTAIList( SI_AMF_DT_AreaOfInterestTAIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestCellList( SI_AMF_DT_AreaOfInterestCellList ** data);

void __si_amf_debug_AreaOfInterestCellList( char * key, SI_AMF_DT_AreaOfInterestCellList * data, int lvl);

void __si_amf_memfree_AreaOfInterestCellList( SI_AMF_DT_AreaOfInterestCellList * data);

int __si_amf_Encode_AreaOfInterestCellList( SI_AMF_DT_AreaOfInterestCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestRANNodeList( SI_AMF_DT_AreaOfInterestRANNodeList ** data);

void __si_amf_debug_AreaOfInterestRANNodeList( char * key, SI_AMF_DT_AreaOfInterestRANNodeList * data, int lvl);

void __si_amf_memfree_AreaOfInterestRANNodeList( SI_AMF_DT_AreaOfInterestRANNodeList * data);

int __si_amf_Encode_AreaOfInterestRANNodeList( SI_AMF_DT_AreaOfInterestRANNodeList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterest( SI_AMF_DT_AreaOfInterest ** data);

void __si_amf_debug_AreaOfInterest( char * key, SI_AMF_DT_AreaOfInterest * data, int lvl);

void __si_amf_memfree_AreaOfInterest( SI_AMF_DT_AreaOfInterest * data);

int __si_amf_Encode_AreaOfInterest( SI_AMF_DT_AreaOfInterest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRCellIdentity( SI_AMF_DT_NRCellIdentity ** data);

void __si_amf_init_NRCellIdentity2( SI_AMF_DT_NRCellIdentity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NRCellIdentity( char * key, SI_AMF_DT_NRCellIdentity * data, int lvl);

void __si_amf_memfree_NRCellIdentity( SI_AMF_DT_NRCellIdentity * data);

int __si_amf_Encode_NRCellIdentity( SI_AMF_DT_NRCellIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_CGI( SI_AMF_DT_NR_CGI ** data);

void __si_amf_debug_NR_CGI( char * key, SI_AMF_DT_NR_CGI * data, int lvl);

void __si_amf_memfree_NR_CGI( SI_AMF_DT_NR_CGI * data);

int __si_amf_Encode_NR_CGI( SI_AMF_DT_NR_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRACellIdentity( SI_AMF_DT_EUTRACellIdentity ** data);

void __si_amf_init_EUTRACellIdentity2( SI_AMF_DT_EUTRACellIdentity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_EUTRACellIdentity( char * key, SI_AMF_DT_EUTRACellIdentity * data, int lvl);

void __si_amf_memfree_EUTRACellIdentity( SI_AMF_DT_EUTRACellIdentity * data);

int __si_amf_Encode_EUTRACellIdentity( SI_AMF_DT_EUTRACellIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRA_CGI( SI_AMF_DT_EUTRA_CGI ** data);

void __si_amf_debug_EUTRA_CGI( char * key, SI_AMF_DT_EUTRA_CGI * data, int lvl);

void __si_amf_memfree_EUTRA_CGI( SI_AMF_DT_EUTRA_CGI * data);

int __si_amf_Encode_EUTRA_CGI( SI_AMF_DT_EUTRA_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_CGI( SI_AMF_DT_NGRAN_CGI ** data);

void __si_amf_debug_NGRAN_CGI( char * key, SI_AMF_DT_NGRAN_CGI * data, int lvl);

void __si_amf_memfree_NGRAN_CGI( SI_AMF_DT_NGRAN_CGI * data);

int __si_amf_Encode_NGRAN_CGI( SI_AMF_DT_NGRAN_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestCellItem( SI_AMF_DT_AreaOfInterestCellItem ** data);

void __si_amf_debug_AreaOfInterestCellItem( char * key, SI_AMF_DT_AreaOfInterestCellItem * data, int lvl);

void __si_amf_memfree_AreaOfInterestCellItem( SI_AMF_DT_AreaOfInterestCellItem * data);

int __si_amf_Encode_AreaOfInterestCellItem( SI_AMF_DT_AreaOfInterestCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestList( SI_AMF_DT_AreaOfInterestList ** data);

void __si_amf_debug_AreaOfInterestList( char * key, SI_AMF_DT_AreaOfInterestList * data, int lvl);

void __si_amf_memfree_AreaOfInterestList( SI_AMF_DT_AreaOfInterestList * data);

int __si_amf_Encode_AreaOfInterestList( SI_AMF_DT_AreaOfInterestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestItem( SI_AMF_DT_AreaOfInterestItem ** data);

void __si_amf_debug_AreaOfInterestItem( char * key, SI_AMF_DT_AreaOfInterestItem * data, int lvl);

void __si_amf_memfree_AreaOfInterestItem( SI_AMF_DT_AreaOfInterestItem * data);

int __si_amf_Encode_AreaOfInterestItem( SI_AMF_DT_AreaOfInterestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestRANNodeItem( SI_AMF_DT_AreaOfInterestRANNodeItem ** data);

void __si_amf_debug_AreaOfInterestRANNodeItem( char * key, SI_AMF_DT_AreaOfInterestRANNodeItem * data, int lvl);

void __si_amf_memfree_AreaOfInterestRANNodeItem( SI_AMF_DT_AreaOfInterestRANNodeItem * data);

int __si_amf_Encode_AreaOfInterestRANNodeItem( SI_AMF_DT_AreaOfInterestRANNodeItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaOfInterestTAIItem( SI_AMF_DT_AreaOfInterestTAIItem ** data);

void __si_amf_debug_AreaOfInterestTAIItem( char * key, SI_AMF_DT_AreaOfInterestTAIItem * data, int lvl);

void __si_amf_memfree_AreaOfInterestTAIItem( SI_AMF_DT_AreaOfInterestTAIItem * data);

int __si_amf_Encode_AreaOfInterestTAIItem( SI_AMF_DT_AreaOfInterestTAIItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RecommendedCellList( SI_AMF_DT_RecommendedCellList ** data);

void __si_amf_debug_RecommendedCellList( char * key, SI_AMF_DT_RecommendedCellList * data, int lvl);

void __si_amf_memfree_RecommendedCellList( SI_AMF_DT_RecommendedCellList * data);

int __si_amf_Encode_RecommendedCellList( SI_AMF_DT_RecommendedCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RecommendedCellsForPaging( SI_AMF_DT_RecommendedCellsForPaging ** data);

void __si_amf_debug_RecommendedCellsForPaging( char * key, SI_AMF_DT_RecommendedCellsForPaging * data, int lvl);

void __si_amf_memfree_RecommendedCellsForPaging( SI_AMF_DT_RecommendedCellsForPaging * data);

int __si_amf_Encode_RecommendedCellsForPaging( SI_AMF_DT_RecommendedCellsForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssistanceDataForRecommendedCells( SI_AMF_DT_AssistanceDataForRecommendedCells ** data);

void __si_amf_debug_AssistanceDataForRecommendedCells( char * key, SI_AMF_DT_AssistanceDataForRecommendedCells * data, int lvl);

void __si_amf_memfree_AssistanceDataForRecommendedCells( SI_AMF_DT_AssistanceDataForRecommendedCells * data);

int __si_amf_Encode_AssistanceDataForRecommendedCells( SI_AMF_DT_AssistanceDataForRecommendedCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingAttemptCount( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PagingAttemptCount( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PagingAttemptCount( SI_AMF_DT_PagingAttemptCount * data);


void __si_amf_debug_IntendedNumberOfPagingAttempts( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_IntendedNumberOfPagingAttempts( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_IntendedNumberOfPagingAttempts( SI_AMF_DT_IntendedNumberOfPagingAttempts * data);


void __si_amf_debug_NextPagingAreaScope( char * key, uint8_t eNextPagingAreaScope, int lvl);

int __si_amf_Encode_NextPagingAreaScope( uint8_t eNextPagingAreaScope, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PagingAttemptInformation( SI_AMF_DT_PagingAttemptInformation ** data);

void __si_amf_debug_PagingAttemptInformation( char * key, SI_AMF_DT_PagingAttemptInformation * data, int lvl);

void __si_amf_memfree_PagingAttemptInformation( SI_AMF_DT_PagingAttemptInformation * data);

int __si_amf_Encode_PagingAttemptInformation( SI_AMF_DT_PagingAttemptInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssistanceDataForPaging( SI_AMF_DT_AssistanceDataForPaging ** data);

void __si_amf_debug_AssistanceDataForPaging( char * key, SI_AMF_DT_AssistanceDataForPaging * data, int lvl);

void __si_amf_memfree_AssistanceDataForPaging( SI_AMF_DT_AssistanceDataForPaging * data);

int __si_amf_Encode_AssistanceDataForPaging( SI_AMF_DT_AssistanceDataForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedMBSQosFlowSetupRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList ** data);

void __si_amf_debug_AssociatedMBSQosFlowSetupRequestList( char * key, SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList * data, int lvl);

void __si_amf_memfree_AssociatedMBSQosFlowSetupRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList * data);

int __si_amf_Encode_AssociatedMBSQosFlowSetupRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QosFlowIdentifier( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_QosFlowIdentifier( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_QosFlowIdentifier( SI_AMF_DT_QosFlowIdentifier * data);


void __si_amf_init_AssociatedMBSQosFlowSetupRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem ** data);

void __si_amf_debug_AssociatedMBSQosFlowSetupRequestItem( char * key, SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem * data, int lvl);

void __si_amf_memfree_AssociatedMBSQosFlowSetupRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem * data);

int __si_amf_Encode_AssociatedMBSQosFlowSetupRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedMBSQosFlowSetuporModifyRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList ** data);

void __si_amf_debug_AssociatedMBSQosFlowSetuporModifyRequestList( char * key, SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList * data, int lvl);

void __si_amf_memfree_AssociatedMBSQosFlowSetuporModifyRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList * data);

int __si_amf_Encode_AssociatedMBSQosFlowSetuporModifyRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedMBSQosFlowSetuporModifyRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem ** data);

void __si_amf_debug_AssociatedMBSQosFlowSetuporModifyRequestItem( char * key, SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem * data, int lvl);

void __si_amf_memfree_AssociatedMBSQosFlowSetuporModifyRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem * data);

int __si_amf_Encode_AssociatedMBSQosFlowSetuporModifyRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedQosFlowList( SI_AMF_DT_AssociatedQosFlowList ** data);

void __si_amf_debug_AssociatedQosFlowList( char * key, SI_AMF_DT_AssociatedQosFlowList * data, int lvl);

void __si_amf_memfree_AssociatedQosFlowList( SI_AMF_DT_AssociatedQosFlowList * data);

int __si_amf_Encode_AssociatedQosFlowList( SI_AMF_DT_AssociatedQosFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AssociatedQosFlowItem_qosFlowMappingIndication( char * key, uint8_t eAssociatedQosFlowItem_qosFlowMappingIndication, int lvl);

int __si_amf_Encode_AssociatedQosFlowItem_qosFlowMappingIndication( uint8_t eAssociatedQosFlowItem_qosFlowMappingIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedQosFlowItem( SI_AMF_DT_AssociatedQosFlowItem ** data);

void __si_amf_debug_AssociatedQosFlowItem( char * key, SI_AMF_DT_AssociatedQosFlowItem * data, int lvl);

void __si_amf_memfree_AssociatedQosFlowItem( SI_AMF_DT_AssociatedQosFlowItem * data);

int __si_amf_Encode_AssociatedQosFlowItem( SI_AMF_DT_AssociatedQosFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AssociatedSessionID( SI_AMF_DT_AssociatedSessionID ** data);

void __si_amf_init_AssociatedSessionID2( SI_AMF_DT_AssociatedSessionID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_AssociatedSessionID( char * key, SI_AMF_DT_AssociatedSessionID * data, int lvl);

void __si_amf_memfree_AssociatedSessionID( SI_AMF_DT_AssociatedSessionID * data);

int __si_amf_Encode_AssociatedSessionID( SI_AMF_DT_AssociatedSessionID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AUN3DeviceAccessInfo_aUN3DeviceAccess( char * key, uint8_t eAUN3DeviceAccessInfo_aUN3DeviceAccess, int lvl);

int __si_amf_Encode_AUN3DeviceAccessInfo_aUN3DeviceAccess( uint8_t eAUN3DeviceAccessInfo_aUN3DeviceAccess, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation( char * key, uint8_t eAUN3DeviceAccessInfo_existingNGConnectionwithSameLocation, int lvl);

int __si_amf_Encode_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation( uint8_t eAUN3DeviceAccessInfo_existingNGConnectionwithSameLocation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AUN3DeviceAccessInfo( SI_AMF_DT_AUN3DeviceAccessInfo ** data);

void __si_amf_debug_AUN3DeviceAccessInfo( char * key, SI_AMF_DT_AUN3DeviceAccessInfo * data, int lvl);

void __si_amf_memfree_AUN3DeviceAccessInfo( SI_AMF_DT_AUN3DeviceAccessInfo * data);

int __si_amf_Encode_AUN3DeviceAccessInfo( SI_AMF_DT_AUN3DeviceAccessInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AuthenticatedIndication( char * key, uint8_t eAuthenticatedIndication, int lvl);

int __si_amf_Encode_AuthenticatedIndication( uint8_t eAuthenticatedIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AveragingWindow( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_AveragingWindow( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_AveragingWindow( SI_AMF_DT_AveragingWindow * data);


void __si_amf_init_CellIdListforMDT_NR( SI_AMF_DT_CellIdListforMDT_NR ** data);

void __si_amf_debug_CellIdListforMDT_NR( char * key, SI_AMF_DT_CellIdListforMDT_NR * data, int lvl);

void __si_amf_memfree_CellIdListforMDT_NR( SI_AMF_DT_CellIdListforMDT_NR * data);

int __si_amf_Encode_CellIdListforMDT_NR( SI_AMF_DT_CellIdListforMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellBasedMDT_NR( SI_AMF_DT_CellBasedMDT_NR ** data);

void __si_amf_debug_CellBasedMDT_NR( char * key, SI_AMF_DT_CellBasedMDT_NR * data, int lvl);

void __si_amf_memfree_CellBasedMDT_NR( SI_AMF_DT_CellBasedMDT_NR * data);

int __si_amf_Encode_CellBasedMDT_NR( SI_AMF_DT_CellBasedMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAListforMDT( SI_AMF_DT_TAListforMDT ** data);

void __si_amf_debug_TAListforMDT( char * key, SI_AMF_DT_TAListforMDT * data, int lvl);

void __si_amf_memfree_TAListforMDT( SI_AMF_DT_TAListforMDT * data);

int __si_amf_Encode_TAListforMDT( SI_AMF_DT_TAListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TABasedMDT( SI_AMF_DT_TABasedMDT ** data);

void __si_amf_debug_TABasedMDT( char * key, SI_AMF_DT_TABasedMDT * data, int lvl);

void __si_amf_memfree_TABasedMDT( SI_AMF_DT_TABasedMDT * data);

int __si_amf_Encode_TABasedMDT( SI_AMF_DT_TABasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListforMDT( SI_AMF_DT_TAIListforMDT ** data);

void __si_amf_debug_TAIListforMDT( char * key, SI_AMF_DT_TAIListforMDT * data, int lvl);

void __si_amf_memfree_TAIListforMDT( SI_AMF_DT_TAIListforMDT * data);

int __si_amf_Encode_TAIListforMDT( SI_AMF_DT_TAIListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBasedMDT( SI_AMF_DT_TAIBasedMDT ** data);

void __si_amf_debug_TAIBasedMDT( char * key, SI_AMF_DT_TAIBasedMDT * data, int lvl);

void __si_amf_memfree_TAIBasedMDT( SI_AMF_DT_TAIBasedMDT * data);

int __si_amf_Encode_TAIBasedMDT( SI_AMF_DT_TAIBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaScopeOfMDT_NR( SI_AMF_DT_AreaScopeOfMDT_NR ** data);

void __si_amf_debug_AreaScopeOfMDT_NR( char * key, SI_AMF_DT_AreaScopeOfMDT_NR * data, int lvl);

void __si_amf_memfree_AreaScopeOfMDT_NR( SI_AMF_DT_AreaScopeOfMDT_NR * data);

int __si_amf_Encode_AreaScopeOfMDT_NR( SI_AMF_DT_AreaScopeOfMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIdListforMDT_EUTRA( SI_AMF_DT_CellIdListforMDT_EUTRA ** data);

void __si_amf_debug_CellIdListforMDT_EUTRA( char * key, SI_AMF_DT_CellIdListforMDT_EUTRA * data, int lvl);

void __si_amf_memfree_CellIdListforMDT_EUTRA( SI_AMF_DT_CellIdListforMDT_EUTRA * data);

int __si_amf_Encode_CellIdListforMDT_EUTRA( SI_AMF_DT_CellIdListforMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellBasedMDT_EUTRA( SI_AMF_DT_CellBasedMDT_EUTRA ** data);

void __si_amf_debug_CellBasedMDT_EUTRA( char * key, SI_AMF_DT_CellBasedMDT_EUTRA * data, int lvl);

void __si_amf_memfree_CellBasedMDT_EUTRA( SI_AMF_DT_CellBasedMDT_EUTRA * data);

int __si_amf_Encode_CellBasedMDT_EUTRA( SI_AMF_DT_CellBasedMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaScopeOfMDT_EUTRA( SI_AMF_DT_AreaScopeOfMDT_EUTRA ** data);

void __si_amf_debug_AreaScopeOfMDT_EUTRA( char * key, SI_AMF_DT_AreaScopeOfMDT_EUTRA * data, int lvl);

void __si_amf_memfree_AreaScopeOfMDT_EUTRA( SI_AMF_DT_AreaScopeOfMDT_EUTRA * data);

int __si_amf_Encode_AreaScopeOfMDT_EUTRA( SI_AMF_DT_AreaScopeOfMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaScopeOfNeighCellsList( SI_AMF_DT_AreaScopeOfNeighCellsList ** data);

void __si_amf_debug_AreaScopeOfNeighCellsList( char * key, SI_AMF_DT_AreaScopeOfNeighCellsList * data, int lvl);

void __si_amf_memfree_AreaScopeOfNeighCellsList( SI_AMF_DT_AreaScopeOfNeighCellsList * data);

int __si_amf_Encode_AreaScopeOfNeighCellsList( SI_AMF_DT_AreaScopeOfNeighCellsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NRARFCN( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NRARFCN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NRARFCN( SI_AMF_DT_NRARFCN * data);


void __si_amf_init_NRFrequencyBand_List( SI_AMF_DT_NRFrequencyBand_List ** data);

void __si_amf_debug_NRFrequencyBand_List( char * key, SI_AMF_DT_NRFrequencyBand_List * data, int lvl);

void __si_amf_memfree_NRFrequencyBand_List( SI_AMF_DT_NRFrequencyBand_List * data);

int __si_amf_Encode_NRFrequencyBand_List( SI_AMF_DT_NRFrequencyBand_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRFrequencyInfo( SI_AMF_DT_NRFrequencyInfo ** data);

void __si_amf_debug_NRFrequencyInfo( char * key, SI_AMF_DT_NRFrequencyInfo * data, int lvl);

void __si_amf_memfree_NRFrequencyInfo( SI_AMF_DT_NRFrequencyInfo * data);

int __si_amf_Encode_NRFrequencyInfo( SI_AMF_DT_NRFrequencyInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PCIListForMDT( SI_AMF_DT_PCIListForMDT ** data);

void __si_amf_debug_PCIListForMDT( char * key, SI_AMF_DT_PCIListForMDT * data, int lvl);

void __si_amf_memfree_PCIListForMDT( SI_AMF_DT_PCIListForMDT * data);

int __si_amf_Encode_PCIListForMDT( SI_AMF_DT_PCIListForMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaScopeOfNeighCellsItem( SI_AMF_DT_AreaScopeOfNeighCellsItem ** data);

void __si_amf_debug_AreaScopeOfNeighCellsItem( char * key, SI_AMF_DT_AreaScopeOfNeighCellsItem * data, int lvl);

void __si_amf_memfree_AreaScopeOfNeighCellsItem( SI_AMF_DT_AreaScopeOfNeighCellsItem * data);

int __si_amf_Encode_AreaScopeOfNeighCellsItem( SI_AMF_DT_AreaScopeOfNeighCellsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIdListforQMC( SI_AMF_DT_CellIdListforQMC ** data);

void __si_amf_debug_CellIdListforQMC( char * key, SI_AMF_DT_CellIdListforQMC * data, int lvl);

void __si_amf_memfree_CellIdListforQMC( SI_AMF_DT_CellIdListforQMC * data);

int __si_amf_Encode_CellIdListforQMC( SI_AMF_DT_CellIdListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellBasedQMC( SI_AMF_DT_CellBasedQMC ** data);

void __si_amf_debug_CellBasedQMC( char * key, SI_AMF_DT_CellBasedQMC * data, int lvl);

void __si_amf_memfree_CellBasedQMC( SI_AMF_DT_CellBasedQMC * data);

int __si_amf_Encode_CellBasedQMC( SI_AMF_DT_CellBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAListforQMC( SI_AMF_DT_TAListforQMC ** data);

void __si_amf_debug_TAListforQMC( char * key, SI_AMF_DT_TAListforQMC * data, int lvl);

void __si_amf_memfree_TAListforQMC( SI_AMF_DT_TAListforQMC * data);

int __si_amf_Encode_TAListforQMC( SI_AMF_DT_TAListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TABasedQMC( SI_AMF_DT_TABasedQMC ** data);

void __si_amf_debug_TABasedQMC( char * key, SI_AMF_DT_TABasedQMC * data, int lvl);

void __si_amf_memfree_TABasedQMC( SI_AMF_DT_TABasedQMC * data);

int __si_amf_Encode_TABasedQMC( SI_AMF_DT_TABasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListforQMC( SI_AMF_DT_TAIListforQMC ** data);

void __si_amf_debug_TAIListforQMC( char * key, SI_AMF_DT_TAIListforQMC * data, int lvl);

void __si_amf_memfree_TAIListforQMC( SI_AMF_DT_TAIListforQMC * data);

int __si_amf_Encode_TAIListforQMC( SI_AMF_DT_TAIListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBasedQMC( SI_AMF_DT_TAIBasedQMC ** data);

void __si_amf_debug_TAIBasedQMC( char * key, SI_AMF_DT_TAIBasedQMC * data, int lvl);

void __si_amf_memfree_TAIBasedQMC( SI_AMF_DT_TAIBasedQMC * data);

int __si_amf_Encode_TAIBasedQMC( SI_AMF_DT_TAIBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PLMNListforQMC( SI_AMF_DT_PLMNListforQMC ** data);

void __si_amf_debug_PLMNListforQMC( char * key, SI_AMF_DT_PLMNListforQMC * data, int lvl);

void __si_amf_memfree_PLMNListforQMC( SI_AMF_DT_PLMNListforQMC * data);

int __si_amf_Encode_PLMNListforQMC( SI_AMF_DT_PLMNListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PLMNAreaBasedQMC( SI_AMF_DT_PLMNAreaBasedQMC ** data);

void __si_amf_debug_PLMNAreaBasedQMC( char * key, SI_AMF_DT_PLMNAreaBasedQMC * data, int lvl);

void __si_amf_memfree_PLMNAreaBasedQMC( SI_AMF_DT_PLMNAreaBasedQMC * data);

int __si_amf_Encode_PLMNAreaBasedQMC( SI_AMF_DT_PLMNAreaBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AreaScopeOfQMC( SI_AMF_DT_AreaScopeOfQMC ** data);

void __si_amf_debug_AreaScopeOfQMC( char * key, SI_AMF_DT_AreaScopeOfQMC * data, int lvl);

void __si_amf_memfree_AreaScopeOfQMC( SI_AMF_DT_AreaScopeOfQMC * data);

int __si_amf_Encode_AreaScopeOfQMC( SI_AMF_DT_AreaScopeOfQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList( char * key, uint8_t eAvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList, int lvl);

int __si_amf_Encode_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList( uint8_t eAvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup( char * key, uint8_t eAvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup, int lvl);

int __si_amf_Encode_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup( uint8_t eAvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AvailableRANVisibleQoEMetrics( SI_AMF_DT_AvailableRANVisibleQoEMetrics ** data);

void __si_amf_debug_AvailableRANVisibleQoEMetrics( char * key, SI_AMF_DT_AvailableRANVisibleQoEMetrics * data, int lvl);

void __si_amf_memfree_AvailableRANVisibleQoEMetrics( SI_AMF_DT_AvailableRANVisibleQoEMetrics * data);

int __si_amf_Encode_AvailableRANVisibleQoEMetrics( SI_AMF_DT_AvailableRANVisibleQoEMetrics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BeamMeasurementsReportQuantity_rSRP( char * key, uint8_t eBeamMeasurementsReportQuantity_rSRP, int lvl);

int __si_amf_Encode_BeamMeasurementsReportQuantity_rSRP( uint8_t eBeamMeasurementsReportQuantity_rSRP, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BeamMeasurementsReportQuantity_rSRQ( char * key, uint8_t eBeamMeasurementsReportQuantity_rSRQ, int lvl);

int __si_amf_Encode_BeamMeasurementsReportQuantity_rSRQ( uint8_t eBeamMeasurementsReportQuantity_rSRQ, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BeamMeasurementsReportQuantity_sINR( char * key, uint8_t eBeamMeasurementsReportQuantity_sINR, int lvl);

int __si_amf_Encode_BeamMeasurementsReportQuantity_sINR( uint8_t eBeamMeasurementsReportQuantity_sINR, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BeamMeasurementsReportQuantity( SI_AMF_DT_BeamMeasurementsReportQuantity ** data);

void __si_amf_debug_BeamMeasurementsReportQuantity( char * key, SI_AMF_DT_BeamMeasurementsReportQuantity * data, int lvl);

void __si_amf_memfree_BeamMeasurementsReportQuantity( SI_AMF_DT_BeamMeasurementsReportQuantity * data);

int __si_amf_Encode_BeamMeasurementsReportQuantity( SI_AMF_DT_BeamMeasurementsReportQuantity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MaxNrofRS_IndexesToReport( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MaxNrofRS_IndexesToReport( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MaxNrofRS_IndexesToReport( SI_AMF_DT_MaxNrofRS_IndexesToReport * data);


void __si_amf_init_BeamMeasurementsReportConfiguration( SI_AMF_DT_BeamMeasurementsReportConfiguration ** data);

void __si_amf_debug_BeamMeasurementsReportConfiguration( char * key, SI_AMF_DT_BeamMeasurementsReportConfiguration * data, int lvl);

void __si_amf_memfree_BeamMeasurementsReportConfiguration( SI_AMF_DT_BeamMeasurementsReportConfiguration * data);

int __si_amf_Encode_BeamMeasurementsReportConfiguration( SI_AMF_DT_BeamMeasurementsReportConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDCancelledEUTRA( SI_AMF_DT_CellIDCancelledEUTRA ** data);

void __si_amf_debug_CellIDCancelledEUTRA( char * key, SI_AMF_DT_CellIDCancelledEUTRA * data, int lvl);

void __si_amf_memfree_CellIDCancelledEUTRA( SI_AMF_DT_CellIDCancelledEUTRA * data);

int __si_amf_Encode_CellIDCancelledEUTRA( SI_AMF_DT_CellIDCancelledEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAICancelledEUTRA( SI_AMF_DT_TAICancelledEUTRA ** data);

void __si_amf_debug_TAICancelledEUTRA( char * key, SI_AMF_DT_TAICancelledEUTRA * data, int lvl);

void __si_amf_memfree_TAICancelledEUTRA( SI_AMF_DT_TAICancelledEUTRA * data);

int __si_amf_Encode_TAICancelledEUTRA( SI_AMF_DT_TAICancelledEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDCancelledEUTRA( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA ** data);

void __si_amf_debug_EmergencyAreaIDCancelledEUTRA( char * key, SI_AMF_DT_EmergencyAreaIDCancelledEUTRA * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDCancelledEUTRA( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA * data);

int __si_amf_Encode_EmergencyAreaIDCancelledEUTRA( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDCancelledNR( SI_AMF_DT_CellIDCancelledNR ** data);

void __si_amf_debug_CellIDCancelledNR( char * key, SI_AMF_DT_CellIDCancelledNR * data, int lvl);

void __si_amf_memfree_CellIDCancelledNR( SI_AMF_DT_CellIDCancelledNR * data);

int __si_amf_Encode_CellIDCancelledNR( SI_AMF_DT_CellIDCancelledNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAICancelledNR( SI_AMF_DT_TAICancelledNR ** data);

void __si_amf_debug_TAICancelledNR( char * key, SI_AMF_DT_TAICancelledNR * data, int lvl);

void __si_amf_memfree_TAICancelledNR( SI_AMF_DT_TAICancelledNR * data);

int __si_amf_Encode_TAICancelledNR( SI_AMF_DT_TAICancelledNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDCancelledNR( SI_AMF_DT_EmergencyAreaIDCancelledNR ** data);

void __si_amf_debug_EmergencyAreaIDCancelledNR( char * key, SI_AMF_DT_EmergencyAreaIDCancelledNR * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDCancelledNR( SI_AMF_DT_EmergencyAreaIDCancelledNR * data);

int __si_amf_Encode_EmergencyAreaIDCancelledNR( SI_AMF_DT_EmergencyAreaIDCancelledNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastCancelledAreaList( SI_AMF_DT_BroadcastCancelledAreaList ** data);

void __si_amf_debug_BroadcastCancelledAreaList( char * key, SI_AMF_DT_BroadcastCancelledAreaList * data, int lvl);

void __si_amf_memfree_BroadcastCancelledAreaList( SI_AMF_DT_BroadcastCancelledAreaList * data);

int __si_amf_Encode_BroadcastCancelledAreaList( SI_AMF_DT_BroadcastCancelledAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDBroadcastEUTRA( SI_AMF_DT_CellIDBroadcastEUTRA ** data);

void __si_amf_debug_CellIDBroadcastEUTRA( char * key, SI_AMF_DT_CellIDBroadcastEUTRA * data, int lvl);

void __si_amf_memfree_CellIDBroadcastEUTRA( SI_AMF_DT_CellIDBroadcastEUTRA * data);

int __si_amf_Encode_CellIDBroadcastEUTRA( SI_AMF_DT_CellIDBroadcastEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBroadcastEUTRA( SI_AMF_DT_TAIBroadcastEUTRA ** data);

void __si_amf_debug_TAIBroadcastEUTRA( char * key, SI_AMF_DT_TAIBroadcastEUTRA * data, int lvl);

void __si_amf_memfree_TAIBroadcastEUTRA( SI_AMF_DT_TAIBroadcastEUTRA * data);

int __si_amf_Encode_TAIBroadcastEUTRA( SI_AMF_DT_TAIBroadcastEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDBroadcastEUTRA( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA ** data);

void __si_amf_debug_EmergencyAreaIDBroadcastEUTRA( char * key, SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDBroadcastEUTRA( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA * data);

int __si_amf_Encode_EmergencyAreaIDBroadcastEUTRA( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDBroadcastNR( SI_AMF_DT_CellIDBroadcastNR ** data);

void __si_amf_debug_CellIDBroadcastNR( char * key, SI_AMF_DT_CellIDBroadcastNR * data, int lvl);

void __si_amf_memfree_CellIDBroadcastNR( SI_AMF_DT_CellIDBroadcastNR * data);

int __si_amf_Encode_CellIDBroadcastNR( SI_AMF_DT_CellIDBroadcastNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBroadcastNR( SI_AMF_DT_TAIBroadcastNR ** data);

void __si_amf_debug_TAIBroadcastNR( char * key, SI_AMF_DT_TAIBroadcastNR * data, int lvl);

void __si_amf_memfree_TAIBroadcastNR( SI_AMF_DT_TAIBroadcastNR * data);

int __si_amf_Encode_TAIBroadcastNR( SI_AMF_DT_TAIBroadcastNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDBroadcastNR( SI_AMF_DT_EmergencyAreaIDBroadcastNR ** data);

void __si_amf_debug_EmergencyAreaIDBroadcastNR( char * key, SI_AMF_DT_EmergencyAreaIDBroadcastNR * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDBroadcastNR( SI_AMF_DT_EmergencyAreaIDBroadcastNR * data);

int __si_amf_Encode_EmergencyAreaIDBroadcastNR( SI_AMF_DT_EmergencyAreaIDBroadcastNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastCompletedAreaList( SI_AMF_DT_BroadcastCompletedAreaList ** data);

void __si_amf_debug_BroadcastCompletedAreaList( char * key, SI_AMF_DT_BroadcastCompletedAreaList * data, int lvl);

void __si_amf_memfree_BroadcastCompletedAreaList( SI_AMF_DT_BroadcastCompletedAreaList * data);

int __si_amf_Encode_BroadcastCompletedAreaList( SI_AMF_DT_BroadcastCompletedAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastPLMNList( SI_AMF_DT_BroadcastPLMNList ** data);

void __si_amf_debug_BroadcastPLMNList( char * key, SI_AMF_DT_BroadcastPLMNList * data, int lvl);

void __si_amf_memfree_BroadcastPLMNList( SI_AMF_DT_BroadcastPLMNList * data);

int __si_amf_Encode_BroadcastPLMNList( SI_AMF_DT_BroadcastPLMNList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SliceSupportList( SI_AMF_DT_SliceSupportList ** data);

void __si_amf_debug_SliceSupportList( char * key, SI_AMF_DT_SliceSupportList * data, int lvl);

void __si_amf_memfree_SliceSupportList( SI_AMF_DT_SliceSupportList * data);

int __si_amf_Encode_SliceSupportList( SI_AMF_DT_SliceSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastPLMNItem( SI_AMF_DT_BroadcastPLMNItem ** data);

void __si_amf_debug_BroadcastPLMNItem( char * key, SI_AMF_DT_BroadcastPLMNItem * data, int lvl);

void __si_amf_memfree_BroadcastPLMNItem( SI_AMF_DT_BroadcastPLMNItem * data);

int __si_amf_Encode_BroadcastPLMNItem( SI_AMF_DT_BroadcastPLMNItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TMGI( SI_AMF_DT_TMGI ** data);

void __si_amf_init_TMGI2( SI_AMF_DT_TMGI ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TMGI( char * key, SI_AMF_DT_TMGI * data, int lvl);

void __si_amf_memfree_TMGI( SI_AMF_DT_TMGI * data);

int __si_amf_Encode_TMGI( SI_AMF_DT_TMGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NID( SI_AMF_DT_NID ** data);

void __si_amf_init_NID2( SI_AMF_DT_NID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NID( char * key, SI_AMF_DT_NID * data, int lvl);

void __si_amf_memfree_NID( SI_AMF_DT_NID * data);

int __si_amf_Encode_NID( SI_AMF_DT_NID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionID( SI_AMF_DT_MBS_SessionID ** data);

void __si_amf_debug_MBS_SessionID( char * key, SI_AMF_DT_MBS_SessionID * data, int lvl);

void __si_amf_memfree_MBS_SessionID( SI_AMF_DT_MBS_SessionID * data);

int __si_amf_Encode_MBS_SessionID( SI_AMF_DT_MBS_SessionID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CauseRadioNetwork( char * key, uint8_t eCauseRadioNetwork, int lvl);

int __si_amf_Encode_CauseRadioNetwork( uint8_t eCauseRadioNetwork, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CauseTransport( char * key, uint8_t eCauseTransport, int lvl);

int __si_amf_Encode_CauseTransport( uint8_t eCauseTransport, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CauseNas( char * key, uint8_t eCauseNas, int lvl);

int __si_amf_Encode_CauseNas( uint8_t eCauseNas, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CauseProtocol( char * key, uint8_t eCauseProtocol, int lvl);

int __si_amf_Encode_CauseProtocol( uint8_t eCauseProtocol, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CauseMisc( char * key, uint8_t eCauseMisc, int lvl);

int __si_amf_Encode_CauseMisc( uint8_t eCauseMisc, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Cause( SI_AMF_DT_Cause ** data);

void __si_amf_debug_Cause( char * key, SI_AMF_DT_Cause * data, int lvl);

void __si_amf_memfree_Cause( SI_AMF_DT_Cause * data);

int __si_amf_Encode_Cause( SI_AMF_DT_Cause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CriticalityDiagnostics_IE_List( SI_AMF_DT_CriticalityDiagnostics_IE_List ** data);

void __si_amf_debug_CriticalityDiagnostics_IE_List( char * key, SI_AMF_DT_CriticalityDiagnostics_IE_List * data, int lvl);

void __si_amf_memfree_CriticalityDiagnostics_IE_List( SI_AMF_DT_CriticalityDiagnostics_IE_List * data);

int __si_amf_Encode_CriticalityDiagnostics_IE_List( SI_AMF_DT_CriticalityDiagnostics_IE_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CriticalityDiagnostics( SI_AMF_DT_CriticalityDiagnostics ** data);

void __si_amf_debug_CriticalityDiagnostics( char * key, SI_AMF_DT_CriticalityDiagnostics * data, int lvl);

void __si_amf_memfree_CriticalityDiagnostics( SI_AMF_DT_CriticalityDiagnostics * data);

int __si_amf_Encode_CriticalityDiagnostics( SI_AMF_DT_CriticalityDiagnostics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastTransportFailureTransfer( SI_AMF_DT_BroadcastTransportFailureTransfer ** data);

void __si_amf_debug_BroadcastTransportFailureTransfer( char * key, SI_AMF_DT_BroadcastTransportFailureTransfer * data, int lvl);

void __si_amf_memfree_BroadcastTransportFailureTransfer( SI_AMF_DT_BroadcastTransportFailureTransfer * data);

int __si_amf_Encode_BroadcastTransportFailureTransfer( SI_AMF_DT_BroadcastTransportFailureTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfoNGRANList( SI_AMF_DT_MBS_SessionTNLInfoNGRANList ** data);

void __si_amf_debug_MBS_SessionTNLInfoNGRANList( char * key, SI_AMF_DT_MBS_SessionTNLInfoNGRANList * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfoNGRANList( SI_AMF_DT_MBS_SessionTNLInfoNGRANList * data);

int __si_amf_Encode_MBS_SessionTNLInfoNGRANList( SI_AMF_DT_MBS_SessionTNLInfoNGRANList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfoNGRAN( SI_AMF_DT_MBS_SessionTNLInfoNGRAN ** data);

void __si_amf_debug_MBS_SessionTNLInfoNGRAN( char * key, SI_AMF_DT_MBS_SessionTNLInfoNGRAN * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfoNGRAN( SI_AMF_DT_MBS_SessionTNLInfoNGRAN * data);

int __si_amf_Encode_MBS_SessionTNLInfoNGRAN( SI_AMF_DT_MBS_SessionTNLInfoNGRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastTransportRequestTransfer( SI_AMF_DT_BroadcastTransportRequestTransfer ** data);

void __si_amf_debug_BroadcastTransportRequestTransfer( char * key, SI_AMF_DT_BroadcastTransportRequestTransfer * data, int lvl);

void __si_amf_memfree_BroadcastTransportRequestTransfer( SI_AMF_DT_BroadcastTransportRequestTransfer * data);

int __si_amf_Encode_BroadcastTransportRequestTransfer( SI_AMF_DT_BroadcastTransportRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BroadcastTransportResponseTransfer( SI_AMF_DT_BroadcastTransportResponseTransfer ** data);

void __si_amf_debug_BroadcastTransportResponseTransfer( char * key, SI_AMF_DT_BroadcastTransportResponseTransfer * data, int lvl);

void __si_amf_memfree_BroadcastTransportResponseTransfer( SI_AMF_DT_BroadcastTransportResponseTransfer * data);

int __si_amf_Encode_BroadcastTransportResponseTransfer( SI_AMF_DT_BroadcastTransportResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BluetoothMeasurementConfiguration_bt_rssi( char * key, uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int lvl);

int __si_amf_Encode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BluetoothMeasConfig( char * key, uint8_t eBluetoothMeasConfig, int lvl);

int __si_amf_Encode_BluetoothMeasConfig( uint8_t eBluetoothMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BluetoothMeasConfigNameList( SI_AMF_DT_BluetoothMeasConfigNameList ** data);

void __si_amf_debug_BluetoothMeasConfigNameList( char * key, SI_AMF_DT_BluetoothMeasConfigNameList * data, int lvl);

void __si_amf_memfree_BluetoothMeasConfigNameList( SI_AMF_DT_BluetoothMeasConfigNameList * data);

int __si_amf_Encode_BluetoothMeasConfigNameList( SI_AMF_DT_BluetoothMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BluetoothMeasurementConfiguration( SI_AMF_DT_BluetoothMeasurementConfiguration ** data);

void __si_amf_debug_BluetoothMeasurementConfiguration( char * key, SI_AMF_DT_BluetoothMeasurementConfiguration * data, int lvl);

void __si_amf_memfree_BluetoothMeasurementConfiguration( SI_AMF_DT_BluetoothMeasurementConfiguration * data);

int __si_amf_Encode_BluetoothMeasurementConfiguration( SI_AMF_DT_BluetoothMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BluetoothName( SI_AMF_DT_BluetoothName ** data);

void __si_amf_init_BluetoothName2( SI_AMF_DT_BluetoothName ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_BluetoothName( char * key, SI_AMF_DT_BluetoothName * data, int lvl);

void __si_amf_memfree_BluetoothName( SI_AMF_DT_BluetoothName * data);

int __si_amf_Encode_BluetoothName( SI_AMF_DT_BluetoothName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BluetoothMeasConfigNameItem( SI_AMF_DT_BluetoothMeasConfigNameItem ** data);

void __si_amf_debug_BluetoothMeasConfigNameItem( char * key, SI_AMF_DT_BluetoothMeasConfigNameItem * data, int lvl);

void __si_amf_memfree_BluetoothMeasConfigNameItem( SI_AMF_DT_BluetoothMeasConfigNameItem * data);

int __si_amf_Encode_BluetoothMeasConfigNameItem( SI_AMF_DT_BluetoothMeasConfigNameItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_BurstArrivalTime( SI_AMF_DT_BurstArrivalTime ** data);

void __si_amf_init_BurstArrivalTime2( SI_AMF_DT_BurstArrivalTime ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_BurstArrivalTime( char * key, SI_AMF_DT_BurstArrivalTime * data, int lvl);

void __si_amf_memfree_BurstArrivalTime( SI_AMF_DT_BurstArrivalTime * data);

int __si_amf_Encode_BurstArrivalTime( SI_AMF_DT_BurstArrivalTime * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_BurstArrivalTimeWindow_burstArrivalTimeWindowStart( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_BurstArrivalTimeWindow_burstArrivalTimeWindowStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_BurstArrivalTimeWindow_burstArrivalTimeWindowStart( SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowStart * data);


void __si_amf_debug_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd( SI_AMF_DT_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd * data);


void __si_amf_init_BurstArrivalTimeWindow( SI_AMF_DT_BurstArrivalTimeWindow ** data);

void __si_amf_debug_BurstArrivalTimeWindow( char * key, SI_AMF_DT_BurstArrivalTimeWindow * data, int lvl);

void __si_amf_memfree_BurstArrivalTimeWindow( SI_AMF_DT_BurstArrivalTimeWindow * data);

int __si_amf_Encode_BurstArrivalTimeWindow( SI_AMF_DT_BurstArrivalTimeWindow * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CAG_ID( SI_AMF_DT_CAG_ID ** data);

void __si_amf_init_CAG_ID2( SI_AMF_DT_CAG_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_CAG_ID( char * key, SI_AMF_DT_CAG_ID * data, int lvl);

void __si_amf_memfree_CAG_ID( SI_AMF_DT_CAG_ID * data);

int __si_amf_Encode_CAG_ID( SI_AMF_DT_CAG_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateRelayUEInformationList( SI_AMF_DT_CandidateRelayUEInformationList ** data);

void __si_amf_debug_CandidateRelayUEInformationList( char * key, SI_AMF_DT_CandidateRelayUEInformationList * data, int lvl);

void __si_amf_memfree_CandidateRelayUEInformationList( SI_AMF_DT_CandidateRelayUEInformationList * data);

int __si_amf_Encode_CandidateRelayUEInformationList( SI_AMF_DT_CandidateRelayUEInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateRelayUE_ID( SI_AMF_DT_CandidateRelayUE_ID ** data);

void __si_amf_init_CandidateRelayUE_ID2( SI_AMF_DT_CandidateRelayUE_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_CandidateRelayUE_ID( char * key, SI_AMF_DT_CandidateRelayUE_ID * data, int lvl);

void __si_amf_memfree_CandidateRelayUE_ID( SI_AMF_DT_CandidateRelayUE_ID * data);

int __si_amf_Encode_CandidateRelayUE_ID( SI_AMF_DT_CandidateRelayUE_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateRelayUEInformationItem( SI_AMF_DT_CandidateRelayUEInformationItem ** data);

void __si_amf_debug_CandidateRelayUEInformationItem( char * key, SI_AMF_DT_CandidateRelayUEInformationItem * data, int lvl);

void __si_amf_memfree_CandidateRelayUEInformationItem( SI_AMF_DT_CandidateRelayUEInformationItem * data);

int __si_amf_Encode_CandidateRelayUEInformationItem( SI_AMF_DT_CandidateRelayUEInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CancelAllWarningMessages( char * key, uint8_t eCancelAllWarningMessages, int lvl);

int __si_amf_Encode_CancelAllWarningMessages( uint8_t eCancelAllWarningMessages, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInEAI_EUTRA( SI_AMF_DT_CancelledCellsInEAI_EUTRA ** data);

void __si_amf_debug_CancelledCellsInEAI_EUTRA( char * key, SI_AMF_DT_CancelledCellsInEAI_EUTRA * data, int lvl);

void __si_amf_memfree_CancelledCellsInEAI_EUTRA( SI_AMF_DT_CancelledCellsInEAI_EUTRA * data);

int __si_amf_Encode_CancelledCellsInEAI_EUTRA( SI_AMF_DT_CancelledCellsInEAI_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NumberOfBroadcasts( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NumberOfBroadcasts( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NumberOfBroadcasts( SI_AMF_DT_NumberOfBroadcasts * data);


void __si_amf_init_CancelledCellsInEAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item ** data);

void __si_amf_debug_CancelledCellsInEAI_EUTRA_Item( char * key, SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item * data, int lvl);

void __si_amf_memfree_CancelledCellsInEAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item * data);

int __si_amf_Encode_CancelledCellsInEAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInEAI_NR( SI_AMF_DT_CancelledCellsInEAI_NR ** data);

void __si_amf_debug_CancelledCellsInEAI_NR( char * key, SI_AMF_DT_CancelledCellsInEAI_NR * data, int lvl);

void __si_amf_memfree_CancelledCellsInEAI_NR( SI_AMF_DT_CancelledCellsInEAI_NR * data);

int __si_amf_Encode_CancelledCellsInEAI_NR( SI_AMF_DT_CancelledCellsInEAI_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInEAI_NR_Item( SI_AMF_DT_CancelledCellsInEAI_NR_Item ** data);

void __si_amf_debug_CancelledCellsInEAI_NR_Item( char * key, SI_AMF_DT_CancelledCellsInEAI_NR_Item * data, int lvl);

void __si_amf_memfree_CancelledCellsInEAI_NR_Item( SI_AMF_DT_CancelledCellsInEAI_NR_Item * data);

int __si_amf_Encode_CancelledCellsInEAI_NR_Item( SI_AMF_DT_CancelledCellsInEAI_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInTAI_EUTRA( SI_AMF_DT_CancelledCellsInTAI_EUTRA ** data);

void __si_amf_debug_CancelledCellsInTAI_EUTRA( char * key, SI_AMF_DT_CancelledCellsInTAI_EUTRA * data, int lvl);

void __si_amf_memfree_CancelledCellsInTAI_EUTRA( SI_AMF_DT_CancelledCellsInTAI_EUTRA * data);

int __si_amf_Encode_CancelledCellsInTAI_EUTRA( SI_AMF_DT_CancelledCellsInTAI_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInTAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item ** data);

void __si_amf_debug_CancelledCellsInTAI_EUTRA_Item( char * key, SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item * data, int lvl);

void __si_amf_memfree_CancelledCellsInTAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item * data);

int __si_amf_Encode_CancelledCellsInTAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInTAI_NR( SI_AMF_DT_CancelledCellsInTAI_NR ** data);

void __si_amf_debug_CancelledCellsInTAI_NR( char * key, SI_AMF_DT_CancelledCellsInTAI_NR * data, int lvl);

void __si_amf_memfree_CancelledCellsInTAI_NR( SI_AMF_DT_CancelledCellsInTAI_NR * data);

int __si_amf_Encode_CancelledCellsInTAI_NR( SI_AMF_DT_CancelledCellsInTAI_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CancelledCellsInTAI_NR_Item( SI_AMF_DT_CancelledCellsInTAI_NR_Item ** data);

void __si_amf_debug_CancelledCellsInTAI_NR_Item( char * key, SI_AMF_DT_CancelledCellsInTAI_NR_Item * data, int lvl);

void __si_amf_memfree_CancelledCellsInTAI_NR_Item( SI_AMF_DT_CancelledCellsInTAI_NR_Item * data);

int __si_amf_Encode_CancelledCellsInTAI_NR_Item( SI_AMF_DT_CancelledCellsInTAI_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateCellList( SI_AMF_DT_CandidateCellList ** data);

void __si_amf_debug_CandidateCellList( char * key, SI_AMF_DT_CandidateCellList * data, int lvl);

void __si_amf_memfree_CandidateCellList( SI_AMF_DT_CandidateCellList * data);

int __si_amf_Encode_CandidateCellList( SI_AMF_DT_CandidateCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateCellID( SI_AMF_DT_CandidateCellID ** data);

void __si_amf_debug_CandidateCellID( char * key, SI_AMF_DT_CandidateCellID * data, int lvl);

void __si_amf_memfree_CandidateCellID( SI_AMF_DT_CandidateCellID * data);

int __si_amf_Encode_CandidateCellID( SI_AMF_DT_CandidateCellID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CandidatePCI_candidatePCI( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_CandidatePCI_candidatePCI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_CandidatePCI_candidatePCI( SI_AMF_DT_CandidatePCI_candidatePCI * data);


void __si_amf_debug_CandidatePCI_candidateNRARFCN( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_CandidatePCI_candidateNRARFCN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_CandidatePCI_candidateNRARFCN( SI_AMF_DT_CandidatePCI_candidateNRARFCN * data);


void __si_amf_init_CandidatePCI( SI_AMF_DT_CandidatePCI ** data);

void __si_amf_debug_CandidatePCI( char * key, SI_AMF_DT_CandidatePCI * data, int lvl);

void __si_amf_memfree_CandidatePCI( SI_AMF_DT_CandidatePCI * data);

int __si_amf_Encode_CandidatePCI( SI_AMF_DT_CandidatePCI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateCell( SI_AMF_DT_CandidateCell ** data);

void __si_amf_debug_CandidateCell( char * key, SI_AMF_DT_CandidateCell * data, int lvl);

void __si_amf_memfree_CandidateCell( SI_AMF_DT_CandidateCell * data);

int __si_amf_Encode_CandidateCell( SI_AMF_DT_CandidateCell * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CandidateCellItem( SI_AMF_DT_CandidateCellItem ** data);

void __si_amf_debug_CandidateCellItem( char * key, SI_AMF_DT_CandidateCellItem * data, int lvl);

void __si_amf_memfree_CandidateCellItem( SI_AMF_DT_CandidateCellItem * data);

int __si_amf_Encode_CandidateCellItem( SI_AMF_DT_CandidateCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellCAGList( SI_AMF_DT_CellCAGList ** data);

void __si_amf_debug_CellCAGList( char * key, SI_AMF_DT_CellCAGList * data, int lvl);

void __si_amf_memfree_CellCAGList( SI_AMF_DT_CellCAGList * data);

int __si_amf_Encode_CellCAGList( SI_AMF_DT_CellCAGList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Cell_CAGInformation( SI_AMF_DT_Cell_CAGInformation ** data);

void __si_amf_debug_Cell_CAGInformation( char * key, SI_AMF_DT_Cell_CAGInformation * data, int lvl);

void __si_amf_memfree_Cell_CAGInformation( SI_AMF_DT_Cell_CAGInformation * data);

int __si_amf_Encode_Cell_CAGInformation( SI_AMF_DT_Cell_CAGInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDBroadcastEUTRA_Item( SI_AMF_DT_CellIDBroadcastEUTRA_Item ** data);

void __si_amf_debug_CellIDBroadcastEUTRA_Item( char * key, SI_AMF_DT_CellIDBroadcastEUTRA_Item * data, int lvl);

void __si_amf_memfree_CellIDBroadcastEUTRA_Item( SI_AMF_DT_CellIDBroadcastEUTRA_Item * data);

int __si_amf_Encode_CellIDBroadcastEUTRA_Item( SI_AMF_DT_CellIDBroadcastEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDBroadcastNR_Item( SI_AMF_DT_CellIDBroadcastNR_Item ** data);

void __si_amf_debug_CellIDBroadcastNR_Item( char * key, SI_AMF_DT_CellIDBroadcastNR_Item * data, int lvl);

void __si_amf_memfree_CellIDBroadcastNR_Item( SI_AMF_DT_CellIDBroadcastNR_Item * data);

int __si_amf_Encode_CellIDBroadcastNR_Item( SI_AMF_DT_CellIDBroadcastNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDCancelledEUTRA_Item( SI_AMF_DT_CellIDCancelledEUTRA_Item ** data);

void __si_amf_debug_CellIDCancelledEUTRA_Item( char * key, SI_AMF_DT_CellIDCancelledEUTRA_Item * data, int lvl);

void __si_amf_memfree_CellIDCancelledEUTRA_Item( SI_AMF_DT_CellIDCancelledEUTRA_Item * data);

int __si_amf_Encode_CellIDCancelledEUTRA_Item( SI_AMF_DT_CellIDCancelledEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDCancelledNR_Item( SI_AMF_DT_CellIDCancelledNR_Item ** data);

void __si_amf_debug_CellIDCancelledNR_Item( char * key, SI_AMF_DT_CellIDCancelledNR_Item * data, int lvl);

void __si_amf_memfree_CellIDCancelledNR_Item( SI_AMF_DT_CellIDCancelledNR_Item * data);

int __si_amf_Encode_CellIDCancelledNR_Item( SI_AMF_DT_CellIDCancelledNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRA_CGIList( SI_AMF_DT_EUTRA_CGIList ** data);

void __si_amf_debug_EUTRA_CGIList( char * key, SI_AMF_DT_EUTRA_CGIList * data, int lvl);

void __si_amf_memfree_EUTRA_CGIList( SI_AMF_DT_EUTRA_CGIList * data);

int __si_amf_Encode_EUTRA_CGIList( SI_AMF_DT_EUTRA_CGIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_CGIList( SI_AMF_DT_NR_CGIList ** data);

void __si_amf_debug_NR_CGIList( char * key, SI_AMF_DT_NR_CGIList * data, int lvl);

void __si_amf_memfree_NR_CGIList( SI_AMF_DT_NR_CGIList * data);

int __si_amf_Encode_NR_CGIList( SI_AMF_DT_NR_CGIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellIDListForRestart( SI_AMF_DT_CellIDListForRestart ** data);

void __si_amf_debug_CellIDListForRestart( char * key, SI_AMF_DT_CellIDListForRestart * data, int lvl);

void __si_amf_memfree_CellIDListForRestart( SI_AMF_DT_CellIDListForRestart * data);

int __si_amf_Encode_CellIDListForRestart( SI_AMF_DT_CellIDListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CellSize( char * key, uint8_t eCellSize, int lvl);

int __si_amf_Encode_CellSize( uint8_t eCellSize, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CellType( SI_AMF_DT_CellType ** data);

void __si_amf_debug_CellType( char * key, SI_AMF_DT_CellType * data, int lvl);

void __si_amf_memfree_CellType( SI_AMF_DT_CellType * data);

int __si_amf_Encode_CellType( SI_AMF_DT_CellType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CEmodeBSupport_Indicator( char * key, uint8_t eCEmodeBSupport_Indicator, int lvl);

int __si_amf_Encode_CEmodeBSupport_Indicator( uint8_t eCEmodeBSupport_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CEmodeBrestricted( char * key, uint8_t eCEmodeBrestricted, int lvl);

int __si_amf_Encode_CEmodeBrestricted( uint8_t eCEmodeBrestricted, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ClockAccuracy_clockAccuracyValue( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ClockAccuracy_clockAccuracyValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ClockAccuracy_clockAccuracyValue( SI_AMF_DT_ClockAccuracy_clockAccuracyValue * data);


void __si_amf_debug_ClockAccuracy_clockAccuracyIndex( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ClockAccuracy_clockAccuracyIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ClockAccuracy_clockAccuracyIndex( SI_AMF_DT_ClockAccuracy_clockAccuracyIndex * data);


void __si_amf_init_ClockAccuracy( SI_AMF_DT_ClockAccuracy ** data);

void __si_amf_debug_ClockAccuracy( char * key, SI_AMF_DT_ClockAccuracy * data, int lvl);

void __si_amf_memfree_ClockAccuracy( SI_AMF_DT_ClockAccuracy * data);

int __si_amf_Encode_ClockAccuracy( SI_AMF_DT_ClockAccuracy * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityAcceptanceCriteria_synchronisationState( SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data);

void __si_amf_init_ClockQualityAcceptanceCriteria_synchronisationState2( SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ClockQualityAcceptanceCriteria_synchronisationState( char * key, SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState * data, int lvl);

void __si_amf_memfree_ClockQualityAcceptanceCriteria_synchronisationState( SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState * data);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_synchronisationState( SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ClockQualityAcceptanceCriteria_traceabletoUTC( char * key, uint8_t eClockQualityAcceptanceCriteria_traceabletoUTC, int lvl);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_traceabletoUTC( uint8_t eClockQualityAcceptanceCriteria_traceabletoUTC, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ClockQualityAcceptanceCriteria_traceabletoGNSS( char * key, uint8_t eClockQualityAcceptanceCriteria_traceabletoGNSS, int lvl);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_traceabletoGNSS( uint8_t eClockQualityAcceptanceCriteria_traceabletoGNSS, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data);

void __si_amf_init_ClockQualityAcceptanceCriteria_clockFrequencyStability2( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ClockQualityAcceptanceCriteria_clockFrequencyStability( char * key, SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data, int lvl);

void __si_amf_memfree_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ClockQualityAcceptanceCriteria_clockAccuracy( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_clockAccuracy( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ClockQualityAcceptanceCriteria_clockAccuracy( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockAccuracy * data);


void __si_amf_init_ClockQualityAcceptanceCriteria_parentTImeSource( SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource ** data);

void __si_amf_init_ClockQualityAcceptanceCriteria_parentTImeSource2( SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ClockQualityAcceptanceCriteria_parentTImeSource( char * key, SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource * data, int lvl);

void __si_amf_memfree_ClockQualityAcceptanceCriteria_parentTImeSource( SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource * data);

int __si_amf_Encode_ClockQualityAcceptanceCriteria_parentTImeSource( SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityAcceptanceCriteria( SI_AMF_DT_ClockQualityAcceptanceCriteria ** data);

void __si_amf_debug_ClockQualityAcceptanceCriteria( char * key, SI_AMF_DT_ClockQualityAcceptanceCriteria * data, int lvl);

void __si_amf_memfree_ClockQualityAcceptanceCriteria( SI_AMF_DT_ClockQualityAcceptanceCriteria * data);

int __si_amf_Encode_ClockQualityAcceptanceCriteria( SI_AMF_DT_ClockQualityAcceptanceCriteria * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityAcceptanceIndication( SI_AMF_DT_ClockQualityAcceptanceIndication ** data);

void __si_amf_debug_ClockQualityAcceptanceIndication( char * key, SI_AMF_DT_ClockQualityAcceptanceIndication * data, int lvl);

void __si_amf_memfree_ClockQualityAcceptanceIndication( SI_AMF_DT_ClockQualityAcceptanceIndication * data);

int __si_amf_Encode_ClockQualityAcceptanceIndication( SI_AMF_DT_ClockQualityAcceptanceIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityDetailLevel( SI_AMF_DT_ClockQualityDetailLevel ** data);

void __si_amf_debug_ClockQualityDetailLevel( char * key, SI_AMF_DT_ClockQualityDetailLevel * data, int lvl);

void __si_amf_memfree_ClockQualityDetailLevel( SI_AMF_DT_ClockQualityDetailLevel * data);

int __si_amf_Encode_ClockQualityDetailLevel( SI_AMF_DT_ClockQualityDetailLevel * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ClockQualityReportingControlInfo( SI_AMF_DT_ClockQualityReportingControlInfo ** data);

void __si_amf_debug_ClockQualityReportingControlInfo( char * key, SI_AMF_DT_ClockQualityReportingControlInfo * data, int lvl);

void __si_amf_memfree_ClockQualityReportingControlInfo( SI_AMF_DT_ClockQualityReportingControlInfo * data);

int __si_amf_Encode_ClockQualityReportingControlInfo( SI_AMF_DT_ClockQualityReportingControlInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExpectedActivityPeriod( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ExpectedActivityPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ExpectedActivityPeriod( SI_AMF_DT_ExpectedActivityPeriod * data);


void __si_amf_debug_ExpectedIdlePeriod( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ExpectedIdlePeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ExpectedIdlePeriod( SI_AMF_DT_ExpectedIdlePeriod * data);


void __si_amf_debug_SourceOfUEActivityBehaviourInformation( char * key, uint8_t eSourceOfUEActivityBehaviourInformation, int lvl);

int __si_amf_Encode_SourceOfUEActivityBehaviourInformation( uint8_t eSourceOfUEActivityBehaviourInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExpectedUEActivityBehaviour( SI_AMF_DT_ExpectedUEActivityBehaviour ** data);

void __si_amf_debug_ExpectedUEActivityBehaviour( char * key, SI_AMF_DT_ExpectedUEActivityBehaviour * data, int lvl);

void __si_amf_memfree_ExpectedUEActivityBehaviour( SI_AMF_DT_ExpectedUEActivityBehaviour * data);

int __si_amf_Encode_ExpectedUEActivityBehaviour( SI_AMF_DT_ExpectedUEActivityBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExpectedHOInterval( char * key, uint8_t eExpectedHOInterval, int lvl);

int __si_amf_Encode_ExpectedHOInterval( uint8_t eExpectedHOInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExpectedUEMobility( char * key, uint8_t eExpectedUEMobility, int lvl);

int __si_amf_Encode_ExpectedUEMobility( uint8_t eExpectedUEMobility, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExpectedUEMovingTrajectory( SI_AMF_DT_ExpectedUEMovingTrajectory ** data);

void __si_amf_debug_ExpectedUEMovingTrajectory( char * key, SI_AMF_DT_ExpectedUEMovingTrajectory * data, int lvl);

void __si_amf_memfree_ExpectedUEMovingTrajectory( SI_AMF_DT_ExpectedUEMovingTrajectory * data);

int __si_amf_Encode_ExpectedUEMovingTrajectory( SI_AMF_DT_ExpectedUEMovingTrajectory * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExpectedUEBehaviour( SI_AMF_DT_ExpectedUEBehaviour ** data);

void __si_amf_debug_ExpectedUEBehaviour( char * key, SI_AMF_DT_ExpectedUEBehaviour * data, int lvl);

void __si_amf_memfree_ExpectedUEBehaviour( SI_AMF_DT_ExpectedUEBehaviour * data);

int __si_amf_Encode_ExpectedUEBehaviour( SI_AMF_DT_ExpectedUEBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CNAssistedRANTuning( SI_AMF_DT_CNAssistedRANTuning ** data);

void __si_amf_debug_CNAssistedRANTuning( char * key, SI_AMF_DT_CNAssistedRANTuning * data, int lvl);

void __si_amf_memfree_CNAssistedRANTuning( SI_AMF_DT_CNAssistedRANTuning * data);

int __si_amf_Encode_CNAssistedRANTuning( SI_AMF_DT_CNAssistedRANTuning * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CNsubgroupID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_CNsubgroupID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_CNsubgroupID( SI_AMF_DT_CNsubgroupID * data);


void __si_amf_init_CNTypeRestrictionsForEquivalent( SI_AMF_DT_CNTypeRestrictionsForEquivalent ** data);

void __si_amf_debug_CNTypeRestrictionsForEquivalent( char * key, SI_AMF_DT_CNTypeRestrictionsForEquivalent * data, int lvl);

void __si_amf_memfree_CNTypeRestrictionsForEquivalent( SI_AMF_DT_CNTypeRestrictionsForEquivalent * data);

int __si_amf_Encode_CNTypeRestrictionsForEquivalent( SI_AMF_DT_CNTypeRestrictionsForEquivalent * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CNTypeRestrictionsForEquivalentItem_cn_Type( char * key, uint8_t eCNTypeRestrictionsForEquivalentItem_cn_Type, int lvl);

int __si_amf_Encode_CNTypeRestrictionsForEquivalentItem_cn_Type( uint8_t eCNTypeRestrictionsForEquivalentItem_cn_Type, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CNTypeRestrictionsForEquivalentItem( SI_AMF_DT_CNTypeRestrictionsForEquivalentItem ** data);

void __si_amf_debug_CNTypeRestrictionsForEquivalentItem( char * key, SI_AMF_DT_CNTypeRestrictionsForEquivalentItem * data, int lvl);

void __si_amf_memfree_CNTypeRestrictionsForEquivalentItem( SI_AMF_DT_CNTypeRestrictionsForEquivalentItem * data);

int __si_amf_Encode_CNTypeRestrictionsForEquivalentItem( SI_AMF_DT_CNTypeRestrictionsForEquivalentItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CNTypeRestrictionsForServing( char * key, uint8_t eCNTypeRestrictionsForServing, int lvl);

int __si_amf_Encode_CNTypeRestrictionsForServing( uint8_t eCNTypeRestrictionsForServing, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CommonNetworkInstance( SI_AMF_DT_CommonNetworkInstance ** data);

void __si_amf_init_CommonNetworkInstance2( SI_AMF_DT_CommonNetworkInstance ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_CommonNetworkInstance( char * key, SI_AMF_DT_CommonNetworkInstance * data, int lvl);

void __si_amf_memfree_CommonNetworkInstance( SI_AMF_DT_CommonNetworkInstance * data);

int __si_amf_Encode_CommonNetworkInstance( SI_AMF_DT_CommonNetworkInstance * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInEAI_EUTRA( SI_AMF_DT_CompletedCellsInEAI_EUTRA ** data);

void __si_amf_debug_CompletedCellsInEAI_EUTRA( char * key, SI_AMF_DT_CompletedCellsInEAI_EUTRA * data, int lvl);

void __si_amf_memfree_CompletedCellsInEAI_EUTRA( SI_AMF_DT_CompletedCellsInEAI_EUTRA * data);

int __si_amf_Encode_CompletedCellsInEAI_EUTRA( SI_AMF_DT_CompletedCellsInEAI_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInEAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item ** data);

void __si_amf_debug_CompletedCellsInEAI_EUTRA_Item( char * key, SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item * data, int lvl);

void __si_amf_memfree_CompletedCellsInEAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item * data);

int __si_amf_Encode_CompletedCellsInEAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInEAI_NR( SI_AMF_DT_CompletedCellsInEAI_NR ** data);

void __si_amf_debug_CompletedCellsInEAI_NR( char * key, SI_AMF_DT_CompletedCellsInEAI_NR * data, int lvl);

void __si_amf_memfree_CompletedCellsInEAI_NR( SI_AMF_DT_CompletedCellsInEAI_NR * data);

int __si_amf_Encode_CompletedCellsInEAI_NR( SI_AMF_DT_CompletedCellsInEAI_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInEAI_NR_Item( SI_AMF_DT_CompletedCellsInEAI_NR_Item ** data);

void __si_amf_debug_CompletedCellsInEAI_NR_Item( char * key, SI_AMF_DT_CompletedCellsInEAI_NR_Item * data, int lvl);

void __si_amf_memfree_CompletedCellsInEAI_NR_Item( SI_AMF_DT_CompletedCellsInEAI_NR_Item * data);

int __si_amf_Encode_CompletedCellsInEAI_NR_Item( SI_AMF_DT_CompletedCellsInEAI_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInTAI_EUTRA( SI_AMF_DT_CompletedCellsInTAI_EUTRA ** data);

void __si_amf_debug_CompletedCellsInTAI_EUTRA( char * key, SI_AMF_DT_CompletedCellsInTAI_EUTRA * data, int lvl);

void __si_amf_memfree_CompletedCellsInTAI_EUTRA( SI_AMF_DT_CompletedCellsInTAI_EUTRA * data);

int __si_amf_Encode_CompletedCellsInTAI_EUTRA( SI_AMF_DT_CompletedCellsInTAI_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInTAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item ** data);

void __si_amf_debug_CompletedCellsInTAI_EUTRA_Item( char * key, SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item * data, int lvl);

void __si_amf_memfree_CompletedCellsInTAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item * data);

int __si_amf_Encode_CompletedCellsInTAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInTAI_NR( SI_AMF_DT_CompletedCellsInTAI_NR ** data);

void __si_amf_debug_CompletedCellsInTAI_NR( char * key, SI_AMF_DT_CompletedCellsInTAI_NR * data, int lvl);

void __si_amf_memfree_CompletedCellsInTAI_NR( SI_AMF_DT_CompletedCellsInTAI_NR * data);

int __si_amf_Encode_CompletedCellsInTAI_NR( SI_AMF_DT_CompletedCellsInTAI_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CompletedCellsInTAI_NR_Item( SI_AMF_DT_CompletedCellsInTAI_NR_Item ** data);

void __si_amf_debug_CompletedCellsInTAI_NR_Item( char * key, SI_AMF_DT_CompletedCellsInTAI_NR_Item * data, int lvl);

void __si_amf_memfree_CompletedCellsInTAI_NR_Item( SI_AMF_DT_CompletedCellsInTAI_NR_Item * data);

int __si_amf_Encode_CompletedCellsInTAI_NR_Item( SI_AMF_DT_CompletedCellsInTAI_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ConcurrentWarningMessageInd( char * key, uint8_t eConcurrentWarningMessageInd, int lvl);

int __si_amf_Encode_ConcurrentWarningMessageInd( uint8_t eConcurrentWarningMessageInd, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ConfidentialityProtectionIndication( char * key, uint8_t eConfidentialityProtectionIndication, int lvl);

int __si_amf_Encode_ConfidentialityProtectionIndication( uint8_t eConfidentialityProtectionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ConfidentialityProtectionResult( char * key, uint8_t eConfidentialityProtectionResult, int lvl);

int __si_amf_Encode_ConfidentialityProtectionResult( uint8_t eConfidentialityProtectionResult, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ConfiguredTACIndication( char * key, uint8_t eConfiguredTACIndication, int lvl);

int __si_amf_Encode_ConfiguredTACIndication( uint8_t eConfiguredTACIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEIdentityIndexValue_indexLength10( SI_AMF_DT_UEIdentityIndexValue_indexLength10 ** data);

void __si_amf_init_UEIdentityIndexValue_indexLength102( SI_AMF_DT_UEIdentityIndexValue_indexLength10 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_UEIdentityIndexValue_indexLength10( char * key, SI_AMF_DT_UEIdentityIndexValue_indexLength10 * data, int lvl);

void __si_amf_memfree_UEIdentityIndexValue_indexLength10( SI_AMF_DT_UEIdentityIndexValue_indexLength10 * data);

int __si_amf_Encode_UEIdentityIndexValue_indexLength10( SI_AMF_DT_UEIdentityIndexValue_indexLength10 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEIdentityIndexValue( SI_AMF_DT_UEIdentityIndexValue ** data);

void __si_amf_debug_UEIdentityIndexValue( char * key, SI_AMF_DT_UEIdentityIndexValue * data, int lvl);

void __si_amf_memfree_UEIdentityIndexValue( SI_AMF_DT_UEIdentityIndexValue * data);

int __si_amf_Encode_UEIdentityIndexValue( SI_AMF_DT_UEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingDRX( char * key, uint8_t ePagingDRX, int lvl);

int __si_amf_Encode_PagingDRX( uint8_t ePagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PeriodicRegistrationUpdateTimer( SI_AMF_DT_PeriodicRegistrationUpdateTimer ** data);

void __si_amf_init_PeriodicRegistrationUpdateTimer2( SI_AMF_DT_PeriodicRegistrationUpdateTimer ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_PeriodicRegistrationUpdateTimer( char * key, SI_AMF_DT_PeriodicRegistrationUpdateTimer * data, int lvl);

void __si_amf_memfree_PeriodicRegistrationUpdateTimer( SI_AMF_DT_PeriodicRegistrationUpdateTimer * data);

int __si_amf_Encode_PeriodicRegistrationUpdateTimer( SI_AMF_DT_PeriodicRegistrationUpdateTimer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MICOModeIndication( char * key, uint8_t eMICOModeIndication, int lvl);

int __si_amf_Encode_MICOModeIndication( uint8_t eMICOModeIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForInactive( SI_AMF_DT_TAIListForInactive ** data);

void __si_amf_debug_TAIListForInactive( char * key, SI_AMF_DT_TAIListForInactive * data, int lvl);

void __si_amf_memfree_TAIListForInactive( SI_AMF_DT_TAIListForInactive * data);

int __si_amf_Encode_TAIListForInactive( SI_AMF_DT_TAIListForInactive * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CoreNetworkAssistanceInformationForInactive( SI_AMF_DT_CoreNetworkAssistanceInformationForInactive ** data);

void __si_amf_debug_CoreNetworkAssistanceInformationForInactive( char * key, SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * data, int lvl);

void __si_amf_memfree_CoreNetworkAssistanceInformationForInactive( SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * data);

int __si_amf_Encode_CoreNetworkAssistanceInformationForInactive( SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CN_MT_CommunicationHandling( char * key, uint8_t eCN_MT_CommunicationHandling, int lvl);

int __si_amf_Encode_CN_MT_CommunicationHandling( uint8_t eCN_MT_CommunicationHandling, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_COUNTValueForPDCPSN12_pDCP_SN12( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_COUNTValueForPDCPSN12_pDCP_SN12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_COUNTValueForPDCPSN12_pDCP_SN12( SI_AMF_DT_COUNTValueForPDCPSN12_pDCP_SN12 * data);


void __si_amf_debug_COUNTValueForPDCPSN12_hFN_PDCP_SN12( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_COUNTValueForPDCPSN12_hFN_PDCP_SN12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_COUNTValueForPDCPSN12_hFN_PDCP_SN12( SI_AMF_DT_COUNTValueForPDCPSN12_hFN_PDCP_SN12 * data);


void __si_amf_init_COUNTValueForPDCP_SN12( SI_AMF_DT_COUNTValueForPDCP_SN12 ** data);

void __si_amf_debug_COUNTValueForPDCP_SN12( char * key, SI_AMF_DT_COUNTValueForPDCP_SN12 * data, int lvl);

void __si_amf_memfree_COUNTValueForPDCP_SN12( SI_AMF_DT_COUNTValueForPDCP_SN12 * data);

int __si_amf_Encode_COUNTValueForPDCP_SN12( SI_AMF_DT_COUNTValueForPDCP_SN12 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_COUNTValueForPDCPSN18_pDCP_SN18( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_COUNTValueForPDCPSN18_pDCP_SN18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_COUNTValueForPDCPSN18_pDCP_SN18( SI_AMF_DT_COUNTValueForPDCPSN18_pDCP_SN18 * data);


void __si_amf_debug_COUNTValueForPDCPSN18_hFN_PDCP_SN18( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_COUNTValueForPDCPSN18_hFN_PDCP_SN18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_COUNTValueForPDCPSN18_hFN_PDCP_SN18( SI_AMF_DT_COUNTValueForPDCPSN18_hFN_PDCP_SN18 * data);


void __si_amf_init_COUNTValueForPDCP_SN18( SI_AMF_DT_COUNTValueForPDCP_SN18 ** data);

void __si_amf_debug_COUNTValueForPDCP_SN18( char * key, SI_AMF_DT_COUNTValueForPDCP_SN18 * data, int lvl);

void __si_amf_memfree_COUNTValueForPDCP_SN18( SI_AMF_DT_COUNTValueForPDCP_SN18 * data);

int __si_amf_Encode_COUNTValueForPDCP_SN18( SI_AMF_DT_COUNTValueForPDCP_SN18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CoverageEnhancementLevel( SI_AMF_DT_CoverageEnhancementLevel ** data);

void __si_amf_init_CoverageEnhancementLevel2( SI_AMF_DT_CoverageEnhancementLevel ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_CoverageEnhancementLevel( char * key, SI_AMF_DT_CoverageEnhancementLevel * data, int lvl);

void __si_amf_memfree_CoverageEnhancementLevel( SI_AMF_DT_CoverageEnhancementLevel * data);

int __si_amf_Encode_CoverageEnhancementLevel( SI_AMF_DT_CoverageEnhancementLevel * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TypeOfError( char * key, uint8_t eTypeOfError, int lvl);

int __si_amf_Encode_TypeOfError( uint8_t eTypeOfError, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CriticalityDiagnostics_IE_Item( SI_AMF_DT_CriticalityDiagnostics_IE_Item ** data);

void __si_amf_debug_CriticalityDiagnostics_IE_Item( char * key, SI_AMF_DT_CriticalityDiagnostics_IE_Item * data, int lvl);

void __si_amf_memfree_CriticalityDiagnostics_IE_Item( SI_AMF_DT_CriticalityDiagnostics_IE_Item * data);

int __si_amf_Encode_CriticalityDiagnostics_IE_Item( SI_AMF_DT_CriticalityDiagnostics_IE_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_C_RNTI( SI_AMF_DT_C_RNTI ** data);

void __si_amf_init_C_RNTI2( SI_AMF_DT_C_RNTI ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_C_RNTI( char * key, SI_AMF_DT_C_RNTI * data, int lvl);

void __si_amf_memfree_C_RNTI( SI_AMF_DT_C_RNTI * data);

int __si_amf_Encode_C_RNTI( SI_AMF_DT_C_RNTI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CAGListforMDT( SI_AMF_DT_CAGListforMDT ** data);

void __si_amf_debug_CAGListforMDT( char * key, SI_AMF_DT_CAGListforMDT * data, int lvl);

void __si_amf_memfree_CAGListforMDT( SI_AMF_DT_CAGListforMDT * data);

int __si_amf_Encode_CAGListforMDT( SI_AMF_DT_CAGListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_CAGListforMDTItem( SI_AMF_DT_CAGListforMDTItem ** data);

void __si_amf_debug_CAGListforMDTItem( char * key, SI_AMF_DT_CAGListforMDTItem * data, int lvl);

void __si_amf_memfree_CAGListforMDTItem( SI_AMF_DT_CAGListforMDTItem * data);

int __si_amf_Encode_CAGListforMDTItem( SI_AMF_DT_CAGListforMDTItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DataCodingScheme( SI_AMF_DT_DataCodingScheme ** data);

void __si_amf_init_DataCodingScheme2( SI_AMF_DT_DataCodingScheme ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_DataCodingScheme( char * key, SI_AMF_DT_DataCodingScheme * data, int lvl);

void __si_amf_memfree_DataCodingScheme( SI_AMF_DT_DataCodingScheme * data);

int __si_amf_Encode_DataCodingScheme( SI_AMF_DT_DataCodingScheme * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DataForwardingAccepted( char * key, uint8_t eDataForwardingAccepted, int lvl);

int __si_amf_Encode_DataForwardingAccepted( uint8_t eDataForwardingAccepted, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DataForwardingNotPossible( char * key, uint8_t eDataForwardingNotPossible, int lvl);

int __si_amf_Encode_DataForwardingNotPossible( uint8_t eDataForwardingNotPossible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DataForwardingResponseDRBList( SI_AMF_DT_DataForwardingResponseDRBList ** data);

void __si_amf_debug_DataForwardingResponseDRBList( char * key, SI_AMF_DT_DataForwardingResponseDRBList * data, int lvl);

void __si_amf_memfree_DataForwardingResponseDRBList( SI_AMF_DT_DataForwardingResponseDRBList * data);

int __si_amf_Encode_DataForwardingResponseDRBList( SI_AMF_DT_DataForwardingResponseDRBList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DRB_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_DRB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_DRB_ID( SI_AMF_DT_DRB_ID * data);


void __si_amf_init_DataForwardingResponseDRBItem( SI_AMF_DT_DataForwardingResponseDRBItem ** data);

void __si_amf_debug_DataForwardingResponseDRBItem( char * key, SI_AMF_DT_DataForwardingResponseDRBItem * data, int lvl);

void __si_amf_memfree_DataForwardingResponseDRBItem( SI_AMF_DT_DataForwardingResponseDRBItem * data);

int __si_amf_Encode_DataForwardingResponseDRBItem( SI_AMF_DT_DataForwardingResponseDRBItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DAPSRequestInfo_dAPSIndicator( char * key, uint8_t eDAPSRequestInfo_dAPSIndicator, int lvl);

int __si_amf_Encode_DAPSRequestInfo_dAPSIndicator( uint8_t eDAPSRequestInfo_dAPSIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DAPSRequestInfo( SI_AMF_DT_DAPSRequestInfo ** data);

void __si_amf_debug_DAPSRequestInfo( char * key, SI_AMF_DT_DAPSRequestInfo * data, int lvl);

void __si_amf_memfree_DAPSRequestInfo( SI_AMF_DT_DAPSRequestInfo * data);

int __si_amf_Encode_DAPSRequestInfo( SI_AMF_DT_DAPSRequestInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DAPSResponseInfoList( SI_AMF_DT_DAPSResponseInfoList ** data);

void __si_amf_debug_DAPSResponseInfoList( char * key, SI_AMF_DT_DAPSResponseInfoList * data, int lvl);

void __si_amf_memfree_DAPSResponseInfoList( SI_AMF_DT_DAPSResponseInfoList * data);

int __si_amf_Encode_DAPSResponseInfoList( SI_AMF_DT_DAPSResponseInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DAPSResponseInfo_dapsresponseindicator( char * key, uint8_t eDAPSResponseInfo_dapsresponseindicator, int lvl);

int __si_amf_Encode_DAPSResponseInfo_dapsresponseindicator( uint8_t eDAPSResponseInfo_dapsresponseindicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DAPSResponseInfo( SI_AMF_DT_DAPSResponseInfo ** data);

void __si_amf_debug_DAPSResponseInfo( char * key, SI_AMF_DT_DAPSResponseInfo * data, int lvl);

void __si_amf_memfree_DAPSResponseInfo( SI_AMF_DT_DAPSResponseInfo * data);

int __si_amf_Encode_DAPSResponseInfo( SI_AMF_DT_DAPSResponseInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DAPSResponseInfoItem( SI_AMF_DT_DAPSResponseInfoItem ** data);

void __si_amf_debug_DAPSResponseInfoItem( char * key, SI_AMF_DT_DAPSResponseInfoItem * data, int lvl);

void __si_amf_memfree_DAPSResponseInfoItem( SI_AMF_DT_DAPSResponseInfoItem * data);

int __si_amf_Encode_DAPSResponseInfoItem( SI_AMF_DT_DAPSResponseInfoItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DataForwardingResponseERABList( SI_AMF_DT_DataForwardingResponseERABList ** data);

void __si_amf_debug_DataForwardingResponseERABList( char * key, SI_AMF_DT_DataForwardingResponseERABList * data, int lvl);

void __si_amf_memfree_DataForwardingResponseERABList( SI_AMF_DT_DataForwardingResponseERABList * data);

int __si_amf_Encode_DataForwardingResponseERABList( SI_AMF_DT_DataForwardingResponseERABList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_E_RAB_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_E_RAB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_E_RAB_ID( SI_AMF_DT_E_RAB_ID * data);


void __si_amf_init_DataForwardingResponseERABListItem( SI_AMF_DT_DataForwardingResponseERABListItem ** data);

void __si_amf_debug_DataForwardingResponseERABListItem( char * key, SI_AMF_DT_DataForwardingResponseERABListItem * data, int lvl);

void __si_amf_memfree_DataForwardingResponseERABListItem( SI_AMF_DT_DataForwardingResponseERABListItem * data);

int __si_amf_Encode_DataForwardingResponseERABListItem( SI_AMF_DT_DataForwardingResponseERABListItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DelayCritical( char * key, uint8_t eDelayCritical, int lvl);

int __si_amf_Encode_DelayCritical( uint8_t eDelayCritical, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DL_NAS_MAC( SI_AMF_DT_DL_NAS_MAC ** data);

void __si_amf_init_DL_NAS_MAC2( SI_AMF_DT_DL_NAS_MAC ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_DL_NAS_MAC( char * key, SI_AMF_DT_DL_NAS_MAC * data, int lvl);

void __si_amf_memfree_DL_NAS_MAC( SI_AMF_DT_DL_NAS_MAC * data);

int __si_amf_Encode_DL_NAS_MAC( SI_AMF_DT_DL_NAS_MAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DL_CP_SecurityInformation( SI_AMF_DT_DL_CP_SecurityInformation ** data);

void __si_amf_debug_DL_CP_SecurityInformation( char * key, SI_AMF_DT_DL_CP_SecurityInformation * data, int lvl);

void __si_amf_memfree_DL_CP_SecurityInformation( SI_AMF_DT_DL_CP_SecurityInformation * data);

int __si_amf_Encode_DL_CP_SecurityInformation( SI_AMF_DT_DL_CP_SecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DL_Signalling( char * key, uint8_t eDL_Signalling, int lvl);

int __si_amf_Encode_DL_Signalling( uint8_t eDL_Signalling, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DLForwarding( char * key, uint8_t eDLForwarding, int lvl);

int __si_amf_Encode_DLForwarding( uint8_t eDLForwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DL_NGU_TNLInformationReused( char * key, uint8_t eDL_NGU_TNLInformationReused, int lvl);

int __si_amf_Encode_DL_NGU_TNLInformationReused( uint8_t eDL_NGU_TNLInformationReused, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_DirectForwardingPathAvailability( char * key, uint8_t eDirectForwardingPathAvailability, int lvl);

int __si_amf_Encode_DirectForwardingPathAvailability( uint8_t eDirectForwardingPathAvailability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToStatusTransferList( SI_AMF_DT_DRBsSubjectToStatusTransferList ** data);

void __si_amf_debug_DRBsSubjectToStatusTransferList( char * key, SI_AMF_DT_DRBsSubjectToStatusTransferList * data, int lvl);

void __si_amf_memfree_DRBsSubjectToStatusTransferList( SI_AMF_DT_DRBsSubjectToStatusTransferList * data);

int __si_amf_Encode_DRBsSubjectToStatusTransferList( SI_AMF_DT_DRBsSubjectToStatusTransferList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs ** data);

void __si_amf_init_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs2( SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs( char * key, SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs * data, int lvl);

void __si_amf_memfree_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs * data);

int __si_amf_Encode_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusUL12( SI_AMF_DT_DRBStatusUL12 ** data);

void __si_amf_debug_DRBStatusUL12( char * key, SI_AMF_DT_DRBStatusUL12 * data, int lvl);

void __si_amf_memfree_DRBStatusUL12( SI_AMF_DT_DRBStatusUL12 * data);

int __si_amf_Encode_DRBStatusUL12( SI_AMF_DT_DRBStatusUL12 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs ** data);

void __si_amf_init_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs2( SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs( char * key, SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs * data, int lvl);

void __si_amf_memfree_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs * data);

int __si_amf_Encode_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusUL18( SI_AMF_DT_DRBStatusUL18 ** data);

void __si_amf_debug_DRBStatusUL18( char * key, SI_AMF_DT_DRBStatusUL18 * data, int lvl);

void __si_amf_memfree_DRBStatusUL18( SI_AMF_DT_DRBStatusUL18 * data);

int __si_amf_Encode_DRBStatusUL18( SI_AMF_DT_DRBStatusUL18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusUL( SI_AMF_DT_DRBStatusUL ** data);

void __si_amf_debug_DRBStatusUL( char * key, SI_AMF_DT_DRBStatusUL * data, int lvl);

void __si_amf_memfree_DRBStatusUL( SI_AMF_DT_DRBStatusUL * data);

int __si_amf_Encode_DRBStatusUL( SI_AMF_DT_DRBStatusUL * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusDL12( SI_AMF_DT_DRBStatusDL12 ** data);

void __si_amf_debug_DRBStatusDL12( char * key, SI_AMF_DT_DRBStatusDL12 * data, int lvl);

void __si_amf_memfree_DRBStatusDL12( SI_AMF_DT_DRBStatusDL12 * data);

int __si_amf_Encode_DRBStatusDL12( SI_AMF_DT_DRBStatusDL12 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusDL18( SI_AMF_DT_DRBStatusDL18 ** data);

void __si_amf_debug_DRBStatusDL18( char * key, SI_AMF_DT_DRBStatusDL18 * data, int lvl);

void __si_amf_memfree_DRBStatusDL18( SI_AMF_DT_DRBStatusDL18 * data);

int __si_amf_Encode_DRBStatusDL18( SI_AMF_DT_DRBStatusDL18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBStatusDL( SI_AMF_DT_DRBStatusDL ** data);

void __si_amf_debug_DRBStatusDL( char * key, SI_AMF_DT_DRBStatusDL * data, int lvl);

void __si_amf_memfree_DRBStatusDL( SI_AMF_DT_DRBStatusDL * data);

int __si_amf_Encode_DRBStatusDL( SI_AMF_DT_DRBStatusDL * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToStatusTransferItem( SI_AMF_DT_DRBsSubjectToStatusTransferItem ** data);

void __si_amf_debug_DRBsSubjectToStatusTransferItem( char * key, SI_AMF_DT_DRBsSubjectToStatusTransferItem * data, int lvl);

void __si_amf_memfree_DRBsSubjectToStatusTransferItem( SI_AMF_DT_DRBsSubjectToStatusTransferItem * data);

int __si_amf_Encode_DRBsSubjectToStatusTransferItem( SI_AMF_DT_DRBsSubjectToStatusTransferItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsToQosFlowsMappingList( SI_AMF_DT_DRBsToQosFlowsMappingList ** data);

void __si_amf_debug_DRBsToQosFlowsMappingList( char * key, SI_AMF_DT_DRBsToQosFlowsMappingList * data, int lvl);

void __si_amf_memfree_DRBsToQosFlowsMappingList( SI_AMF_DT_DRBsToQosFlowsMappingList * data);

int __si_amf_Encode_DRBsToQosFlowsMappingList( SI_AMF_DT_DRBsToQosFlowsMappingList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsToQosFlowsMappingItem( SI_AMF_DT_DRBsToQosFlowsMappingItem ** data);

void __si_amf_debug_DRBsToQosFlowsMappingItem( char * key, SI_AMF_DT_DRBsToQosFlowsMappingItem * data, int lvl);

void __si_amf_memfree_DRBsToQosFlowsMappingItem( SI_AMF_DT_DRBsToQosFlowsMappingItem * data);

int __si_amf_Encode_DRBsToQosFlowsMappingItem( SI_AMF_DT_DRBsToQosFlowsMappingItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PriorityLevelQos( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PriorityLevelQos( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PriorityLevelQos( SI_AMF_DT_PriorityLevelQos * data);


void __si_amf_debug_FiveQI( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_FiveQI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_FiveQI( SI_AMF_DT_FiveQI * data);


void __si_amf_debug_MaximumDataBurstVolume( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MaximumDataBurstVolume( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MaximumDataBurstVolume( SI_AMF_DT_MaximumDataBurstVolume * data);


void __si_amf_init_Dynamic5QIDescriptor( SI_AMF_DT_Dynamic5QIDescriptor ** data);

void __si_amf_debug_Dynamic5QIDescriptor( char * key, SI_AMF_DT_Dynamic5QIDescriptor * data, int lvl);

void __si_amf_memfree_Dynamic5QIDescriptor( SI_AMF_DT_Dynamic5QIDescriptor * data);

int __si_amf_Encode_Dynamic5QIDescriptor( SI_AMF_DT_Dynamic5QIDescriptor * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EarlyMeasurement( char * key, uint8_t eEarlyMeasurement, int lvl);

int __si_amf_Encode_EarlyMeasurement( uint8_t eEarlyMeasurement, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToEarlyStatusTransfer_List( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List ** data);

void __si_amf_debug_DRBsSubjectToEarlyStatusTransfer_List( char * key, SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List * data, int lvl);

void __si_amf_memfree_DRBsSubjectToEarlyStatusTransfer_List( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List * data);

int __si_amf_Encode_DRBsSubjectToEarlyStatusTransfer_List( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FirstDLCount( SI_AMF_DT_FirstDLCount ** data);

void __si_amf_debug_FirstDLCount( char * key, SI_AMF_DT_FirstDLCount * data, int lvl);

void __si_amf_memfree_FirstDLCount( SI_AMF_DT_FirstDLCount * data);

int __si_amf_Encode_FirstDLCount( SI_AMF_DT_FirstDLCount * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ProcedureStageChoice( SI_AMF_DT_ProcedureStageChoice ** data);

void __si_amf_debug_ProcedureStageChoice( char * key, SI_AMF_DT_ProcedureStageChoice * data, int lvl);

void __si_amf_memfree_ProcedureStageChoice( SI_AMF_DT_ProcedureStageChoice * data);

int __si_amf_Encode_ProcedureStageChoice( SI_AMF_DT_ProcedureStageChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EarlyStatusTransfer_TransparentContainer( SI_AMF_DT_EarlyStatusTransfer_TransparentContainer ** data);

void __si_amf_debug_EarlyStatusTransfer_TransparentContainer( char * key, SI_AMF_DT_EarlyStatusTransfer_TransparentContainer * data, int lvl);

void __si_amf_memfree_EarlyStatusTransfer_TransparentContainer( SI_AMF_DT_EarlyStatusTransfer_TransparentContainer * data);

int __si_amf_Encode_EarlyStatusTransfer_TransparentContainer( SI_AMF_DT_EarlyStatusTransfer_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToDLDiscarding_List( SI_AMF_DT_DRBsSubjectToDLDiscarding_List ** data);

void __si_amf_debug_DRBsSubjectToDLDiscarding_List( char * key, SI_AMF_DT_DRBsSubjectToDLDiscarding_List * data, int lvl);

void __si_amf_memfree_DRBsSubjectToDLDiscarding_List( SI_AMF_DT_DRBsSubjectToDLDiscarding_List * data);

int __si_amf_Encode_DRBsSubjectToDLDiscarding_List( SI_AMF_DT_DRBsSubjectToDLDiscarding_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DLDiscarding( SI_AMF_DT_DLDiscarding ** data);

void __si_amf_debug_DLDiscarding( char * key, SI_AMF_DT_DLDiscarding * data, int lvl);

void __si_amf_memfree_DLDiscarding( SI_AMF_DT_DLDiscarding * data);

int __si_amf_Encode_DLDiscarding( SI_AMF_DT_DLDiscarding * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DLCountChoice( SI_AMF_DT_DLCountChoice ** data);

void __si_amf_debug_DLCountChoice( char * key, SI_AMF_DT_DLCountChoice * data, int lvl);

void __si_amf_memfree_DLCountChoice( SI_AMF_DT_DLCountChoice * data);

int __si_amf_Encode_DLCountChoice( SI_AMF_DT_DLCountChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToDLDiscarding_Item( SI_AMF_DT_DRBsSubjectToDLDiscarding_Item ** data);

void __si_amf_debug_DRBsSubjectToDLDiscarding_Item( char * key, SI_AMF_DT_DRBsSubjectToDLDiscarding_Item * data, int lvl);

void __si_amf_memfree_DRBsSubjectToDLDiscarding_Item( SI_AMF_DT_DRBsSubjectToDLDiscarding_Item * data);

int __si_amf_Encode_DRBsSubjectToDLDiscarding_Item( SI_AMF_DT_DRBsSubjectToDLDiscarding_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DRBsSubjectToEarlyStatusTransfer_Item( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item ** data);

void __si_amf_debug_DRBsSubjectToEarlyStatusTransfer_Item( char * key, SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item * data, int lvl);

void __si_amf_memfree_DRBsSubjectToEarlyStatusTransfer_Item( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item * data);

int __si_amf_Encode_DRBsSubjectToEarlyStatusTransfer_Item( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ECNMarkingAtRANRequest( char * key, uint8_t eECNMarkingAtRANRequest, int lvl);

int __si_amf_Encode_ECNMarkingAtRANRequest( uint8_t eECNMarkingAtRANRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ECNMarkingAtUPFRequest( char * key, uint8_t eECNMarkingAtUPFRequest, int lvl);

int __si_amf_Encode_ECNMarkingAtUPFRequest( uint8_t eECNMarkingAtUPFRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CongestionInformationRequest( char * key, uint8_t eCongestionInformationRequest, int lvl);

int __si_amf_Encode_CongestionInformationRequest( uint8_t eCongestionInformationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ECNMarkingorCongestionInformationReportingRequest( SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest ** data);

void __si_amf_debug_ECNMarkingorCongestionInformationReportingRequest( char * key, SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest * data, int lvl);

void __si_amf_memfree_ECNMarkingorCongestionInformationReportingRequest( SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest * data);

int __si_amf_Encode_ECNMarkingorCongestionInformationReportingRequest( SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ECNMarkingorCongestionInformationReportingStatus( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus ** data);

void __si_amf_debug_ECNMarkingorCongestionInformationReportingStatus( char * key, SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * data, int lvl);

void __si_amf_memfree_ECNMarkingorCongestionInformationReportingStatus( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * data);

int __si_amf_Encode_ECNMarkingorCongestionInformationReportingStatus( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ActivationStatus( char * key, uint8_t eActivationStatus, int lvl);

int __si_amf_Encode_ActivationStatus( uint8_t eActivationStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ECNMarkingorCongestionInformationReportingStatus_Item( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item ** data);

void __si_amf_debug_ECNMarkingorCongestionInformationReportingStatus_Item( char * key, SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item * data, int lvl);

void __si_amf_memfree_ECNMarkingorCongestionInformationReportingStatus_Item( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item * data);

int __si_amf_Encode_ECNMarkingorCongestionInformationReportingStatus_Item( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EDT_Session( char * key, uint8_t eEDT_Session, int lvl);

int __si_amf_Encode_EDT_Session( uint8_t eEDT_Session, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaID( SI_AMF_DT_EmergencyAreaID ** data);

void __si_amf_init_EmergencyAreaID2( SI_AMF_DT_EmergencyAreaID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_EmergencyAreaID( char * key, SI_AMF_DT_EmergencyAreaID * data, int lvl);

void __si_amf_memfree_EmergencyAreaID( SI_AMF_DT_EmergencyAreaID * data);

int __si_amf_Encode_EmergencyAreaID( SI_AMF_DT_EmergencyAreaID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDBroadcastEUTRA_Item( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item ** data);

void __si_amf_debug_EmergencyAreaIDBroadcastEUTRA_Item( char * key, SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDBroadcastEUTRA_Item( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item * data);

int __si_amf_Encode_EmergencyAreaIDBroadcastEUTRA_Item( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDBroadcastNR_Item( SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item ** data);

void __si_amf_debug_EmergencyAreaIDBroadcastNR_Item( char * key, SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDBroadcastNR_Item( SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item * data);

int __si_amf_Encode_EmergencyAreaIDBroadcastNR_Item( SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDCancelledEUTRA_Item( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item ** data);

void __si_amf_debug_EmergencyAreaIDCancelledEUTRA_Item( char * key, SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDCancelledEUTRA_Item( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item * data);

int __si_amf_Encode_EmergencyAreaIDCancelledEUTRA_Item( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDCancelledNR_Item( SI_AMF_DT_EmergencyAreaIDCancelledNR_Item ** data);

void __si_amf_debug_EmergencyAreaIDCancelledNR_Item( char * key, SI_AMF_DT_EmergencyAreaIDCancelledNR_Item * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDCancelledNR_Item( SI_AMF_DT_EmergencyAreaIDCancelledNR_Item * data);

int __si_amf_Encode_EmergencyAreaIDCancelledNR_Item( SI_AMF_DT_EmergencyAreaIDCancelledNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDList( SI_AMF_DT_EmergencyAreaIDList ** data);

void __si_amf_debug_EmergencyAreaIDList( char * key, SI_AMF_DT_EmergencyAreaIDList * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDList( SI_AMF_DT_EmergencyAreaIDList * data);

int __si_amf_Encode_EmergencyAreaIDList( SI_AMF_DT_EmergencyAreaIDList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyAreaIDListForRestart( SI_AMF_DT_EmergencyAreaIDListForRestart ** data);

void __si_amf_debug_EmergencyAreaIDListForRestart( char * key, SI_AMF_DT_EmergencyAreaIDListForRestart * data, int lvl);

void __si_amf_memfree_EmergencyAreaIDListForRestart( SI_AMF_DT_EmergencyAreaIDListForRestart * data);

int __si_amf_Encode_EmergencyAreaIDListForRestart( SI_AMF_DT_EmergencyAreaIDListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EmergencyFallbackRequestIndicator( char * key, uint8_t eEmergencyFallbackRequestIndicator, int lvl);

int __si_amf_Encode_EmergencyFallbackRequestIndicator( uint8_t eEmergencyFallbackRequestIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EmergencyServiceTargetCN( char * key, uint8_t eEmergencyServiceTargetCN, int lvl);

int __si_amf_Encode_EmergencyServiceTargetCN( uint8_t eEmergencyServiceTargetCN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EmergencyFallbackIndicator( SI_AMF_DT_EmergencyFallbackIndicator ** data);

void __si_amf_debug_EmergencyFallbackIndicator( char * key, SI_AMF_DT_EmergencyFallbackIndicator * data, int lvl);

void __si_amf_memfree_EmergencyFallbackIndicator( SI_AMF_DT_EmergencyFallbackIndicator * data);

int __si_amf_Encode_EmergencyFallbackIndicator( SI_AMF_DT_EmergencyFallbackIndicator * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ENBID_macroENB_ID( SI_AMF_DT_ENBID_macroENB_ID ** data);

void __si_amf_init_ENBID_macroENB_ID2( SI_AMF_DT_ENBID_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ENBID_macroENB_ID( char * key, SI_AMF_DT_ENBID_macroENB_ID * data, int lvl);

void __si_amf_memfree_ENBID_macroENB_ID( SI_AMF_DT_ENBID_macroENB_ID * data);

int __si_amf_Encode_ENBID_macroENB_ID( SI_AMF_DT_ENBID_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ENBID_homeENB_ID( SI_AMF_DT_ENBID_homeENB_ID ** data);

void __si_amf_init_ENBID_homeENB_ID2( SI_AMF_DT_ENBID_homeENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ENBID_homeENB_ID( char * key, SI_AMF_DT_ENBID_homeENB_ID * data, int lvl);

void __si_amf_memfree_ENBID_homeENB_ID( SI_AMF_DT_ENBID_homeENB_ID * data);

int __si_amf_Encode_ENBID_homeENB_ID( SI_AMF_DT_ENBID_homeENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ENBID_short_macroENB_ID( SI_AMF_DT_ENBID_short_macroENB_ID ** data);

void __si_amf_init_ENBID_short_macroENB_ID2( SI_AMF_DT_ENBID_short_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ENBID_short_macroENB_ID( char * key, SI_AMF_DT_ENBID_short_macroENB_ID * data, int lvl);

void __si_amf_memfree_ENBID_short_macroENB_ID( SI_AMF_DT_ENBID_short_macroENB_ID * data);

int __si_amf_Encode_ENBID_short_macroENB_ID( SI_AMF_DT_ENBID_short_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ENBID_long_macroENB_ID( SI_AMF_DT_ENBID_long_macroENB_ID ** data);

void __si_amf_init_ENBID_long_macroENB_ID2( SI_AMF_DT_ENBID_long_macroENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ENBID_long_macroENB_ID( char * key, SI_AMF_DT_ENBID_long_macroENB_ID * data, int lvl);

void __si_amf_memfree_ENBID_long_macroENB_ID( SI_AMF_DT_ENBID_long_macroENB_ID * data);

int __si_amf_Encode_ENBID_long_macroENB_ID( SI_AMF_DT_ENBID_long_macroENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ENB_ID( SI_AMF_DT_ENB_ID ** data);

void __si_amf_debug_ENB_ID( char * key, SI_AMF_DT_ENB_ID * data, int lvl);

void __si_amf_memfree_ENB_ID( SI_AMF_DT_ENB_ID * data);

int __si_amf_Encode_ENB_ID( SI_AMF_DT_ENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Enhanced_CoverageRestriction( char * key, uint8_t eEnhanced_CoverageRestriction, int lvl);

int __si_amf_Encode_Enhanced_CoverageRestriction( uint8_t eEnhanced_CoverageRestriction, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Extended_ConnectedTime( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Extended_ConnectedTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Extended_ConnectedTime( SI_AMF_DT_Extended_ConnectedTime * data);


void __si_amf_init_EN_DCSONConfigurationTransfer( SI_AMF_DT_EN_DCSONConfigurationTransfer ** data);

void __si_amf_init_EN_DCSONConfigurationTransfer2( SI_AMF_DT_EN_DCSONConfigurationTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_EN_DCSONConfigurationTransfer( char * key, SI_AMF_DT_EN_DCSONConfigurationTransfer * data, int lvl);

void __si_amf_memfree_EN_DCSONConfigurationTransfer( SI_AMF_DT_EN_DCSONConfigurationTransfer * data);

int __si_amf_Encode_EN_DCSONConfigurationTransfer( SI_AMF_DT_EN_DCSONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PortNumber( SI_AMF_DT_PortNumber ** data);

void __si_amf_init_PortNumber2( SI_AMF_DT_PortNumber ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PortNumber( char * key, SI_AMF_DT_PortNumber * data, int lvl);

void __si_amf_memfree_PortNumber( SI_AMF_DT_PortNumber * data);

int __si_amf_Encode_PortNumber( SI_AMF_DT_PortNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EndpointIPAddressAndPort( SI_AMF_DT_EndpointIPAddressAndPort ** data);

void __si_amf_debug_EndpointIPAddressAndPort( char * key, SI_AMF_DT_EndpointIPAddressAndPort * data, int lvl);

void __si_amf_memfree_EndpointIPAddressAndPort( SI_AMF_DT_EndpointIPAddressAndPort * data);

int __si_amf_Encode_EndpointIPAddressAndPort( SI_AMF_DT_EndpointIPAddressAndPort * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EndIndication( char * key, uint8_t eEndIndication, int lvl);

int __si_amf_Encode_EndIndication( uint8_t eEndIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EquivalentPLMNs( SI_AMF_DT_EquivalentPLMNs ** data);

void __si_amf_debug_EquivalentPLMNs( char * key, SI_AMF_DT_EquivalentPLMNs * data, int lvl);

void __si_amf_memfree_EquivalentPLMNs( SI_AMF_DT_EquivalentPLMNs * data);

int __si_amf_Encode_EquivalentPLMNs( SI_AMF_DT_EquivalentPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EPS_TAC( SI_AMF_DT_EPS_TAC ** data);

void __si_amf_init_EPS_TAC2( SI_AMF_DT_EPS_TAC ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_EPS_TAC( char * key, SI_AMF_DT_EPS_TAC * data, int lvl);

void __si_amf_memfree_EPS_TAC( SI_AMF_DT_EPS_TAC * data);

int __si_amf_Encode_EPS_TAC( SI_AMF_DT_EPS_TAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EPS_TAI( SI_AMF_DT_EPS_TAI ** data);

void __si_amf_debug_EPS_TAI( char * key, SI_AMF_DT_EPS_TAI * data, int lvl);

void __si_amf_memfree_EPS_TAI( SI_AMF_DT_EPS_TAI * data);

int __si_amf_Encode_EPS_TAI( SI_AMF_DT_EPS_TAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_E_RABInformationList( SI_AMF_DT_E_RABInformationList ** data);

void __si_amf_debug_E_RABInformationList( char * key, SI_AMF_DT_E_RABInformationList * data, int lvl);

void __si_amf_memfree_E_RABInformationList( SI_AMF_DT_E_RABInformationList * data);

int __si_amf_Encode_E_RABInformationList( SI_AMF_DT_E_RABInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_E_RABInformationItem( SI_AMF_DT_E_RABInformationItem ** data);

void __si_amf_debug_E_RABInformationItem( char * key, SI_AMF_DT_E_RABInformationItem * data, int lvl);

void __si_amf_memfree_E_RABInformationItem( SI_AMF_DT_E_RABInformationItem * data);

int __si_amf_Encode_E_RABInformationItem( SI_AMF_DT_E_RABInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ERedCapIndication( char * key, uint8_t eERedCapIndication, int lvl);

int __si_amf_Encode_ERedCapIndication( uint8_t eERedCapIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRA_CGIListForWarning( SI_AMF_DT_EUTRA_CGIListForWarning ** data);

void __si_amf_debug_EUTRA_CGIListForWarning( char * key, SI_AMF_DT_EUTRA_CGIListForWarning * data, int lvl);

void __si_amf_memfree_EUTRA_CGIListForWarning( SI_AMF_DT_EUTRA_CGIListForWarning * data);

int __si_amf_Encode_EUTRA_CGIListForWarning( SI_AMF_DT_EUTRA_CGIListForWarning * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EUTRA_Paging_eDRX_Cycle( char * key, uint8_t eEUTRA_Paging_eDRX_Cycle, int lvl);

int __si_amf_Encode_EUTRA_Paging_eDRX_Cycle( uint8_t eEUTRA_Paging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EUTRA_Paging_Time_Window( char * key, uint8_t eEUTRA_Paging_Time_Window, int lvl);

int __si_amf_Encode_EUTRA_Paging_Time_Window( uint8_t eEUTRA_Paging_Time_Window, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRA_PagingeDRXInformation( SI_AMF_DT_EUTRA_PagingeDRXInformation ** data);

void __si_amf_debug_EUTRA_PagingeDRXInformation( char * key, SI_AMF_DT_EUTRA_PagingeDRXInformation * data, int lvl);

void __si_amf_memfree_EUTRA_PagingeDRXInformation( SI_AMF_DT_EUTRA_PagingeDRXInformation * data);

int __si_amf_Encode_EUTRA_PagingeDRXInformation( SI_AMF_DT_EUTRA_PagingeDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAencryptionAlgorithms( SI_AMF_DT_EUTRAencryptionAlgorithms ** data);

void __si_amf_init_EUTRAencryptionAlgorithms2( SI_AMF_DT_EUTRAencryptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_EUTRAencryptionAlgorithms( char * key, SI_AMF_DT_EUTRAencryptionAlgorithms * data, int lvl);

void __si_amf_memfree_EUTRAencryptionAlgorithms( SI_AMF_DT_EUTRAencryptionAlgorithms * data);

int __si_amf_Encode_EUTRAencryptionAlgorithms( SI_AMF_DT_EUTRAencryptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAintegrityProtectionAlgorithms( SI_AMF_DT_EUTRAintegrityProtectionAlgorithms ** data);

void __si_amf_init_EUTRAintegrityProtectionAlgorithms2( SI_AMF_DT_EUTRAintegrityProtectionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_EUTRAintegrityProtectionAlgorithms( char * key, SI_AMF_DT_EUTRAintegrityProtectionAlgorithms * data, int lvl);

void __si_amf_memfree_EUTRAintegrityProtectionAlgorithms( SI_AMF_DT_EUTRAintegrityProtectionAlgorithms * data);

int __si_amf_Encode_EUTRAintegrityProtectionAlgorithms( SI_AMF_DT_EUTRAintegrityProtectionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EventType( char * key, uint8_t eEventType, int lvl);

int __si_amf_Encode_EventType( uint8_t eEventType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExcessPacketDelayThresholdConfiguration( SI_AMF_DT_ExcessPacketDelayThresholdConfiguration ** data);

void __si_amf_debug_ExcessPacketDelayThresholdConfiguration( char * key, SI_AMF_DT_ExcessPacketDelayThresholdConfiguration * data, int lvl);

void __si_amf_memfree_ExcessPacketDelayThresholdConfiguration( SI_AMF_DT_ExcessPacketDelayThresholdConfiguration * data);

int __si_amf_Encode_ExcessPacketDelayThresholdConfiguration( SI_AMF_DT_ExcessPacketDelayThresholdConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExcessPacketDelayThresholdValue( char * key, uint8_t eExcessPacketDelayThresholdValue, int lvl);

int __si_amf_Encode_ExcessPacketDelayThresholdValue( uint8_t eExcessPacketDelayThresholdValue, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExcessPacketDelayThresholdItem( SI_AMF_DT_ExcessPacketDelayThresholdItem ** data);

void __si_amf_debug_ExcessPacketDelayThresholdItem( char * key, SI_AMF_DT_ExcessPacketDelayThresholdItem * data, int lvl);

void __si_amf_memfree_ExcessPacketDelayThresholdItem( SI_AMF_DT_ExcessPacketDelayThresholdItem * data);

int __si_amf_Encode_ExcessPacketDelayThresholdItem( SI_AMF_DT_ExcessPacketDelayThresholdItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExpectedUEMovingTrajectoryItem_timeStayedInCell( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ExpectedUEMovingTrajectoryItem_timeStayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ExpectedUEMovingTrajectoryItem_timeStayedInCell( SI_AMF_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell * data);


void __si_amf_init_ExpectedUEMovingTrajectoryItem( SI_AMF_DT_ExpectedUEMovingTrajectoryItem ** data);

void __si_amf_debug_ExpectedUEMovingTrajectoryItem( char * key, SI_AMF_DT_ExpectedUEMovingTrajectoryItem * data, int lvl);

void __si_amf_memfree_ExpectedUEMovingTrajectoryItem( SI_AMF_DT_ExpectedUEMovingTrajectoryItem * data);

int __si_amf_Encode_ExpectedUEMovingTrajectoryItem( SI_AMF_DT_ExpectedUEMovingTrajectoryItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Extended_AMFName( SI_AMF_DT_Extended_AMFName ** data);

void __si_amf_debug_Extended_AMFName( char * key, SI_AMF_DT_Extended_AMFName * data, int lvl);

void __si_amf_memfree_Extended_AMFName( SI_AMF_DT_Extended_AMFName * data);

int __si_amf_Encode_Extended_AMFName( SI_AMF_DT_Extended_AMFName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExtendedPacketDelayBudget( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ExtendedPacketDelayBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ExtendedPacketDelayBudget( SI_AMF_DT_ExtendedPacketDelayBudget * data);


void __si_amf_init_RANNodeNameVisibleString( SI_AMF_DT_RANNodeNameVisibleString ** data);

void __si_amf_init_RANNodeNameVisibleString2( SI_AMF_DT_RANNodeNameVisibleString ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RANNodeNameVisibleString( char * key, SI_AMF_DT_RANNodeNameVisibleString * data, int lvl);

void __si_amf_memfree_RANNodeNameVisibleString( SI_AMF_DT_RANNodeNameVisibleString * data);

int __si_amf_Encode_RANNodeNameVisibleString( SI_AMF_DT_RANNodeNameVisibleString * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANNodeNameUTF8String( SI_AMF_DT_RANNodeNameUTF8String ** data);

void __si_amf_init_RANNodeNameUTF8String2( SI_AMF_DT_RANNodeNameUTF8String ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RANNodeNameUTF8String( char * key, SI_AMF_DT_RANNodeNameUTF8String * data, int lvl);

void __si_amf_memfree_RANNodeNameUTF8String( SI_AMF_DT_RANNodeNameUTF8String * data);

int __si_amf_Encode_RANNodeNameUTF8String( SI_AMF_DT_RANNodeNameUTF8String * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Extended_RANNodeName( SI_AMF_DT_Extended_RANNodeName ** data);

void __si_amf_debug_Extended_RANNodeName( char * key, SI_AMF_DT_Extended_RANNodeName * data, int lvl);

void __si_amf_memfree_Extended_RANNodeName( SI_AMF_DT_Extended_RANNodeName * data);

int __si_amf_Encode_Extended_RANNodeName( SI_AMF_DT_Extended_RANNodeName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data);

void __si_amf_init_ExtendedRATRestrictionInformation_primaryRATRestriction2( SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ExtendedRATRestrictionInformation_primaryRATRestriction( char * key, SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data, int lvl);

void __si_amf_memfree_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data);

int __si_amf_Encode_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data);

void __si_amf_init_ExtendedRATRestrictionInformation_secondaryRATRestriction2( SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ExtendedRATRestrictionInformation_secondaryRATRestriction( char * key, SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data, int lvl);

void __si_amf_memfree_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data);

int __si_amf_Encode_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExtendedRATRestrictionInformation( SI_AMF_DT_ExtendedRATRestrictionInformation ** data);

void __si_amf_debug_ExtendedRATRestrictionInformation( char * key, SI_AMF_DT_ExtendedRATRestrictionInformation * data, int lvl);

void __si_amf_memfree_ExtendedRATRestrictionInformation( SI_AMF_DT_ExtendedRATRestrictionInformation * data);

int __si_amf_Encode_ExtendedRATRestrictionInformation( SI_AMF_DT_ExtendedRATRestrictionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExtendedRNC_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ExtendedRNC_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ExtendedRNC_ID( SI_AMF_DT_ExtendedRNC_ID * data);


void __si_amf_init_ExtendedSliceSupportList( SI_AMF_DT_ExtendedSliceSupportList ** data);

void __si_amf_debug_ExtendedSliceSupportList( char * key, SI_AMF_DT_ExtendedSliceSupportList * data, int lvl);

void __si_amf_memfree_ExtendedSliceSupportList( SI_AMF_DT_ExtendedSliceSupportList * data);

int __si_amf_Encode_ExtendedSliceSupportList( SI_AMF_DT_ExtendedSliceSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExtendedUEIdentityIndexValue( SI_AMF_DT_ExtendedUEIdentityIndexValue ** data);

void __si_amf_init_ExtendedUEIdentityIndexValue2( SI_AMF_DT_ExtendedUEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ExtendedUEIdentityIndexValue( char * key, SI_AMF_DT_ExtendedUEIdentityIndexValue * data, int lvl);

void __si_amf_memfree_ExtendedUEIdentityIndexValue( SI_AMF_DT_ExtendedUEIdentityIndexValue * data);

int __si_amf_Encode_ExtendedUEIdentityIndexValue( SI_AMF_DT_ExtendedUEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EventTrigger_outOfCoverage( char * key, uint8_t eEventTrigger_outOfCoverage, int lvl);

int __si_amf_Encode_EventTrigger_outOfCoverage( uint8_t eEventTrigger_outOfCoverage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Threshold_RSRP( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Threshold_RSRP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Threshold_RSRP( SI_AMF_DT_Threshold_RSRP * data);


void __si_amf_debug_Threshold_RSRQ( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Threshold_RSRQ( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Threshold_RSRQ( SI_AMF_DT_Threshold_RSRQ * data);


void __si_amf_init_MeasurementThresholdL1LoggedMDT( SI_AMF_DT_MeasurementThresholdL1LoggedMDT ** data);

void __si_amf_debug_MeasurementThresholdL1LoggedMDT( char * key, SI_AMF_DT_MeasurementThresholdL1LoggedMDT * data, int lvl);

void __si_amf_memfree_MeasurementThresholdL1LoggedMDT( SI_AMF_DT_MeasurementThresholdL1LoggedMDT * data);

int __si_amf_Encode_MeasurementThresholdL1LoggedMDT( SI_AMF_DT_MeasurementThresholdL1LoggedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Hysteresis( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Hysteresis( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Hysteresis( SI_AMF_DT_Hysteresis * data);


void __si_amf_debug_TimeToTrigger( char * key, uint8_t eTimeToTrigger, int lvl);

int __si_amf_Encode_TimeToTrigger( uint8_t eTimeToTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EventL1LoggedMDTConfig( SI_AMF_DT_EventL1LoggedMDTConfig ** data);

void __si_amf_debug_EventL1LoggedMDTConfig( char * key, SI_AMF_DT_EventL1LoggedMDTConfig * data, int lvl);

void __si_amf_memfree_EventL1LoggedMDTConfig( SI_AMF_DT_EventL1LoggedMDTConfig * data);

int __si_amf_Encode_EventL1LoggedMDTConfig( SI_AMF_DT_EventL1LoggedMDTConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EventTrigger( SI_AMF_DT_EventTrigger ** data);

void __si_amf_debug_EventTrigger( char * key, SI_AMF_DT_EventTrigger * data, int lvl);

void __si_amf_memfree_EventTrigger( SI_AMF_DT_EventTrigger * data);

int __si_amf_Encode_EventTrigger( SI_AMF_DT_EventTrigger * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EquivalentSNPNsList( SI_AMF_DT_EquivalentSNPNsList ** data);

void __si_amf_debug_EquivalentSNPNsList( char * key, SI_AMF_DT_EquivalentSNPNsList * data, int lvl);

void __si_amf_memfree_EquivalentSNPNsList( SI_AMF_DT_EquivalentSNPNsList * data);

int __si_amf_Encode_EquivalentSNPNsList( SI_AMF_DT_EquivalentSNPNsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EquivalentSNPNsItem( SI_AMF_DT_EquivalentSNPNsItem ** data);

void __si_amf_debug_EquivalentSNPNsItem( char * key, SI_AMF_DT_EquivalentSNPNsItem * data, int lvl);

void __si_amf_memfree_EquivalentSNPNsItem( SI_AMF_DT_EquivalentSNPNsItem * data);

int __si_amf_Encode_EquivalentSNPNsItem( SI_AMF_DT_EquivalentSNPNsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRUERLFReportContainer( SI_AMF_DT_NRUERLFReportContainer ** data);

void __si_amf_init_NRUERLFReportContainer2( SI_AMF_DT_NRUERLFReportContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NRUERLFReportContainer( char * key, SI_AMF_DT_NRUERLFReportContainer * data, int lvl);

void __si_amf_memfree_NRUERLFReportContainer( SI_AMF_DT_NRUERLFReportContainer * data);

int __si_amf_Encode_NRUERLFReportContainer( SI_AMF_DT_NRUERLFReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LTEUERLFReportContainer( SI_AMF_DT_LTEUERLFReportContainer ** data);

void __si_amf_init_LTEUERLFReportContainer2( SI_AMF_DT_LTEUERLFReportContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_LTEUERLFReportContainer( char * key, SI_AMF_DT_LTEUERLFReportContainer * data, int lvl);

void __si_amf_memfree_LTEUERLFReportContainer( SI_AMF_DT_LTEUERLFReportContainer * data);

int __si_amf_Encode_LTEUERLFReportContainer( SI_AMF_DT_LTEUERLFReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERLFReportContainer( SI_AMF_DT_UERLFReportContainer ** data);

void __si_amf_debug_UERLFReportContainer( char * key, SI_AMF_DT_UERLFReportContainer * data, int lvl);

void __si_amf_memfree_UERLFReportContainer( SI_AMF_DT_UERLFReportContainer * data);

int __si_amf_Encode_UERLFReportContainer( SI_AMF_DT_UERLFReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FailureIndication( SI_AMF_DT_FailureIndication ** data);

void __si_amf_debug_FailureIndication( char * key, SI_AMF_DT_FailureIndication * data, int lvl);

void __si_amf_memfree_FailureIndication( SI_AMF_DT_FailureIndication * data);

int __si_amf_Encode_FailureIndication( SI_AMF_DT_FailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE( char * key, uint8_t eNR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE, int lvl);

int __si_amf_Encode_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE( uint8_t eNR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NR_Paging_Time_Window_for_RRC_INACTIVE( char * key, uint8_t eNR_Paging_Time_Window_for_RRC_INACTIVE, int lvl);

int __si_amf_Encode_NR_Paging_Time_Window_for_RRC_INACTIVE( uint8_t eNR_Paging_Time_Window_for_RRC_INACTIVE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE( SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE ** data);

void __si_amf_debug_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE( char * key, SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE * data, int lvl);

void __si_amf_memfree_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE( SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE * data);

int __si_amf_Encode_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE( SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HLComActivate( SI_AMF_DT_HLComActivate ** data);

void __si_amf_debug_HLComActivate( char * key, SI_AMF_DT_HLComActivate * data, int lvl);

void __si_amf_memfree_HLComActivate( SI_AMF_DT_HLComActivate * data);

int __si_amf_Encode_HLComActivate( SI_AMF_DT_HLComActivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_HLComDeactivate_uEReachabilityIndication( char * key, uint8_t eHLComDeactivate_uEReachabilityIndication, int lvl);

int __si_amf_Encode_HLComDeactivate_uEReachabilityIndication( uint8_t eHLComDeactivate_uEReachabilityIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HLComDeactivate( SI_AMF_DT_HLComDeactivate ** data);

void __si_amf_debug_HLComDeactivate( char * key, SI_AMF_DT_HLComDeactivate * data, int lvl);

void __si_amf_memfree_HLComDeactivate( SI_AMF_DT_HLComDeactivate * data);

int __si_amf_Encode_HLComDeactivate( SI_AMF_DT_HLComDeactivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveGCAction( SI_AMF_DT_FiveGCAction ** data);

void __si_amf_debug_FiveGCAction( char * key, SI_AMF_DT_FiveGCAction * data, int lvl);

void __si_amf_memfree_FiveGCAction( SI_AMF_DT_FiveGCAction * data);

int __si_amf_Encode_FiveGCAction( SI_AMF_DT_FiveGCAction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeDirectDiscovery( char * key, uint8_t eFiveGProSeDirectDiscovery, int lvl);

int __si_amf_Encode_FiveGProSeDirectDiscovery( uint8_t eFiveGProSeDirectDiscovery, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeDirectCommunication( char * key, uint8_t eFiveGProSeDirectCommunication, int lvl);

int __si_amf_Encode_FiveGProSeDirectCommunication( uint8_t eFiveGProSeDirectCommunication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer2UEtoNetworkRelay( char * key, uint8_t eFiveGProSeLayer2UEtoNetworkRelay, int lvl);

int __si_amf_Encode_FiveGProSeLayer2UEtoNetworkRelay( uint8_t eFiveGProSeLayer2UEtoNetworkRelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer3UEtoNetworkRelay( char * key, uint8_t eFiveGProSeLayer3UEtoNetworkRelay, int lvl);

int __si_amf_Encode_FiveGProSeLayer3UEtoNetworkRelay( uint8_t eFiveGProSeLayer3UEtoNetworkRelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer2RemoteUE( char * key, uint8_t eFiveGProSeLayer2RemoteUE, int lvl);

int __si_amf_Encode_FiveGProSeLayer2RemoteUE( uint8_t eFiveGProSeLayer2RemoteUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveG_ProSeAuthorized( SI_AMF_DT_FiveG_ProSeAuthorized ** data);

void __si_amf_debug_FiveG_ProSeAuthorized( char * key, SI_AMF_DT_FiveG_ProSeAuthorized * data, int lvl);

void __si_amf_memfree_FiveG_ProSeAuthorized( SI_AMF_DT_FiveG_ProSeAuthorized * data);

int __si_amf_Encode_FiveG_ProSeAuthorized( SI_AMF_DT_FiveG_ProSeAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer2Multipath( char * key, uint8_t eFiveGProSeLayer2Multipath, int lvl);

int __si_amf_Encode_FiveGProSeLayer2Multipath( uint8_t eFiveGProSeLayer2Multipath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer2UEtoUERelay( char * key, uint8_t eFiveGProSeLayer2UEtoUERelay, int lvl);

int __si_amf_Encode_FiveGProSeLayer2UEtoUERelay( uint8_t eFiveGProSeLayer2UEtoUERelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_FiveGProSeLayer2UEtoUERemote( char * key, uint8_t eFiveGProSeLayer2UEtoUERemote, int lvl);

int __si_amf_Encode_FiveGProSeLayer2UEtoUERemote( uint8_t eFiveGProSeLayer2UEtoUERemote, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveGProSePC5QoSFlowList( SI_AMF_DT_FiveGProSePC5QoSFlowList ** data);

void __si_amf_debug_FiveGProSePC5QoSFlowList( char * key, SI_AMF_DT_FiveGProSePC5QoSFlowList * data, int lvl);

void __si_amf_memfree_FiveGProSePC5QoSFlowList( SI_AMF_DT_FiveGProSePC5QoSFlowList * data);

int __si_amf_Encode_FiveGProSePC5QoSFlowList( SI_AMF_DT_FiveGProSePC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveG_ProSePC5QoSParameters( SI_AMF_DT_FiveG_ProSePC5QoSParameters ** data);

void __si_amf_debug_FiveG_ProSePC5QoSParameters( char * key, SI_AMF_DT_FiveG_ProSePC5QoSParameters * data, int lvl);

void __si_amf_memfree_FiveG_ProSePC5QoSParameters( SI_AMF_DT_FiveG_ProSePC5QoSParameters * data);

int __si_amf_Encode_FiveG_ProSePC5QoSParameters( SI_AMF_DT_FiveG_ProSePC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveGProSePC5FlowBitRates( SI_AMF_DT_FiveGProSePC5FlowBitRates ** data);

void __si_amf_debug_FiveGProSePC5FlowBitRates( char * key, SI_AMF_DT_FiveGProSePC5FlowBitRates * data, int lvl);

void __si_amf_memfree_FiveGProSePC5FlowBitRates( SI_AMF_DT_FiveGProSePC5FlowBitRates * data);

int __si_amf_Encode_FiveGProSePC5FlowBitRates( SI_AMF_DT_FiveGProSePC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Range( char * key, uint8_t eRange, int lvl);

int __si_amf_Encode_Range( uint8_t eRange, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveGProSePC5QoSFlowItem( SI_AMF_DT_FiveGProSePC5QoSFlowItem ** data);

void __si_amf_debug_FiveGProSePC5QoSFlowItem( char * key, SI_AMF_DT_FiveGProSePC5QoSFlowItem * data, int lvl);

void __si_amf_memfree_FiveGProSePC5QoSFlowItem( SI_AMF_DT_FiveGProSePC5QoSFlowItem * data);

int __si_amf_Encode_FiveGProSePC5QoSFlowItem( SI_AMF_DT_FiveGProSePC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveG_TMSI( SI_AMF_DT_FiveG_TMSI ** data);

void __si_amf_init_FiveG_TMSI2( SI_AMF_DT_FiveG_TMSI ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_FiveG_TMSI( char * key, SI_AMF_DT_FiveG_TMSI * data, int lvl);

void __si_amf_memfree_FiveG_TMSI( SI_AMF_DT_FiveG_TMSI * data);

int __si_amf_Encode_FiveG_TMSI( SI_AMF_DT_FiveG_TMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FiveG_S_TMSI( SI_AMF_DT_FiveG_S_TMSI ** data);

void __si_amf_debug_FiveG_S_TMSI( char * key, SI_AMF_DT_FiveG_S_TMSI * data, int lvl);

void __si_amf_memfree_FiveG_S_TMSI( SI_AMF_DT_FiveG_S_TMSI * data);

int __si_amf_Encode_FiveG_S_TMSI( SI_AMF_DT_FiveG_S_TMSI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ForbiddenAreaInformation( SI_AMF_DT_ForbiddenAreaInformation ** data);

void __si_amf_debug_ForbiddenAreaInformation( char * key, SI_AMF_DT_ForbiddenAreaInformation * data, int lvl);

void __si_amf_memfree_ForbiddenAreaInformation( SI_AMF_DT_ForbiddenAreaInformation * data);

int __si_amf_Encode_ForbiddenAreaInformation( SI_AMF_DT_ForbiddenAreaInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ForbiddenTACs( SI_AMF_DT_ForbiddenTACs ** data);

void __si_amf_debug_ForbiddenTACs( char * key, SI_AMF_DT_ForbiddenTACs * data, int lvl);

void __si_amf_memfree_ForbiddenTACs( SI_AMF_DT_ForbiddenTACs * data);

int __si_amf_Encode_ForbiddenTACs( SI_AMF_DT_ForbiddenTACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ForbiddenAreaInformation_Item( SI_AMF_DT_ForbiddenAreaInformation_Item ** data);

void __si_amf_debug_ForbiddenAreaInformation_Item( char * key, SI_AMF_DT_ForbiddenAreaInformation_Item * data, int lvl);

void __si_amf_memfree_ForbiddenAreaInformation_Item( SI_AMF_DT_ForbiddenAreaInformation_Item * data);

int __si_amf_Encode_ForbiddenAreaInformation_Item( SI_AMF_DT_ForbiddenAreaInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalENB_ID( SI_AMF_DT_GlobalENB_ID ** data);

void __si_amf_debug_GlobalENB_ID( char * key, SI_AMF_DT_GlobalENB_ID * data, int lvl);

void __si_amf_memfree_GlobalENB_ID( SI_AMF_DT_GlobalENB_ID * data);

int __si_amf_Encode_GlobalENB_ID( SI_AMF_DT_GlobalENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONeNBID( SI_AMF_DT_IntersystemSONeNBID ** data);

void __si_amf_debug_IntersystemSONeNBID( char * key, SI_AMF_DT_IntersystemSONeNBID * data, int lvl);

void __si_amf_memfree_IntersystemSONeNBID( SI_AMF_DT_IntersystemSONeNBID * data);

int __si_amf_Encode_IntersystemSONeNBID( SI_AMF_DT_IntersystemSONeNBID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONNGRANnodeID( SI_AMF_DT_IntersystemSONNGRANnodeID ** data);

void __si_amf_debug_IntersystemSONNGRANnodeID( char * key, SI_AMF_DT_IntersystemSONNGRANnodeID * data, int lvl);

void __si_amf_memfree_IntersystemSONNGRANnodeID( SI_AMF_DT_IntersystemSONNGRANnodeID * data);

int __si_amf_Encode_IntersystemSONNGRANnodeID( SI_AMF_DT_IntersystemSONNGRANnodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FromEUTRANtoNGRAN( SI_AMF_DT_FromEUTRANtoNGRAN ** data);

void __si_amf_debug_FromEUTRANtoNGRAN( char * key, SI_AMF_DT_FromEUTRANtoNGRAN * data, int lvl);

void __si_amf_memfree_FromEUTRANtoNGRAN( SI_AMF_DT_FromEUTRANtoNGRAN * data);

int __si_amf_Encode_FromEUTRANtoNGRAN( SI_AMF_DT_FromEUTRANtoNGRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_FromNGRANtoEUTRAN( SI_AMF_DT_FromNGRANtoEUTRAN ** data);

void __si_amf_debug_FromNGRANtoEUTRAN( char * key, SI_AMF_DT_FromNGRANtoEUTRAN * data, int lvl);

void __si_amf_memfree_FromNGRANtoEUTRAN( SI_AMF_DT_FromNGRANtoEUTRAN * data);

int __si_amf_Encode_FromNGRANtoEUTRAN( SI_AMF_DT_FromNGRANtoEUTRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NotificationControl( char * key, uint8_t eNotificationControl, int lvl);

int __si_amf_Encode_NotificationControl( uint8_t eNotificationControl, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PacketLossRate( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PacketLossRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PacketLossRate( SI_AMF_DT_PacketLossRate * data);


void __si_amf_init_GBR_QosInformation( SI_AMF_DT_GBR_QosInformation ** data);

void __si_amf_debug_GBR_QosInformation( char * key, SI_AMF_DT_GBR_QosInformation * data, int lvl);

void __si_amf_memfree_GBR_QosInformation( SI_AMF_DT_GBR_QosInformation * data);

int __si_amf_Encode_GBR_QosInformation( SI_AMF_DT_GBR_QosInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalCable_ID( SI_AMF_DT_GlobalCable_ID ** data);

void __si_amf_init_GlobalCable_ID2( SI_AMF_DT_GlobalCable_ID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_GlobalCable_ID( char * key, SI_AMF_DT_GlobalCable_ID * data, int lvl);

void __si_amf_memfree_GlobalCable_ID( SI_AMF_DT_GlobalCable_ID * data);

int __si_amf_Encode_GlobalCable_ID( SI_AMF_DT_GlobalCable_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalCable_ID_new( SI_AMF_DT_GlobalCable_ID_new ** data);

void __si_amf_debug_GlobalCable_ID_new( char * key, SI_AMF_DT_GlobalCable_ID_new * data, int lvl);

void __si_amf_memfree_GlobalCable_ID_new( SI_AMF_DT_GlobalCable_ID_new * data);

int __si_amf_Encode_GlobalCable_ID_new( SI_AMF_DT_GlobalCable_ID_new * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalLineIdentity( SI_AMF_DT_GlobalLineIdentity ** data);

void __si_amf_init_GlobalLineIdentity2( SI_AMF_DT_GlobalLineIdentity ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_GlobalLineIdentity( char * key, SI_AMF_DT_GlobalLineIdentity * data, int lvl);

void __si_amf_memfree_GlobalLineIdentity( SI_AMF_DT_GlobalLineIdentity * data);

int __si_amf_Encode_GlobalLineIdentity( SI_AMF_DT_GlobalLineIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LineType( char * key, uint8_t eLineType, int lvl);

int __si_amf_Encode_LineType( uint8_t eLineType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalLine_ID( SI_AMF_DT_GlobalLine_ID ** data);

void __si_amf_debug_GlobalLine_ID( char * key, SI_AMF_DT_GlobalLine_ID * data, int lvl);

void __si_amf_memfree_GlobalLine_ID( SI_AMF_DT_GlobalLine_ID * data);

int __si_amf_Encode_GlobalLine_ID( SI_AMF_DT_GlobalLine_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TNGFID_tNGF_ID( SI_AMF_DT_TNGFID_tNGF_ID ** data);

void __si_amf_init_TNGFID_tNGF_ID2( SI_AMF_DT_TNGFID_tNGF_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_TNGFID_tNGF_ID( char * key, SI_AMF_DT_TNGFID_tNGF_ID * data, int lvl);

void __si_amf_memfree_TNGFID_tNGF_ID( SI_AMF_DT_TNGFID_tNGF_ID * data);

int __si_amf_Encode_TNGFID_tNGF_ID( SI_AMF_DT_TNGFID_tNGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TNGF_ID( SI_AMF_DT_TNGF_ID ** data);

void __si_amf_debug_TNGF_ID( char * key, SI_AMF_DT_TNGF_ID * data, int lvl);

void __si_amf_memfree_TNGF_ID( SI_AMF_DT_TNGF_ID * data);

int __si_amf_Encode_TNGF_ID( SI_AMF_DT_TNGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalTNGF_ID( SI_AMF_DT_GlobalTNGF_ID ** data);

void __si_amf_debug_GlobalTNGF_ID( char * key, SI_AMF_DT_GlobalTNGF_ID * data, int lvl);

void __si_amf_memfree_GlobalTNGF_ID( SI_AMF_DT_GlobalTNGF_ID * data);

int __si_amf_Encode_GlobalTNGF_ID( SI_AMF_DT_GlobalTNGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TWIFID_tWIF_ID( SI_AMF_DT_TWIFID_tWIF_ID ** data);

void __si_amf_init_TWIFID_tWIF_ID2( SI_AMF_DT_TWIFID_tWIF_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_TWIFID_tWIF_ID( char * key, SI_AMF_DT_TWIFID_tWIF_ID * data, int lvl);

void __si_amf_memfree_TWIFID_tWIF_ID( SI_AMF_DT_TWIFID_tWIF_ID * data);

int __si_amf_Encode_TWIFID_tWIF_ID( SI_AMF_DT_TWIFID_tWIF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TWIF_ID( SI_AMF_DT_TWIF_ID ** data);

void __si_amf_debug_TWIF_ID( char * key, SI_AMF_DT_TWIF_ID * data, int lvl);

void __si_amf_memfree_TWIF_ID( SI_AMF_DT_TWIF_ID * data);

int __si_amf_Encode_TWIF_ID( SI_AMF_DT_TWIF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalTWIF_ID( SI_AMF_DT_GlobalTWIF_ID ** data);

void __si_amf_debug_GlobalTWIF_ID( char * key, SI_AMF_DT_GlobalTWIF_ID * data, int lvl);

void __si_amf_memfree_GlobalTWIF_ID( SI_AMF_DT_GlobalTWIF_ID * data);

int __si_amf_Encode_GlobalTWIF_ID( SI_AMF_DT_GlobalTWIF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WAGFID_w_AGF_ID( SI_AMF_DT_WAGFID_w_AGF_ID ** data);

void __si_amf_init_WAGFID_w_AGF_ID2( SI_AMF_DT_WAGFID_w_AGF_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_WAGFID_w_AGF_ID( char * key, SI_AMF_DT_WAGFID_w_AGF_ID * data, int lvl);

void __si_amf_memfree_WAGFID_w_AGF_ID( SI_AMF_DT_WAGFID_w_AGF_ID * data);

int __si_amf_Encode_WAGFID_w_AGF_ID( SI_AMF_DT_WAGFID_w_AGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_W_AGF_ID( SI_AMF_DT_W_AGF_ID ** data);

void __si_amf_debug_W_AGF_ID( char * key, SI_AMF_DT_W_AGF_ID * data, int lvl);

void __si_amf_memfree_W_AGF_ID( SI_AMF_DT_W_AGF_ID * data);

int __si_amf_Encode_W_AGF_ID( SI_AMF_DT_W_AGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GlobalW_AGF_ID( SI_AMF_DT_GlobalW_AGF_ID ** data);

void __si_amf_debug_GlobalW_AGF_ID( char * key, SI_AMF_DT_GlobalW_AGF_ID * data, int lvl);

void __si_amf_memfree_GlobalW_AGF_ID( SI_AMF_DT_GlobalW_AGF_ID * data);

int __si_amf_Encode_GlobalW_AGF_ID( SI_AMF_DT_GlobalW_AGF_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GUAMI( SI_AMF_DT_GUAMI ** data);

void __si_amf_debug_GUAMI( char * key, SI_AMF_DT_GUAMI * data, int lvl);

void __si_amf_memfree_GUAMI( SI_AMF_DT_GUAMI * data);

int __si_amf_Encode_GUAMI( SI_AMF_DT_GUAMI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_GUAMIType( char * key, uint8_t eGUAMIType, int lvl);

int __si_amf_Encode_GUAMIType( uint8_t eGUAMIType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowToBeForwardedList( SI_AMF_DT_QosFlowToBeForwardedList ** data);

void __si_amf_debug_QosFlowToBeForwardedList( char * key, SI_AMF_DT_QosFlowToBeForwardedList * data, int lvl);

void __si_amf_memfree_QosFlowToBeForwardedList( SI_AMF_DT_QosFlowToBeForwardedList * data);

int __si_amf_Encode_QosFlowToBeForwardedList( SI_AMF_DT_QosFlowToBeForwardedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HandoverCommandTransfer( SI_AMF_DT_HandoverCommandTransfer ** data);

void __si_amf_debug_HandoverCommandTransfer( char * key, SI_AMF_DT_HandoverCommandTransfer * data, int lvl);

void __si_amf_memfree_HandoverCommandTransfer( SI_AMF_DT_HandoverCommandTransfer * data);

int __si_amf_Encode_HandoverCommandTransfer( SI_AMF_DT_HandoverCommandTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_HandoverFlag( char * key, uint8_t eHandoverFlag, int lvl);

int __si_amf_Encode_HandoverFlag( uint8_t eHandoverFlag, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HandoverPreparationUnsuccessfulTransfer( SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer ** data);

void __si_amf_debug_HandoverPreparationUnsuccessfulTransfer( char * key, SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_HandoverPreparationUnsuccessfulTransfer( SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer * data);

int __si_amf_Encode_HandoverPreparationUnsuccessfulTransfer( SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntegrityProtectionResult( char * key, uint8_t eIntegrityProtectionResult, int lvl);

int __si_amf_Encode_IntegrityProtectionResult( uint8_t eIntegrityProtectionResult, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecurityResult( SI_AMF_DT_SecurityResult ** data);

void __si_amf_debug_SecurityResult( char * key, SI_AMF_DT_SecurityResult * data, int lvl);

void __si_amf_memfree_SecurityResult( SI_AMF_DT_SecurityResult * data);

int __si_amf_Encode_SecurityResult( SI_AMF_DT_SecurityResult * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowListWithCause( SI_AMF_DT_QosFlowListWithCause ** data);

void __si_amf_debug_QosFlowListWithCause( char * key, SI_AMF_DT_QosFlowListWithCause * data, int lvl);

void __si_amf_memfree_QosFlowListWithCause( SI_AMF_DT_QosFlowListWithCause * data);

int __si_amf_Encode_QosFlowListWithCause( SI_AMF_DT_QosFlowListWithCause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HandoverRequestAcknowledgeTransfer( SI_AMF_DT_HandoverRequestAcknowledgeTransfer ** data);

void __si_amf_debug_HandoverRequestAcknowledgeTransfer( char * key, SI_AMF_DT_HandoverRequestAcknowledgeTransfer * data, int lvl);

void __si_amf_memfree_HandoverRequestAcknowledgeTransfer( SI_AMF_DT_HandoverRequestAcknowledgeTransfer * data);

int __si_amf_Encode_HandoverRequestAcknowledgeTransfer( SI_AMF_DT_HandoverRequestAcknowledgeTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HandoverRequiredTransfer( SI_AMF_DT_HandoverRequiredTransfer ** data);

void __si_amf_debug_HandoverRequiredTransfer( char * key, SI_AMF_DT_HandoverRequiredTransfer * data, int lvl);

void __si_amf_memfree_HandoverRequiredTransfer( SI_AMF_DT_HandoverRequiredTransfer * data);

int __si_amf_Encode_HandoverRequiredTransfer( SI_AMF_DT_HandoverRequiredTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HandoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer ** data);

void __si_amf_debug_HandoverResourceAllocationUnsuccessfulTransfer( char * key, SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_HandoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer * data);

int __si_amf_Encode_HandoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_HandoverType( char * key, uint8_t eHandoverType, int lvl);

int __si_amf_Encode_HandoverType( uint8_t eHandoverType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HashedUEIdentityIndexValue( SI_AMF_DT_HashedUEIdentityIndexValue ** data);

void __si_amf_init_HashedUEIdentityIndexValue2( SI_AMF_DT_HashedUEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_HashedUEIdentityIndexValue( char * key, SI_AMF_DT_HashedUEIdentityIndexValue * data, int lvl);

void __si_amf_memfree_HashedUEIdentityIndexValue( SI_AMF_DT_HashedUEIdentityIndexValue * data);

int __si_amf_Encode_HashedUEIdentityIndexValue( SI_AMF_DT_HashedUEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HFCNode_ID( SI_AMF_DT_HFCNode_ID ** data);

void __si_amf_init_HFCNode_ID2( SI_AMF_DT_HFCNode_ID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_HFCNode_ID( char * key, SI_AMF_DT_HFCNode_ID * data, int lvl);

void __si_amf_memfree_HFCNode_ID( SI_AMF_DT_HFCNode_ID * data);

int __si_amf_Encode_HFCNode_ID( SI_AMF_DT_HFCNode_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HFCNode_ID_new( SI_AMF_DT_HFCNode_ID_new ** data);

void __si_amf_debug_HFCNode_ID_new( char * key, SI_AMF_DT_HFCNode_ID_new * data, int lvl);

void __si_amf_memfree_HFCNode_ID_new( SI_AMF_DT_HFCNode_ID_new * data);

int __si_amf_Encode_HFCNode_ID_new( SI_AMF_DT_HFCNode_ID_new * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_HOReport_handoverReportType( char * key, uint8_t eHOReport_handoverReportType, int lvl);

int __si_amf_Encode_HOReport_handoverReportType( uint8_t eHOReport_handoverReportType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HOReport_sourcecellC_RNTI( SI_AMF_DT_HOReport_sourcecellC_RNTI ** data);

void __si_amf_init_HOReport_sourcecellC_RNTI2( SI_AMF_DT_HOReport_sourcecellC_RNTI ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_HOReport_sourcecellC_RNTI( char * key, SI_AMF_DT_HOReport_sourcecellC_RNTI * data, int lvl);

void __si_amf_memfree_HOReport_sourcecellC_RNTI( SI_AMF_DT_HOReport_sourcecellC_RNTI * data);

int __si_amf_Encode_HOReport_sourcecellC_RNTI( SI_AMF_DT_HOReport_sourcecellC_RNTI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MobilityInformation( SI_AMF_DT_MobilityInformation ** data);

void __si_amf_init_MobilityInformation2( SI_AMF_DT_MobilityInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_MobilityInformation( char * key, SI_AMF_DT_MobilityInformation * data, int lvl);

void __si_amf_memfree_MobilityInformation( SI_AMF_DT_MobilityInformation * data);

int __si_amf_Encode_MobilityInformation( SI_AMF_DT_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_HOReport( SI_AMF_DT_HOReport ** data);

void __si_amf_debug_HOReport( char * key, SI_AMF_DT_HOReport * data, int lvl);

void __si_amf_memfree_HOReport( SI_AMF_DT_HOReport * data);

int __si_amf_Encode_HOReport( SI_AMF_DT_HOReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IAB_Authorized( char * key, uint8_t eIAB_Authorized, int lvl);

int __si_amf_Encode_IAB_Authorized( uint8_t eIAB_Authorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MobileIAB_MTUserLocationInformation( SI_AMF_DT_MobileIAB_MTUserLocationInformation ** data);

void __si_amf_debug_MobileIAB_MTUserLocationInformation( char * key, SI_AMF_DT_MobileIAB_MTUserLocationInformation * data, int lvl);

void __si_amf_memfree_MobileIAB_MTUserLocationInformation( SI_AMF_DT_MobileIAB_MTUserLocationInformation * data);

int __si_amf_Encode_MobileIAB_MTUserLocationInformation( SI_AMF_DT_MobileIAB_MTUserLocationInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IAB_Supported( char * key, uint8_t eIAB_Supported, int lvl);

int __si_amf_Encode_IAB_Supported( uint8_t eIAB_Supported, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IABNodeIndication( char * key, uint8_t eIABNodeIndication, int lvl);

int __si_amf_Encode_IABNodeIndication( uint8_t eIABNodeIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IMSVoiceSupportIndicator( char * key, uint8_t eIMSVoiceSupportIndicator, int lvl);

int __si_amf_Encode_IMSVoiceSupportIndicator( uint8_t eIMSVoiceSupportIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IndexToRFSP( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_IndexToRFSP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_IndexToRFSP( SI_AMF_DT_IndexToRFSP * data);


void __si_amf_init_RecommendedRANNodeList( SI_AMF_DT_RecommendedRANNodeList ** data);

void __si_amf_debug_RecommendedRANNodeList( char * key, SI_AMF_DT_RecommendedRANNodeList * data, int lvl);

void __si_amf_memfree_RecommendedRANNodeList( SI_AMF_DT_RecommendedRANNodeList * data);

int __si_amf_Encode_RecommendedRANNodeList( SI_AMF_DT_RecommendedRANNodeList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RecommendedRANNodesForPaging( SI_AMF_DT_RecommendedRANNodesForPaging ** data);

void __si_amf_debug_RecommendedRANNodesForPaging( char * key, SI_AMF_DT_RecommendedRANNodesForPaging * data, int lvl);

void __si_amf_memfree_RecommendedRANNodesForPaging( SI_AMF_DT_RecommendedRANNodesForPaging * data);

int __si_amf_Encode_RecommendedRANNodesForPaging( SI_AMF_DT_RecommendedRANNodesForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_InfoOnRecommendedCellsAndRANNodesForPaging( SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging ** data);

void __si_amf_debug_InfoOnRecommendedCellsAndRANNodesForPaging( char * key, SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * data, int lvl);

void __si_amf_memfree_InfoOnRecommendedCellsAndRANNodesForPaging( SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * data);

int __si_amf_Encode_InfoOnRecommendedCellsAndRANNodesForPaging( SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntegrityProtectionIndication( char * key, uint8_t eIntegrityProtectionIndication, int lvl);

int __si_amf_Encode_IntegrityProtectionIndication( uint8_t eIntegrityProtectionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_InterfacesToTrace( SI_AMF_DT_InterfacesToTrace ** data);

void __si_amf_init_InterfacesToTrace2( SI_AMF_DT_InterfacesToTrace ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_InterfacesToTrace( char * key, SI_AMF_DT_InterfacesToTrace * data, int lvl);

void __si_amf_memfree_InterfacesToTrace( SI_AMF_DT_InterfacesToTrace * data);

int __si_amf_Encode_InterfacesToTrace( SI_AMF_DT_InterfacesToTrace * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MeasurementsToActivate( SI_AMF_DT_MeasurementsToActivate ** data);

void __si_amf_init_MeasurementsToActivate2( SI_AMF_DT_MeasurementsToActivate ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_MeasurementsToActivate( char * key, SI_AMF_DT_MeasurementsToActivate * data, int lvl);

void __si_amf_memfree_MeasurementsToActivate( SI_AMF_DT_MeasurementsToActivate * data);

int __si_amf_Encode_MeasurementsToActivate( SI_AMF_DT_MeasurementsToActivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M1ReportingTrigger( char * key, uint8_t eM1ReportingTrigger, int lvl);

int __si_amf_Encode_M1ReportingTrigger( uint8_t eM1ReportingTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Threshold_SINR( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Threshold_SINR( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Threshold_SINR( SI_AMF_DT_Threshold_SINR * data);


void __si_amf_init_M1ThresholdType( SI_AMF_DT_M1ThresholdType ** data);

void __si_amf_debug_M1ThresholdType( char * key, SI_AMF_DT_M1ThresholdType * data, int lvl);

void __si_amf_memfree_M1ThresholdType( SI_AMF_DT_M1ThresholdType * data);

int __si_amf_Encode_M1ThresholdType( SI_AMF_DT_M1ThresholdType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M1ThresholdEventA2( SI_AMF_DT_M1ThresholdEventA2 ** data);

void __si_amf_debug_M1ThresholdEventA2( char * key, SI_AMF_DT_M1ThresholdEventA2 * data, int lvl);

void __si_amf_memfree_M1ThresholdEventA2( SI_AMF_DT_M1ThresholdEventA2 * data);

int __si_amf_Encode_M1ThresholdEventA2( SI_AMF_DT_M1ThresholdEventA2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ReportIntervalMDT( char * key, uint8_t eReportIntervalMDT, int lvl);

int __si_amf_Encode_ReportIntervalMDT( uint8_t eReportIntervalMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ReportAmountMDT( char * key, uint8_t eReportAmountMDT, int lvl);

int __si_amf_Encode_ReportAmountMDT( uint8_t eReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M1PeriodicReporting( SI_AMF_DT_M1PeriodicReporting ** data);

void __si_amf_debug_M1PeriodicReporting( char * key, SI_AMF_DT_M1PeriodicReporting * data, int lvl);

void __si_amf_memfree_M1PeriodicReporting( SI_AMF_DT_M1PeriodicReporting * data);

int __si_amf_Encode_M1PeriodicReporting( SI_AMF_DT_M1PeriodicReporting * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M1Configuration( SI_AMF_DT_M1Configuration ** data);

void __si_amf_debug_M1Configuration( char * key, SI_AMF_DT_M1Configuration * data, int lvl);

void __si_amf_memfree_M1Configuration( SI_AMF_DT_M1Configuration * data);

int __si_amf_Encode_M1Configuration( SI_AMF_DT_M1Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M4period( char * key, uint8_t eM4period, int lvl);

int __si_amf_Encode_M4period( uint8_t eM4period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Links_to_log( char * key, uint8_t eLinks_to_log, int lvl);

int __si_amf_Encode_Links_to_log( uint8_t eLinks_to_log, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M4Configuration( SI_AMF_DT_M4Configuration ** data);

void __si_amf_debug_M4Configuration( char * key, SI_AMF_DT_M4Configuration * data, int lvl);

void __si_amf_memfree_M4Configuration( SI_AMF_DT_M4Configuration * data);

int __si_amf_Encode_M4Configuration( SI_AMF_DT_M4Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M5period( char * key, uint8_t eM5period, int lvl);

int __si_amf_Encode_M5period( uint8_t eM5period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M5Configuration( SI_AMF_DT_M5Configuration ** data);

void __si_amf_debug_M5Configuration( char * key, SI_AMF_DT_M5Configuration * data, int lvl);

void __si_amf_memfree_M5Configuration( SI_AMF_DT_M5Configuration * data);

int __si_amf_Encode_M5Configuration( SI_AMF_DT_M5Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M6report_Interval( char * key, uint8_t eM6report_Interval, int lvl);

int __si_amf_Encode_M6report_Interval( uint8_t eM6report_Interval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_M6Configuration( SI_AMF_DT_M6Configuration ** data);

void __si_amf_debug_M6Configuration( char * key, SI_AMF_DT_M6Configuration * data, int lvl);

void __si_amf_memfree_M6Configuration( SI_AMF_DT_M6Configuration * data);

int __si_amf_Encode_M6Configuration( SI_AMF_DT_M6Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M7period( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_M7period( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_M7period( SI_AMF_DT_M7period * data);


void __si_amf_init_M7Configuration( SI_AMF_DT_M7Configuration ** data);

void __si_amf_debug_M7Configuration( char * key, SI_AMF_DT_M7Configuration * data, int lvl);

void __si_amf_memfree_M7Configuration( SI_AMF_DT_M7Configuration * data);

int __si_amf_Encode_M7Configuration( SI_AMF_DT_M7Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_WLANMeasConfig( char * key, uint8_t eWLANMeasConfig, int lvl);

int __si_amf_Encode_WLANMeasConfig( uint8_t eWLANMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WLANMeasConfigNameList( SI_AMF_DT_WLANMeasConfigNameList ** data);

void __si_amf_debug_WLANMeasConfigNameList( char * key, SI_AMF_DT_WLANMeasConfigNameList * data, int lvl);

void __si_amf_memfree_WLANMeasConfigNameList( SI_AMF_DT_WLANMeasConfigNameList * data);

int __si_amf_Encode_WLANMeasConfigNameList( SI_AMF_DT_WLANMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_WLANMeasurementConfiguration_wlan_rssi( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rssi, int lvl);

int __si_amf_Encode_WLANMeasurementConfiguration_wlan_rssi( uint8_t eWLANMeasurementConfiguration_wlan_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_WLANMeasurementConfiguration_wlan_rtt( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rtt, int lvl);

int __si_amf_Encode_WLANMeasurementConfiguration_wlan_rtt( uint8_t eWLANMeasurementConfiguration_wlan_rtt, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WLANMeasurementConfiguration( SI_AMF_DT_WLANMeasurementConfiguration ** data);

void __si_amf_debug_WLANMeasurementConfiguration( char * key, SI_AMF_DT_WLANMeasurementConfiguration * data, int lvl);

void __si_amf_memfree_WLANMeasurementConfiguration( SI_AMF_DT_WLANMeasurementConfiguration * data);

int __si_amf_Encode_WLANMeasurementConfiguration( SI_AMF_DT_WLANMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_Location_Information( SI_AMF_DT_MDT_Location_Information ** data);

void __si_amf_init_MDT_Location_Information2( SI_AMF_DT_MDT_Location_Information ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_MDT_Location_Information( char * key, SI_AMF_DT_MDT_Location_Information * data, int lvl);

void __si_amf_memfree_MDT_Location_Information( SI_AMF_DT_MDT_Location_Information * data);

int __si_amf_Encode_MDT_Location_Information( SI_AMF_DT_MDT_Location_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_Location_Info( SI_AMF_DT_MDT_Location_Info ** data);

void __si_amf_debug_MDT_Location_Info( char * key, SI_AMF_DT_MDT_Location_Info * data, int lvl);

void __si_amf_memfree_MDT_Location_Info( SI_AMF_DT_MDT_Location_Info * data);

int __si_amf_Encode_MDT_Location_Info( SI_AMF_DT_MDT_Location_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SensorMeasConfig( char * key, uint8_t eSensorMeasConfig, int lvl);

int __si_amf_Encode_SensorMeasConfig( uint8_t eSensorMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SensorMeasConfigNameList( SI_AMF_DT_SensorMeasConfigNameList ** data);

void __si_amf_debug_SensorMeasConfigNameList( char * key, SI_AMF_DT_SensorMeasConfigNameList * data, int lvl);

void __si_amf_memfree_SensorMeasConfigNameList( SI_AMF_DT_SensorMeasConfigNameList * data);

int __si_amf_Encode_SensorMeasConfigNameList( SI_AMF_DT_SensorMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SensorMeasurementConfiguration( SI_AMF_DT_SensorMeasurementConfiguration ** data);

void __si_amf_debug_SensorMeasurementConfiguration( char * key, SI_AMF_DT_SensorMeasurementConfiguration * data, int lvl);

void __si_amf_memfree_SensorMeasurementConfiguration( SI_AMF_DT_SensorMeasurementConfiguration * data);

int __si_amf_Encode_SensorMeasurementConfiguration( SI_AMF_DT_SensorMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ImmediateMDTNr( SI_AMF_DT_ImmediateMDTNr ** data);

void __si_amf_debug_ImmediateMDTNr( char * key, SI_AMF_DT_ImmediateMDTNr * data, int lvl);

void __si_amf_memfree_ImmediateMDTNr( SI_AMF_DT_ImmediateMDTNr * data);

int __si_amf_Encode_ImmediateMDTNr( SI_AMF_DT_ImmediateMDTNr * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_InterSystemFailureIndication( SI_AMF_DT_InterSystemFailureIndication ** data);

void __si_amf_debug_InterSystemFailureIndication( char * key, SI_AMF_DT_InterSystemFailureIndication * data, int lvl);

void __si_amf_memfree_InterSystemFailureIndication( SI_AMF_DT_InterSystemFailureIndication * data);

int __si_amf_Encode_InterSystemFailureIndication( SI_AMF_DT_InterSystemFailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONTransferType( SI_AMF_DT_IntersystemSONTransferType ** data);

void __si_amf_debug_IntersystemSONTransferType( char * key, SI_AMF_DT_IntersystemSONTransferType * data, int lvl);

void __si_amf_memfree_IntersystemSONTransferType( SI_AMF_DT_IntersystemSONTransferType * data);

int __si_amf_Encode_IntersystemSONTransferType( SI_AMF_DT_IntersystemSONTransferType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TooearlyIntersystemHO( SI_AMF_DT_TooearlyIntersystemHO ** data);

void __si_amf_debug_TooearlyIntersystemHO( char * key, SI_AMF_DT_TooearlyIntersystemHO * data, int lvl);

void __si_amf_memfree_TooearlyIntersystemHO( SI_AMF_DT_TooearlyIntersystemHO * data);

int __si_amf_Encode_TooearlyIntersystemHO( SI_AMF_DT_TooearlyIntersystemHO * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntersystemUnnecessaryHO_earlyIRATHO( char * key, uint8_t eIntersystemUnnecessaryHO_earlyIRATHO, int lvl);

int __si_amf_Encode_IntersystemUnnecessaryHO_earlyIRATHO( uint8_t eIntersystemUnnecessaryHO_earlyIRATHO, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemUnnecessaryHO( SI_AMF_DT_IntersystemUnnecessaryHO ** data);

void __si_amf_debug_IntersystemUnnecessaryHO( char * key, SI_AMF_DT_IntersystemUnnecessaryHO * data, int lvl);

void __si_amf_memfree_IntersystemUnnecessaryHO( SI_AMF_DT_IntersystemUnnecessaryHO * data);

int __si_amf_Encode_IntersystemUnnecessaryHO( SI_AMF_DT_IntersystemUnnecessaryHO * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_InterSystemHandoverReportType( SI_AMF_DT_InterSystemHandoverReportType ** data);

void __si_amf_debug_InterSystemHandoverReportType( char * key, SI_AMF_DT_InterSystemHandoverReportType * data, int lvl);

void __si_amf_memfree_InterSystemHandoverReportType( SI_AMF_DT_InterSystemHandoverReportType * data);

int __si_amf_Encode_InterSystemHandoverReportType( SI_AMF_DT_InterSystemHandoverReportType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_InterSystemHOReport( SI_AMF_DT_InterSystemHOReport ** data);

void __si_amf_debug_InterSystemHOReport( char * key, SI_AMF_DT_InterSystemHOReport * data, int lvl);

void __si_amf_memfree_InterSystemHOReport( SI_AMF_DT_InterSystemHOReport * data);

int __si_amf_Encode_InterSystemHOReport( SI_AMF_DT_InterSystemHOReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONInformationReport( SI_AMF_DT_IntersystemSONInformationReport ** data);

void __si_amf_debug_IntersystemSONInformationReport( char * key, SI_AMF_DT_IntersystemSONInformationReport * data, int lvl);

void __si_amf_memfree_IntersystemSONInformationReport( SI_AMF_DT_IntersystemSONInformationReport * data);

int __si_amf_Encode_IntersystemSONInformationReport( SI_AMF_DT_IntersystemSONInformationReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONInformation( SI_AMF_DT_IntersystemSONInformation ** data);

void __si_amf_debug_IntersystemSONInformation( char * key, SI_AMF_DT_IntersystemSONInformation * data, int lvl);

void __si_amf_memfree_IntersystemSONInformation( SI_AMF_DT_IntersystemSONInformation * data);

int __si_amf_Encode_IntersystemSONInformation( SI_AMF_DT_IntersystemSONInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONConfigurationTransfer( SI_AMF_DT_IntersystemSONConfigurationTransfer ** data);

void __si_amf_debug_IntersystemSONConfigurationTransfer( char * key, SI_AMF_DT_IntersystemSONConfigurationTransfer * data, int lvl);

void __si_amf_memfree_IntersystemSONConfigurationTransfer( SI_AMF_DT_IntersystemSONConfigurationTransfer * data);

int __si_amf_Encode_IntersystemSONConfigurationTransfer( SI_AMF_DT_IntersystemSONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntersystemCellActivationRequest_activationID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_IntersystemCellActivationRequest_activationID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_IntersystemCellActivationRequest_activationID( SI_AMF_DT_IntersystemCellActivationRequest_activationID * data);


void __si_amf_init_CellsToActivateList( SI_AMF_DT_CellsToActivateList ** data);

void __si_amf_debug_CellsToActivateList( char * key, SI_AMF_DT_CellsToActivateList * data, int lvl);

void __si_amf_memfree_CellsToActivateList( SI_AMF_DT_CellsToActivateList * data);

int __si_amf_Encode_CellsToActivateList( SI_AMF_DT_CellsToActivateList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemCellActivationRequest( SI_AMF_DT_IntersystemCellActivationRequest ** data);

void __si_amf_debug_IntersystemCellActivationRequest( char * key, SI_AMF_DT_IntersystemCellActivationRequest * data, int lvl);

void __si_amf_memfree_IntersystemCellActivationRequest( SI_AMF_DT_IntersystemCellActivationRequest * data);

int __si_amf_Encode_IntersystemCellActivationRequest( SI_AMF_DT_IntersystemCellActivationRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_CellToReportList( SI_AMF_DT_EUTRAN_CellToReportList ** data);

void __si_amf_debug_EUTRAN_CellToReportList( char * key, SI_AMF_DT_EUTRAN_CellToReportList * data, int lvl);

void __si_amf_memfree_EUTRAN_CellToReportList( SI_AMF_DT_EUTRAN_CellToReportList * data);

int __si_amf_Encode_EUTRAN_CellToReportList( SI_AMF_DT_EUTRAN_CellToReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_ReportingSystemIEs( SI_AMF_DT_EUTRAN_ReportingSystemIEs ** data);

void __si_amf_debug_EUTRAN_ReportingSystemIEs( char * key, SI_AMF_DT_EUTRAN_ReportingSystemIEs * data, int lvl);

void __si_amf_memfree_EUTRAN_ReportingSystemIEs( SI_AMF_DT_EUTRAN_ReportingSystemIEs * data);

int __si_amf_Encode_EUTRAN_ReportingSystemIEs( SI_AMF_DT_EUTRAN_ReportingSystemIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_CellToReportList( SI_AMF_DT_NGRAN_CellToReportList ** data);

void __si_amf_debug_NGRAN_CellToReportList( char * key, SI_AMF_DT_NGRAN_CellToReportList * data, int lvl);

void __si_amf_memfree_NGRAN_CellToReportList( SI_AMF_DT_NGRAN_CellToReportList * data);

int __si_amf_Encode_NGRAN_CellToReportList( SI_AMF_DT_NGRAN_CellToReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_ReportingSystemIEs( SI_AMF_DT_NGRAN_ReportingSystemIEs ** data);

void __si_amf_debug_NGRAN_ReportingSystemIEs( char * key, SI_AMF_DT_NGRAN_ReportingSystemIEs * data, int lvl);

void __si_amf_memfree_NGRAN_ReportingSystemIEs( SI_AMF_DT_NGRAN_ReportingSystemIEs * data);

int __si_amf_Encode_NGRAN_ReportingSystemIEs( SI_AMF_DT_NGRAN_ReportingSystemIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ReportingSystem( SI_AMF_DT_ReportingSystem ** data);

void __si_amf_debug_ReportingSystem( char * key, SI_AMF_DT_ReportingSystem * data, int lvl);

void __si_amf_memfree_ReportingSystem( SI_AMF_DT_ReportingSystem * data);

int __si_amf_Encode_ReportingSystem( SI_AMF_DT_ReportingSystem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ReportCharacteristics( SI_AMF_DT_ReportCharacteristics ** data);

void __si_amf_init_ReportCharacteristics2( SI_AMF_DT_ReportCharacteristics ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ReportCharacteristics( char * key, SI_AMF_DT_ReportCharacteristics * data, int lvl);

void __si_amf_memfree_ReportCharacteristics( SI_AMF_DT_ReportCharacteristics * data);

int __si_amf_Encode_ReportCharacteristics( SI_AMF_DT_ReportCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntersystemResourceThreshold( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_IntersystemResourceThreshold( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_IntersystemResourceThreshold( SI_AMF_DT_IntersystemResourceThreshold * data);


void __si_amf_debug_NumberOfMeasurementReportingLevels( char * key, uint8_t eNumberOfMeasurementReportingLevels, int lvl);

int __si_amf_Encode_NumberOfMeasurementReportingLevels( uint8_t eNumberOfMeasurementReportingLevels, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EventBasedReportingIEs( SI_AMF_DT_EventBasedReportingIEs ** data);

void __si_amf_debug_EventBasedReportingIEs( char * key, SI_AMF_DT_EventBasedReportingIEs * data, int lvl);

void __si_amf_memfree_EventBasedReportingIEs( SI_AMF_DT_EventBasedReportingIEs * data);

int __si_amf_Encode_EventBasedReportingIEs( SI_AMF_DT_EventBasedReportingIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ReportingPeriodicity( char * key, uint8_t eReportingPeriodicity, int lvl);

int __si_amf_Encode_ReportingPeriodicity( uint8_t eReportingPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PeriodicReportingIEs( SI_AMF_DT_PeriodicReportingIEs ** data);

void __si_amf_debug_PeriodicReportingIEs( char * key, SI_AMF_DT_PeriodicReportingIEs * data, int lvl);

void __si_amf_memfree_PeriodicReportingIEs( SI_AMF_DT_PeriodicReportingIEs * data);

int __si_amf_Encode_PeriodicReportingIEs( SI_AMF_DT_PeriodicReportingIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ReportType( SI_AMF_DT_ReportType ** data);

void __si_amf_debug_ReportType( char * key, SI_AMF_DT_ReportType * data, int lvl);

void __si_amf_memfree_ReportType( SI_AMF_DT_ReportType * data);

int __si_amf_Encode_ReportType( SI_AMF_DT_ReportType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemResourceStatusRequest( SI_AMF_DT_IntersystemResourceStatusRequest ** data);

void __si_amf_debug_IntersystemResourceStatusRequest( char * key, SI_AMF_DT_IntersystemResourceStatusRequest * data, int lvl);

void __si_amf_memfree_IntersystemResourceStatusRequest( SI_AMF_DT_IntersystemResourceStatusRequest * data);

int __si_amf_Encode_IntersystemResourceStatusRequest( SI_AMF_DT_IntersystemResourceStatusRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONInformationRequest( SI_AMF_DT_IntersystemSONInformationRequest ** data);

void __si_amf_debug_IntersystemSONInformationRequest( char * key, SI_AMF_DT_IntersystemSONInformationRequest * data, int lvl);

void __si_amf_memfree_IntersystemSONInformationRequest( SI_AMF_DT_IntersystemSONInformationRequest * data);

int __si_amf_Encode_IntersystemSONInformationRequest( SI_AMF_DT_IntersystemSONInformationRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_CellToReportItem( SI_AMF_DT_EUTRAN_CellToReportItem ** data);

void __si_amf_debug_EUTRAN_CellToReportItem( char * key, SI_AMF_DT_EUTRAN_CellToReportItem * data, int lvl);

void __si_amf_memfree_EUTRAN_CellToReportItem( SI_AMF_DT_EUTRAN_CellToReportItem * data);

int __si_amf_Encode_EUTRAN_CellToReportItem( SI_AMF_DT_EUTRAN_CellToReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_CellToReportItem( SI_AMF_DT_NGRAN_CellToReportItem ** data);

void __si_amf_debug_NGRAN_CellToReportItem( char * key, SI_AMF_DT_NGRAN_CellToReportItem * data, int lvl);

void __si_amf_memfree_NGRAN_CellToReportItem( SI_AMF_DT_NGRAN_CellToReportItem * data);

int __si_amf_Encode_NGRAN_CellToReportItem( SI_AMF_DT_NGRAN_CellToReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ActivatedCellList( SI_AMF_DT_ActivatedCellList ** data);

void __si_amf_debug_ActivatedCellList( char * key, SI_AMF_DT_ActivatedCellList * data, int lvl);

void __si_amf_memfree_ActivatedCellList( SI_AMF_DT_ActivatedCellList * data);

int __si_amf_Encode_ActivatedCellList( SI_AMF_DT_ActivatedCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IntersystemCellActivationReply_activation_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_IntersystemCellActivationReply_activation_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_IntersystemCellActivationReply_activation_ID( SI_AMF_DT_IntersystemCellActivationReply_activation_ID * data);


void __si_amf_init_IntersystemCellActivationReply( SI_AMF_DT_IntersystemCellActivationReply ** data);

void __si_amf_debug_IntersystemCellActivationReply( char * key, SI_AMF_DT_IntersystemCellActivationReply * data, int lvl);

void __si_amf_memfree_IntersystemCellActivationReply( SI_AMF_DT_IntersystemCellActivationReply * data);

int __si_amf_Encode_IntersystemCellActivationReply( SI_AMF_DT_IntersystemCellActivationReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemResourceStatusReply( SI_AMF_DT_IntersystemResourceStatusReply ** data);

void __si_amf_debug_IntersystemResourceStatusReply( char * key, SI_AMF_DT_IntersystemResourceStatusReply * data, int lvl);

void __si_amf_memfree_IntersystemResourceStatusReply( SI_AMF_DT_IntersystemResourceStatusReply * data);

int __si_amf_Encode_IntersystemResourceStatusReply( SI_AMF_DT_IntersystemResourceStatusReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemSONInformationReply( SI_AMF_DT_IntersystemSONInformationReply ** data);

void __si_amf_debug_IntersystemSONInformationReply( char * key, SI_AMF_DT_IntersystemSONInformationReply * data, int lvl);

void __si_amf_memfree_IntersystemSONInformationReply( SI_AMF_DT_IntersystemSONInformationReply * data);

int __si_amf_Encode_IntersystemSONInformationReply( SI_AMF_DT_IntersystemSONInformationReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NotificationCellList( SI_AMF_DT_NotificationCellList ** data);

void __si_amf_debug_NotificationCellList( char * key, SI_AMF_DT_NotificationCellList * data, int lvl);

void __si_amf_memfree_NotificationCellList( SI_AMF_DT_NotificationCellList * data);

int __si_amf_Encode_NotificationCellList( SI_AMF_DT_NotificationCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemCellStateIndication( SI_AMF_DT_IntersystemCellStateIndication ** data);

void __si_amf_debug_IntersystemCellStateIndication( char * key, SI_AMF_DT_IntersystemCellStateIndication * data, int lvl);

void __si_amf_memfree_IntersystemCellStateIndication( SI_AMF_DT_IntersystemCellStateIndication * data);

int __si_amf_Encode_IntersystemCellStateIndication( SI_AMF_DT_IntersystemCellStateIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NotificationCellItem_notifyFlag( char * key, uint8_t eNotificationCellItem_notifyFlag, int lvl);

int __si_amf_Encode_NotificationCellItem_notifyFlag( uint8_t eNotificationCellItem_notifyFlag, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NotificationCell_Item( SI_AMF_DT_NotificationCell_Item ** data);

void __si_amf_debug_NotificationCell_Item( char * key, SI_AMF_DT_NotificationCell_Item * data, int lvl);

void __si_amf_memfree_NotificationCell_Item( SI_AMF_DT_NotificationCell_Item * data);

int __si_amf_Encode_NotificationCell_Item( SI_AMF_DT_NotificationCell_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_CellReportList( SI_AMF_DT_EUTRAN_CellReportList ** data);

void __si_amf_debug_EUTRAN_CellReportList( char * key, SI_AMF_DT_EUTRAN_CellReportList * data, int lvl);

void __si_amf_memfree_EUTRAN_CellReportList( SI_AMF_DT_EUTRAN_CellReportList * data);

int __si_amf_Encode_EUTRAN_CellReportList( SI_AMF_DT_EUTRAN_CellReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_ReportingStatusIEs( SI_AMF_DT_EUTRAN_ReportingStatusIEs ** data);

void __si_amf_debug_EUTRAN_ReportingStatusIEs( char * key, SI_AMF_DT_EUTRAN_ReportingStatusIEs * data, int lvl);

void __si_amf_memfree_EUTRAN_ReportingStatusIEs( SI_AMF_DT_EUTRAN_ReportingStatusIEs * data);

int __si_amf_Encode_EUTRAN_ReportingStatusIEs( SI_AMF_DT_EUTRAN_ReportingStatusIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_CellReportList( SI_AMF_DT_NGRAN_CellReportList ** data);

void __si_amf_debug_NGRAN_CellReportList( char * key, SI_AMF_DT_NGRAN_CellReportList * data, int lvl);

void __si_amf_memfree_NGRAN_CellReportList( SI_AMF_DT_NGRAN_CellReportList * data);

int __si_amf_Encode_NGRAN_CellReportList( SI_AMF_DT_NGRAN_CellReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_ReportingStatusIEs( SI_AMF_DT_NGRAN_ReportingStatusIEs ** data);

void __si_amf_debug_NGRAN_ReportingStatusIEs( char * key, SI_AMF_DT_NGRAN_ReportingStatusIEs * data, int lvl);

void __si_amf_memfree_NGRAN_ReportingStatusIEs( SI_AMF_DT_NGRAN_ReportingStatusIEs * data);

int __si_amf_Encode_NGRAN_ReportingStatusIEs( SI_AMF_DT_NGRAN_ReportingStatusIEs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ResourceStatusReportingSystem( SI_AMF_DT_ResourceStatusReportingSystem ** data);

void __si_amf_debug_ResourceStatusReportingSystem( char * key, SI_AMF_DT_ResourceStatusReportingSystem * data, int lvl);

void __si_amf_memfree_ResourceStatusReportingSystem( SI_AMF_DT_ResourceStatusReportingSystem * data);

int __si_amf_Encode_ResourceStatusReportingSystem( SI_AMF_DT_ResourceStatusReportingSystem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemResourceStatusReport( SI_AMF_DT_IntersystemResourceStatusReport ** data);

void __si_amf_debug_IntersystemResourceStatusReport( char * key, SI_AMF_DT_IntersystemResourceStatusReport * data, int lvl);

void __si_amf_memfree_IntersystemResourceStatusReport( SI_AMF_DT_IntersystemResourceStatusReport * data);

int __si_amf_Encode_IntersystemResourceStatusReport( SI_AMF_DT_IntersystemResourceStatusReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_CompositeAvailableCapacity_cellCapacityClassValue( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_CompositeAvailableCapacity_cellCapacityClassValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_CompositeAvailableCapacity_cellCapacityClassValue( SI_AMF_DT_CompositeAvailableCapacity_cellCapacityClassValue * data);


void __si_amf_debug_CompositeAvailableCapacity_capacityValue( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_CompositeAvailableCapacity_capacityValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_CompositeAvailableCapacity_capacityValue( SI_AMF_DT_CompositeAvailableCapacity_capacityValue * data);


void __si_amf_init_CompositeAvailableCapacity( SI_AMF_DT_CompositeAvailableCapacity ** data);

void __si_amf_debug_CompositeAvailableCapacity( char * key, SI_AMF_DT_CompositeAvailableCapacity * data, int lvl);

void __si_amf_memfree_CompositeAvailableCapacity( SI_AMF_DT_CompositeAvailableCapacity * data);

int __si_amf_Encode_CompositeAvailableCapacity( SI_AMF_DT_CompositeAvailableCapacity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_CompositeAvailableCapacityGroup( SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup ** data);

void __si_amf_debug_EUTRAN_CompositeAvailableCapacityGroup( char * key, SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup * data, int lvl);

void __si_amf_memfree_EUTRAN_CompositeAvailableCapacityGroup( SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup * data);

int __si_amf_Encode_EUTRAN_CompositeAvailableCapacityGroup( SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_EUTRAN_NumberOfActiveUEs( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRAN_NumberOfActiveUEs( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRAN_NumberOfActiveUEs( SI_AMF_DT_EUTRAN_NumberOfActiveUEs * data);


void __si_amf_debug_NGRAN_NoofRRCConnections( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRAN_NoofRRCConnections( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRAN_NoofRRCConnections( SI_AMF_DT_NGRAN_NoofRRCConnections * data);


void __si_amf_debug_EUTRANRadioResourceStatus_dL_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_dL_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_dL_GBR_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_dL_GBR_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_uL_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_uL_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_uL_GBR_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_uL_GBR_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_dL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_dL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_dL_Total_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_dL_Total_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_uL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_uL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_uL_Total_PRB_usage( SI_AMF_DT_EUTRANRadioResourceStatus_uL_Total_PRB_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage( SI_AMF_DT_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage * data);


void __si_amf_debug_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage( SI_AMF_DT_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage * data);


void __si_amf_init_EUTRAN_RadioResourceStatus( SI_AMF_DT_EUTRAN_RadioResourceStatus ** data);

void __si_amf_debug_EUTRAN_RadioResourceStatus( char * key, SI_AMF_DT_EUTRAN_RadioResourceStatus * data, int lvl);

void __si_amf_memfree_EUTRAN_RadioResourceStatus( SI_AMF_DT_EUTRAN_RadioResourceStatus * data);

int __si_amf_Encode_EUTRAN_RadioResourceStatus( SI_AMF_DT_EUTRAN_RadioResourceStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_EUTRAN_CellReportItem( SI_AMF_DT_EUTRAN_CellReportItem ** data);

void __si_amf_debug_EUTRAN_CellReportItem( char * key, SI_AMF_DT_EUTRAN_CellReportItem * data, int lvl);

void __si_amf_memfree_EUTRAN_CellReportItem( SI_AMF_DT_EUTRAN_CellReportItem * data);

int __si_amf_Encode_EUTRAN_CellReportItem( SI_AMF_DT_EUTRAN_CellReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NGRAN_NumberOfActiveUEs( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRAN_NumberOfActiveUEs( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRAN_NumberOfActiveUEs( SI_AMF_DT_NGRAN_NumberOfActiveUEs * data);


void __si_amf_debug_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO * data);


void __si_amf_debug_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO * data);


void __si_amf_debug_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO * data);


void __si_amf_debug_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO * data);


void __si_amf_debug_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO * data);


void __si_amf_debug_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO( SI_AMF_DT_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO * data);


void __si_amf_init_NGRAN_RadioResourceStatus( SI_AMF_DT_NGRAN_RadioResourceStatus ** data);

void __si_amf_debug_NGRAN_RadioResourceStatus( char * key, SI_AMF_DT_NGRAN_RadioResourceStatus * data, int lvl);

void __si_amf_memfree_NGRAN_RadioResourceStatus( SI_AMF_DT_NGRAN_RadioResourceStatus * data);

int __si_amf_Encode_NGRAN_RadioResourceStatus( SI_AMF_DT_NGRAN_RadioResourceStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_CellReportItem( SI_AMF_DT_NGRAN_CellReportItem ** data);

void __si_amf_debug_NGRAN_CellReportItem( char * key, SI_AMF_DT_NGRAN_CellReportItem * data, int lvl);

void __si_amf_memfree_NGRAN_CellReportItem( SI_AMF_DT_NGRAN_CellReportItem * data);

int __si_amf_Encode_NGRAN_CellReportItem( SI_AMF_DT_NGRAN_CellReportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_IntersystemMobilityFailureforVoiceFallback( SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback ** data);

void __si_amf_debug_IntersystemMobilityFailureforVoiceFallback( char * key, SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback * data, int lvl);

void __si_amf_memfree_IntersystemMobilityFailureforVoiceFallback( SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback * data);

int __si_amf_Encode_IntersystemMobilityFailureforVoiceFallback( SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LAC( SI_AMF_DT_LAC ** data);

void __si_amf_init_LAC2( SI_AMF_DT_LAC ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_LAC( char * key, SI_AMF_DT_LAC * data, int lvl);

void __si_amf_memfree_LAC( SI_AMF_DT_LAC * data);

int __si_amf_Encode_LAC( SI_AMF_DT_LAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LAI( SI_AMF_DT_LAI ** data);

void __si_amf_debug_LAI( char * key, SI_AMF_DT_LAI * data, int lvl);

void __si_amf_memfree_LAI( SI_AMF_DT_LAI * data);

int __si_amf_Encode_LAI( SI_AMF_DT_LAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimeUEStayedInCell( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TimeUEStayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TimeUEStayedInCell( SI_AMF_DT_TimeUEStayedInCell * data);


void __si_amf_debug_TimeUEStayedInCellEnhancedGranularity( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TimeUEStayedInCellEnhancedGranularity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TimeUEStayedInCellEnhancedGranularity( SI_AMF_DT_TimeUEStayedInCellEnhancedGranularity * data);


void __si_amf_init_LastVisitedNGRANCellInformation( SI_AMF_DT_LastVisitedNGRANCellInformation ** data);

void __si_amf_debug_LastVisitedNGRANCellInformation( char * key, SI_AMF_DT_LastVisitedNGRANCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedNGRANCellInformation( SI_AMF_DT_LastVisitedNGRANCellInformation * data);

int __si_amf_Encode_LastVisitedNGRANCellInformation( SI_AMF_DT_LastVisitedNGRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedEUTRANCellInformation( SI_AMF_DT_LastVisitedEUTRANCellInformation ** data);

void __si_amf_init_LastVisitedEUTRANCellInformation2( SI_AMF_DT_LastVisitedEUTRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_LastVisitedEUTRANCellInformation( char * key, SI_AMF_DT_LastVisitedEUTRANCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedEUTRANCellInformation( SI_AMF_DT_LastVisitedEUTRANCellInformation * data);

int __si_amf_Encode_LastVisitedEUTRANCellInformation( SI_AMF_DT_LastVisitedEUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedUTRANCellInformation( SI_AMF_DT_LastVisitedUTRANCellInformation ** data);

void __si_amf_init_LastVisitedUTRANCellInformation2( SI_AMF_DT_LastVisitedUTRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_LastVisitedUTRANCellInformation( char * key, SI_AMF_DT_LastVisitedUTRANCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedUTRANCellInformation( SI_AMF_DT_LastVisitedUTRANCellInformation * data);

int __si_amf_Encode_LastVisitedUTRANCellInformation( SI_AMF_DT_LastVisitedUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedGERANCellInformation( SI_AMF_DT_LastVisitedGERANCellInformation ** data);

void __si_amf_init_LastVisitedGERANCellInformation2( SI_AMF_DT_LastVisitedGERANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_LastVisitedGERANCellInformation( char * key, SI_AMF_DT_LastVisitedGERANCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedGERANCellInformation( SI_AMF_DT_LastVisitedGERANCellInformation * data);

int __si_amf_Encode_LastVisitedGERANCellInformation( SI_AMF_DT_LastVisitedGERANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedCellInformation( SI_AMF_DT_LastVisitedCellInformation ** data);

void __si_amf_debug_LastVisitedCellInformation( char * key, SI_AMF_DT_LastVisitedCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedCellInformation( SI_AMF_DT_LastVisitedCellInformation * data);

int __si_amf_Encode_LastVisitedCellInformation( SI_AMF_DT_LastVisitedCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedCellItem( SI_AMF_DT_LastVisitedCellItem ** data);

void __si_amf_debug_LastVisitedCellItem( char * key, SI_AMF_DT_LastVisitedCellItem * data, int lvl);

void __si_amf_memfree_LastVisitedCellItem( SI_AMF_DT_LastVisitedCellItem * data);

int __si_amf_Encode_LastVisitedCellItem( SI_AMF_DT_LastVisitedCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LastVisitedPSCellList( SI_AMF_DT_LastVisitedPSCellList ** data);

void __si_amf_debug_LastVisitedPSCellList( char * key, SI_AMF_DT_LastVisitedPSCellList * data, int lvl);

void __si_amf_memfree_LastVisitedPSCellList( SI_AMF_DT_LastVisitedPSCellList * data);

int __si_amf_Encode_LastVisitedPSCellList( SI_AMF_DT_LastVisitedPSCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LastVisitedPSCellInformation_timeStay( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_LastVisitedPSCellInformation_timeStay( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_LastVisitedPSCellInformation_timeStay( SI_AMF_DT_LastVisitedPSCellInformation_timeStay * data);


void __si_amf_init_LastVisitedPSCellInformation( SI_AMF_DT_LastVisitedPSCellInformation ** data);

void __si_amf_debug_LastVisitedPSCellInformation( char * key, SI_AMF_DT_LastVisitedPSCellInformation * data, int lvl);

void __si_amf_memfree_LastVisitedPSCellInformation( SI_AMF_DT_LastVisitedPSCellInformation * data);

int __si_amf_Encode_LastVisitedPSCellInformation( SI_AMF_DT_LastVisitedPSCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LocationReportingAdditionalInfo( char * key, uint8_t eLocationReportingAdditionalInfo, int lvl);

int __si_amf_Encode_LocationReportingAdditionalInfo( uint8_t eLocationReportingAdditionalInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ReportArea( char * key, uint8_t eReportArea, int lvl);

int __si_amf_Encode_ReportArea( uint8_t eReportArea, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LocationReportingRequestType( SI_AMF_DT_LocationReportingRequestType ** data);

void __si_amf_debug_LocationReportingRequestType( char * key, SI_AMF_DT_LocationReportingRequestType * data, int lvl);

void __si_amf_memfree_LocationReportingRequestType( SI_AMF_DT_LocationReportingRequestType * data);

int __si_amf_Encode_LocationReportingRequestType( SI_AMF_DT_LocationReportingRequestType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LoggingInterval( char * key, uint8_t eLoggingInterval, int lvl);

int __si_amf_Encode_LoggingInterval( uint8_t eLoggingInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LoggingDuration( char * key, uint8_t eLoggingDuration, int lvl);

int __si_amf_Encode_LoggingDuration( uint8_t eLoggingDuration, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LoggedMDTTrigger( SI_AMF_DT_LoggedMDTTrigger ** data);

void __si_amf_debug_LoggedMDTTrigger( char * key, SI_AMF_DT_LoggedMDTTrigger * data, int lvl);

void __si_amf_memfree_LoggedMDTTrigger( SI_AMF_DT_LoggedMDTTrigger * data);

int __si_amf_Encode_LoggedMDTTrigger( SI_AMF_DT_LoggedMDTTrigger * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LoggedMDTNr( SI_AMF_DT_LoggedMDTNr ** data);

void __si_amf_debug_LoggedMDTNr( char * key, SI_AMF_DT_LoggedMDTNr * data, int lvl);

void __si_amf_memfree_LoggedMDTNr( SI_AMF_DT_LoggedMDTNr * data);

int __si_amf_Encode_LoggedMDTNr( SI_AMF_DT_LoggedMDTNr * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LTEM_Indication( char * key, uint8_t eLTEM_Indication, int lvl);

int __si_amf_Encode_LTEM_Indication( uint8_t eLTEM_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_VehicleUE( char * key, uint8_t eVehicleUE, int lvl);

int __si_amf_Encode_VehicleUE( uint8_t eVehicleUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PedestrianUE( char * key, uint8_t ePedestrianUE, int lvl);

int __si_amf_Encode_PedestrianUE( uint8_t ePedestrianUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LTEV2XServicesAuthorized( SI_AMF_DT_LTEV2XServicesAuthorized ** data);

void __si_amf_debug_LTEV2XServicesAuthorized( char * key, SI_AMF_DT_LTEV2XServicesAuthorized * data, int lvl);

void __si_amf_memfree_LTEV2XServicesAuthorized( SI_AMF_DT_LTEV2XServicesAuthorized * data);

int __si_amf_Encode_LTEV2XServicesAuthorized( SI_AMF_DT_LTEV2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LTEUESidelinkAggregateMaximumBitrate( SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate ** data);

void __si_amf_debug_LTEUESidelinkAggregateMaximumBitrate( char * key, SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * data, int lvl);

void __si_amf_memfree_LTEUESidelinkAggregateMaximumBitrate( SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * data);

int __si_amf_Encode_LTEUESidelinkAggregateMaximumBitrate( SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LTEA2XServicesAuthorized_aerialUE( char * key, uint8_t eLTEA2XServicesAuthorized_aerialUE, int lvl);

int __si_amf_Encode_LTEA2XServicesAuthorized_aerialUE( uint8_t eLTEA2XServicesAuthorized_aerialUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_LTEA2XServicesAuthorized_aerialControllerUE( char * key, uint8_t eLTEA2XServicesAuthorized_aerialControllerUE, int lvl);

int __si_amf_Encode_LTEA2XServicesAuthorized_aerialControllerUE( uint8_t eLTEA2XServicesAuthorized_aerialControllerUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_LTE_A2X_ServicesAuthorized( SI_AMF_DT_LTE_A2X_ServicesAuthorized ** data);

void __si_amf_debug_LTE_A2X_ServicesAuthorized( char * key, SI_AMF_DT_LTE_A2X_ServicesAuthorized * data, int lvl);

void __si_amf_memfree_LTE_A2X_ServicesAuthorized( SI_AMF_DT_LTE_A2X_ServicesAuthorized * data);

int __si_amf_Encode_LTE_A2X_ServicesAuthorized( SI_AMF_DT_LTE_A2X_ServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MaskedIMEISV( SI_AMF_DT_MaskedIMEISV ** data);

void __si_amf_init_MaskedIMEISV2( SI_AMF_DT_MaskedIMEISV ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_MaskedIMEISV( char * key, SI_AMF_DT_MaskedIMEISV * data, int lvl);

void __si_amf_memfree_MaskedIMEISV( SI_AMF_DT_MaskedIMEISV * data);

int __si_amf_Encode_MaskedIMEISV( SI_AMF_DT_MaskedIMEISV * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MessageIdentifier( SI_AMF_DT_MessageIdentifier ** data);

void __si_amf_init_MessageIdentifier2( SI_AMF_DT_MessageIdentifier ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_MessageIdentifier( char * key, SI_AMF_DT_MessageIdentifier * data, int lvl);

void __si_amf_memfree_MessageIdentifier( SI_AMF_DT_MessageIdentifier * data);

int __si_amf_Encode_MessageIdentifier( SI_AMF_DT_MessageIdentifier * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MaximumIntegrityProtectedDataRate( char * key, uint8_t eMaximumIntegrityProtectedDataRate, int lvl);

int __si_amf_Encode_MaximumIntegrityProtectedDataRate( uint8_t eMaximumIntegrityProtectedDataRate, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MBS_AreaSessionID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MBS_AreaSessionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MBS_AreaSessionID( SI_AMF_DT_MBS_AreaSessionID * data);


void __si_amf_debug_MBSCommServiceType( char * key, uint8_t eMBSCommServiceType, int lvl);

int __si_amf_Encode_MBSCommServiceType( uint8_t eMBSCommServiceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DataForwardingResponseMRBList( SI_AMF_DT_MBS_DataForwardingResponseMRBList ** data);

void __si_amf_debug_MBS_DataForwardingResponseMRBList( char * key, SI_AMF_DT_MBS_DataForwardingResponseMRBList * data, int lvl);

void __si_amf_memfree_MBS_DataForwardingResponseMRBList( SI_AMF_DT_MBS_DataForwardingResponseMRBList * data);

int __si_amf_Encode_MBS_DataForwardingResponseMRBList( SI_AMF_DT_MBS_DataForwardingResponseMRBList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MRB_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MRB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MRB_ID( SI_AMF_DT_MRB_ID * data);


void __si_amf_debug_MRBProgressInformation_pDCP_SN_Length12( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MRBProgressInformation_pDCP_SN_Length12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MRBProgressInformation_pDCP_SN_Length12( SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length12 * data);


void __si_amf_debug_MRBProgressInformation_pDCP_SN_Length18( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_MRBProgressInformation_pDCP_SN_Length18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_MRBProgressInformation_pDCP_SN_Length18( SI_AMF_DT_MRBProgressInformation_pDCP_SN_Length18 * data);


void __si_amf_init_MRB_ProgressInformation( SI_AMF_DT_MRB_ProgressInformation ** data);

void __si_amf_debug_MRB_ProgressInformation( char * key, SI_AMF_DT_MRB_ProgressInformation * data, int lvl);

void __si_amf_memfree_MRB_ProgressInformation( SI_AMF_DT_MRB_ProgressInformation * data);

int __si_amf_Encode_MRB_ProgressInformation( SI_AMF_DT_MRB_ProgressInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DataForwardingResponseMRBItem( SI_AMF_DT_MBS_DataForwardingResponseMRBItem ** data);

void __si_amf_debug_MBS_DataForwardingResponseMRBItem( char * key, SI_AMF_DT_MBS_DataForwardingResponseMRBItem * data, int lvl);

void __si_amf_memfree_MBS_DataForwardingResponseMRBItem( SI_AMF_DT_MBS_DataForwardingResponseMRBItem * data);

int __si_amf_Encode_MBS_DataForwardingResponseMRBItem( SI_AMF_DT_MBS_DataForwardingResponseMRBItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_MappingandDataForwardingRequestList( SI_AMF_DT_MBS_MappingandDataForwardingRequestList ** data);

void __si_amf_debug_MBS_MappingandDataForwardingRequestList( char * key, SI_AMF_DT_MBS_MappingandDataForwardingRequestList * data, int lvl);

void __si_amf_memfree_MBS_MappingandDataForwardingRequestList( SI_AMF_DT_MBS_MappingandDataForwardingRequestList * data);

int __si_amf_Encode_MBS_MappingandDataForwardingRequestList( SI_AMF_DT_MBS_MappingandDataForwardingRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_QoSFlowList( SI_AMF_DT_MBS_QoSFlowList ** data);

void __si_amf_debug_MBS_QoSFlowList( char * key, SI_AMF_DT_MBS_QoSFlowList * data, int lvl);

void __si_amf_memfree_MBS_QoSFlowList( SI_AMF_DT_MBS_QoSFlowList * data);

int __si_amf_Encode_MBS_QoSFlowList( SI_AMF_DT_MBS_QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_MappingandDataForwardingRequestItem( SI_AMF_DT_MBS_MappingandDataForwardingRequestItem ** data);

void __si_amf_debug_MBS_MappingandDataForwardingRequestItem( char * key, SI_AMF_DT_MBS_MappingandDataForwardingRequestItem * data, int lvl);

void __si_amf_memfree_MBS_MappingandDataForwardingRequestItem( SI_AMF_DT_MBS_MappingandDataForwardingRequestItem * data);

int __si_amf_Encode_MBS_MappingandDataForwardingRequestItem( SI_AMF_DT_MBS_MappingandDataForwardingRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_QoSFlowsToBeSetupList( SI_AMF_DT_MBS_QoSFlowsToBeSetupList ** data);

void __si_amf_debug_MBS_QoSFlowsToBeSetupList( char * key, SI_AMF_DT_MBS_QoSFlowsToBeSetupList * data, int lvl);

void __si_amf_memfree_MBS_QoSFlowsToBeSetupList( SI_AMF_DT_MBS_QoSFlowsToBeSetupList * data);

int __si_amf_Encode_MBS_QoSFlowsToBeSetupList( SI_AMF_DT_MBS_QoSFlowsToBeSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NonDynamic5QIDescriptor( SI_AMF_DT_NonDynamic5QIDescriptor ** data);

void __si_amf_debug_NonDynamic5QIDescriptor( char * key, SI_AMF_DT_NonDynamic5QIDescriptor * data, int lvl);

void __si_amf_memfree_NonDynamic5QIDescriptor( SI_AMF_DT_NonDynamic5QIDescriptor * data);

int __si_amf_Encode_NonDynamic5QIDescriptor( SI_AMF_DT_NonDynamic5QIDescriptor * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosCharacteristics( SI_AMF_DT_QosCharacteristics ** data);

void __si_amf_debug_QosCharacteristics( char * key, SI_AMF_DT_QosCharacteristics * data, int lvl);

void __si_amf_memfree_QosCharacteristics( SI_AMF_DT_QosCharacteristics * data);

int __si_amf_Encode_QosCharacteristics( SI_AMF_DT_QosCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ReflectiveQosAttribute( char * key, uint8_t eReflectiveQosAttribute, int lvl);

int __si_amf_Encode_ReflectiveQosAttribute( uint8_t eReflectiveQosAttribute, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowLevelQosParameters( SI_AMF_DT_QosFlowLevelQosParameters ** data);

void __si_amf_debug_QosFlowLevelQosParameters( char * key, SI_AMF_DT_QosFlowLevelQosParameters * data, int lvl);

void __si_amf_memfree_QosFlowLevelQosParameters( SI_AMF_DT_QosFlowLevelQosParameters * data);

int __si_amf_Encode_QosFlowLevelQosParameters( SI_AMF_DT_QosFlowLevelQosParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_QoSFlowsToBeSetupItem( SI_AMF_DT_MBS_QoSFlowsToBeSetupItem ** data);

void __si_amf_debug_MBS_QoSFlowsToBeSetupItem( char * key, SI_AMF_DT_MBS_QoSFlowsToBeSetupItem * data, int lvl);

void __si_amf_memfree_MBS_QoSFlowsToBeSetupItem( SI_AMF_DT_MBS_QoSFlowsToBeSetupItem * data);

int __si_amf_Encode_MBS_QoSFlowsToBeSetupItem( SI_AMF_DT_MBS_QoSFlowsToBeSetupItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceAreaCellList( SI_AMF_DT_MBS_ServiceAreaCellList ** data);

void __si_amf_debug_MBS_ServiceAreaCellList( char * key, SI_AMF_DT_MBS_ServiceAreaCellList * data, int lvl);

void __si_amf_memfree_MBS_ServiceAreaCellList( SI_AMF_DT_MBS_ServiceAreaCellList * data);

int __si_amf_Encode_MBS_ServiceAreaCellList( SI_AMF_DT_MBS_ServiceAreaCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceAreaTAIList( SI_AMF_DT_MBS_ServiceAreaTAIList ** data);

void __si_amf_debug_MBS_ServiceAreaTAIList( char * key, SI_AMF_DT_MBS_ServiceAreaTAIList * data, int lvl);

void __si_amf_memfree_MBS_ServiceAreaTAIList( SI_AMF_DT_MBS_ServiceAreaTAIList * data);

int __si_amf_Encode_MBS_ServiceAreaTAIList( SI_AMF_DT_MBS_ServiceAreaTAIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceAreaInformation( SI_AMF_DT_MBS_ServiceAreaInformation ** data);

void __si_amf_debug_MBS_ServiceAreaInformation( char * key, SI_AMF_DT_MBS_ServiceAreaInformation * data, int lvl);

void __si_amf_memfree_MBS_ServiceAreaInformation( SI_AMF_DT_MBS_ServiceAreaInformation * data);

int __si_amf_Encode_MBS_ServiceAreaInformation( SI_AMF_DT_MBS_ServiceAreaInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceAreaInformationList( SI_AMF_DT_MBS_ServiceAreaInformationList ** data);

void __si_amf_debug_MBS_ServiceAreaInformationList( char * key, SI_AMF_DT_MBS_ServiceAreaInformationList * data, int lvl);

void __si_amf_memfree_MBS_ServiceAreaInformationList( SI_AMF_DT_MBS_ServiceAreaInformationList * data);

int __si_amf_Encode_MBS_ServiceAreaInformationList( SI_AMF_DT_MBS_ServiceAreaInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceArea( SI_AMF_DT_MBS_ServiceArea ** data);

void __si_amf_debug_MBS_ServiceArea( char * key, SI_AMF_DT_MBS_ServiceArea * data, int lvl);

void __si_amf_memfree_MBS_ServiceArea( SI_AMF_DT_MBS_ServiceArea * data);

int __si_amf_Encode_MBS_ServiceArea( SI_AMF_DT_MBS_ServiceArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ServiceAreaInformationItem( SI_AMF_DT_MBS_ServiceAreaInformationItem ** data);

void __si_amf_debug_MBS_ServiceAreaInformationItem( char * key, SI_AMF_DT_MBS_ServiceAreaInformationItem * data, int lvl);

void __si_amf_memfree_MBS_ServiceAreaInformationItem( SI_AMF_DT_MBS_ServiceAreaInformationItem * data);

int __si_amf_Encode_MBS_ServiceAreaInformationItem( SI_AMF_DT_MBS_ServiceAreaInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionFailedtoSetupList( SI_AMF_DT_MBSSessionFailedtoSetupList ** data);

void __si_amf_debug_MBSSessionFailedtoSetupList( char * key, SI_AMF_DT_MBSSessionFailedtoSetupList * data, int lvl);

void __si_amf_memfree_MBSSessionFailedtoSetupList( SI_AMF_DT_MBSSessionFailedtoSetupList * data);

int __si_amf_Encode_MBSSessionFailedtoSetupList( SI_AMF_DT_MBSSessionFailedtoSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionFailedtoSetupItem( SI_AMF_DT_MBSSessionFailedtoSetupItem ** data);

void __si_amf_debug_MBSSessionFailedtoSetupItem( char * key, SI_AMF_DT_MBSSessionFailedtoSetupItem * data, int lvl);

void __si_amf_memfree_MBSSessionFailedtoSetupItem( SI_AMF_DT_MBSSessionFailedtoSetupItem * data);

int __si_amf_Encode_MBSSessionFailedtoSetupItem( SI_AMF_DT_MBSSessionFailedtoSetupItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ActiveSessionInformation_SourcetoTargetList( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList ** data);

void __si_amf_debug_MBS_ActiveSessionInformation_SourcetoTargetList( char * key, SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList * data, int lvl);

void __si_amf_memfree_MBS_ActiveSessionInformation_SourcetoTargetList( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList * data);

int __si_amf_Encode_MBS_ActiveSessionInformation_SourcetoTargetList( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ActiveSessionInformation_SourcetoTargetItem( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem ** data);

void __si_amf_debug_MBS_ActiveSessionInformation_SourcetoTargetItem( char * key, SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem * data, int lvl);

void __si_amf_memfree_MBS_ActiveSessionInformation_SourcetoTargetItem( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem * data);

int __si_amf_Encode_MBS_ActiveSessionInformation_SourcetoTargetItem( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ActiveSessionInformation_TargettoSourceList( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList ** data);

void __si_amf_debug_MBS_ActiveSessionInformation_TargettoSourceList( char * key, SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList * data, int lvl);

void __si_amf_memfree_MBS_ActiveSessionInformation_TargettoSourceList( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList * data);

int __si_amf_Encode_MBS_ActiveSessionInformation_TargettoSourceList( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_ActiveSessionInformation_TargettoSourceItem( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem ** data);

void __si_amf_debug_MBS_ActiveSessionInformation_TargettoSourceItem( char * key, SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem * data, int lvl);

void __si_amf_memfree_MBS_ActiveSessionInformation_TargettoSourceItem( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem * data);

int __si_amf_Encode_MBS_ActiveSessionInformation_TargettoSourceItem( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MBS_AssistanceInformation( char * key, uint8_t eMBS_AssistanceInformation, int lvl);

int __si_amf_Encode_MBS_AssistanceInformation( uint8_t eMBS_AssistanceInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupOrModFailureTransfer( SI_AMF_DT_MBSSessionSetupOrModFailureTransfer ** data);

void __si_amf_debug_MBSSessionSetupOrModFailureTransfer( char * key, SI_AMF_DT_MBSSessionSetupOrModFailureTransfer * data, int lvl);

void __si_amf_memfree_MBSSessionSetupOrModFailureTransfer( SI_AMF_DT_MBSSessionSetupOrModFailureTransfer * data);

int __si_amf_Encode_MBSSessionSetupOrModFailureTransfer( SI_AMF_DT_MBSSessionSetupOrModFailureTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupResponseList( SI_AMF_DT_MBSSessionSetupResponseList ** data);

void __si_amf_debug_MBSSessionSetupResponseList( char * key, SI_AMF_DT_MBSSessionSetupResponseList * data, int lvl);

void __si_amf_memfree_MBSSessionSetupResponseList( SI_AMF_DT_MBSSessionSetupResponseList * data);

int __si_amf_Encode_MBSSessionSetupResponseList( SI_AMF_DT_MBSSessionSetupResponseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupResponseItem( SI_AMF_DT_MBSSessionSetupResponseItem ** data);

void __si_amf_debug_MBSSessionSetupResponseItem( char * key, SI_AMF_DT_MBSSessionSetupResponseItem * data, int lvl);

void __si_amf_memfree_MBSSessionSetupResponseItem( SI_AMF_DT_MBSSessionSetupResponseItem * data);

int __si_amf_Encode_MBSSessionSetupResponseItem( SI_AMF_DT_MBSSessionSetupResponseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SupportedUETypeList( SI_AMF_DT_SupportedUETypeList ** data);

void __si_amf_debug_SupportedUETypeList( char * key, SI_AMF_DT_SupportedUETypeList * data, int lvl);

void __si_amf_memfree_SupportedUETypeList( SI_AMF_DT_SupportedUETypeList * data);

int __si_amf_Encode_SupportedUETypeList( SI_AMF_DT_SupportedUETypeList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SupportedUEType( char * key, uint8_t eSupportedUEType, int lvl);

int __si_amf_Encode_SupportedUEType( uint8_t eSupportedUEType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionFSAIDList( SI_AMF_DT_MBS_SessionFSAIDList ** data);

void __si_amf_debug_MBS_SessionFSAIDList( char * key, SI_AMF_DT_MBS_SessionFSAIDList * data, int lvl);

void __si_amf_memfree_MBS_SessionFSAIDList( SI_AMF_DT_MBS_SessionFSAIDList * data);

int __si_amf_Encode_MBS_SessionFSAIDList( SI_AMF_DT_MBS_SessionFSAIDList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionFSAID( SI_AMF_DT_MBS_SessionFSAID ** data);

void __si_amf_init_MBS_SessionFSAID2( SI_AMF_DT_MBS_SessionFSAID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_MBS_SessionFSAID( char * key, SI_AMF_DT_MBS_SessionFSAID * data, int lvl);

void __si_amf_memfree_MBS_SessionFSAID( SI_AMF_DT_MBS_SessionFSAID * data);

int __si_amf_Encode_MBS_SessionFSAID( SI_AMF_DT_MBS_SessionFSAID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionReleaseResponseTransfer( SI_AMF_DT_MBSSessionReleaseResponseTransfer ** data);

void __si_amf_debug_MBSSessionReleaseResponseTransfer( char * key, SI_AMF_DT_MBSSessionReleaseResponseTransfer * data, int lvl);

void __si_amf_memfree_MBSSessionReleaseResponseTransfer( SI_AMF_DT_MBSSessionReleaseResponseTransfer * data);

int __si_amf_Encode_MBSSessionReleaseResponseTransfer( SI_AMF_DT_MBSSessionReleaseResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupOrModResponseTransfer( SI_AMF_DT_MBSSessionSetupOrModResponseTransfer ** data);

void __si_amf_debug_MBSSessionSetupOrModResponseTransfer( char * key, SI_AMF_DT_MBSSessionSetupOrModResponseTransfer * data, int lvl);

void __si_amf_memfree_MBSSessionSetupOrModResponseTransfer( SI_AMF_DT_MBSSessionSetupOrModResponseTransfer * data);

int __si_amf_Encode_MBSSessionSetupOrModResponseTransfer( SI_AMF_DT_MBSSessionSetupOrModResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MBS_SupportIndicator( char * key, uint8_t eMBS_SupportIndicator, int lvl);

int __si_amf_Encode_MBS_SupportIndicator( uint8_t eMBS_SupportIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SharedNGU_MulticastTNLInformation( SI_AMF_DT_SharedNGU_MulticastTNLInformation ** data);

void __si_amf_debug_SharedNGU_MulticastTNLInformation( char * key, SI_AMF_DT_SharedNGU_MulticastTNLInformation * data, int lvl);

void __si_amf_memfree_SharedNGU_MulticastTNLInformation( SI_AMF_DT_SharedNGU_MulticastTNLInformation * data);

int __si_amf_Encode_SharedNGU_MulticastTNLInformation( SI_AMF_DT_SharedNGU_MulticastTNLInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfo5GCList( SI_AMF_DT_MBS_SessionTNLInfo5GCList ** data);

void __si_amf_debug_MBS_SessionTNLInfo5GCList( char * key, SI_AMF_DT_MBS_SessionTNLInfo5GCList * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfo5GCList( SI_AMF_DT_MBS_SessionTNLInfo5GCList * data);

int __si_amf_Encode_MBS_SessionTNLInfo5GCList( SI_AMF_DT_MBS_SessionTNLInfo5GCList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfo5GC( SI_AMF_DT_MBS_SessionTNLInfo5GC ** data);

void __si_amf_debug_MBS_SessionTNLInfo5GC( char * key, SI_AMF_DT_MBS_SessionTNLInfo5GC * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfo5GC( SI_AMF_DT_MBS_SessionTNLInfo5GC * data);

int __si_amf_Encode_MBS_SessionTNLInfo5GC( SI_AMF_DT_MBS_SessionTNLInfo5GC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfo5GCItem( SI_AMF_DT_MBS_SessionTNLInfo5GCItem ** data);

void __si_amf_debug_MBS_SessionTNLInfo5GCItem( char * key, SI_AMF_DT_MBS_SessionTNLInfo5GCItem * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfo5GCItem( SI_AMF_DT_MBS_SessionTNLInfo5GCItem * data);

int __si_amf_Encode_MBS_SessionTNLInfo5GCItem( SI_AMF_DT_MBS_SessionTNLInfo5GCItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_SessionTNLInfoNGRANItem( SI_AMF_DT_MBS_SessionTNLInfoNGRANItem ** data);

void __si_amf_debug_MBS_SessionTNLInfoNGRANItem( char * key, SI_AMF_DT_MBS_SessionTNLInfoNGRANItem * data, int lvl);

void __si_amf_memfree_MBS_SessionTNLInfoNGRANItem( SI_AMF_DT_MBS_SessionTNLInfoNGRANItem * data);

int __si_amf_Encode_MBS_SessionTNLInfoNGRANItem( SI_AMF_DT_MBS_SessionTNLInfoNGRANItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DistributionReleaseRequestTransfer( SI_AMF_DT_MBS_DistributionReleaseRequestTransfer ** data);

void __si_amf_debug_MBS_DistributionReleaseRequestTransfer( char * key, SI_AMF_DT_MBS_DistributionReleaseRequestTransfer * data, int lvl);

void __si_amf_memfree_MBS_DistributionReleaseRequestTransfer( SI_AMF_DT_MBS_DistributionReleaseRequestTransfer * data);

int __si_amf_Encode_MBS_DistributionReleaseRequestTransfer( SI_AMF_DT_MBS_DistributionReleaseRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DistributionSetupRequestTransfer( SI_AMF_DT_MBS_DistributionSetupRequestTransfer ** data);

void __si_amf_debug_MBS_DistributionSetupRequestTransfer( char * key, SI_AMF_DT_MBS_DistributionSetupRequestTransfer * data, int lvl);

void __si_amf_memfree_MBS_DistributionSetupRequestTransfer( SI_AMF_DT_MBS_DistributionSetupRequestTransfer * data);

int __si_amf_Encode_MBS_DistributionSetupRequestTransfer( SI_AMF_DT_MBS_DistributionSetupRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MBSSessionStatus( char * key, uint8_t eMBSSessionStatus, int lvl);

int __si_amf_Encode_MBSSessionStatus( uint8_t eMBSSessionStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DistributionSetupResponseTransfer( SI_AMF_DT_MBS_DistributionSetupResponseTransfer ** data);

void __si_amf_debug_MBS_DistributionSetupResponseTransfer( char * key, SI_AMF_DT_MBS_DistributionSetupResponseTransfer * data, int lvl);

void __si_amf_memfree_MBS_DistributionSetupResponseTransfer( SI_AMF_DT_MBS_DistributionSetupResponseTransfer * data);

int __si_amf_Encode_MBS_DistributionSetupResponseTransfer( SI_AMF_DT_MBS_DistributionSetupResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_DistributionSetupUnsuccessfulTransfer( SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer ** data);

void __si_amf_debug_MBS_DistributionSetupUnsuccessfulTransfer( char * key, SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_MBS_DistributionSetupUnsuccessfulTransfer( SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer * data);

int __si_amf_Encode_MBS_DistributionSetupUnsuccessfulTransfer( SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MBS_UP_FailureIndication( char * key, uint8_t eMBS_UP_FailureIndication, int lvl);

int __si_amf_Encode_MBS_UP_FailureIndication( uint8_t eMBS_UP_FailureIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_UP_FailureIndicationList( SI_AMF_DT_MBS_UP_FailureIndicationList ** data);

void __si_amf_debug_MBS_UP_FailureIndicationList( char * key, SI_AMF_DT_MBS_UP_FailureIndicationList * data, int lvl);

void __si_amf_memfree_MBS_UP_FailureIndicationList( SI_AMF_DT_MBS_UP_FailureIndicationList * data);

int __si_amf_Encode_MBS_UP_FailureIndicationList( SI_AMF_DT_MBS_UP_FailureIndicationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_NGUFailureIndication( SI_AMF_DT_MBS_NGUFailureIndication ** data);

void __si_amf_debug_MBS_NGUFailureIndication( char * key, SI_AMF_DT_MBS_NGUFailureIndication * data, int lvl);

void __si_amf_memfree_MBS_NGUFailureIndication( SI_AMF_DT_MBS_NGUFailureIndication * data);

int __si_amf_Encode_MBS_NGUFailureIndication( SI_AMF_DT_MBS_NGUFailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_UP_FailureIndicationItem( SI_AMF_DT_MBS_UP_FailureIndicationItem ** data);

void __si_amf_debug_MBS_UP_FailureIndicationItem( char * key, SI_AMF_DT_MBS_UP_FailureIndicationItem * data, int lvl);

void __si_amf_memfree_MBS_UP_FailureIndicationItem( SI_AMF_DT_MBS_UP_FailureIndicationItem * data);

int __si_amf_Encode_MBS_UP_FailureIndicationItem( SI_AMF_DT_MBS_UP_FailureIndicationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupRequestList( SI_AMF_DT_MBSSessionSetupRequestList ** data);

void __si_amf_debug_MBSSessionSetupRequestList( char * key, SI_AMF_DT_MBSSessionSetupRequestList * data, int lvl);

void __si_amf_memfree_MBSSessionSetupRequestList( SI_AMF_DT_MBSSessionSetupRequestList * data);

int __si_amf_Encode_MBSSessionSetupRequestList( SI_AMF_DT_MBSSessionSetupRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetupRequestItem( SI_AMF_DT_MBSSessionSetupRequestItem ** data);

void __si_amf_debug_MBSSessionSetupRequestItem( char * key, SI_AMF_DT_MBSSessionSetupRequestItem * data, int lvl);

void __si_amf_memfree_MBSSessionSetupRequestItem( SI_AMF_DT_MBSSessionSetupRequestItem * data);

int __si_amf_Encode_MBSSessionSetupRequestItem( SI_AMF_DT_MBSSessionSetupRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetuporModifyRequestList( SI_AMF_DT_MBSSessionSetuporModifyRequestList ** data);

void __si_amf_debug_MBSSessionSetuporModifyRequestList( char * key, SI_AMF_DT_MBSSessionSetuporModifyRequestList * data, int lvl);

void __si_amf_memfree_MBSSessionSetuporModifyRequestList( SI_AMF_DT_MBSSessionSetuporModifyRequestList * data);

int __si_amf_Encode_MBSSessionSetuporModifyRequestList( SI_AMF_DT_MBSSessionSetuporModifyRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionSetuporModifyRequestItem( SI_AMF_DT_MBSSessionSetuporModifyRequestItem ** data);

void __si_amf_debug_MBSSessionSetuporModifyRequestItem( char * key, SI_AMF_DT_MBSSessionSetuporModifyRequestItem * data, int lvl);

void __si_amf_memfree_MBSSessionSetuporModifyRequestItem( SI_AMF_DT_MBSSessionSetuporModifyRequestItem * data);

int __si_amf_Encode_MBSSessionSetuporModifyRequestItem( SI_AMF_DT_MBSSessionSetuporModifyRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionToReleaseList( SI_AMF_DT_MBSSessionToReleaseList ** data);

void __si_amf_debug_MBSSessionToReleaseList( char * key, SI_AMF_DT_MBSSessionToReleaseList * data, int lvl);

void __si_amf_memfree_MBSSessionToReleaseList( SI_AMF_DT_MBSSessionToReleaseList * data);

int __si_amf_Encode_MBSSessionToReleaseList( SI_AMF_DT_MBSSessionToReleaseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBSSessionToReleaseItem( SI_AMF_DT_MBSSessionToReleaseItem ** data);

void __si_amf_debug_MBSSessionToReleaseItem( char * key, SI_AMF_DT_MBSSessionToReleaseItem * data, int lvl);

void __si_amf_memfree_MBSSessionToReleaseItem( SI_AMF_DT_MBSSessionToReleaseItem * data);

int __si_amf_Encode_MBSSessionToReleaseItem( SI_AMF_DT_MBSSessionToReleaseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MicoAllPLMN( char * key, uint8_t eMicoAllPLMN, int lvl);

int __si_amf_Encode_MicoAllPLMN( uint8_t eMicoAllPLMN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ExtendedMobilityInformation( SI_AMF_DT_ExtendedMobilityInformation ** data);

void __si_amf_init_ExtendedMobilityInformation2( SI_AMF_DT_ExtendedMobilityInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ExtendedMobilityInformation( char * key, SI_AMF_DT_ExtendedMobilityInformation * data, int lvl);

void __si_amf_memfree_ExtendedMobilityInformation( SI_AMF_DT_ExtendedMobilityInformation * data);

int __si_amf_Encode_ExtendedMobilityInformation( SI_AMF_DT_ExtendedMobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RATRestrictions( SI_AMF_DT_RATRestrictions ** data);

void __si_amf_debug_RATRestrictions( char * key, SI_AMF_DT_RATRestrictions * data, int lvl);

void __si_amf_memfree_RATRestrictions( SI_AMF_DT_RATRestrictions * data);

int __si_amf_Encode_RATRestrictions( SI_AMF_DT_RATRestrictions * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ServiceAreaInformation( SI_AMF_DT_ServiceAreaInformation ** data);

void __si_amf_debug_ServiceAreaInformation( char * key, SI_AMF_DT_ServiceAreaInformation * data, int lvl);

void __si_amf_memfree_ServiceAreaInformation( SI_AMF_DT_ServiceAreaInformation * data);

int __si_amf_Encode_ServiceAreaInformation( SI_AMF_DT_ServiceAreaInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MobilityRestrictionList( SI_AMF_DT_MobilityRestrictionList ** data);

void __si_amf_debug_MobilityRestrictionList( char * key, SI_AMF_DT_MobilityRestrictionList * data, int lvl);

void __si_amf_memfree_MobilityRestrictionList( SI_AMF_DT_MobilityRestrictionList * data);

int __si_amf_Encode_MobilityRestrictionList( SI_AMF_DT_MobilityRestrictionList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRANTraceID( SI_AMF_DT_NGRANTraceID ** data);

void __si_amf_init_NGRANTraceID2( SI_AMF_DT_NGRANTraceID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NGRANTraceID( char * key, SI_AMF_DT_NGRANTraceID * data, int lvl);

void __si_amf_memfree_NGRANTraceID( SI_AMF_DT_NGRANTraceID * data);

int __si_amf_Encode_NGRANTraceID( SI_AMF_DT_NGRANTraceID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_AlignmentInfo( SI_AMF_DT_MDT_AlignmentInfo ** data);

void __si_amf_debug_MDT_AlignmentInfo( char * key, SI_AMF_DT_MDT_AlignmentInfo * data, int lvl);

void __si_amf_memfree_MDT_AlignmentInfo( SI_AMF_DT_MDT_AlignmentInfo * data);

int __si_amf_Encode_MDT_AlignmentInfo( SI_AMF_DT_MDT_AlignmentInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDTPLMNList( SI_AMF_DT_MDTPLMNList ** data);

void __si_amf_debug_MDTPLMNList( char * key, SI_AMF_DT_MDTPLMNList * data, int lvl);

void __si_amf_memfree_MDTPLMNList( SI_AMF_DT_MDTPLMNList * data);

int __si_amf_Encode_MDTPLMNList( SI_AMF_DT_MDTPLMNList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDTPLMNModificationList( SI_AMF_DT_MDTPLMNModificationList ** data);

void __si_amf_debug_MDTPLMNModificationList( char * key, SI_AMF_DT_MDTPLMNModificationList * data, int lvl);

void __si_amf_memfree_MDTPLMNModificationList( SI_AMF_DT_MDTPLMNModificationList * data);

int __si_amf_Encode_MDTPLMNModificationList( SI_AMF_DT_MDTPLMNModificationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MDT_Activation( char * key, uint8_t eMDT_Activation, int lvl);

int __si_amf_Encode_MDT_Activation( uint8_t eMDT_Activation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDTModeNr( SI_AMF_DT_MDTModeNr ** data);

void __si_amf_debug_MDTModeNr( char * key, SI_AMF_DT_MDTModeNr * data, int lvl);

void __si_amf_memfree_MDTModeNr( SI_AMF_DT_MDTModeNr * data);

int __si_amf_Encode_MDTModeNr( SI_AMF_DT_MDTModeNr * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_Configuration_NR( SI_AMF_DT_MDT_Configuration_NR ** data);

void __si_amf_debug_MDT_Configuration_NR( char * key, SI_AMF_DT_MDT_Configuration_NR * data, int lvl);

void __si_amf_memfree_MDT_Configuration_NR( SI_AMF_DT_MDT_Configuration_NR * data);

int __si_amf_Encode_MDT_Configuration_NR( SI_AMF_DT_MDT_Configuration_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDTModeEutra( SI_AMF_DT_MDTModeEutra ** data);

void __si_amf_init_MDTModeEutra2( SI_AMF_DT_MDTModeEutra ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_MDTModeEutra( char * key, SI_AMF_DT_MDTModeEutra * data, int lvl);

void __si_amf_memfree_MDTModeEutra( SI_AMF_DT_MDTModeEutra * data);

int __si_amf_Encode_MDTModeEutra( SI_AMF_DT_MDTModeEutra * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_Configuration_EUTRA( SI_AMF_DT_MDT_Configuration_EUTRA ** data);

void __si_amf_debug_MDT_Configuration_EUTRA( char * key, SI_AMF_DT_MDT_Configuration_EUTRA * data, int lvl);

void __si_amf_memfree_MDT_Configuration_EUTRA( SI_AMF_DT_MDT_Configuration_EUTRA * data);

int __si_amf_Encode_MDT_Configuration_EUTRA( SI_AMF_DT_MDT_Configuration_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MDT_Configuration( SI_AMF_DT_MDT_Configuration ** data);

void __si_amf_debug_MDT_Configuration( char * key, SI_AMF_DT_MDT_Configuration * data, int lvl);

void __si_amf_memfree_MDT_Configuration( SI_AMF_DT_MDT_Configuration * data);

int __si_amf_Encode_MDT_Configuration( SI_AMF_DT_MDT_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MN_only_MDT_collection( char * key, uint8_t eMN_only_MDT_collection, int lvl);

int __si_amf_Encode_MN_only_MDT_collection( uint8_t eMN_only_MDT_collection, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MobileIAB_Authorized( char * key, uint8_t eMobileIAB_Authorized, int lvl);

int __si_amf_Encode_MobileIAB_Authorized( uint8_t eMobileIAB_Authorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MobileIABNodeIndication( char * key, uint8_t eMobileIABNodeIndication, int lvl);

int __si_amf_Encode_MobileIABNodeIndication( uint8_t eMobileIABNodeIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_MobileIAB_Supported( char * key, uint8_t eMobileIAB_Supported, int lvl);

int __si_amf_Encode_MobileIAB_Supported( uint8_t eMobileIAB_Supported, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MulticastSessionActivationRequestTransfer( SI_AMF_DT_MulticastSessionActivationRequestTransfer ** data);

void __si_amf_debug_MulticastSessionActivationRequestTransfer( char * key, SI_AMF_DT_MulticastSessionActivationRequestTransfer * data, int lvl);

void __si_amf_memfree_MulticastSessionActivationRequestTransfer( SI_AMF_DT_MulticastSessionActivationRequestTransfer * data);

int __si_amf_Encode_MulticastSessionActivationRequestTransfer( SI_AMF_DT_MulticastSessionActivationRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MulticastSessionDeactivationRequestTransfer( SI_AMF_DT_MulticastSessionDeactivationRequestTransfer ** data);

void __si_amf_debug_MulticastSessionDeactivationRequestTransfer( char * key, SI_AMF_DT_MulticastSessionDeactivationRequestTransfer * data, int lvl);

void __si_amf_memfree_MulticastSessionDeactivationRequestTransfer( SI_AMF_DT_MulticastSessionDeactivationRequestTransfer * data);

int __si_amf_Encode_MulticastSessionDeactivationRequestTransfer( SI_AMF_DT_MulticastSessionDeactivationRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MulticastGroupPagingAreaList( SI_AMF_DT_MulticastGroupPagingAreaList ** data);

void __si_amf_debug_MulticastGroupPagingAreaList( char * key, SI_AMF_DT_MulticastGroupPagingAreaList * data, int lvl);

void __si_amf_memfree_MulticastGroupPagingAreaList( SI_AMF_DT_MulticastGroupPagingAreaList * data);

int __si_amf_Encode_MulticastGroupPagingAreaList( SI_AMF_DT_MulticastGroupPagingAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MBS_AreaTAIList( SI_AMF_DT_MBS_AreaTAIList ** data);

void __si_amf_debug_MBS_AreaTAIList( char * key, SI_AMF_DT_MBS_AreaTAIList * data, int lvl);

void __si_amf_memfree_MBS_AreaTAIList( SI_AMF_DT_MBS_AreaTAIList * data);

int __si_amf_Encode_MBS_AreaTAIList( SI_AMF_DT_MBS_AreaTAIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MulticastGroupPagingArea( SI_AMF_DT_MulticastGroupPagingArea ** data);

void __si_amf_debug_MulticastGroupPagingArea( char * key, SI_AMF_DT_MulticastGroupPagingArea * data, int lvl);

void __si_amf_memfree_MulticastGroupPagingArea( SI_AMF_DT_MulticastGroupPagingArea * data);

int __si_amf_Encode_MulticastGroupPagingArea( SI_AMF_DT_MulticastGroupPagingArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_PagingList( SI_AMF_DT_UE_PagingList ** data);

void __si_amf_debug_UE_PagingList( char * key, SI_AMF_DT_UE_PagingList * data, int lvl);

void __si_amf_memfree_UE_PagingList( SI_AMF_DT_UE_PagingList * data);

int __si_amf_Encode_UE_PagingList( SI_AMF_DT_UE_PagingList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_MulticastGroupPagingAreaItem( SI_AMF_DT_MulticastGroupPagingAreaItem ** data);

void __si_amf_debug_MulticastGroupPagingAreaItem( char * key, SI_AMF_DT_MulticastGroupPagingAreaItem * data, int lvl);

void __si_amf_memfree_MulticastGroupPagingAreaItem( SI_AMF_DT_MulticastGroupPagingAreaItem * data);

int __si_amf_Encode_MulticastGroupPagingAreaItem( SI_AMF_DT_MulticastGroupPagingAreaItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_PagingItem( SI_AMF_DT_UE_PagingItem ** data);

void __si_amf_debug_UE_PagingItem( char * key, SI_AMF_DT_UE_PagingItem * data, int lvl);

void __si_amf_memfree_UE_PagingItem( SI_AMF_DT_UE_PagingItem * data);

int __si_amf_Encode_UE_PagingItem( SI_AMF_DT_UE_PagingItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_IncludeBeamMeasurementsIndication( char * key, uint8_t eIncludeBeamMeasurementsIndication, int lvl);

int __si_amf_Encode_IncludeBeamMeasurementsIndication( uint8_t eIncludeBeamMeasurementsIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M4ReportAmountMDT( char * key, uint8_t eM4ReportAmountMDT, int lvl);

int __si_amf_Encode_M4ReportAmountMDT( uint8_t eM4ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M5ReportAmountMDT( char * key, uint8_t eM5ReportAmountMDT, int lvl);

int __si_amf_Encode_M5ReportAmountMDT( uint8_t eM5ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M6ReportAmountMDT( char * key, uint8_t eM6ReportAmountMDT, int lvl);

int __si_amf_Encode_M6ReportAmountMDT( uint8_t eM6ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_M7ReportAmountMDT( char * key, uint8_t eM7ReportAmountMDT, int lvl);

int __si_amf_Encode_M7ReportAmountMDT( uint8_t eM7ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_N6JitterInformation_n6JitterLowerBound( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_N6JitterInformation_n6JitterLowerBound( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_N6JitterInformation_n6JitterLowerBound( SI_AMF_DT_N6JitterInformation_n6JitterLowerBound * data);


void __si_amf_debug_N6JitterInformation_n6JitterUpperBound( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_N6JitterInformation_n6JitterUpperBound( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_N6JitterInformation_n6JitterUpperBound( SI_AMF_DT_N6JitterInformation_n6JitterUpperBound * data);


void __si_amf_init_N6JitterInformation( SI_AMF_DT_N6JitterInformation ** data);

void __si_amf_debug_N6JitterInformation( char * key, SI_AMF_DT_N6JitterInformation * data, int lvl);

void __si_amf_memfree_N6JitterInformation( SI_AMF_DT_N6JitterInformation * data);

int __si_amf_Encode_N6JitterInformation( SI_AMF_DT_N6JitterInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NAS_PDU( SI_AMF_DT_NAS_PDU ** data);

void __si_amf_init_NAS_PDU2( SI_AMF_DT_NAS_PDU ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NAS_PDU( char * key, SI_AMF_DT_NAS_PDU * data, int lvl);

void __si_amf_memfree_NAS_PDU( SI_AMF_DT_NAS_PDU * data);

int __si_amf_Encode_NAS_PDU( SI_AMF_DT_NAS_PDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NASSecurityParametersFromNGRAN( SI_AMF_DT_NASSecurityParametersFromNGRAN ** data);

void __si_amf_init_NASSecurityParametersFromNGRAN2( SI_AMF_DT_NASSecurityParametersFromNGRAN ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NASSecurityParametersFromNGRAN( char * key, SI_AMF_DT_NASSecurityParametersFromNGRAN * data, int lvl);

void __si_amf_memfree_NASSecurityParametersFromNGRAN( SI_AMF_DT_NASSecurityParametersFromNGRAN * data);

int __si_amf_Encode_NASSecurityParametersFromNGRAN( SI_AMF_DT_NASSecurityParametersFromNGRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NB_IoT_DefaultPagingDRX( char * key, uint8_t eNB_IoT_DefaultPagingDRX, int lvl);

int __si_amf_Encode_NB_IoT_DefaultPagingDRX( uint8_t eNB_IoT_DefaultPagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NB_IoT_PagingDRX( char * key, uint8_t eNB_IoT_PagingDRX, int lvl);

int __si_amf_Encode_NB_IoT_PagingDRX( uint8_t eNB_IoT_PagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NB_IoT_Paging_eDRXCycle( char * key, uint8_t eNB_IoT_Paging_eDRXCycle, int lvl);

int __si_amf_Encode_NB_IoT_Paging_eDRXCycle( uint8_t eNB_IoT_Paging_eDRXCycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NB_IoT_Paging_TimeWindow( char * key, uint8_t eNB_IoT_Paging_TimeWindow, int lvl);

int __si_amf_Encode_NB_IoT_Paging_TimeWindow( uint8_t eNB_IoT_Paging_TimeWindow, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NB_IoT_Paging_eDRXInfo( SI_AMF_DT_NB_IoT_Paging_eDRXInfo ** data);

void __si_amf_debug_NB_IoT_Paging_eDRXInfo( char * key, SI_AMF_DT_NB_IoT_Paging_eDRXInfo * data, int lvl);

void __si_amf_memfree_NB_IoT_Paging_eDRXInfo( SI_AMF_DT_NB_IoT_Paging_eDRXInfo * data);

int __si_amf_Encode_NB_IoT_Paging_eDRXInfo( SI_AMF_DT_NB_IoT_Paging_eDRXInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NB_IoT_UEPriority( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NB_IoT_UEPriority( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NB_IoT_UEPriority( SI_AMF_DT_NB_IoT_UEPriority * data);


void __si_amf_debug_NetworkControlledRepeaterAuthorized( char * key, uint8_t eNetworkControlledRepeaterAuthorized, int lvl);

int __si_amf_Encode_NetworkControlledRepeaterAuthorized( uint8_t eNetworkControlledRepeaterAuthorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NetworkInstance( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NetworkInstance( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NetworkInstance( SI_AMF_DT_NetworkInstance * data);


void __si_amf_debug_NewSecurityContextInd( char * key, uint8_t eNewSecurityContextInd, int lvl);

int __si_amf_Encode_NewSecurityContextInd( uint8_t eNewSecurityContextInd, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NextHopChainingCount( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NextHopChainingCount( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NextHopChainingCount( SI_AMF_DT_NextHopChainingCount * data);


void __si_amf_init_NGAPIESupportInformationRequestList( SI_AMF_DT_NGAPIESupportInformationRequestList ** data);

void __si_amf_debug_NGAPIESupportInformationRequestList( char * key, SI_AMF_DT_NGAPIESupportInformationRequestList * data, int lvl);

void __si_amf_memfree_NGAPIESupportInformationRequestList( SI_AMF_DT_NGAPIESupportInformationRequestList * data);

int __si_amf_Encode_NGAPIESupportInformationRequestList( SI_AMF_DT_NGAPIESupportInformationRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGAPIESupportInformationRequestItem( SI_AMF_DT_NGAPIESupportInformationRequestItem ** data);

void __si_amf_debug_NGAPIESupportInformationRequestItem( char * key, SI_AMF_DT_NGAPIESupportInformationRequestItem * data, int lvl);

void __si_amf_memfree_NGAPIESupportInformationRequestItem( SI_AMF_DT_NGAPIESupportInformationRequestItem * data);

int __si_amf_Encode_NGAPIESupportInformationRequestItem( SI_AMF_DT_NGAPIESupportInformationRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGAPIESupportInformationResponseList( SI_AMF_DT_NGAPIESupportInformationResponseList ** data);

void __si_amf_debug_NGAPIESupportInformationResponseList( char * key, SI_AMF_DT_NGAPIESupportInformationResponseList * data, int lvl);

void __si_amf_memfree_NGAPIESupportInformationResponseList( SI_AMF_DT_NGAPIESupportInformationResponseList * data);

int __si_amf_Encode_NGAPIESupportInformationResponseList( SI_AMF_DT_NGAPIESupportInformationResponseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo( char * key, uint8_t eNGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo, int lvl);

int __si_amf_Encode_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo( uint8_t eNGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo( char * key, uint8_t eNGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo, int lvl);

int __si_amf_Encode_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo( uint8_t eNGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGAPIESupportInformationResponseItem( SI_AMF_DT_NGAPIESupportInformationResponseItem ** data);

void __si_amf_debug_NGAPIESupportInformationResponseItem( char * key, SI_AMF_DT_NGAPIESupportInformationResponseItem * data, int lvl);

void __si_amf_memfree_NGAPIESupportInformationResponseItem( SI_AMF_DT_NGAPIESupportInformationResponseItem * data);

int __si_amf_Encode_NGAPIESupportInformationResponseItem( SI_AMF_DT_NGAPIESupportInformationResponseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NotifySourceNGRANNode( char * key, uint8_t eNotifySourceNGRANNode, int lvl);

int __si_amf_Encode_NotifySourceNGRANNode( uint8_t eNotifySourceNGRANNode, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_TNLAssociationToRemoveList( SI_AMF_DT_NGRAN_TNLAssociationToRemoveList ** data);

void __si_amf_debug_NGRAN_TNLAssociationToRemoveList( char * key, SI_AMF_DT_NGRAN_TNLAssociationToRemoveList * data, int lvl);

void __si_amf_memfree_NGRAN_TNLAssociationToRemoveList( SI_AMF_DT_NGRAN_TNLAssociationToRemoveList * data);

int __si_amf_Encode_NGRAN_TNLAssociationToRemoveList( SI_AMF_DT_NGRAN_TNLAssociationToRemoveList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NGRAN_TNLAssociationToRemoveItem( SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem ** data);

void __si_amf_debug_NGRAN_TNLAssociationToRemoveItem( char * key, SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem * data, int lvl);

void __si_amf_memfree_NGRAN_TNLAssociationToRemoveItem( SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem * data);

int __si_amf_Encode_NGRAN_TNLAssociationToRemoveItem( SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NoPDUSessionIndication( char * key, uint8_t eNoPDUSessionIndication, int lvl);

int __si_amf_Encode_NoPDUSessionIndication( uint8_t eNoPDUSessionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NotAllowedTACs( SI_AMF_DT_NotAllowedTACs ** data);

void __si_amf_debug_NotAllowedTACs( char * key, SI_AMF_DT_NotAllowedTACs * data, int lvl);

void __si_amf_memfree_NotAllowedTACs( SI_AMF_DT_NotAllowedTACs * data);

int __si_amf_Encode_NotAllowedTACs( SI_AMF_DT_NotAllowedTACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NotificationCause( char * key, uint8_t eNotificationCause, int lvl);

int __si_amf_Encode_NotificationCause( uint8_t eNotificationCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NPN_AccessInformation( SI_AMF_DT_NPN_AccessInformation ** data);

void __si_amf_debug_NPN_AccessInformation( char * key, SI_AMF_DT_NPN_AccessInformation * data, int lvl);

void __si_amf_memfree_NPN_AccessInformation( SI_AMF_DT_NPN_AccessInformation * data);

int __si_amf_Encode_NPN_AccessInformation( SI_AMF_DT_NPN_AccessInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPN_MobilityInformation( SI_AMF_DT_SNPN_MobilityInformation ** data);

void __si_amf_debug_SNPN_MobilityInformation( char * key, SI_AMF_DT_SNPN_MobilityInformation * data, int lvl);

void __si_amf_memfree_SNPN_MobilityInformation( SI_AMF_DT_SNPN_MobilityInformation * data);

int __si_amf_Encode_SNPN_MobilityInformation( SI_AMF_DT_SNPN_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PNI_NPN_MobilityInformation( SI_AMF_DT_PNI_NPN_MobilityInformation ** data);

void __si_amf_debug_PNI_NPN_MobilityInformation( char * key, SI_AMF_DT_PNI_NPN_MobilityInformation * data, int lvl);

void __si_amf_memfree_PNI_NPN_MobilityInformation( SI_AMF_DT_PNI_NPN_MobilityInformation * data);

int __si_amf_Encode_PNI_NPN_MobilityInformation( SI_AMF_DT_PNI_NPN_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NPN_MobilityInformation( SI_AMF_DT_NPN_MobilityInformation ** data);

void __si_amf_debug_NPN_MobilityInformation( char * key, SI_AMF_DT_NPN_MobilityInformation * data, int lvl);

void __si_amf_memfree_NPN_MobilityInformation( SI_AMF_DT_NPN_MobilityInformation * data);

int __si_amf_Encode_NPN_MobilityInformation( SI_AMF_DT_NPN_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NPN_PagingAssistanceInformation( SI_AMF_DT_NPN_PagingAssistanceInformation ** data);

void __si_amf_debug_NPN_PagingAssistanceInformation( char * key, SI_AMF_DT_NPN_PagingAssistanceInformation * data, int lvl);

void __si_amf_memfree_NPN_PagingAssistanceInformation( SI_AMF_DT_NPN_PagingAssistanceInformation * data);

int __si_amf_Encode_NPN_PagingAssistanceInformation( SI_AMF_DT_NPN_PagingAssistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NPN_Support( SI_AMF_DT_NPN_Support ** data);

void __si_amf_debug_NPN_Support( char * key, SI_AMF_DT_NPN_Support * data, int lvl);

void __si_amf_memfree_NPN_Support( SI_AMF_DT_NPN_Support * data);

int __si_amf_Encode_NPN_Support( SI_AMF_DT_NPN_Support * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_CGIListForWarning( SI_AMF_DT_NR_CGIListForWarning ** data);

void __si_amf_debug_NR_CGIListForWarning( char * key, SI_AMF_DT_NR_CGIListForWarning * data, int lvl);

void __si_amf_memfree_NR_CGIListForWarning( SI_AMF_DT_NR_CGIListForWarning * data);

int __si_amf_Encode_NR_CGIListForWarning( SI_AMF_DT_NR_CGIListForWarning * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NR_Paging_eDRX_Cycle( char * key, uint8_t eNR_Paging_eDRX_Cycle, int lvl);

int __si_amf_Encode_NR_Paging_eDRX_Cycle( uint8_t eNR_Paging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NR_Paging_Time_Window( char * key, uint8_t eNR_Paging_Time_Window, int lvl);

int __si_amf_Encode_NR_Paging_Time_Window( uint8_t eNR_Paging_Time_Window, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_PagingeDRXInformation( SI_AMF_DT_NR_PagingeDRXInformation ** data);

void __si_amf_debug_NR_PagingeDRXInformation( char * key, SI_AMF_DT_NR_PagingeDRXInformation * data, int lvl);

void __si_amf_memfree_NR_PagingeDRXInformation( SI_AMF_DT_NR_PagingeDRXInformation * data);

int __si_amf_Encode_NR_PagingeDRXInformation( SI_AMF_DT_NR_PagingeDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRencryptionAlgorithms( SI_AMF_DT_NRencryptionAlgorithms ** data);

void __si_amf_init_NRencryptionAlgorithms2( SI_AMF_DT_NRencryptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NRencryptionAlgorithms( char * key, SI_AMF_DT_NRencryptionAlgorithms * data, int lvl);

void __si_amf_memfree_NRencryptionAlgorithms( SI_AMF_DT_NRencryptionAlgorithms * data);

int __si_amf_Encode_NRencryptionAlgorithms( SI_AMF_DT_NRencryptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRintegrityProtectionAlgorithms( SI_AMF_DT_NRintegrityProtectionAlgorithms ** data);

void __si_amf_init_NRintegrityProtectionAlgorithms2( SI_AMF_DT_NRintegrityProtectionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_NRintegrityProtectionAlgorithms( char * key, SI_AMF_DT_NRintegrityProtectionAlgorithms * data, int lvl);

void __si_amf_memfree_NRintegrityProtectionAlgorithms( SI_AMF_DT_NRintegrityProtectionAlgorithms * data);

int __si_amf_Encode_NRintegrityProtectionAlgorithms( SI_AMF_DT_NRintegrityProtectionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRMobilityHistoryReport( SI_AMF_DT_NRMobilityHistoryReport ** data);

void __si_amf_init_NRMobilityHistoryReport2( SI_AMF_DT_NRMobilityHistoryReport ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NRMobilityHistoryReport( char * key, SI_AMF_DT_NRMobilityHistoryReport * data, int lvl);

void __si_amf_memfree_NRMobilityHistoryReport( SI_AMF_DT_NRMobilityHistoryReport * data);

int __si_amf_Encode_NRMobilityHistoryReport( SI_AMF_DT_NRMobilityHistoryReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRPPa_PDU( SI_AMF_DT_NRPPa_PDU ** data);

void __si_amf_init_NRPPa_PDU2( SI_AMF_DT_NRPPa_PDU ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_NRPPa_PDU( char * key, SI_AMF_DT_NRPPa_PDU * data, int lvl);

void __si_amf_memfree_NRPPa_PDU( SI_AMF_DT_NRPPa_PDU * data);

int __si_amf_Encode_NRPPa_PDU( SI_AMF_DT_NRPPa_PDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TACListInNRNTN( SI_AMF_DT_TACListInNRNTN ** data);

void __si_amf_debug_TACListInNRNTN( char * key, SI_AMF_DT_TACListInNRNTN * data, int lvl);

void __si_amf_memfree_TACListInNRNTN( SI_AMF_DT_TACListInNRNTN * data);

int __si_amf_Encode_TACListInNRNTN( SI_AMF_DT_TACListInNRNTN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRNTNTAIInformation( SI_AMF_DT_NRNTNTAIInformation ** data);

void __si_amf_debug_NRNTNTAIInformation( char * key, SI_AMF_DT_NRNTNTAIInformation * data, int lvl);

void __si_amf_memfree_NRNTNTAIInformation( SI_AMF_DT_NRNTNTAIInformation * data);

int __si_amf_Encode_NRNTNTAIInformation( SI_AMF_DT_NRNTNTAIInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NumberOfBroadcastsRequested( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NumberOfBroadcastsRequested( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NumberOfBroadcastsRequested( SI_AMF_DT_NumberOfBroadcastsRequested * data);


void __si_amf_debug_NRFrequencyBand( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NRFrequencyBand( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NRFrequencyBand( SI_AMF_DT_NRFrequencyBand * data);


void __si_amf_init_NRFrequencyBandItem( SI_AMF_DT_NRFrequencyBandItem ** data);

void __si_amf_debug_NRFrequencyBandItem( char * key, SI_AMF_DT_NRFrequencyBandItem * data, int lvl);

void __si_amf_memfree_NRFrequencyBandItem( SI_AMF_DT_NRFrequencyBandItem * data);

int __si_amf_Encode_NRFrequencyBandItem( SI_AMF_DT_NRFrequencyBandItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NR_PCI( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NR_PCI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NR_PCI( SI_AMF_DT_NR_PCI * data);


void __si_amf_init_NRV2XServicesAuthorized( SI_AMF_DT_NRV2XServicesAuthorized ** data);

void __si_amf_debug_NRV2XServicesAuthorized( char * key, SI_AMF_DT_NRV2XServicesAuthorized * data, int lvl);

void __si_amf_memfree_NRV2XServicesAuthorized( SI_AMF_DT_NRV2XServicesAuthorized * data);

int __si_amf_Encode_NRV2XServicesAuthorized( SI_AMF_DT_NRV2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NRUESidelinkAggregateMaximumBitrate( SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate ** data);

void __si_amf_debug_NRUESidelinkAggregateMaximumBitrate( char * key, SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * data, int lvl);

void __si_amf_memfree_NRUESidelinkAggregateMaximumBitrate( SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * data);

int __si_amf_Encode_NRUESidelinkAggregateMaximumBitrate( SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NSAG_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_NSAG_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_NSAG_ID( SI_AMF_DT_NSAG_ID * data);


void __si_amf_debug_NRA2XServicesAuthorized_aerialUE( char * key, uint8_t eNRA2XServicesAuthorized_aerialUE, int lvl);

int __si_amf_Encode_NRA2XServicesAuthorized_aerialUE( uint8_t eNRA2XServicesAuthorized_aerialUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_NRA2XServicesAuthorized_aerialControllerUE( char * key, uint8_t eNRA2XServicesAuthorized_aerialControllerUE, int lvl);

int __si_amf_Encode_NRA2XServicesAuthorized_aerialControllerUE( uint8_t eNRA2XServicesAuthorized_aerialControllerUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_NR_A2X_ServicesAuthorized( SI_AMF_DT_NR_A2X_ServicesAuthorized ** data);

void __si_amf_debug_NR_A2X_ServicesAuthorized( char * key, SI_AMF_DT_NR_A2X_ServicesAuthorized * data, int lvl);

void __si_amf_memfree_NR_A2X_ServicesAuthorized( SI_AMF_DT_NR_A2X_ServicesAuthorized * data);

int __si_amf_Encode_NR_A2X_ServicesAuthorized( SI_AMF_DT_NR_A2X_ServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_OnboardingSupport( char * key, uint8_t eOnboardingSupport, int lvl);

int __si_amf_Encode_OnboardingSupport( uint8_t eOnboardingSupport, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_OverloadAction( char * key, uint8_t eOverloadAction, int lvl);

int __si_amf_Encode_OverloadAction( uint8_t eOverloadAction, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_OverloadResponse( SI_AMF_DT_OverloadResponse ** data);

void __si_amf_debug_OverloadResponse( char * key, SI_AMF_DT_OverloadResponse * data, int lvl);

void __si_amf_memfree_OverloadResponse( SI_AMF_DT_OverloadResponse * data);

int __si_amf_Encode_OverloadResponse( SI_AMF_DT_OverloadResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_OverloadStartNSSAIList( SI_AMF_DT_OverloadStartNSSAIList ** data);

void __si_amf_debug_OverloadStartNSSAIList( char * key, SI_AMF_DT_OverloadStartNSSAIList * data, int lvl);

void __si_amf_memfree_OverloadStartNSSAIList( SI_AMF_DT_OverloadStartNSSAIList * data);

int __si_amf_Encode_OverloadStartNSSAIList( SI_AMF_DT_OverloadStartNSSAIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SliceOverloadList( SI_AMF_DT_SliceOverloadList ** data);

void __si_amf_debug_SliceOverloadList( char * key, SI_AMF_DT_SliceOverloadList * data, int lvl);

void __si_amf_memfree_SliceOverloadList( SI_AMF_DT_SliceOverloadList * data);

int __si_amf_Encode_SliceOverloadList( SI_AMF_DT_SliceOverloadList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TrafficLoadReductionIndication( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TrafficLoadReductionIndication( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TrafficLoadReductionIndication( SI_AMF_DT_TrafficLoadReductionIndication * data);


void __si_amf_init_OverloadStartNSSAIItem( SI_AMF_DT_OverloadStartNSSAIItem ** data);

void __si_amf_debug_OverloadStartNSSAIItem( char * key, SI_AMF_DT_OverloadStartNSSAIItem * data, int lvl);

void __si_amf_memfree_OverloadStartNSSAIItem( SI_AMF_DT_OverloadStartNSSAIItem * data);

int __si_amf_Encode_OverloadStartNSSAIItem( SI_AMF_DT_OverloadStartNSSAIItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PagingAssisDataforCEcapabUE( SI_AMF_DT_PagingAssisDataforCEcapabUE ** data);

void __si_amf_debug_PagingAssisDataforCEcapabUE( char * key, SI_AMF_DT_PagingAssisDataforCEcapabUE * data, int lvl);

void __si_amf_memfree_PagingAssisDataforCEcapabUE( SI_AMF_DT_PagingAssisDataforCEcapabUE * data);

int __si_amf_Encode_PagingAssisDataforCEcapabUE( SI_AMF_DT_PagingAssisDataforCEcapabUE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingCause( char * key, uint8_t ePagingCause, int lvl);

int __si_amf_Encode_PagingCause( uint8_t ePagingCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingCauseIndicationForVoiceService( char * key, uint8_t ePagingCauseIndicationForVoiceService, int lvl);

int __si_amf_Encode_PagingCauseIndicationForVoiceService( uint8_t ePagingCauseIndicationForVoiceService, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingOrigin( char * key, uint8_t ePagingOrigin, int lvl);

int __si_amf_Encode_PagingOrigin( uint8_t ePagingOrigin, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionForPagingList( SI_AMF_DT_PDUSessionForPagingList ** data);

void __si_amf_debug_PDUSessionForPagingList( char * key, SI_AMF_DT_PDUSessionForPagingList * data, int lvl);

void __si_amf_memfree_PDUSessionForPagingList( SI_AMF_DT_PDUSessionForPagingList * data);

int __si_amf_Encode_PDUSessionForPagingList( SI_AMF_DT_PDUSessionForPagingList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PagingPolicyDifferentiation( SI_AMF_DT_PagingPolicyDifferentiation ** data);

void __si_amf_debug_PagingPolicyDifferentiation( char * key, SI_AMF_DT_PagingPolicyDifferentiation * data, int lvl);

void __si_amf_memfree_PagingPolicyDifferentiation( SI_AMF_DT_PagingPolicyDifferentiation * data);

int __si_amf_Encode_PagingPolicyDifferentiation( SI_AMF_DT_PagingPolicyDifferentiation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUSessionID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PDUSessionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PDUSessionID( SI_AMF_DT_PDUSessionID * data);


void __si_amf_init_PagingPolicyDifferentiationList( SI_AMF_DT_PagingPolicyDifferentiationList ** data);

void __si_amf_debug_PagingPolicyDifferentiationList( char * key, SI_AMF_DT_PagingPolicyDifferentiationList * data, int lvl);

void __si_amf_memfree_PagingPolicyDifferentiationList( SI_AMF_DT_PagingPolicyDifferentiationList * data);

int __si_amf_Encode_PagingPolicyDifferentiationList( SI_AMF_DT_PagingPolicyDifferentiationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionForPagingItem( SI_AMF_DT_PDUSessionForPagingItem ** data);

void __si_amf_debug_PDUSessionForPagingItem( char * key, SI_AMF_DT_PDUSessionForPagingItem * data, int lvl);

void __si_amf_memfree_PDUSessionForPagingItem( SI_AMF_DT_PDUSessionForPagingItem * data);

int __si_amf_Encode_PDUSessionForPagingItem( SI_AMF_DT_PDUSessionForPagingItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingPolicyDifferentiationItem_dl_DataSize( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PagingPolicyDifferentiationItem_dl_DataSize( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PagingPolicyDifferentiationItem_dl_DataSize( SI_AMF_DT_PagingPolicyDifferentiationItem_dl_DataSize * data);


void __si_amf_debug_PagingPolicyIndicator( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PagingPolicyIndicator( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PagingPolicyIndicator( SI_AMF_DT_PagingPolicyIndicator * data);


void __si_amf_init_PagingPolicyDifferentiationItem( SI_AMF_DT_PagingPolicyDifferentiationItem ** data);

void __si_amf_debug_PagingPolicyDifferentiationItem( char * key, SI_AMF_DT_PagingPolicyDifferentiationItem * data, int lvl);

void __si_amf_memfree_PagingPolicyDifferentiationItem( SI_AMF_DT_PagingPolicyDifferentiationItem * data);

int __si_amf_Encode_PagingPolicyDifferentiationItem( SI_AMF_DT_PagingPolicyDifferentiationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingPriority( char * key, uint8_t ePagingPriority, int lvl);

int __si_amf_Encode_PagingPriority( uint8_t ePagingPriority, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PagingProbabilityInformation( char * key, uint8_t ePagingProbabilityInformation, int lvl);

int __si_amf_Encode_PagingProbabilityInformation( uint8_t ePagingProbabilityInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ParentTImeSource( char * key, uint8_t eParentTImeSource, int lvl);

int __si_amf_Encode_ParentTImeSource( uint8_t eParentTImeSource, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_Partially_Allowed_NSSAI( SI_AMF_DT_Partially_Allowed_NSSAI ** data);

void __si_amf_debug_Partially_Allowed_NSSAI( char * key, SI_AMF_DT_Partially_Allowed_NSSAI * data, int lvl);

void __si_amf_memfree_Partially_Allowed_NSSAI( SI_AMF_DT_Partially_Allowed_NSSAI * data);

int __si_amf_Encode_Partially_Allowed_NSSAI( SI_AMF_DT_Partially_Allowed_NSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PartiallyAllowedNSSAI_Item( SI_AMF_DT_PartiallyAllowedNSSAI_Item ** data);

void __si_amf_debug_PartiallyAllowedNSSAI_Item( char * key, SI_AMF_DT_PartiallyAllowedNSSAI_Item * data, int lvl);

void __si_amf_memfree_PartiallyAllowedNSSAI_Item( SI_AMF_DT_PartiallyAllowedNSSAI_Item * data);

int __si_amf_Encode_PartiallyAllowedNSSAI_Item( SI_AMF_DT_PartiallyAllowedNSSAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecurityIndication( SI_AMF_DT_SecurityIndication ** data);

void __si_amf_debug_SecurityIndication( char * key, SI_AMF_DT_SecurityIndication * data, int lvl);

void __si_amf_memfree_SecurityIndication( SI_AMF_DT_SecurityIndication * data);

int __si_amf_Encode_SecurityIndication( SI_AMF_DT_SecurityIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer ** data);

void __si_amf_debug_PathSwitchRequestAcknowledgeTransfer( char * key, SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer * data, int lvl);

void __si_amf_memfree_PathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer * data);

int __si_amf_Encode_PathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PathSwitchRequestSetupFailedTransfer ** data);

void __si_amf_debug_PathSwitchRequestSetupFailedTransfer( char * key, SI_AMF_DT_PathSwitchRequestSetupFailedTransfer * data, int lvl);

void __si_amf_memfree_PathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PathSwitchRequestSetupFailedTransfer * data);

int __si_amf_Encode_PathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PathSwitchRequestSetupFailedTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserPlaneSecurityInformation( SI_AMF_DT_UserPlaneSecurityInformation ** data);

void __si_amf_debug_UserPlaneSecurityInformation( char * key, SI_AMF_DT_UserPlaneSecurityInformation * data, int lvl);

void __si_amf_memfree_UserPlaneSecurityInformation( SI_AMF_DT_UserPlaneSecurityInformation * data);

int __si_amf_Encode_UserPlaneSecurityInformation( SI_AMF_DT_UserPlaneSecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAcceptedList( SI_AMF_DT_QosFlowAcceptedList ** data);

void __si_amf_debug_QosFlowAcceptedList( char * key, SI_AMF_DT_QosFlowAcceptedList * data, int lvl);

void __si_amf_memfree_QosFlowAcceptedList( SI_AMF_DT_QosFlowAcceptedList * data);

int __si_amf_Encode_QosFlowAcceptedList( SI_AMF_DT_QosFlowAcceptedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PathSwitchRequestTransfer( SI_AMF_DT_PathSwitchRequestTransfer ** data);

void __si_amf_debug_PathSwitchRequestTransfer( char * key, SI_AMF_DT_PathSwitchRequestTransfer * data, int lvl);

void __si_amf_memfree_PathSwitchRequestTransfer( SI_AMF_DT_PathSwitchRequestTransfer * data);

int __si_amf_Encode_PathSwitchRequestTransfer( SI_AMF_DT_PathSwitchRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer ** data);

void __si_amf_debug_PathSwitchRequestUnsuccessfulTransfer( char * key, SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer * data);

int __si_amf_Encode_PathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PC5QoSFlowList( SI_AMF_DT_PC5QoSFlowList ** data);

void __si_amf_debug_PC5QoSFlowList( char * key, SI_AMF_DT_PC5QoSFlowList * data, int lvl);

void __si_amf_memfree_PC5QoSFlowList( SI_AMF_DT_PC5QoSFlowList * data);

int __si_amf_Encode_PC5QoSFlowList( SI_AMF_DT_PC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PC5QoSParameters( SI_AMF_DT_PC5QoSParameters ** data);

void __si_amf_debug_PC5QoSParameters( char * key, SI_AMF_DT_PC5QoSParameters * data, int lvl);

void __si_amf_memfree_PC5QoSParameters( SI_AMF_DT_PC5QoSParameters * data);

int __si_amf_Encode_PC5QoSParameters( SI_AMF_DT_PC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PC5FlowBitRates( SI_AMF_DT_PC5FlowBitRates ** data);

void __si_amf_debug_PC5FlowBitRates( char * key, SI_AMF_DT_PC5FlowBitRates * data, int lvl);

void __si_amf_memfree_PC5FlowBitRates( SI_AMF_DT_PC5FlowBitRates * data);

int __si_amf_Encode_PC5FlowBitRates( SI_AMF_DT_PC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PC5QoSFlowItem( SI_AMF_DT_PC5QoSFlowItem ** data);

void __si_amf_debug_PC5QoSFlowItem( char * key, SI_AMF_DT_PC5QoSFlowItem * data, int lvl);

void __si_amf_memfree_PC5QoSFlowItem( SI_AMF_DT_PC5QoSFlowItem * data);

int __si_amf_Encode_PC5QoSFlowItem( SI_AMF_DT_PC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PrivacyIndicator( char * key, uint8_t ePrivacyIndicator, int lvl);

int __si_amf_Encode_PrivacyIndicator( uint8_t ePrivacyIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionAggregateMaximumBitRate( SI_AMF_DT_PDUSessionAggregateMaximumBitRate ** data);

void __si_amf_debug_PDUSessionAggregateMaximumBitRate( char * key, SI_AMF_DT_PDUSessionAggregateMaximumBitRate * data, int lvl);

void __si_amf_memfree_PDUSessionAggregateMaximumBitRate( SI_AMF_DT_PDUSessionAggregateMaximumBitRate * data);

int __si_amf_Encode_PDUSessionAggregateMaximumBitRate( SI_AMF_DT_PDUSessionAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUSessionPairID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_PDUSessionPairID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_PDUSessionPairID( SI_AMF_DT_PDUSessionPairID * data);


void __si_amf_init_PDUSessionResourceAdmittedList( SI_AMF_DT_PDUSessionResourceAdmittedList ** data);

void __si_amf_debug_PDUSessionResourceAdmittedList( char * key, SI_AMF_DT_PDUSessionResourceAdmittedList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceAdmittedList( SI_AMF_DT_PDUSessionResourceAdmittedList * data);

int __si_amf_Encode_PDUSessionResourceAdmittedList( SI_AMF_DT_PDUSessionResourceAdmittedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer ** data);

void __si_amf_init_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer2( SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer( char * key, SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer * data);

int __si_amf_Encode_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceAdmittedItem( SI_AMF_DT_PDUSessionResourceAdmittedItem ** data);

void __si_amf_debug_PDUSessionResourceAdmittedItem( char * key, SI_AMF_DT_PDUSessionResourceAdmittedItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceAdmittedItem( SI_AMF_DT_PDUSessionResourceAdmittedItem * data);

int __si_amf_Encode_PDUSessionResourceAdmittedItem( SI_AMF_DT_PDUSessionResourceAdmittedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyListModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm ** data);

void __si_amf_debug_PDUSessionResourceFailedToModifyListModCfm( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyListModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyListModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm ** data);

void __si_amf_debug_PDUSessionResourceFailedToModifyItemModCfm( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyItemModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyItemModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyListModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToModifyListModRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyListModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyListModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToModifyItemModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToModifyItemModRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToModifyItemModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToModifyItemModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToResumeListRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq ** data);

void __si_amf_debug_PDUSessionResourceFailedToResumeListRESReq( char * key, SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToResumeListRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq * data);

int __si_amf_Encode_PDUSessionResourceFailedToResumeListRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToResumeItemRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq ** data);

void __si_amf_debug_PDUSessionResourceFailedToResumeItemRESReq( char * key, SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToResumeItemRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq * data);

int __si_amf_Encode_PDUSessionResourceFailedToResumeItemRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToResumeListRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToResumeListRESRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToResumeListRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToResumeListRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToResumeItemRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToResumeItemRESRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToResumeItemRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToResumeItemRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupListCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupListCxtFail( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupListCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupListCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemCxtFail( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupListCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupListCxtRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupListCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupListCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemCxtRes( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupListHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupListHOAck( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupListHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupListHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemHOAck( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupListPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupListPSReq( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupListPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupListPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer2( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemPSReq( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupListSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupListSURes( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupListSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupListSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceFailedToSetupItemSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes ** data);

void __si_amf_debug_PDUSessionResourceFailedToSetupItemSURes( char * key, SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceFailedToSetupItemSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes * data);

int __si_amf_Encode_PDUSessionResourceFailedToSetupItemSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceHandoverList( SI_AMF_DT_PDUSessionResourceHandoverList ** data);

void __si_amf_debug_PDUSessionResourceHandoverList( char * key, SI_AMF_DT_PDUSessionResourceHandoverList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceHandoverList( SI_AMF_DT_PDUSessionResourceHandoverList * data);

int __si_amf_Encode_PDUSessionResourceHandoverList( SI_AMF_DT_PDUSessionResourceHandoverList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceHandoverItem_handoverCommandTransfer( SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer ** data);

void __si_amf_init_PDUSessionResourceHandoverItem_handoverCommandTransfer2( SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceHandoverItem_handoverCommandTransfer( char * key, SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceHandoverItem_handoverCommandTransfer( SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer * data);

int __si_amf_Encode_PDUSessionResourceHandoverItem_handoverCommandTransfer( SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceHandoverItem( SI_AMF_DT_PDUSessionResourceHandoverItem ** data);

void __si_amf_debug_PDUSessionResourceHandoverItem( char * key, SI_AMF_DT_PDUSessionResourceHandoverItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceHandoverItem( SI_AMF_DT_PDUSessionResourceHandoverItem * data);

int __si_amf_Encode_PDUSessionResourceHandoverItem( SI_AMF_DT_PDUSessionResourceHandoverItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceInformationList( SI_AMF_DT_PDUSessionResourceInformationList ** data);

void __si_amf_debug_PDUSessionResourceInformationList( char * key, SI_AMF_DT_PDUSessionResourceInformationList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceInformationList( SI_AMF_DT_PDUSessionResourceInformationList * data);

int __si_amf_Encode_PDUSessionResourceInformationList( SI_AMF_DT_PDUSessionResourceInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowInformationList( SI_AMF_DT_QosFlowInformationList ** data);

void __si_amf_debug_QosFlowInformationList( char * key, SI_AMF_DT_QosFlowInformationList * data, int lvl);

void __si_amf_memfree_QosFlowInformationList( SI_AMF_DT_QosFlowInformationList * data);

int __si_amf_Encode_QosFlowInformationList( SI_AMF_DT_QosFlowInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceInformationItem( SI_AMF_DT_PDUSessionResourceInformationItem ** data);

void __si_amf_debug_PDUSessionResourceInformationItem( char * key, SI_AMF_DT_PDUSessionResourceInformationItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceInformationItem( SI_AMF_DT_PDUSessionResourceInformationItem * data);

int __si_amf_Encode_PDUSessionResourceInformationItem( SI_AMF_DT_PDUSessionResourceInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceListCxtRelCpl( SI_AMF_DT_PDUSessionResourceListCxtRelCpl ** data);

void __si_amf_debug_PDUSessionResourceListCxtRelCpl( char * key, SI_AMF_DT_PDUSessionResourceListCxtRelCpl * data, int lvl);

void __si_amf_memfree_PDUSessionResourceListCxtRelCpl( SI_AMF_DT_PDUSessionResourceListCxtRelCpl * data);

int __si_amf_Encode_PDUSessionResourceListCxtRelCpl( SI_AMF_DT_PDUSessionResourceListCxtRelCpl * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceItemCxtRelCpl( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl ** data);

void __si_amf_debug_PDUSessionResourceItemCxtRelCpl( char * key, SI_AMF_DT_PDUSessionResourceItemCxtRelCpl * data, int lvl);

void __si_amf_memfree_PDUSessionResourceItemCxtRelCpl( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl * data);

int __si_amf_Encode_PDUSessionResourceItemCxtRelCpl( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer2( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceListCxtRelReq( SI_AMF_DT_PDUSessionResourceListCxtRelReq ** data);

void __si_amf_debug_PDUSessionResourceListCxtRelReq( char * key, SI_AMF_DT_PDUSessionResourceListCxtRelReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceListCxtRelReq( SI_AMF_DT_PDUSessionResourceListCxtRelReq * data);

int __si_amf_Encode_PDUSessionResourceListCxtRelReq( SI_AMF_DT_PDUSessionResourceListCxtRelReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceItemCxtRelReq( SI_AMF_DT_PDUSessionResourceItemCxtRelReq ** data);

void __si_amf_debug_PDUSessionResourceItemCxtRelReq( char * key, SI_AMF_DT_PDUSessionResourceItemCxtRelReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceItemCxtRelReq( SI_AMF_DT_PDUSessionResourceItemCxtRelReq * data);

int __si_amf_Encode_PDUSessionResourceItemCxtRelReq( SI_AMF_DT_PDUSessionResourceItemCxtRelReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceListHORqd( SI_AMF_DT_PDUSessionResourceListHORqd ** data);

void __si_amf_debug_PDUSessionResourceListHORqd( char * key, SI_AMF_DT_PDUSessionResourceListHORqd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceListHORqd( SI_AMF_DT_PDUSessionResourceListHORqd * data);

int __si_amf_Encode_PDUSessionResourceListHORqd( SI_AMF_DT_PDUSessionResourceListHORqd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceItemHORqd_handoverRequiredTransfer( SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer ** data);

void __si_amf_init_PDUSessionResourceItemHORqd_handoverRequiredTransfer2( SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceItemHORqd_handoverRequiredTransfer( char * key, SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceItemHORqd_handoverRequiredTransfer( SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer * data);

int __si_amf_Encode_PDUSessionResourceItemHORqd_handoverRequiredTransfer( SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceItemHORqd( SI_AMF_DT_PDUSessionResourceItemHORqd ** data);

void __si_amf_debug_PDUSessionResourceItemHORqd( char * key, SI_AMF_DT_PDUSessionResourceItemHORqd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceItemHORqd( SI_AMF_DT_PDUSessionResourceItemHORqd * data);

int __si_amf_Encode_PDUSessionResourceItemHORqd( SI_AMF_DT_PDUSessionResourceItemHORqd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionListMTCommHReq( SI_AMF_DT_PDUSessionListMTCommHReq ** data);

void __si_amf_debug_PDUSessionListMTCommHReq( char * key, SI_AMF_DT_PDUSessionListMTCommHReq * data, int lvl);

void __si_amf_memfree_PDUSessionListMTCommHReq( SI_AMF_DT_PDUSessionListMTCommHReq * data);

int __si_amf_Encode_PDUSessionListMTCommHReq( SI_AMF_DT_PDUSessionListMTCommHReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionListMTCommHReq_Item( SI_AMF_DT_PDUSessionListMTCommHReq_Item ** data);

void __si_amf_debug_PDUSessionListMTCommHReq_Item( char * key, SI_AMF_DT_PDUSessionListMTCommHReq_Item * data, int lvl);

void __si_amf_memfree_PDUSessionListMTCommHReq_Item( SI_AMF_DT_PDUSessionListMTCommHReq_Item * data);

int __si_amf_Encode_PDUSessionListMTCommHReq_Item( SI_AMF_DT_PDUSessionListMTCommHReq_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowModifyConfirmList( SI_AMF_DT_QosFlowModifyConfirmList ** data);

void __si_amf_debug_QosFlowModifyConfirmList( char * key, SI_AMF_DT_QosFlowModifyConfirmList * data, int lvl);

void __si_amf_memfree_QosFlowModifyConfirmList( SI_AMF_DT_QosFlowModifyConfirmList * data);

int __si_amf_Encode_QosFlowModifyConfirmList( SI_AMF_DT_QosFlowModifyConfirmList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UPTransportLayerInformationPairList( SI_AMF_DT_UPTransportLayerInformationPairList ** data);

void __si_amf_debug_UPTransportLayerInformationPairList( char * key, SI_AMF_DT_UPTransportLayerInformationPairList * data, int lvl);

void __si_amf_memfree_UPTransportLayerInformationPairList( SI_AMF_DT_UPTransportLayerInformationPairList * data);

int __si_amf_Encode_UPTransportLayerInformationPairList( SI_AMF_DT_UPTransportLayerInformationPairList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer ** data);

void __si_amf_debug_PDUSessionResourceModifyConfirmTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer ** data);

void __si_amf_debug_PDUSessionResourceModifyIndicationUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAddOrModifyResponseList( SI_AMF_DT_QosFlowAddOrModifyResponseList ** data);

void __si_amf_debug_QosFlowAddOrModifyResponseList( char * key, SI_AMF_DT_QosFlowAddOrModifyResponseList * data, int lvl);

void __si_amf_memfree_QosFlowAddOrModifyResponseList( SI_AMF_DT_QosFlowAddOrModifyResponseList * data);

int __si_amf_Encode_QosFlowAddOrModifyResponseList( SI_AMF_DT_QosFlowAddOrModifyResponseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowPerTNLInformationList( SI_AMF_DT_QosFlowPerTNLInformationList ** data);

void __si_amf_debug_QosFlowPerTNLInformationList( char * key, SI_AMF_DT_QosFlowPerTNLInformationList * data, int lvl);

void __si_amf_memfree_QosFlowPerTNLInformationList( SI_AMF_DT_QosFlowPerTNLInformationList * data);

int __si_amf_Encode_QosFlowPerTNLInformationList( SI_AMF_DT_QosFlowPerTNLInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyResponseTransfer ** data);

void __si_amf_debug_PDUSessionResourceModifyResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowPerTNLInformation( SI_AMF_DT_QosFlowPerTNLInformation ** data);

void __si_amf_debug_QosFlowPerTNLInformation( char * key, SI_AMF_DT_QosFlowPerTNLInformation * data, int lvl);

void __si_amf_memfree_QosFlowPerTNLInformation( SI_AMF_DT_QosFlowPerTNLInformation * data);

int __si_amf_Encode_QosFlowPerTNLInformation( SI_AMF_DT_QosFlowPerTNLInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer ** data);

void __si_amf_debug_PDUSessionResourceModifyIndicationTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyListModCfm( SI_AMF_DT_PDUSessionResourceModifyListModCfm ** data);

void __si_amf_debug_PDUSessionResourceModifyListModCfm( char * key, SI_AMF_DT_PDUSessionResourceModifyListModCfm * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyListModCfm( SI_AMF_DT_PDUSessionResourceModifyListModCfm * data);

int __si_amf_Encode_PDUSessionResourceModifyListModCfm( SI_AMF_DT_PDUSessionResourceModifyListModCfm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer ** data);

void __si_amf_init_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer2( SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModCfm( SI_AMF_DT_PDUSessionResourceModifyItemModCfm ** data);

void __si_amf_debug_PDUSessionResourceModifyItemModCfm( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModCfm * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModCfm( SI_AMF_DT_PDUSessionResourceModifyItemModCfm * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModCfm( SI_AMF_DT_PDUSessionResourceModifyItemModCfm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyListModInd( SI_AMF_DT_PDUSessionResourceModifyListModInd ** data);

void __si_amf_debug_PDUSessionResourceModifyListModInd( char * key, SI_AMF_DT_PDUSessionResourceModifyListModInd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyListModInd( SI_AMF_DT_PDUSessionResourceModifyListModInd * data);

int __si_amf_Encode_PDUSessionResourceModifyListModInd( SI_AMF_DT_PDUSessionResourceModifyListModInd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer ** data);

void __si_amf_init_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer2( SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModInd( SI_AMF_DT_PDUSessionResourceModifyItemModInd ** data);

void __si_amf_debug_PDUSessionResourceModifyItemModInd( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModInd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModInd( SI_AMF_DT_PDUSessionResourceModifyItemModInd * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModInd( SI_AMF_DT_PDUSessionResourceModifyItemModInd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyListModReq( SI_AMF_DT_PDUSessionResourceModifyListModReq ** data);

void __si_amf_debug_PDUSessionResourceModifyListModReq( char * key, SI_AMF_DT_PDUSessionResourceModifyListModReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyListModReq( SI_AMF_DT_PDUSessionResourceModifyListModReq * data);

int __si_amf_Encode_PDUSessionResourceModifyListModReq( SI_AMF_DT_PDUSessionResourceModifyListModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer2( SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModReq( SI_AMF_DT_PDUSessionResourceModifyItemModReq ** data);

void __si_amf_debug_PDUSessionResourceModifyItemModReq( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModReq( SI_AMF_DT_PDUSessionResourceModifyItemModReq * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModReq( SI_AMF_DT_PDUSessionResourceModifyItemModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyListModRes( SI_AMF_DT_PDUSessionResourceModifyListModRes ** data);

void __si_amf_debug_PDUSessionResourceModifyListModRes( char * key, SI_AMF_DT_PDUSessionResourceModifyListModRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyListModRes( SI_AMF_DT_PDUSessionResourceModifyListModRes * data);

int __si_amf_Encode_PDUSessionResourceModifyListModRes( SI_AMF_DT_PDUSessionResourceModifyListModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer2( SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyItemModRes( SI_AMF_DT_PDUSessionResourceModifyItemModRes ** data);

void __si_amf_debug_PDUSessionResourceModifyItemModRes( char * key, SI_AMF_DT_PDUSessionResourceModifyItemModRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyItemModRes( SI_AMF_DT_PDUSessionResourceModifyItemModRes * data);

int __si_amf_Encode_PDUSessionResourceModifyItemModRes( SI_AMF_DT_PDUSessionResourceModifyItemModRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer ** data);

void __si_amf_debug_PDUSessionResourceModifyUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceNotifyList( SI_AMF_DT_PDUSessionResourceNotifyList ** data);

void __si_amf_debug_PDUSessionResourceNotifyList( char * key, SI_AMF_DT_PDUSessionResourceNotifyList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceNotifyList( SI_AMF_DT_PDUSessionResourceNotifyList * data);

int __si_amf_Encode_PDUSessionResourceNotifyList( SI_AMF_DT_PDUSessionResourceNotifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer ** data);

void __si_amf_init_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer2( SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer( char * key, SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer * data);

int __si_amf_Encode_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceNotifyItem( SI_AMF_DT_PDUSessionResourceNotifyItem ** data);

void __si_amf_debug_PDUSessionResourceNotifyItem( char * key, SI_AMF_DT_PDUSessionResourceNotifyItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceNotifyItem( SI_AMF_DT_PDUSessionResourceNotifyItem * data);

int __si_amf_Encode_PDUSessionResourceNotifyItem( SI_AMF_DT_PDUSessionResourceNotifyItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer ** data);

void __si_amf_debug_PDUSessionResourceNotifyReleasedTransfer( char * key, SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer * data);

int __si_amf_Encode_PDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UserPlaneErrorIndicator( char * key, uint8_t eUserPlaneErrorIndicator, int lvl);

int __si_amf_Encode_UserPlaneErrorIndicator( uint8_t eUserPlaneErrorIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowNotifyList( SI_AMF_DT_QosFlowNotifyList ** data);

void __si_amf_debug_QosFlowNotifyList( char * key, SI_AMF_DT_QosFlowNotifyList * data, int lvl);

void __si_amf_memfree_QosFlowNotifyList( SI_AMF_DT_QosFlowNotifyList * data);

int __si_amf_Encode_QosFlowNotifyList( SI_AMF_DT_QosFlowNotifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyTransfer ** data);

void __si_amf_debug_PDUSessionResourceNotifyTransfer( char * key, SI_AMF_DT_PDUSessionResourceNotifyTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyTransfer * data);

int __si_amf_Encode_PDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer ** data);

void __si_amf_debug_PDUSessionResourceReleaseCommandTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedListNot( SI_AMF_DT_PDUSessionResourceReleasedListNot ** data);

void __si_amf_debug_PDUSessionResourceReleasedListNot( char * key, SI_AMF_DT_PDUSessionResourceReleasedListNot * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedListNot( SI_AMF_DT_PDUSessionResourceReleasedListNot * data);

int __si_amf_Encode_PDUSessionResourceReleasedListNot( SI_AMF_DT_PDUSessionResourceReleasedListNot * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer ** data);

void __si_amf_init_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer2( SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemNot( SI_AMF_DT_PDUSessionResourceReleasedItemNot ** data);

void __si_amf_debug_PDUSessionResourceReleasedItemNot( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemNot * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemNot( SI_AMF_DT_PDUSessionResourceReleasedItemNot * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemNot( SI_AMF_DT_PDUSessionResourceReleasedItemNot * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedListPSAck( SI_AMF_DT_PDUSessionResourceReleasedListPSAck ** data);

void __si_amf_debug_PDUSessionResourceReleasedListPSAck( char * key, SI_AMF_DT_PDUSessionResourceReleasedListPSAck * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedListPSAck( SI_AMF_DT_PDUSessionResourceReleasedListPSAck * data);

int __si_amf_Encode_PDUSessionResourceReleasedListPSAck( SI_AMF_DT_PDUSessionResourceReleasedListPSAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemPSAck( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck ** data);

void __si_amf_debug_PDUSessionResourceReleasedItemPSAck( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemPSAck * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemPSAck( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemPSAck( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedListPSFail( SI_AMF_DT_PDUSessionResourceReleasedListPSFail ** data);

void __si_amf_debug_PDUSessionResourceReleasedListPSFail( char * key, SI_AMF_DT_PDUSessionResourceReleasedListPSFail * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedListPSFail( SI_AMF_DT_PDUSessionResourceReleasedListPSFail * data);

int __si_amf_Encode_PDUSessionResourceReleasedListPSFail( SI_AMF_DT_PDUSessionResourceReleasedListPSFail * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemPSFail( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail ** data);

void __si_amf_debug_PDUSessionResourceReleasedItemPSFail( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemPSFail * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemPSFail( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemPSFail( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedListRelRes( SI_AMF_DT_PDUSessionResourceReleasedListRelRes ** data);

void __si_amf_debug_PDUSessionResourceReleasedListRelRes( char * key, SI_AMF_DT_PDUSessionResourceReleasedListRelRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedListRelRes( SI_AMF_DT_PDUSessionResourceReleasedListRelRes * data);

int __si_amf_Encode_PDUSessionResourceReleasedListRelRes( SI_AMF_DT_PDUSessionResourceReleasedListRelRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer2( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleasedItemRelRes( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes ** data);

void __si_amf_debug_PDUSessionResourceReleasedItemRelRes( char * key, SI_AMF_DT_PDUSessionResourceReleasedItemRelRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleasedItemRelRes( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes * data);

int __si_amf_Encode_PDUSessionResourceReleasedItemRelRes( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer ** data);

void __si_amf_debug_PDUSessionResourceReleaseResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeListRESReq( SI_AMF_DT_PDUSessionResourceResumeListRESReq ** data);

void __si_amf_debug_PDUSessionResourceResumeListRESReq( char * key, SI_AMF_DT_PDUSessionResourceResumeListRESReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeListRESReq( SI_AMF_DT_PDUSessionResourceResumeListRESReq * data);

int __si_amf_Encode_PDUSessionResourceResumeListRESReq( SI_AMF_DT_PDUSessionResourceResumeListRESReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer2( SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeItemRESReq( SI_AMF_DT_PDUSessionResourceResumeItemRESReq ** data);

void __si_amf_debug_PDUSessionResourceResumeItemRESReq( char * key, SI_AMF_DT_PDUSessionResourceResumeItemRESReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeItemRESReq( SI_AMF_DT_PDUSessionResourceResumeItemRESReq * data);

int __si_amf_Encode_PDUSessionResourceResumeItemRESReq( SI_AMF_DT_PDUSessionResourceResumeItemRESReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeListRESRes( SI_AMF_DT_PDUSessionResourceResumeListRESRes ** data);

void __si_amf_debug_PDUSessionResourceResumeListRESRes( char * key, SI_AMF_DT_PDUSessionResourceResumeListRESRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeListRESRes( SI_AMF_DT_PDUSessionResourceResumeListRESRes * data);

int __si_amf_Encode_PDUSessionResourceResumeListRESRes( SI_AMF_DT_PDUSessionResourceResumeListRESRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer2( SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceResumeItemRESRes( SI_AMF_DT_PDUSessionResourceResumeItemRESRes ** data);

void __si_amf_debug_PDUSessionResourceResumeItemRESRes( char * key, SI_AMF_DT_PDUSessionResourceResumeItemRESRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceResumeItemRESRes( SI_AMF_DT_PDUSessionResourceResumeItemRESRes * data);

int __si_amf_Encode_PDUSessionResourceResumeItemRESRes( SI_AMF_DT_PDUSessionResourceResumeItemRESRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSecondaryRATUsageList( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList ** data);

void __si_amf_debug_PDUSessionResourceSecondaryRATUsageList( char * key, SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSecondaryRATUsageList( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList * data);

int __si_amf_Encode_PDUSessionResourceSecondaryRATUsageList( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer ** data);

void __si_amf_init_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer2( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer( char * key, SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer * data);

int __si_amf_Encode_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSecondaryRATUsageItem( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem ** data);

void __si_amf_debug_PDUSessionResourceSecondaryRATUsageItem( char * key, SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSecondaryRATUsageItem( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem * data);

int __si_amf_Encode_PDUSessionResourceSecondaryRATUsageItem( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupListCxtReq( SI_AMF_DT_PDUSessionResourceSetupListCxtReq ** data);

void __si_amf_debug_PDUSessionResourceSetupListCxtReq( char * key, SI_AMF_DT_PDUSessionResourceSetupListCxtReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupListCxtReq( SI_AMF_DT_PDUSessionResourceSetupListCxtReq * data);

int __si_amf_Encode_PDUSessionResourceSetupListCxtReq( SI_AMF_DT_PDUSessionResourceSetupListCxtReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer2( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemCxtReq( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq ** data);

void __si_amf_debug_PDUSessionResourceSetupItemCxtReq( char * key, SI_AMF_DT_PDUSessionResourceSetupItemCxtReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemCxtReq( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq * data);

int __si_amf_Encode_PDUSessionResourceSetupItemCxtReq( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupListCxtRes( SI_AMF_DT_PDUSessionResourceSetupListCxtRes ** data);

void __si_amf_debug_PDUSessionResourceSetupListCxtRes( char * key, SI_AMF_DT_PDUSessionResourceSetupListCxtRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupListCxtRes( SI_AMF_DT_PDUSessionResourceSetupListCxtRes * data);

int __si_amf_Encode_PDUSessionResourceSetupListCxtRes( SI_AMF_DT_PDUSessionResourceSetupListCxtRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer2( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes ** data);

void __si_amf_debug_PDUSessionResourceSetupItemCxtRes( char * key, SI_AMF_DT_PDUSessionResourceSetupItemCxtRes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes * data);

int __si_amf_Encode_PDUSessionResourceSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupListHOReq( SI_AMF_DT_PDUSessionResourceSetupListHOReq ** data);

void __si_amf_debug_PDUSessionResourceSetupListHOReq( char * key, SI_AMF_DT_PDUSessionResourceSetupListHOReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupListHOReq( SI_AMF_DT_PDUSessionResourceSetupListHOReq * data);

int __si_amf_Encode_PDUSessionResourceSetupListHOReq( SI_AMF_DT_PDUSessionResourceSetupListHOReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer2( SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemHOReq( SI_AMF_DT_PDUSessionResourceSetupItemHOReq ** data);

void __si_amf_debug_PDUSessionResourceSetupItemHOReq( char * key, SI_AMF_DT_PDUSessionResourceSetupItemHOReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemHOReq( SI_AMF_DT_PDUSessionResourceSetupItemHOReq * data);

int __si_amf_Encode_PDUSessionResourceSetupItemHOReq( SI_AMF_DT_PDUSessionResourceSetupItemHOReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupListSUReq( SI_AMF_DT_PDUSessionResourceSetupListSUReq ** data);

void __si_amf_debug_PDUSessionResourceSetupListSUReq( char * key, SI_AMF_DT_PDUSessionResourceSetupListSUReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupListSUReq( SI_AMF_DT_PDUSessionResourceSetupListSUReq * data);

int __si_amf_Encode_PDUSessionResourceSetupListSUReq( SI_AMF_DT_PDUSessionResourceSetupListSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer2( SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemSUReq( SI_AMF_DT_PDUSessionResourceSetupItemSUReq ** data);

void __si_amf_debug_PDUSessionResourceSetupItemSUReq( char * key, SI_AMF_DT_PDUSessionResourceSetupItemSUReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemSUReq( SI_AMF_DT_PDUSessionResourceSetupItemSUReq * data);

int __si_amf_Encode_PDUSessionResourceSetupItemSUReq( SI_AMF_DT_PDUSessionResourceSetupItemSUReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupListSURes( SI_AMF_DT_PDUSessionResourceSetupListSURes ** data);

void __si_amf_debug_PDUSessionResourceSetupListSURes( char * key, SI_AMF_DT_PDUSessionResourceSetupListSURes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupListSURes( SI_AMF_DT_PDUSessionResourceSetupListSURes * data);

int __si_amf_Encode_PDUSessionResourceSetupListSURes( SI_AMF_DT_PDUSessionResourceSetupListSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer ** data);

void __si_amf_init_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer2( SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupItemSURes( SI_AMF_DT_PDUSessionResourceSetupItemSURes ** data);

void __si_amf_debug_PDUSessionResourceSetupItemSURes( char * key, SI_AMF_DT_PDUSessionResourceSetupItemSURes * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupItemSURes( SI_AMF_DT_PDUSessionResourceSetupItemSURes * data);

int __si_amf_Encode_PDUSessionResourceSetupItemSURes( SI_AMF_DT_PDUSessionResourceSetupItemSURes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupResponseTransfer ** data);

void __si_amf_debug_PDUSessionResourceSetupResponseTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupResponseTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupResponseTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer ** data);

void __si_amf_debug_PDUSessionResourceSetupUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSuspendListSUSReq( SI_AMF_DT_PDUSessionResourceSuspendListSUSReq ** data);

void __si_amf_debug_PDUSessionResourceSuspendListSUSReq( char * key, SI_AMF_DT_PDUSessionResourceSuspendListSUSReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSuspendListSUSReq( SI_AMF_DT_PDUSessionResourceSuspendListSUSReq * data);

int __si_amf_Encode_PDUSessionResourceSuspendListSUSReq( SI_AMF_DT_PDUSessionResourceSuspendListSUSReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer2( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSuspendItemSUSReq( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq ** data);

void __si_amf_debug_PDUSessionResourceSuspendItemSUSReq( char * key, SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSuspendItemSUSReq( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq * data);

int __si_amf_Encode_PDUSessionResourceSuspendItemSUSReq( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSwitchedList( SI_AMF_DT_PDUSessionResourceSwitchedList ** data);

void __si_amf_debug_PDUSessionResourceSwitchedList( char * key, SI_AMF_DT_PDUSessionResourceSwitchedList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSwitchedList( SI_AMF_DT_PDUSessionResourceSwitchedList * data);

int __si_amf_Encode_PDUSessionResourceSwitchedList( SI_AMF_DT_PDUSessionResourceSwitchedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer ** data);

void __si_amf_init_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer2( SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer( char * key, SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer * data);

int __si_amf_Encode_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceSwitchedItem( SI_AMF_DT_PDUSessionResourceSwitchedItem ** data);

void __si_amf_debug_PDUSessionResourceSwitchedItem( char * key, SI_AMF_DT_PDUSessionResourceSwitchedItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceSwitchedItem( SI_AMF_DT_PDUSessionResourceSwitchedItem * data);

int __si_amf_Encode_PDUSessionResourceSwitchedItem( SI_AMF_DT_PDUSessionResourceSwitchedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToBeSwitchedDLList( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList ** data);

void __si_amf_debug_PDUSessionResourceToBeSwitchedDLList( char * key, SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToBeSwitchedDLList( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList * data);

int __si_amf_Encode_PDUSessionResourceToBeSwitchedDLList( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer ** data);

void __si_amf_init_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer2( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer( char * key, SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer * data);

int __si_amf_Encode_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToBeSwitchedDLItem( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem ** data);

void __si_amf_debug_PDUSessionResourceToBeSwitchedDLItem( char * key, SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToBeSwitchedDLItem( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem * data);

int __si_amf_Encode_PDUSessionResourceToBeSwitchedDLItem( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseListHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd ** data);

void __si_amf_debug_PDUSessionResourceToReleaseListHOCmd( char * key, SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseListHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd * data);

int __si_amf_Encode_PDUSessionResourceToReleaseListHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer ** data);

void __si_amf_init_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer2( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer( char * key, SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer * data);

int __si_amf_Encode_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseItemHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd ** data);

void __si_amf_debug_PDUSessionResourceToReleaseItemHOCmd( char * key, SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseItemHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd * data);

int __si_amf_Encode_PDUSessionResourceToReleaseItemHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseListRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd ** data);

void __si_amf_debug_PDUSessionResourceToReleaseListRelCmd( char * key, SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseListRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd * data);

int __si_amf_Encode_PDUSessionResourceToReleaseListRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer ** data);

void __si_amf_init_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer2( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer( char * key, SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer * data);

int __si_amf_Encode_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionResourceToReleaseItemRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd ** data);

void __si_amf_debug_PDUSessionResourceToReleaseItemRelCmd( char * key, SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd * data, int lvl);

void __si_amf_memfree_PDUSessionResourceToReleaseItemRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd * data);

int __si_amf_Encode_PDUSessionResourceToReleaseItemRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUSessionType( char * key, uint8_t ePDUSessionType, int lvl);

int __si_amf_Encode_PDUSessionType( uint8_t ePDUSessionType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUSessionUsageReport_rATType( char * key, uint8_t ePDUSessionUsageReport_rATType, int lvl);

int __si_amf_Encode_PDUSessionUsageReport_rATType( uint8_t ePDUSessionUsageReport_rATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_VolumeTimedReportList( SI_AMF_DT_VolumeTimedReportList ** data);

void __si_amf_debug_VolumeTimedReportList( char * key, SI_AMF_DT_VolumeTimedReportList * data, int lvl);

void __si_amf_memfree_VolumeTimedReportList( SI_AMF_DT_VolumeTimedReportList * data);

int __si_amf_Encode_VolumeTimedReportList( SI_AMF_DT_VolumeTimedReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUSessionUsageReport( SI_AMF_DT_PDUSessionUsageReport ** data);

void __si_amf_debug_PDUSessionUsageReport( char * key, SI_AMF_DT_PDUSessionUsageReport * data, int lvl);

void __si_amf_memfree_PDUSessionUsageReport( SI_AMF_DT_PDUSessionUsageReport * data);

int __si_amf_Encode_PDUSessionUsageReport( SI_AMF_DT_PDUSessionUsageReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUsetQoSInformation_pduSetIntegratedHandlingInformation( char * key, uint8_t ePDUsetQoSInformation_pduSetIntegratedHandlingInformation, int lvl);

int __si_amf_Encode_PDUsetQoSInformation_pduSetIntegratedHandlingInformation( uint8_t ePDUsetQoSInformation_pduSetIntegratedHandlingInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUsetQoSInformation( SI_AMF_DT_PDUsetQoSInformation ** data);

void __si_amf_debug_PDUsetQoSInformation( char * key, SI_AMF_DT_PDUsetQoSInformation * data, int lvl);

void __si_amf_memfree_PDUsetQoSInformation( SI_AMF_DT_PDUsetQoSInformation * data);

int __si_amf_Encode_PDUsetQoSInformation( SI_AMF_DT_PDUsetQoSInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PDUsetQoSParameters( SI_AMF_DT_PDUsetQoSParameters ** data);

void __si_amf_debug_PDUsetQoSParameters( char * key, SI_AMF_DT_PDUsetQoSParameters * data, int lvl);

void __si_amf_memfree_PDUsetQoSParameters( SI_AMF_DT_PDUsetQoSParameters * data);

int __si_amf_Encode_PDUsetQoSParameters( SI_AMF_DT_PDUsetQoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_PDUSetbasedHandlingIndicator( char * key, uint8_t ePDUSetbasedHandlingIndicator, int lvl);

int __si_amf_Encode_PDUSetbasedHandlingIndicator( uint8_t ePDUSetbasedHandlingIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PEIPSassistanceInformation( SI_AMF_DT_PEIPSassistanceInformation ** data);

void __si_amf_debug_PEIPSassistanceInformation( char * key, SI_AMF_DT_PEIPSassistanceInformation * data, int lvl);

void __si_amf_memfree_PEIPSassistanceInformation( SI_AMF_DT_PEIPSassistanceInformation * data);

int __si_amf_Encode_PEIPSassistanceInformation( SI_AMF_DT_PEIPSassistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Periodicity( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_Periodicity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_Periodicity( SI_AMF_DT_Periodicity * data);


void __si_amf_init_PeriodicityBound( SI_AMF_DT_PeriodicityBound ** data);

void __si_amf_debug_PeriodicityBound( char * key, SI_AMF_DT_PeriodicityBound * data, int lvl);

void __si_amf_memfree_PeriodicityBound( SI_AMF_DT_PeriodicityBound * data);

int __si_amf_Encode_PeriodicityBound( SI_AMF_DT_PeriodicityBound * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_AllowedPeriodicityList( SI_AMF_DT_AllowedPeriodicityList ** data);

void __si_amf_debug_AllowedPeriodicityList( char * key, SI_AMF_DT_AllowedPeriodicityList * data, int lvl);

void __si_amf_memfree_AllowedPeriodicityList( SI_AMF_DT_AllowedPeriodicityList * data);

int __si_amf_Encode_AllowedPeriodicityList( SI_AMF_DT_AllowedPeriodicityList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PeriodicityList( SI_AMF_DT_PeriodicityList ** data);

void __si_amf_debug_PeriodicityList( char * key, SI_AMF_DT_PeriodicityList * data, int lvl);

void __si_amf_memfree_PeriodicityList( SI_AMF_DT_PeriodicityList * data);

int __si_amf_Encode_PeriodicityList( SI_AMF_DT_PeriodicityList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PeriodicityRange( SI_AMF_DT_PeriodicityRange ** data);

void __si_amf_debug_PeriodicityRange( char * key, SI_AMF_DT_PeriodicityRange * data, int lvl);

void __si_amf_memfree_PeriodicityRange( SI_AMF_DT_PeriodicityRange * data);

int __si_amf_Encode_PeriodicityRange( SI_AMF_DT_PeriodicityRange * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PLMNSupportList( SI_AMF_DT_PLMNSupportList ** data);

void __si_amf_debug_PLMNSupportList( char * key, SI_AMF_DT_PLMNSupportList * data, int lvl);

void __si_amf_memfree_PLMNSupportList( SI_AMF_DT_PLMNSupportList * data);

int __si_amf_Encode_PLMNSupportList( SI_AMF_DT_PLMNSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PLMNSupportItem( SI_AMF_DT_PLMNSupportItem ** data);

void __si_amf_debug_PLMNSupportItem( char * key, SI_AMF_DT_PLMNSupportItem * data, int lvl);

void __si_amf_memfree_PLMNSupportItem( SI_AMF_DT_PLMNSupportItem * data);

int __si_amf_Encode_PLMNSupportItem( SI_AMF_DT_PLMNSupportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PWSFailedCellIDList( SI_AMF_DT_PWSFailedCellIDList ** data);

void __si_amf_debug_PWSFailedCellIDList( char * key, SI_AMF_DT_PWSFailedCellIDList * data, int lvl);

void __si_amf_memfree_PWSFailedCellIDList( SI_AMF_DT_PWSFailedCellIDList * data);

int __si_amf_Encode_PWSFailedCellIDList( SI_AMF_DT_PWSFailedCellIDList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PNI_NPN_AreaScopeofMDT( SI_AMF_DT_PNI_NPN_AreaScopeofMDT ** data);

void __si_amf_debug_PNI_NPN_AreaScopeofMDT( char * key, SI_AMF_DT_PNI_NPN_AreaScopeofMDT * data, int lvl);

void __si_amf_memfree_PNI_NPN_AreaScopeofMDT( SI_AMF_DT_PNI_NPN_AreaScopeofMDT * data);

int __si_amf_Encode_PNI_NPN_AreaScopeofMDT( SI_AMF_DT_PNI_NPN_AreaScopeofMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_PNI_NPNBasedMDT( SI_AMF_DT_PNI_NPNBasedMDT ** data);

void __si_amf_debug_PNI_NPNBasedMDT( char * key, SI_AMF_DT_PNI_NPNBasedMDT * data, int lvl);

void __si_amf_memfree_PNI_NPNBasedMDT( SI_AMF_DT_PNI_NPNBasedMDT * data);

int __si_amf_Encode_PNI_NPNBasedMDT( SI_AMF_DT_PNI_NPNBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEAppLayerMeasInfoList( SI_AMF_DT_UEAppLayerMeasInfoList ** data);

void __si_amf_debug_UEAppLayerMeasInfoList( char * key, SI_AMF_DT_UEAppLayerMeasInfoList * data, int lvl);

void __si_amf_memfree_UEAppLayerMeasInfoList( SI_AMF_DT_UEAppLayerMeasInfoList * data);

int __si_amf_Encode_UEAppLayerMeasInfoList( SI_AMF_DT_UEAppLayerMeasInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QMCConfigInfo( SI_AMF_DT_QMCConfigInfo ** data);

void __si_amf_debug_QMCConfigInfo( char * key, SI_AMF_DT_QMCConfigInfo * data, int lvl);

void __si_amf_memfree_QMCConfigInfo( SI_AMF_DT_QMCConfigInfo * data);

int __si_amf_Encode_QMCConfigInfo( SI_AMF_DT_QMCConfigInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoEReferenceList( SI_AMF_DT_QoEReferenceList ** data);

void __si_amf_debug_QoEReferenceList( char * key, SI_AMF_DT_QoEReferenceList * data, int lvl);

void __si_amf_memfree_QoEReferenceList( SI_AMF_DT_QoEReferenceList * data);

int __si_amf_Encode_QoEReferenceList( SI_AMF_DT_QoEReferenceList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QMCDeactivation( SI_AMF_DT_QMCDeactivation ** data);

void __si_amf_debug_QMCDeactivation( char * key, SI_AMF_DT_QMCDeactivation * data, int lvl);

void __si_amf_memfree_QMCDeactivation( SI_AMF_DT_QMCDeactivation * data);

int __si_amf_Encode_QMCDeactivation( SI_AMF_DT_QMCDeactivation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoEReference( SI_AMF_DT_QoEReference ** data);

void __si_amf_init_QoEReference2( SI_AMF_DT_QoEReference ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_QoEReference( char * key, SI_AMF_DT_QoEReference * data, int lvl);

void __si_amf_memfree_QoEReference( SI_AMF_DT_QoEReference * data);

int __si_amf_Encode_QoEReference( SI_AMF_DT_QoEReference * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QoERVQoEReportingPaths_qoEReportingPath( char * key, uint8_t eQoERVQoEReportingPaths_qoEReportingPath, int lvl);

int __si_amf_Encode_QoERVQoEReportingPaths_qoEReportingPath( uint8_t eQoERVQoEReportingPaths_qoEReportingPath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QoERVQoEReportingPaths_rVQoEReportingPath( char * key, uint8_t eQoERVQoEReportingPaths_rVQoEReportingPath, int lvl);

int __si_amf_Encode_QoERVQoEReportingPaths_rVQoEReportingPath( uint8_t eQoERVQoEReportingPaths_rVQoEReportingPath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoERVQoEReportingPaths( SI_AMF_DT_QoERVQoEReportingPaths ** data);

void __si_amf_debug_QoERVQoEReportingPaths( char * key, SI_AMF_DT_QoERVQoEReportingPaths * data, int lvl);

void __si_amf_memfree_QoERVQoEReportingPaths( SI_AMF_DT_QoERVQoEReportingPaths * data);

int __si_amf_Encode_QoERVQoEReportingPaths( SI_AMF_DT_QoERVQoEReportingPaths * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAcceptedItem( SI_AMF_DT_QosFlowAcceptedItem ** data);

void __si_amf_debug_QosFlowAcceptedItem( char * key, SI_AMF_DT_QosFlowAcceptedItem * data, int lvl);

void __si_amf_memfree_QosFlowAcceptedItem( SI_AMF_DT_QosFlowAcceptedItem * data);

int __si_amf_Encode_QosFlowAcceptedItem( SI_AMF_DT_QosFlowAcceptedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAdditionalInfoListRelCom( SI_AMF_DT_QosFlowAdditionalInfoListRelCom ** data);

void __si_amf_debug_QosFlowAdditionalInfoListRelCom( char * key, SI_AMF_DT_QosFlowAdditionalInfoListRelCom * data, int lvl);

void __si_amf_memfree_QosFlowAdditionalInfoListRelCom( SI_AMF_DT_QosFlowAdditionalInfoListRelCom * data);

int __si_amf_Encode_QosFlowAdditionalInfoListRelCom( SI_AMF_DT_QosFlowAdditionalInfoListRelCom * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TLContainer( SI_AMF_DT_TLContainer ** data);

void __si_amf_init_TLContainer2( SI_AMF_DT_TLContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TLContainer( char * key, SI_AMF_DT_TLContainer * data, int lvl);

void __si_amf_memfree_TLContainer( SI_AMF_DT_TLContainer * data);

int __si_amf_Encode_TLContainer( SI_AMF_DT_TLContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAdditionalInfoItemRelCom( SI_AMF_DT_QosFlowAdditionalInfoItemRelCom ** data);

void __si_amf_debug_QosFlowAdditionalInfoItemRelCom( char * key, SI_AMF_DT_QosFlowAdditionalInfoItemRelCom * data, int lvl);

void __si_amf_memfree_QosFlowAdditionalInfoItemRelCom( SI_AMF_DT_QosFlowAdditionalInfoItemRelCom * data);

int __si_amf_Encode_QosFlowAdditionalInfoItemRelCom( SI_AMF_DT_QosFlowAdditionalInfoItemRelCom * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAdditionalInfoListRelRes( SI_AMF_DT_QosFlowAdditionalInfoListRelRes ** data);

void __si_amf_debug_QosFlowAdditionalInfoListRelRes( char * key, SI_AMF_DT_QosFlowAdditionalInfoListRelRes * data, int lvl);

void __si_amf_memfree_QosFlowAdditionalInfoListRelRes( SI_AMF_DT_QosFlowAdditionalInfoListRelRes * data);

int __si_amf_Encode_QosFlowAdditionalInfoListRelRes( SI_AMF_DT_QosFlowAdditionalInfoListRelRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAdditionalInfoItemRelRes( SI_AMF_DT_QosFlowAdditionalInfoItemRelRes ** data);

void __si_amf_debug_QosFlowAdditionalInfoItemRelRes( char * key, SI_AMF_DT_QosFlowAdditionalInfoItemRelRes * data, int lvl);

void __si_amf_memfree_QosFlowAdditionalInfoItemRelRes( SI_AMF_DT_QosFlowAdditionalInfoItemRelRes * data);

int __si_amf_Encode_QosFlowAdditionalInfoItemRelRes( SI_AMF_DT_QosFlowAdditionalInfoItemRelRes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAddOrModifyRequestList( SI_AMF_DT_QosFlowAddOrModifyRequestList ** data);

void __si_amf_debug_QosFlowAddOrModifyRequestList( char * key, SI_AMF_DT_QosFlowAddOrModifyRequestList * data, int lvl);

void __si_amf_memfree_QosFlowAddOrModifyRequestList( SI_AMF_DT_QosFlowAddOrModifyRequestList * data);

int __si_amf_Encode_QosFlowAddOrModifyRequestList( SI_AMF_DT_QosFlowAddOrModifyRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAddOrModifyRequestItem( SI_AMF_DT_QosFlowAddOrModifyRequestItem ** data);

void __si_amf_debug_QosFlowAddOrModifyRequestItem( char * key, SI_AMF_DT_QosFlowAddOrModifyRequestItem * data, int lvl);

void __si_amf_memfree_QosFlowAddOrModifyRequestItem( SI_AMF_DT_QosFlowAddOrModifyRequestItem * data);

int __si_amf_Encode_QosFlowAddOrModifyRequestItem( SI_AMF_DT_QosFlowAddOrModifyRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowAddOrModifyResponseItem( SI_AMF_DT_QosFlowAddOrModifyResponseItem ** data);

void __si_amf_debug_QosFlowAddOrModifyResponseItem( char * key, SI_AMF_DT_QosFlowAddOrModifyResponseItem * data, int lvl);

void __si_amf_memfree_QosFlowAddOrModifyResponseItem( SI_AMF_DT_QosFlowAddOrModifyResponseItem * data);

int __si_amf_Encode_QosFlowAddOrModifyResponseItem( SI_AMF_DT_QosFlowAddOrModifyResponseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowFeedbackList( SI_AMF_DT_QosFlowFeedbackList ** data);

void __si_amf_debug_QosFlowFeedbackList( char * key, SI_AMF_DT_QosFlowFeedbackList * data, int lvl);

void __si_amf_memfree_QosFlowFeedbackList( SI_AMF_DT_QosFlowFeedbackList * data);

int __si_amf_Encode_QosFlowFeedbackList( SI_AMF_DT_QosFlowFeedbackList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UpdateFeedback( SI_AMF_DT_UpdateFeedback ** data);

void __si_amf_init_UpdateFeedback2( SI_AMF_DT_UpdateFeedback ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_UpdateFeedback( char * key, SI_AMF_DT_UpdateFeedback * data, int lvl);

void __si_amf_memfree_UpdateFeedback( SI_AMF_DT_UpdateFeedback * data);

int __si_amf_Encode_UpdateFeedback( SI_AMF_DT_UpdateFeedback * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowFeedbackItem( SI_AMF_DT_QosFlowFeedbackItem ** data);

void __si_amf_debug_QosFlowFeedbackItem( char * key, SI_AMF_DT_QosFlowFeedbackItem * data, int lvl);

void __si_amf_memfree_QosFlowFeedbackItem( SI_AMF_DT_QosFlowFeedbackItem * data);

int __si_amf_Encode_QosFlowFeedbackItem( SI_AMF_DT_QosFlowFeedbackItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowInformationItem( SI_AMF_DT_QosFlowInformationItem ** data);

void __si_amf_debug_QosFlowInformationItem( char * key, SI_AMF_DT_QosFlowInformationItem * data, int lvl);

void __si_amf_memfree_QosFlowInformationItem( SI_AMF_DT_QosFlowInformationItem * data);

int __si_amf_Encode_QosFlowInformationItem( SI_AMF_DT_QosFlowInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QosMonitoringRequest( char * key, uint8_t eQosMonitoringRequest, int lvl);

int __si_amf_Encode_QosMonitoringRequest( uint8_t eQosMonitoringRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QosMonitoringReportingFrequency( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_QosMonitoringReportingFrequency( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_QosMonitoringReportingFrequency( SI_AMF_DT_QosMonitoringReportingFrequency * data);


void __si_amf_init_QoSFlowList( SI_AMF_DT_QoSFlowList ** data);

void __si_amf_debug_QoSFlowList( char * key, SI_AMF_DT_QoSFlowList * data, int lvl);

void __si_amf_memfree_QoSFlowList( SI_AMF_DT_QoSFlowList * data);

int __si_amf_Encode_QoSFlowList( SI_AMF_DT_QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowWithCauseItem( SI_AMF_DT_QosFlowWithCauseItem ** data);

void __si_amf_debug_QosFlowWithCauseItem( char * key, SI_AMF_DT_QosFlowWithCauseItem * data, int lvl);

void __si_amf_memfree_QosFlowWithCauseItem( SI_AMF_DT_QosFlowWithCauseItem * data);

int __si_amf_Encode_QosFlowWithCauseItem( SI_AMF_DT_QosFlowWithCauseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowModifyConfirmItem( SI_AMF_DT_QosFlowModifyConfirmItem ** data);

void __si_amf_debug_QosFlowModifyConfirmItem( char * key, SI_AMF_DT_QosFlowModifyConfirmItem * data, int lvl);

void __si_amf_memfree_QosFlowModifyConfirmItem( SI_AMF_DT_QosFlowModifyConfirmItem * data);

int __si_amf_Encode_QosFlowModifyConfirmItem( SI_AMF_DT_QosFlowModifyConfirmItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowNotifyItem( SI_AMF_DT_QosFlowNotifyItem ** data);

void __si_amf_debug_QosFlowNotifyItem( char * key, SI_AMF_DT_QosFlowNotifyItem * data, int lvl);

void __si_amf_memfree_QosFlowNotifyItem( SI_AMF_DT_QosFlowNotifyItem * data);

int __si_amf_Encode_QosFlowNotifyItem( SI_AMF_DT_QosFlowNotifyItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowParametersList( SI_AMF_DT_QosFlowParametersList ** data);

void __si_amf_debug_QosFlowParametersList( char * key, SI_AMF_DT_QosFlowParametersList * data, int lvl);

void __si_amf_memfree_QosFlowParametersList( SI_AMF_DT_QosFlowParametersList * data);

int __si_amf_Encode_QosFlowParametersList( SI_AMF_DT_QosFlowParametersList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowParametersItem( SI_AMF_DT_QosFlowParametersItem ** data);

void __si_amf_debug_QosFlowParametersItem( char * key, SI_AMF_DT_QosFlowParametersItem * data, int lvl);

void __si_amf_memfree_QosFlowParametersItem( SI_AMF_DT_QosFlowParametersItem * data);

int __si_amf_Encode_QosFlowParametersItem( SI_AMF_DT_QosFlowParametersItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowPerTNLInformationItem( SI_AMF_DT_QosFlowPerTNLInformationItem ** data);

void __si_amf_debug_QosFlowPerTNLInformationItem( char * key, SI_AMF_DT_QosFlowPerTNLInformationItem * data, int lvl);

void __si_amf_memfree_QosFlowPerTNLInformationItem( SI_AMF_DT_QosFlowPerTNLInformationItem * data);

int __si_amf_Encode_QosFlowPerTNLInformationItem( SI_AMF_DT_QosFlowPerTNLInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowSetupRequestList( SI_AMF_DT_QosFlowSetupRequestList ** data);

void __si_amf_debug_QosFlowSetupRequestList( char * key, SI_AMF_DT_QosFlowSetupRequestList * data, int lvl);

void __si_amf_memfree_QosFlowSetupRequestList( SI_AMF_DT_QosFlowSetupRequestList * data);

int __si_amf_Encode_QosFlowSetupRequestList( SI_AMF_DT_QosFlowSetupRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowSetupRequestItem( SI_AMF_DT_QosFlowSetupRequestItem ** data);

void __si_amf_debug_QosFlowSetupRequestItem( char * key, SI_AMF_DT_QosFlowSetupRequestItem * data, int lvl);

void __si_amf_memfree_QosFlowSetupRequestItem( SI_AMF_DT_QosFlowSetupRequestItem * data);

int __si_amf_Encode_QosFlowSetupRequestItem( SI_AMF_DT_QosFlowSetupRequestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowItemWithDataForwarding( SI_AMF_DT_QosFlowItemWithDataForwarding ** data);

void __si_amf_debug_QosFlowItemWithDataForwarding( char * key, SI_AMF_DT_QosFlowItemWithDataForwarding * data, int lvl);

void __si_amf_memfree_QosFlowItemWithDataForwarding( SI_AMF_DT_QosFlowItemWithDataForwarding * data);

int __si_amf_Encode_QosFlowItemWithDataForwarding( SI_AMF_DT_QosFlowItemWithDataForwarding * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QosFlowToBeForwardedItem( SI_AMF_DT_QosFlowToBeForwardedItem ** data);

void __si_amf_debug_QosFlowToBeForwardedItem( char * key, SI_AMF_DT_QosFlowToBeForwardedItem * data, int lvl);

void __si_amf_memfree_QosFlowToBeForwardedItem( SI_AMF_DT_QosFlowToBeForwardedItem * data);

int __si_amf_Encode_QosFlowToBeForwardedItem( SI_AMF_DT_QosFlowToBeForwardedItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoSFlowTSCList( SI_AMF_DT_QoSFlowTSCList ** data);

void __si_amf_debug_QoSFlowTSCList( char * key, SI_AMF_DT_QoSFlowTSCList * data, int lvl);

void __si_amf_memfree_QoSFlowTSCList( SI_AMF_DT_QoSFlowTSCList * data);

int __si_amf_Encode_QoSFlowTSCList( SI_AMF_DT_QoSFlowTSCList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TSCFeedbackInformation_burstArrivalTimeOffset( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TSCFeedbackInformation_burstArrivalTimeOffset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TSCFeedbackInformation_burstArrivalTimeOffset( SI_AMF_DT_TSCFeedbackInformation_burstArrivalTimeOffset * data);


void __si_amf_init_TSCFeedbackInformation( SI_AMF_DT_TSCFeedbackInformation ** data);

void __si_amf_debug_TSCFeedbackInformation( char * key, SI_AMF_DT_TSCFeedbackInformation * data, int lvl);

void __si_amf_memfree_TSCFeedbackInformation( SI_AMF_DT_TSCFeedbackInformation * data);

int __si_amf_Encode_TSCFeedbackInformation( SI_AMF_DT_TSCFeedbackInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TSCTrafficCharacteristicsFeedback( SI_AMF_DT_TSCTrafficCharacteristicsFeedback ** data);

void __si_amf_debug_TSCTrafficCharacteristicsFeedback( char * key, SI_AMF_DT_TSCTrafficCharacteristicsFeedback * data, int lvl);

void __si_amf_memfree_TSCTrafficCharacteristicsFeedback( SI_AMF_DT_TSCTrafficCharacteristicsFeedback * data);

int __si_amf_Encode_TSCTrafficCharacteristicsFeedback( SI_AMF_DT_TSCTrafficCharacteristicsFeedback * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoSFlowTSCItem( SI_AMF_DT_QoSFlowTSCItem ** data);

void __si_amf_debug_QoSFlowTSCItem( char * key, SI_AMF_DT_QoSFlowTSCItem * data, int lvl);

void __si_amf_memfree_QoSFlowTSCItem( SI_AMF_DT_QoSFlowTSCItem * data);

int __si_amf_Encode_QoSFlowTSCItem( SI_AMF_DT_QoSFlowTSCItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoSFlowsUsageReportList( SI_AMF_DT_QoSFlowsUsageReportList ** data);

void __si_amf_debug_QoSFlowsUsageReportList( char * key, SI_AMF_DT_QoSFlowsUsageReportList * data, int lvl);

void __si_amf_memfree_QoSFlowsUsageReportList( SI_AMF_DT_QoSFlowsUsageReportList * data);

int __si_amf_Encode_QoSFlowsUsageReportList( SI_AMF_DT_QoSFlowsUsageReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_QoSFlowsUsageReportItem_rATType( char * key, uint8_t eQoSFlowsUsageReportItem_rATType, int lvl);

int __si_amf_Encode_QoSFlowsUsageReportItem_rATType( uint8_t eQoSFlowsUsageReportItem_rATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_QoSFlowsUsageReport_Item( SI_AMF_DT_QoSFlowsUsageReport_Item ** data);

void __si_amf_debug_QoSFlowsUsageReport_Item( char * key, SI_AMF_DT_QoSFlowsUsageReport_Item * data, int lvl);

void __si_amf_memfree_QoSFlowsUsageReport_Item( SI_AMF_DT_QoSFlowsUsageReport_Item * data);

int __si_amf_Encode_QoSFlowsUsageReport_Item( SI_AMF_DT_QoSFlowsUsageReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANfeedbacktype_proactive( SI_AMF_DT_RANfeedbacktype_proactive ** data);

void __si_amf_debug_RANfeedbacktype_proactive( char * key, SI_AMF_DT_RANfeedbacktype_proactive * data, int lvl);

void __si_amf_memfree_RANfeedbacktype_proactive( SI_AMF_DT_RANfeedbacktype_proactive * data);

int __si_amf_Encode_RANfeedbacktype_proactive( SI_AMF_DT_RANfeedbacktype_proactive * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RANfeedbacktypereactive_capabilityForBATAdaptation( char * key, uint8_t eRANfeedbacktypereactive_capabilityForBATAdaptation, int lvl);

int __si_amf_Encode_RANfeedbacktypereactive_capabilityForBATAdaptation( uint8_t eRANfeedbacktypereactive_capabilityForBATAdaptation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANfeedbacktype_reactive( SI_AMF_DT_RANfeedbacktype_reactive ** data);

void __si_amf_debug_RANfeedbacktype_reactive( char * key, SI_AMF_DT_RANfeedbacktype_reactive * data, int lvl);

void __si_amf_memfree_RANfeedbacktype_reactive( SI_AMF_DT_RANfeedbacktype_reactive * data);

int __si_amf_Encode_RANfeedbacktype_reactive( SI_AMF_DT_RANfeedbacktype_reactive * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANfeedbacktype( SI_AMF_DT_RANfeedbacktype ** data);

void __si_amf_debug_RANfeedbacktype( char * key, SI_AMF_DT_RANfeedbacktype * data, int lvl);

void __si_amf_memfree_RANfeedbacktype( SI_AMF_DT_RANfeedbacktype * data);

int __si_amf_Encode_RANfeedbacktype( SI_AMF_DT_RANfeedbacktype * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANNodeName( SI_AMF_DT_RANNodeName ** data);

void __si_amf_init_RANNodeName2( SI_AMF_DT_RANNodeName ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RANNodeName( char * key, SI_AMF_DT_RANNodeName * data, int lvl);

void __si_amf_memfree_RANNodeName( SI_AMF_DT_RANNodeName * data);

int __si_amf_Encode_RANNodeName( SI_AMF_DT_RANNodeName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RANPagingPriority( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RANPagingPriority( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RANPagingPriority( SI_AMF_DT_RANPagingPriority * data);


void __si_amf_init_RANStatusTransfer_TransparentContainer( SI_AMF_DT_RANStatusTransfer_TransparentContainer ** data);

void __si_amf_debug_RANStatusTransfer_TransparentContainer( char * key, SI_AMF_DT_RANStatusTransfer_TransparentContainer * data, int lvl);

void __si_amf_memfree_RANStatusTransfer_TransparentContainer( SI_AMF_DT_RANStatusTransfer_TransparentContainer * data);

int __si_amf_Encode_RANStatusTransfer_TransparentContainer( SI_AMF_DT_RANStatusTransfer_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RANTimingSynchronisationStatusInfo_synchronisationState( char * key, uint8_t eRANTimingSynchronisationStatusInfo_synchronisationState, int lvl);

int __si_amf_Encode_RANTimingSynchronisationStatusInfo_synchronisationState( uint8_t eRANTimingSynchronisationStatusInfo_synchronisationState, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RANTimingSynchronisationStatusInfo_traceabletoUTC( char * key, uint8_t eRANTimingSynchronisationStatusInfo_traceabletoUTC, int lvl);

int __si_amf_Encode_RANTimingSynchronisationStatusInfo_traceabletoUTC( uint8_t eRANTimingSynchronisationStatusInfo_traceabletoUTC, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RANTimingSynchronisationStatusInfo_traceabletoGNSS( char * key, uint8_t eRANTimingSynchronisationStatusInfo_traceabletoGNSS, int lvl);

int __si_amf_Encode_RANTimingSynchronisationStatusInfo_traceabletoGNSS( uint8_t eRANTimingSynchronisationStatusInfo_traceabletoGNSS, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANTimingSynchronisationStatusInfo_clockFrequencyStability( SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability ** data);

void __si_amf_init_RANTimingSynchronisationStatusInfo_clockFrequencyStability2( SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_RANTimingSynchronisationStatusInfo_clockFrequencyStability( char * key, SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability * data, int lvl);

void __si_amf_memfree_RANTimingSynchronisationStatusInfo_clockFrequencyStability( SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability * data);

int __si_amf_Encode_RANTimingSynchronisationStatusInfo_clockFrequencyStability( SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANTimingSynchronisationStatusInfo( SI_AMF_DT_RANTimingSynchronisationStatusInfo ** data);

void __si_amf_debug_RANTimingSynchronisationStatusInfo( char * key, SI_AMF_DT_RANTimingSynchronisationStatusInfo * data, int lvl);

void __si_amf_memfree_RANTimingSynchronisationStatusInfo( SI_AMF_DT_RANTimingSynchronisationStatusInfo * data);

int __si_amf_Encode_RANTimingSynchronisationStatusInfo( SI_AMF_DT_RANTimingSynchronisationStatusInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RAN_TSSRequestType( char * key, uint8_t eRAN_TSSRequestType, int lvl);

int __si_amf_Encode_RAN_TSSRequestType( uint8_t eRAN_TSSRequestType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANTSSCellList( SI_AMF_DT_RANTSSCellList ** data);

void __si_amf_debug_RANTSSCellList( char * key, SI_AMF_DT_RANTSSCellList * data, int lvl);

void __si_amf_memfree_RANTSSCellList( SI_AMF_DT_RANTSSCellList * data);

int __si_amf_Encode_RANTSSCellList( SI_AMF_DT_RANTSSCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RAN_TSSScope( SI_AMF_DT_RAN_TSSScope ** data);

void __si_amf_debug_RAN_TSSScope( char * key, SI_AMF_DT_RAN_TSSScope * data, int lvl);

void __si_amf_memfree_RAN_TSSScope( SI_AMF_DT_RAN_TSSScope * data);

int __si_amf_Encode_RAN_TSSScope( SI_AMF_DT_RAN_TSSScope * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RANTSSCellItem( SI_AMF_DT_RANTSSCellItem ** data);

void __si_amf_debug_RANTSSCellItem( char * key, SI_AMF_DT_RANTSSCellItem * data, int lvl);

void __si_amf_memfree_RANTSSCellItem( SI_AMF_DT_RANTSSCellItem * data);

int __si_amf_Encode_RANTSSCellItem( SI_AMF_DT_RANTSSCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RAN_UE_NGAP_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RAN_UE_NGAP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RAN_UE_NGAP_ID( SI_AMF_DT_RAN_UE_NGAP_ID * data);


void __si_amf_debug_RAT_Information( char * key, uint8_t eRAT_Information, int lvl);

int __si_amf_Encode_RAT_Information( uint8_t eRAT_Information, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RATRestrictionInformation( SI_AMF_DT_RATRestrictionInformation ** data);

void __si_amf_init_RATRestrictionInformation2( SI_AMF_DT_RATRestrictionInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_RATRestrictionInformation( char * key, SI_AMF_DT_RATRestrictionInformation * data, int lvl);

void __si_amf_memfree_RATRestrictionInformation( SI_AMF_DT_RATRestrictionInformation * data);

int __si_amf_Encode_RATRestrictionInformation( SI_AMF_DT_RATRestrictionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RATRestrictions_Item( SI_AMF_DT_RATRestrictions_Item ** data);

void __si_amf_debug_RATRestrictions_Item( char * key, SI_AMF_DT_RATRestrictions_Item * data, int lvl);

void __si_amf_memfree_RATRestrictions_Item( SI_AMF_DT_RATRestrictions_Item * data);

int __si_amf_Encode_RATRestrictions_Item( SI_AMF_DT_RATRestrictions_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RecommendedCellItem_timeStayedInCell( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RecommendedCellItem_timeStayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RecommendedCellItem_timeStayedInCell( SI_AMF_DT_RecommendedCellItem_timeStayedInCell * data);


void __si_amf_init_RecommendedCellItem( SI_AMF_DT_RecommendedCellItem ** data);

void __si_amf_debug_RecommendedCellItem( char * key, SI_AMF_DT_RecommendedCellItem * data, int lvl);

void __si_amf_memfree_RecommendedCellItem( SI_AMF_DT_RecommendedCellItem * data);

int __si_amf_Encode_RecommendedCellItem( SI_AMF_DT_RecommendedCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RecommendedRANNodeItem( SI_AMF_DT_RecommendedRANNodeItem ** data);

void __si_amf_debug_RecommendedRANNodeItem( char * key, SI_AMF_DT_RecommendedRANNodeItem * data, int lvl);

void __si_amf_memfree_RecommendedRANNodeItem( SI_AMF_DT_RecommendedRANNodeItem * data);

int __si_amf_Encode_RecommendedRANNodeItem( SI_AMF_DT_RecommendedRANNodeItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RedCapIndication( char * key, uint8_t eRedCapIndication, int lvl);

int __si_amf_Encode_RedCapIndication( uint8_t eRedCapIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RedirectionVoiceFallback( char * key, uint8_t eRedirectionVoiceFallback, int lvl);

int __si_amf_Encode_RedirectionVoiceFallback( uint8_t eRedirectionVoiceFallback, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RSN( char * key, uint8_t eRSN, int lvl);

int __si_amf_Encode_RSN( uint8_t eRSN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RedundantPDUSessionInformation( SI_AMF_DT_RedundantPDUSessionInformation ** data);

void __si_amf_debug_RedundantPDUSessionInformation( char * key, SI_AMF_DT_RedundantPDUSessionInformation * data, int lvl);

void __si_amf_memfree_RedundantPDUSessionInformation( SI_AMF_DT_RedundantPDUSessionInformation * data);

int __si_amf_Encode_RedundantPDUSessionInformation( SI_AMF_DT_RedundantPDUSessionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RedundantQosFlowIndicator( char * key, uint8_t eRedundantQosFlowIndicator, int lvl);

int __si_amf_Encode_RedundantQosFlowIndicator( uint8_t eRedundantQosFlowIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RelativeAMFCapacity( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RelativeAMFCapacity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RelativeAMFCapacity( SI_AMF_DT_RelativeAMFCapacity * data);


void __si_amf_debug_RepetitionPeriod( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RepetitionPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RepetitionPeriod( SI_AMF_DT_RepetitionPeriod * data);


void __si_amf_debug_ResetAll( char * key, uint8_t eResetAll, int lvl);

int __si_amf_Encode_ResetAll( uint8_t eResetAll, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ExtendedReportIntervalMDT( char * key, uint8_t eExtendedReportIntervalMDT, int lvl);

int __si_amf_Encode_ExtendedReportIntervalMDT( uint8_t eExtendedReportIntervalMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_associatedLogicalNG_connectionList( SI_AMF_DT_UE_associatedLogicalNG_connectionList ** data);

void __si_amf_debug_UE_associatedLogicalNG_connectionList( char * key, SI_AMF_DT_UE_associatedLogicalNG_connectionList * data, int lvl);

void __si_amf_memfree_UE_associatedLogicalNG_connectionList( SI_AMF_DT_UE_associatedLogicalNG_connectionList * data);

int __si_amf_Encode_UE_associatedLogicalNG_connectionList( SI_AMF_DT_UE_associatedLogicalNG_connectionList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ResetType( SI_AMF_DT_ResetType ** data);

void __si_amf_debug_ResetType( char * key, SI_AMF_DT_ResetType * data, int lvl);

void __si_amf_memfree_ResetType( SI_AMF_DT_ResetType * data);

int __si_amf_Encode_ResetType( SI_AMF_DT_ResetType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RGLevelWirelineAccessCharacteristics( SI_AMF_DT_RGLevelWirelineAccessCharacteristics ** data);

void __si_amf_init_RGLevelWirelineAccessCharacteristics2( SI_AMF_DT_RGLevelWirelineAccessCharacteristics ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RGLevelWirelineAccessCharacteristics( char * key, SI_AMF_DT_RGLevelWirelineAccessCharacteristics * data, int lvl);

void __si_amf_memfree_RGLevelWirelineAccessCharacteristics( SI_AMF_DT_RGLevelWirelineAccessCharacteristics * data);

int __si_amf_Encode_RGLevelWirelineAccessCharacteristics( SI_AMF_DT_RGLevelWirelineAccessCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RNC_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_RNC_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_RNC_ID( SI_AMF_DT_RNC_ID * data);


void __si_amf_init_RoutingID( SI_AMF_DT_RoutingID ** data);

void __si_amf_init_RoutingID2( SI_AMF_DT_RoutingID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RoutingID( char * key, SI_AMF_DT_RoutingID * data, int lvl);

void __si_amf_memfree_RoutingID( SI_AMF_DT_RoutingID * data);

int __si_amf_Encode_RoutingID( SI_AMF_DT_RoutingID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RRCContainer( SI_AMF_DT_RRCContainer ** data);

void __si_amf_init_RRCContainer2( SI_AMF_DT_RRCContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RRCContainer( char * key, SI_AMF_DT_RRCContainer * data, int lvl);

void __si_amf_memfree_RRCContainer( SI_AMF_DT_RRCContainer * data);

int __si_amf_Encode_RRCContainer( SI_AMF_DT_RRCContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RRCEstablishmentCause( char * key, uint8_t eRRCEstablishmentCause, int lvl);

int __si_amf_Encode_RRCEstablishmentCause( uint8_t eRRCEstablishmentCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RRCInactiveTransitionReportRequest( char * key, uint8_t eRRCInactiveTransitionReportRequest, int lvl);

int __si_amf_Encode_RRCInactiveTransitionReportRequest( uint8_t eRRCInactiveTransitionReportRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RRCState( char * key, uint8_t eRRCState, int lvl);

int __si_amf_Encode_RRCState( uint8_t eRRCState, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetRANNodeID_RIM( SI_AMF_DT_TargetRANNodeID_RIM ** data);

void __si_amf_debug_TargetRANNodeID_RIM( char * key, SI_AMF_DT_TargetRANNodeID_RIM * data, int lvl);

void __si_amf_memfree_TargetRANNodeID_RIM( SI_AMF_DT_TargetRANNodeID_RIM * data);

int __si_amf_Encode_TargetRANNodeID_RIM( SI_AMF_DT_TargetRANNodeID_RIM * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SourceRANNodeID( SI_AMF_DT_SourceRANNodeID ** data);

void __si_amf_debug_SourceRANNodeID( char * key, SI_AMF_DT_SourceRANNodeID * data, int lvl);

void __si_amf_memfree_SourceRANNodeID( SI_AMF_DT_SourceRANNodeID * data);

int __si_amf_Encode_SourceRANNodeID( SI_AMF_DT_SourceRANNodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_GNBSetID( SI_AMF_DT_GNBSetID ** data);

void __si_amf_init_GNBSetID2( SI_AMF_DT_GNBSetID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_GNBSetID( char * key, SI_AMF_DT_GNBSetID * data, int lvl);

void __si_amf_memfree_GNBSetID( SI_AMF_DT_GNBSetID * data);

int __si_amf_Encode_GNBSetID( SI_AMF_DT_GNBSetID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_RIMInformation_rIM_RSDetection( char * key, uint8_t eRIMInformation_rIM_RSDetection, int lvl);

int __si_amf_Encode_RIMInformation_rIM_RSDetection( uint8_t eRIMInformation_rIM_RSDetection, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RIMInformation( SI_AMF_DT_RIMInformation ** data);

void __si_amf_debug_RIMInformation( char * key, SI_AMF_DT_RIMInformation * data, int lvl);

void __si_amf_memfree_RIMInformation( SI_AMF_DT_RIMInformation * data);

int __si_amf_Encode_RIMInformation( SI_AMF_DT_RIMInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RIMInformationTransfer( SI_AMF_DT_RIMInformationTransfer ** data);

void __si_amf_debug_RIMInformationTransfer( char * key, SI_AMF_DT_RIMInformationTransfer * data, int lvl);

void __si_amf_memfree_RIMInformationTransfer( SI_AMF_DT_RIMInformationTransfer * data);

int __si_amf_Encode_RIMInformationTransfer( SI_AMF_DT_RIMInformationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RSPPQoSFlowList( SI_AMF_DT_RSPPQoSFlowList ** data);

void __si_amf_debug_RSPPQoSFlowList( char * key, SI_AMF_DT_RSPPQoSFlowList * data, int lvl);

void __si_amf_memfree_RSPPQoSFlowList( SI_AMF_DT_RSPPQoSFlowList * data);

int __si_amf_Encode_RSPPQoSFlowList( SI_AMF_DT_RSPPQoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RSPPFlowBitRates( SI_AMF_DT_RSPPFlowBitRates ** data);

void __si_amf_debug_RSPPFlowBitRates( char * key, SI_AMF_DT_RSPPFlowBitRates * data, int lvl);

void __si_amf_memfree_RSPPFlowBitRates( SI_AMF_DT_RSPPFlowBitRates * data);

int __si_amf_Encode_RSPPFlowBitRates( SI_AMF_DT_RSPPFlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RSPPQoSFlowItem( SI_AMF_DT_RSPPQoSFlowItem ** data);

void __si_amf_debug_RSPPQoSFlowItem( char * key, SI_AMF_DT_RSPPQoSFlowItem * data, int lvl);

void __si_amf_memfree_RSPPQoSFlowItem( SI_AMF_DT_RSPPQoSFlowItem * data);

int __si_amf_Encode_RSPPQoSFlowItem( SI_AMF_DT_RSPPQoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ScheduledCommunicationTime_dayofWeek( SI_AMF_DT_ScheduledCommunicationTime_dayofWeek ** data);

void __si_amf_init_ScheduledCommunicationTime_dayofWeek2( SI_AMF_DT_ScheduledCommunicationTime_dayofWeek ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_ScheduledCommunicationTime_dayofWeek( char * key, SI_AMF_DT_ScheduledCommunicationTime_dayofWeek * data, int lvl);

void __si_amf_memfree_ScheduledCommunicationTime_dayofWeek( SI_AMF_DT_ScheduledCommunicationTime_dayofWeek * data);

int __si_amf_Encode_ScheduledCommunicationTime_dayofWeek( SI_AMF_DT_ScheduledCommunicationTime_dayofWeek * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ScheduledCommunicationTime_timeofDayStart( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ScheduledCommunicationTime_timeofDayStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ScheduledCommunicationTime_timeofDayStart( SI_AMF_DT_ScheduledCommunicationTime_timeofDayStart * data);


void __si_amf_debug_ScheduledCommunicationTime_timeofDayEnd( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_ScheduledCommunicationTime_timeofDayEnd( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_ScheduledCommunicationTime_timeofDayEnd( SI_AMF_DT_ScheduledCommunicationTime_timeofDayEnd * data);


void __si_amf_init_ScheduledCommunicationTime( SI_AMF_DT_ScheduledCommunicationTime ** data);

void __si_amf_debug_ScheduledCommunicationTime( char * key, SI_AMF_DT_ScheduledCommunicationTime * data, int lvl);

void __si_amf_memfree_ScheduledCommunicationTime( SI_AMF_DT_ScheduledCommunicationTime * data);

int __si_amf_Encode_ScheduledCommunicationTime( SI_AMF_DT_ScheduledCommunicationTime * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SCTP_TLAs( SI_AMF_DT_SCTP_TLAs ** data);

void __si_amf_debug_SCTP_TLAs( char * key, SI_AMF_DT_SCTP_TLAs * data, int lvl);

void __si_amf_memfree_SCTP_TLAs( SI_AMF_DT_SCTP_TLAs * data);

int __si_amf_Encode_SCTP_TLAs( SI_AMF_DT_SCTP_TLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecondaryRATUsageInformation( SI_AMF_DT_SecondaryRATUsageInformation ** data);

void __si_amf_debug_SecondaryRATUsageInformation( char * key, SI_AMF_DT_SecondaryRATUsageInformation * data, int lvl);

void __si_amf_memfree_SecondaryRATUsageInformation( SI_AMF_DT_SecondaryRATUsageInformation * data);

int __si_amf_Encode_SecondaryRATUsageInformation( SI_AMF_DT_SecondaryRATUsageInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecondaryRATDataUsageReportTransfer( SI_AMF_DT_SecondaryRATDataUsageReportTransfer ** data);

void __si_amf_debug_SecondaryRATDataUsageReportTransfer( char * key, SI_AMF_DT_SecondaryRATDataUsageReportTransfer * data, int lvl);

void __si_amf_memfree_SecondaryRATDataUsageReportTransfer( SI_AMF_DT_SecondaryRATDataUsageReportTransfer * data);

int __si_amf_Encode_SecondaryRATDataUsageReportTransfer( SI_AMF_DT_SecondaryRATDataUsageReportTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecurityKey( SI_AMF_DT_SecurityKey ** data);

void __si_amf_init_SecurityKey2( SI_AMF_DT_SecurityKey ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_SecurityKey( char * key, SI_AMF_DT_SecurityKey * data, int lvl);

void __si_amf_memfree_SecurityKey( SI_AMF_DT_SecurityKey * data);

int __si_amf_Encode_SecurityKey( SI_AMF_DT_SecurityKey * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SecurityContext( SI_AMF_DT_SecurityContext ** data);

void __si_amf_debug_SecurityContext( char * key, SI_AMF_DT_SecurityContext * data, int lvl);

void __si_amf_memfree_SecurityContext( SI_AMF_DT_SecurityContext * data);

int __si_amf_Encode_SecurityContext( SI_AMF_DT_SecurityContext * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SensorNameConfig_uncompensatedBarometricConfig( char * key, uint8_t eSensorNameConfig_uncompensatedBarometricConfig, int lvl);

int __si_amf_Encode_SensorNameConfig_uncompensatedBarometricConfig( uint8_t eSensorNameConfig_uncompensatedBarometricConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SensorNameConfig_ueSpeedConfig( char * key, uint8_t eSensorNameConfig_ueSpeedConfig, int lvl);

int __si_amf_Encode_SensorNameConfig_ueSpeedConfig( uint8_t eSensorNameConfig_ueSpeedConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SensorNameConfig_ueOrientationConfig( char * key, uint8_t eSensorNameConfig_ueOrientationConfig, int lvl);

int __si_amf_Encode_SensorNameConfig_ueOrientationConfig( uint8_t eSensorNameConfig_ueOrientationConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SensorNameConfig( SI_AMF_DT_SensorNameConfig ** data);

void __si_amf_debug_SensorNameConfig( char * key, SI_AMF_DT_SensorNameConfig * data, int lvl);

void __si_amf_memfree_SensorNameConfig( SI_AMF_DT_SensorNameConfig * data);

int __si_amf_Encode_SensorNameConfig( SI_AMF_DT_SensorNameConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SensorMeasConfigNameItem( SI_AMF_DT_SensorMeasConfigNameItem ** data);

void __si_amf_debug_SensorMeasConfigNameItem( char * key, SI_AMF_DT_SensorMeasConfigNameItem * data, int lvl);

void __si_amf_memfree_SensorMeasConfigNameItem( SI_AMF_DT_SensorMeasConfigNameItem * data);

int __si_amf_Encode_SensorMeasConfigNameItem( SI_AMF_DT_SensorMeasConfigNameItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SerialNumber( SI_AMF_DT_SerialNumber ** data);

void __si_amf_init_SerialNumber2( SI_AMF_DT_SerialNumber ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_SerialNumber( char * key, SI_AMF_DT_SerialNumber * data, int lvl);

void __si_amf_memfree_SerialNumber( SI_AMF_DT_SerialNumber * data);

int __si_amf_Encode_SerialNumber( SI_AMF_DT_SerialNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ServedGUAMIList( SI_AMF_DT_ServedGUAMIList ** data);

void __si_amf_debug_ServedGUAMIList( char * key, SI_AMF_DT_ServedGUAMIList * data, int lvl);

void __si_amf_memfree_ServedGUAMIList( SI_AMF_DT_ServedGUAMIList * data);

int __si_amf_Encode_ServedGUAMIList( SI_AMF_DT_ServedGUAMIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ServedGUAMIItem( SI_AMF_DT_ServedGUAMIItem ** data);

void __si_amf_debug_ServedGUAMIItem( char * key, SI_AMF_DT_ServedGUAMIItem * data, int lvl);

void __si_amf_memfree_ServedGUAMIItem( SI_AMF_DT_ServedGUAMIItem * data);

int __si_amf_Encode_ServedGUAMIItem( SI_AMF_DT_ServedGUAMIItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ServiceAreaInformation_Item( SI_AMF_DT_ServiceAreaInformation_Item ** data);

void __si_amf_debug_ServiceAreaInformation_Item( char * key, SI_AMF_DT_ServiceAreaInformation_Item * data, int lvl);

void __si_amf_memfree_ServiceAreaInformation_Item( SI_AMF_DT_ServiceAreaInformation_Item * data);

int __si_amf_Encode_ServiceAreaInformation_Item( SI_AMF_DT_ServiceAreaInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ServiceType( char * key, uint8_t eServiceType, int lvl);

int __si_amf_Encode_ServiceType( uint8_t eServiceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SgNB_UE_X2AP_ID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_SgNB_UE_X2AP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_SgNB_UE_X2AP_ID( SI_AMF_DT_SgNB_UE_X2AP_ID * data);


void __si_amf_init_SliceOverloadItem( SI_AMF_DT_SliceOverloadItem ** data);

void __si_amf_debug_SliceOverloadItem( char * key, SI_AMF_DT_SliceOverloadItem * data, int lvl);

void __si_amf_memfree_SliceOverloadItem( SI_AMF_DT_SliceOverloadItem * data);

int __si_amf_Encode_SliceOverloadItem( SI_AMF_DT_SliceOverloadItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SliceSupportItem( SI_AMF_DT_SliceSupportItem ** data);

void __si_amf_debug_SliceSupportItem( char * key, SI_AMF_DT_SliceSupportItem * data, int lvl);

void __si_amf_memfree_SliceSupportItem( SI_AMF_DT_SliceSupportItem * data);

int __si_amf_Encode_SliceSupportItem( SI_AMF_DT_SliceSupportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SliceSupportListQMC( SI_AMF_DT_SliceSupportListQMC ** data);

void __si_amf_debug_SliceSupportListQMC( char * key, SI_AMF_DT_SliceSupportListQMC * data, int lvl);

void __si_amf_memfree_SliceSupportListQMC( SI_AMF_DT_SliceSupportListQMC * data);

int __si_amf_Encode_SliceSupportListQMC( SI_AMF_DT_SliceSupportListQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SliceSupportQMC_Item( SI_AMF_DT_SliceSupportQMC_Item ** data);

void __si_amf_debug_SliceSupportQMC_Item( char * key, SI_AMF_DT_SliceSupportQMC_Item * data, int lvl);

void __si_amf_memfree_SliceSupportQMC_Item( SI_AMF_DT_SliceSupportQMC_Item * data);

int __si_amf_Encode_SliceSupportQMC_Item( SI_AMF_DT_SliceSupportQMC_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetRANNodeID_SON( SI_AMF_DT_TargetRANNodeID_SON ** data);

void __si_amf_debug_TargetRANNodeID_SON( char * key, SI_AMF_DT_TargetRANNodeID_SON * data, int lvl);

void __si_amf_memfree_TargetRANNodeID_SON( SI_AMF_DT_TargetRANNodeID_SON * data);

int __si_amf_Encode_TargetRANNodeID_SON( SI_AMF_DT_TargetRANNodeID_SON * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SONInformationRequest( char * key, uint8_t eSONInformationRequest, int lvl);

int __si_amf_Encode_SONInformationRequest( uint8_t eSONInformationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_XnTLAs( SI_AMF_DT_XnTLAs ** data);

void __si_amf_debug_XnTLAs( char * key, SI_AMF_DT_XnTLAs * data, int lvl);

void __si_amf_memfree_XnTLAs( SI_AMF_DT_XnTLAs * data);

int __si_amf_Encode_XnTLAs( SI_AMF_DT_XnTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_XnExtTLAs( SI_AMF_DT_XnExtTLAs ** data);

void __si_amf_debug_XnExtTLAs( char * key, SI_AMF_DT_XnExtTLAs * data, int lvl);

void __si_amf_memfree_XnExtTLAs( SI_AMF_DT_XnExtTLAs * data);

int __si_amf_Encode_XnExtTLAs( SI_AMF_DT_XnExtTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_XnTNLConfigurationInfo( SI_AMF_DT_XnTNLConfigurationInfo ** data);

void __si_amf_debug_XnTNLConfigurationInfo( char * key, SI_AMF_DT_XnTNLConfigurationInfo * data, int lvl);

void __si_amf_memfree_XnTNLConfigurationInfo( SI_AMF_DT_XnTNLConfigurationInfo * data);

int __si_amf_Encode_XnTNLConfigurationInfo( SI_AMF_DT_XnTNLConfigurationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SONInformationReply( SI_AMF_DT_SONInformationReply ** data);

void __si_amf_debug_SONInformationReply( char * key, SI_AMF_DT_SONInformationReply * data, int lvl);

void __si_amf_memfree_SONInformationReply( SI_AMF_DT_SONInformationReply * data);

int __si_amf_Encode_SONInformationReply( SI_AMF_DT_SONInformationReply * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SONInformation( SI_AMF_DT_SONInformation ** data);

void __si_amf_debug_SONInformation( char * key, SI_AMF_DT_SONInformation * data, int lvl);

void __si_amf_memfree_SONInformation( SI_AMF_DT_SONInformation * data);

int __si_amf_Encode_SONInformation( SI_AMF_DT_SONInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SONConfigurationTransfer( SI_AMF_DT_SONConfigurationTransfer ** data);

void __si_amf_debug_SONConfigurationTransfer( char * key, SI_AMF_DT_SONConfigurationTransfer * data, int lvl);

void __si_amf_memfree_SONConfigurationTransfer( SI_AMF_DT_SONConfigurationTransfer * data);

int __si_amf_Encode_SONConfigurationTransfer( SI_AMF_DT_SONConfigurationTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SONInformationReport( SI_AMF_DT_SONInformationReport ** data);

void __si_amf_debug_SONInformationReport( char * key, SI_AMF_DT_SONInformationReport * data, int lvl);

void __si_amf_memfree_SONInformationReport( SI_AMF_DT_SONInformationReport * data);

int __si_amf_Encode_SONInformationReport( SI_AMF_DT_SONInformationReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNCellIdListforMDT( SI_AMF_DT_SNPNCellIdListforMDT ** data);

void __si_amf_debug_SNPNCellIdListforMDT( char * key, SI_AMF_DT_SNPNCellIdListforMDT * data, int lvl);

void __si_amf_memfree_SNPNCellIdListforMDT( SI_AMF_DT_SNPNCellIdListforMDT * data);

int __si_amf_Encode_SNPNCellIdListforMDT( SI_AMF_DT_SNPNCellIdListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPN_CellBasedMDT( SI_AMF_DT_SNPN_CellBasedMDT ** data);

void __si_amf_debug_SNPN_CellBasedMDT( char * key, SI_AMF_DT_SNPN_CellBasedMDT * data, int lvl);

void __si_amf_memfree_SNPN_CellBasedMDT( SI_AMF_DT_SNPN_CellBasedMDT * data);

int __si_amf_Encode_SNPN_CellBasedMDT( SI_AMF_DT_SNPN_CellBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNCellIdListforMDTItem( SI_AMF_DT_SNPNCellIdListforMDTItem ** data);

void __si_amf_debug_SNPNCellIdListforMDTItem( char * key, SI_AMF_DT_SNPNCellIdListforMDTItem * data, int lvl);

void __si_amf_memfree_SNPNCellIdListforMDTItem( SI_AMF_DT_SNPNCellIdListforMDTItem * data);

int __si_amf_Encode_SNPNCellIdListforMDTItem( SI_AMF_DT_SNPNCellIdListforMDTItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNTAIListforMDT( SI_AMF_DT_SNPNTAIListforMDT ** data);

void __si_amf_debug_SNPNTAIListforMDT( char * key, SI_AMF_DT_SNPNTAIListforMDT * data, int lvl);

void __si_amf_memfree_SNPNTAIListforMDT( SI_AMF_DT_SNPNTAIListforMDT * data);

int __si_amf_Encode_SNPNTAIListforMDT( SI_AMF_DT_SNPNTAIListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPN_TAIBasedMDT( SI_AMF_DT_SNPN_TAIBasedMDT ** data);

void __si_amf_debug_SNPN_TAIBasedMDT( char * key, SI_AMF_DT_SNPN_TAIBasedMDT * data, int lvl);

void __si_amf_memfree_SNPN_TAIBasedMDT( SI_AMF_DT_SNPN_TAIBasedMDT * data);

int __si_amf_Encode_SNPN_TAIBasedMDT( SI_AMF_DT_SNPN_TAIBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNTAIListforMDTItem( SI_AMF_DT_SNPNTAIListforMDTItem ** data);

void __si_amf_debug_SNPNTAIListforMDTItem( char * key, SI_AMF_DT_SNPNTAIListforMDTItem * data, int lvl);

void __si_amf_memfree_SNPNTAIListforMDTItem( SI_AMF_DT_SNPNTAIListforMDTItem * data);

int __si_amf_Encode_SNPNTAIListforMDTItem( SI_AMF_DT_SNPNTAIListforMDTItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNListforMDT( SI_AMF_DT_SNPNListforMDT ** data);

void __si_amf_debug_SNPNListforMDT( char * key, SI_AMF_DT_SNPNListforMDT * data, int lvl);

void __si_amf_memfree_SNPNListforMDT( SI_AMF_DT_SNPNListforMDT * data);

int __si_amf_Encode_SNPNListforMDT( SI_AMF_DT_SNPNListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPN_BasedMDT( SI_AMF_DT_SNPN_BasedMDT ** data);

void __si_amf_debug_SNPN_BasedMDT( char * key, SI_AMF_DT_SNPN_BasedMDT * data, int lvl);

void __si_amf_memfree_SNPN_BasedMDT( SI_AMF_DT_SNPN_BasedMDT * data);

int __si_amf_Encode_SNPN_BasedMDT( SI_AMF_DT_SNPN_BasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SNPNListforMDTItem( SI_AMF_DT_SNPNListforMDTItem ** data);

void __si_amf_debug_SNPNListforMDTItem( char * key, SI_AMF_DT_SNPNListforMDTItem * data, int lvl);

void __si_amf_memfree_SNPNListforMDTItem( SI_AMF_DT_SNPNListforMDTItem * data);

int __si_amf_Encode_SNPNListforMDTItem( SI_AMF_DT_SNPNListforMDTItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulHandoverReportList( SI_AMF_DT_SuccessfulHandoverReportList ** data);

void __si_amf_debug_SuccessfulHandoverReportList( char * key, SI_AMF_DT_SuccessfulHandoverReportList * data, int lvl);

void __si_amf_memfree_SuccessfulHandoverReportList( SI_AMF_DT_SuccessfulHandoverReportList * data);

int __si_amf_Encode_SuccessfulHandoverReportList( SI_AMF_DT_SuccessfulHandoverReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulHandoverReportItem_successfulHOReportContainer( SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer ** data);

void __si_amf_init_SuccessfulHandoverReportItem_successfulHOReportContainer2( SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_SuccessfulHandoverReportItem_successfulHOReportContainer( char * key, SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer * data, int lvl);

void __si_amf_memfree_SuccessfulHandoverReportItem_successfulHOReportContainer( SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer * data);

int __si_amf_Encode_SuccessfulHandoverReportItem_successfulHOReportContainer( SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulHandoverReport_Item( SI_AMF_DT_SuccessfulHandoverReport_Item ** data);

void __si_amf_debug_SuccessfulHandoverReport_Item( char * key, SI_AMF_DT_SuccessfulHandoverReport_Item * data, int lvl);

void __si_amf_memfree_SuccessfulHandoverReport_Item( SI_AMF_DT_SuccessfulHandoverReport_Item * data);

int __si_amf_Encode_SuccessfulHandoverReport_Item( SI_AMF_DT_SuccessfulHandoverReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulPSCellChangeReportList( SI_AMF_DT_SuccessfulPSCellChangeReportList ** data);

void __si_amf_debug_SuccessfulPSCellChangeReportList( char * key, SI_AMF_DT_SuccessfulPSCellChangeReportList * data, int lvl);

void __si_amf_memfree_SuccessfulPSCellChangeReportList( SI_AMF_DT_SuccessfulPSCellChangeReportList * data);

int __si_amf_Encode_SuccessfulPSCellChangeReportList( SI_AMF_DT_SuccessfulPSCellChangeReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer( SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer ** data);

void __si_amf_init_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer2( SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer( char * key, SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer * data, int lvl);

void __si_amf_memfree_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer( SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer * data);

int __si_amf_Encode_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer( SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SuccessfulPSCellChangeReport_Item( SI_AMF_DT_SuccessfulPSCellChangeReport_Item ** data);

void __si_amf_debug_SuccessfulPSCellChangeReport_Item( char * key, SI_AMF_DT_SuccessfulPSCellChangeReport_Item * data, int lvl);

void __si_amf_memfree_SuccessfulPSCellChangeReport_Item( SI_AMF_DT_SuccessfulPSCellChangeReport_Item * data);

int __si_amf_Encode_SuccessfulPSCellChangeReport_Item( SI_AMF_DT_SuccessfulPSCellChangeReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEHistoryInformation( SI_AMF_DT_UEHistoryInformation ** data);

void __si_amf_debug_UEHistoryInformation( char * key, SI_AMF_DT_UEHistoryInformation * data, int lvl);

void __si_amf_memfree_UEHistoryInformation( SI_AMF_DT_UEHistoryInformation * data);

int __si_amf_Encode_UEHistoryInformation( SI_AMF_DT_UEHistoryInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer( SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer ** data);

void __si_amf_debug_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer( char * key, SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer * data, int lvl);

void __si_amf_memfree_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer( SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer * data);

int __si_amf_Encode_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer( SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SourceNodeID( SI_AMF_DT_SourceNodeID ** data);

void __si_amf_debug_SourceNodeID( char * key, SI_AMF_DT_SourceNodeID * data, int lvl);

void __si_amf_memfree_SourceNodeID( SI_AMF_DT_SourceNodeID * data);

int __si_amf_Encode_SourceNodeID( SI_AMF_DT_SourceNodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SourceToTarget_TransparentContainer( SI_AMF_DT_SourceToTarget_TransparentContainer ** data);

void __si_amf_init_SourceToTarget_TransparentContainer2( SI_AMF_DT_SourceToTarget_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_SourceToTarget_TransparentContainer( char * key, SI_AMF_DT_SourceToTarget_TransparentContainer * data, int lvl);

void __si_amf_memfree_SourceToTarget_TransparentContainer( SI_AMF_DT_SourceToTarget_TransparentContainer * data);

int __si_amf_Encode_SourceToTarget_TransparentContainer( SI_AMF_DT_SourceToTarget_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_ConfiguredNSSAI( SI_AMF_DT_ConfiguredNSSAI ** data);

void __si_amf_init_ConfiguredNSSAI2( SI_AMF_DT_ConfiguredNSSAI ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_ConfiguredNSSAI( char * key, SI_AMF_DT_ConfiguredNSSAI * data, int lvl);

void __si_amf_memfree_ConfiguredNSSAI( SI_AMF_DT_ConfiguredNSSAI * data);

int __si_amf_Encode_ConfiguredNSSAI( SI_AMF_DT_ConfiguredNSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RejectedNSSAIinPLMN( SI_AMF_DT_RejectedNSSAIinPLMN ** data);

void __si_amf_init_RejectedNSSAIinPLMN2( SI_AMF_DT_RejectedNSSAIinPLMN ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RejectedNSSAIinPLMN( char * key, SI_AMF_DT_RejectedNSSAIinPLMN * data, int lvl);

void __si_amf_memfree_RejectedNSSAIinPLMN( SI_AMF_DT_RejectedNSSAIinPLMN * data);

int __si_amf_Encode_RejectedNSSAIinPLMN( SI_AMF_DT_RejectedNSSAIinPLMN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_RejectedNSSAIinTA( SI_AMF_DT_RejectedNSSAIinTA ** data);

void __si_amf_init_RejectedNSSAIinTA2( SI_AMF_DT_RejectedNSSAIinTA ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_RejectedNSSAIinTA( char * key, SI_AMF_DT_RejectedNSSAIinTA * data, int lvl);

void __si_amf_memfree_RejectedNSSAIinTA( SI_AMF_DT_RejectedNSSAIinTA * data);

int __si_amf_Encode_RejectedNSSAIinTA( SI_AMF_DT_RejectedNSSAIinTA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SourceToTarget_AMFInformationReroute( SI_AMF_DT_SourceToTarget_AMFInformationReroute ** data);

void __si_amf_debug_SourceToTarget_AMFInformationReroute( char * key, SI_AMF_DT_SourceToTarget_AMFInformationReroute * data, int lvl);

void __si_amf_memfree_SourceToTarget_AMFInformationReroute( SI_AMF_DT_SourceToTarget_AMFInformationReroute * data);

int __si_amf_Encode_SourceToTarget_AMFInformationReroute( SI_AMF_DT_SourceToTarget_AMFInformationReroute * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SRVCCOperationPossible( char * key, uint8_t eSRVCCOperationPossible, int lvl);

int __si_amf_Encode_SRVCCOperationPossible( uint8_t eSRVCCOperationPossible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SupportedTAList( SI_AMF_DT_SupportedTAList ** data);

void __si_amf_debug_SupportedTAList( char * key, SI_AMF_DT_SupportedTAList * data, int lvl);

void __si_amf_memfree_SupportedTAList( SI_AMF_DT_SupportedTAList * data);

int __si_amf_Encode_SupportedTAList( SI_AMF_DT_SupportedTAList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SupportedTAItem( SI_AMF_DT_SupportedTAItem ** data);

void __si_amf_debug_SupportedTAItem( char * key, SI_AMF_DT_SupportedTAItem * data, int lvl);

void __si_amf_memfree_SupportedTAItem( SI_AMF_DT_SupportedTAItem * data);

int __si_amf_Encode_SupportedTAItem( SI_AMF_DT_SupportedTAItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SuspendIndicator( char * key, uint8_t eSuspendIndicator, int lvl);

int __si_amf_Encode_SuspendIndicator( uint8_t eSuspendIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Suspend_Request_Indication( char * key, uint8_t eSuspend_Request_Indication, int lvl);

int __si_amf_Encode_Suspend_Request_Indication( uint8_t eSuspend_Request_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_Suspend_Response_Indication( char * key, uint8_t eSuspend_Response_Indication, int lvl);

int __si_amf_Encode_Suspend_Response_Indication( uint8_t eSuspend_Response_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_SurvivalTime( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_SurvivalTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_SurvivalTime( SI_AMF_DT_SurvivalTime * data);


void __si_amf_debug_SLPositioningRangingAuthorized( char * key, uint8_t eSLPositioningRangingAuthorized, int lvl);

int __si_amf_Encode_SLPositioningRangingAuthorized( uint8_t eSLPositioningRangingAuthorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SLPositioningRangingQoSParameters( SI_AMF_DT_SLPositioningRangingQoSParameters ** data);

void __si_amf_debug_SLPositioningRangingQoSParameters( char * key, SI_AMF_DT_SLPositioningRangingQoSParameters * data, int lvl);

void __si_amf_memfree_SLPositioningRangingQoSParameters( SI_AMF_DT_SLPositioningRangingQoSParameters * data);

int __si_amf_Encode_SLPositioningRangingQoSParameters( SI_AMF_DT_SLPositioningRangingQoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_SLPositioningRangingServiceInfo( SI_AMF_DT_SLPositioningRangingServiceInfo ** data);

void __si_amf_debug_SLPositioningRangingServiceInfo( char * key, SI_AMF_DT_SLPositioningRangingServiceInfo * data, int lvl);

void __si_amf_memfree_SLPositioningRangingServiceInfo( SI_AMF_DT_SLPositioningRangingServiceInfo * data);

int __si_amf_Encode_SLPositioningRangingServiceInfo( SI_AMF_DT_SLPositioningRangingServiceInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBroadcastEUTRA_Item( SI_AMF_DT_TAIBroadcastEUTRA_Item ** data);

void __si_amf_debug_TAIBroadcastEUTRA_Item( char * key, SI_AMF_DT_TAIBroadcastEUTRA_Item * data, int lvl);

void __si_amf_memfree_TAIBroadcastEUTRA_Item( SI_AMF_DT_TAIBroadcastEUTRA_Item * data);

int __si_amf_Encode_TAIBroadcastEUTRA_Item( SI_AMF_DT_TAIBroadcastEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIBroadcastNR_Item( SI_AMF_DT_TAIBroadcastNR_Item ** data);

void __si_amf_debug_TAIBroadcastNR_Item( char * key, SI_AMF_DT_TAIBroadcastNR_Item * data, int lvl);

void __si_amf_memfree_TAIBroadcastNR_Item( SI_AMF_DT_TAIBroadcastNR_Item * data);

int __si_amf_Encode_TAIBroadcastNR_Item( SI_AMF_DT_TAIBroadcastNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAICancelledEUTRA_Item( SI_AMF_DT_TAICancelledEUTRA_Item ** data);

void __si_amf_debug_TAICancelledEUTRA_Item( char * key, SI_AMF_DT_TAICancelledEUTRA_Item * data, int lvl);

void __si_amf_memfree_TAICancelledEUTRA_Item( SI_AMF_DT_TAICancelledEUTRA_Item * data);

int __si_amf_Encode_TAICancelledEUTRA_Item( SI_AMF_DT_TAICancelledEUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAICancelledNR_Item( SI_AMF_DT_TAICancelledNR_Item ** data);

void __si_amf_debug_TAICancelledNR_Item( char * key, SI_AMF_DT_TAICancelledNR_Item * data, int lvl);

void __si_amf_memfree_TAICancelledNR_Item( SI_AMF_DT_TAICancelledNR_Item * data);

int __si_amf_Encode_TAICancelledNR_Item( SI_AMF_DT_TAICancelledNR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForInactiveItem( SI_AMF_DT_TAIListForInactiveItem ** data);

void __si_amf_debug_TAIListForInactiveItem( char * key, SI_AMF_DT_TAIListForInactiveItem * data, int lvl);

void __si_amf_memfree_TAIListForInactiveItem( SI_AMF_DT_TAIListForInactiveItem * data);

int __si_amf_Encode_TAIListForInactiveItem( SI_AMF_DT_TAIListForInactiveItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForPaging( SI_AMF_DT_TAIListForPaging ** data);

void __si_amf_debug_TAIListForPaging( char * key, SI_AMF_DT_TAIListForPaging * data, int lvl);

void __si_amf_memfree_TAIListForPaging( SI_AMF_DT_TAIListForPaging * data);

int __si_amf_Encode_TAIListForPaging( SI_AMF_DT_TAIListForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForPagingItem( SI_AMF_DT_TAIListForPagingItem ** data);

void __si_amf_debug_TAIListForPagingItem( char * key, SI_AMF_DT_TAIListForPagingItem * data, int lvl);

void __si_amf_memfree_TAIListForPagingItem( SI_AMF_DT_TAIListForPagingItem * data);

int __si_amf_Encode_TAIListForPagingItem( SI_AMF_DT_TAIListForPagingItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForRestart( SI_AMF_DT_TAIListForRestart ** data);

void __si_amf_debug_TAIListForRestart( char * key, SI_AMF_DT_TAIListForRestart * data, int lvl);

void __si_amf_memfree_TAIListForRestart( SI_AMF_DT_TAIListForRestart * data);

int __si_amf_Encode_TAIListForRestart( SI_AMF_DT_TAIListForRestart * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAIListForWarning( SI_AMF_DT_TAIListForWarning ** data);

void __si_amf_debug_TAIListForWarning( char * key, SI_AMF_DT_TAIListForWarning * data, int lvl);

void __si_amf_memfree_TAIListForWarning( SI_AMF_DT_TAIListForWarning * data);

int __si_amf_Encode_TAIListForWarning( SI_AMF_DT_TAIListForWarning * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAINSAGSupportList( SI_AMF_DT_TAINSAGSupportList ** data);

void __si_amf_debug_TAINSAGSupportList( char * key, SI_AMF_DT_TAINSAGSupportList * data, int lvl);

void __si_amf_memfree_TAINSAGSupportList( SI_AMF_DT_TAINSAGSupportList * data);

int __si_amf_Encode_TAINSAGSupportList( SI_AMF_DT_TAINSAGSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TAINSAGSupportItem( SI_AMF_DT_TAINSAGSupportItem ** data);

void __si_amf_debug_TAINSAGSupportItem( char * key, SI_AMF_DT_TAINSAGSupportItem * data, int lvl);

void __si_amf_memfree_TAINSAGSupportItem( SI_AMF_DT_TAINSAGSupportItem * data);

int __si_amf_Encode_TAINSAGSupportItem( SI_AMF_DT_TAINSAGSupportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargeteNB_ID( SI_AMF_DT_TargeteNB_ID ** data);

void __si_amf_debug_TargeteNB_ID( char * key, SI_AMF_DT_TargeteNB_ID * data, int lvl);

void __si_amf_memfree_TargeteNB_ID( SI_AMF_DT_TargeteNB_ID * data);

int __si_amf_Encode_TargeteNB_ID( SI_AMF_DT_TargeteNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetHomeENBID_homeENB_ID( SI_AMF_DT_TargetHomeENBID_homeENB_ID ** data);

void __si_amf_init_TargetHomeENBID_homeENB_ID2( SI_AMF_DT_TargetHomeENBID_homeENB_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_TargetHomeENBID_homeENB_ID( char * key, SI_AMF_DT_TargetHomeENBID_homeENB_ID * data, int lvl);

void __si_amf_memfree_TargetHomeENBID_homeENB_ID( SI_AMF_DT_TargetHomeENBID_homeENB_ID * data);

int __si_amf_Encode_TargetHomeENBID_homeENB_ID( SI_AMF_DT_TargetHomeENBID_homeENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetHomeENB_ID( SI_AMF_DT_TargetHomeENB_ID ** data);

void __si_amf_debug_TargetHomeENB_ID( char * key, SI_AMF_DT_TargetHomeENB_ID * data, int lvl);

void __si_amf_memfree_TargetHomeENB_ID( SI_AMF_DT_TargetHomeENB_ID * data);

int __si_amf_Encode_TargetHomeENB_ID( SI_AMF_DT_TargetHomeENB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetRANNodeID( SI_AMF_DT_TargetRANNodeID ** data);

void __si_amf_debug_TargetRANNodeID( char * key, SI_AMF_DT_TargetRANNodeID * data, int lvl);

void __si_amf_memfree_TargetRANNodeID( SI_AMF_DT_TargetRANNodeID * data);

int __si_amf_Encode_TargetRANNodeID( SI_AMF_DT_TargetRANNodeID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetID( SI_AMF_DT_TargetID ** data);

void __si_amf_debug_TargetID( char * key, SI_AMF_DT_TargetID * data, int lvl);

void __si_amf_memfree_TargetID( SI_AMF_DT_TargetID * data);

int __si_amf_Encode_TargetID( SI_AMF_DT_TargetID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer ** data);

void __si_amf_debug_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer( char * key, SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer * data, int lvl);

void __si_amf_memfree_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer * data);

int __si_amf_Encode_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer ** data);

void __si_amf_debug_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer( char * key, SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer * data, int lvl);

void __si_amf_memfree_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer * data);

int __si_amf_Encode_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetNSSAI( SI_AMF_DT_TargetNSSAI ** data);

void __si_amf_debug_TargetNSSAI( char * key, SI_AMF_DT_TargetNSSAI * data, int lvl);

void __si_amf_memfree_TargetNSSAI( SI_AMF_DT_TargetNSSAI * data);

int __si_amf_Encode_TargetNSSAI( SI_AMF_DT_TargetNSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetNSSAI_Item( SI_AMF_DT_TargetNSSAI_Item ** data);

void __si_amf_debug_TargetNSSAI_Item( char * key, SI_AMF_DT_TargetNSSAI_Item * data, int lvl);

void __si_amf_memfree_TargetNSSAI_Item( SI_AMF_DT_TargetNSSAI_Item * data);

int __si_amf_Encode_TargetNSSAI_Item( SI_AMF_DT_TargetNSSAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetNSSAIInformation( SI_AMF_DT_TargetNSSAIInformation ** data);

void __si_amf_debug_TargetNSSAIInformation( char * key, SI_AMF_DT_TargetNSSAIInformation * data, int lvl);

void __si_amf_memfree_TargetNSSAIInformation( SI_AMF_DT_TargetNSSAIInformation * data);

int __si_amf_Encode_TargetNSSAIInformation( SI_AMF_DT_TargetNSSAIInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetRNC_ID( SI_AMF_DT_TargetRNC_ID ** data);

void __si_amf_debug_TargetRNC_ID( char * key, SI_AMF_DT_TargetRNC_ID * data, int lvl);

void __si_amf_memfree_TargetRNC_ID( SI_AMF_DT_TargetRNC_ID * data);

int __si_amf_Encode_TargetRNC_ID( SI_AMF_DT_TargetRNC_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargetToSource_TransparentContainer( SI_AMF_DT_TargetToSource_TransparentContainer ** data);

void __si_amf_init_TargetToSource_TransparentContainer2( SI_AMF_DT_TargetToSource_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TargetToSource_TransparentContainer( char * key, SI_AMF_DT_TargetToSource_TransparentContainer * data, int lvl);

void __si_amf_memfree_TargetToSource_TransparentContainer( SI_AMF_DT_TargetToSource_TransparentContainer * data);

int __si_amf_Encode_TargetToSource_TransparentContainer( SI_AMF_DT_TargetToSource_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TargettoSource_Failure_TransparentContainer( SI_AMF_DT_TargettoSource_Failure_TransparentContainer ** data);

void __si_amf_init_TargettoSource_Failure_TransparentContainer2( SI_AMF_DT_TargettoSource_Failure_TransparentContainer ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TargettoSource_Failure_TransparentContainer( char * key, SI_AMF_DT_TargettoSource_Failure_TransparentContainer * data, int lvl);

void __si_amf_memfree_TargettoSource_Failure_TransparentContainer( SI_AMF_DT_TargettoSource_Failure_TransparentContainer * data);

int __si_amf_Encode_TargettoSource_Failure_TransparentContainer( SI_AMF_DT_TargettoSource_Failure_TransparentContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_HandoverWindowStart( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_HandoverWindowStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_HandoverWindowStart( SI_AMF_DT_HandoverWindowStart * data);


void __si_amf_debug_HandoverWindowDuration( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_HandoverWindowDuration( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_HandoverWindowDuration( SI_AMF_DT_HandoverWindowDuration * data);


void __si_amf_init_TimeBasedHandoverInformation( SI_AMF_DT_TimeBasedHandoverInformation ** data);

void __si_amf_debug_TimeBasedHandoverInformation( char * key, SI_AMF_DT_TimeBasedHandoverInformation * data, int lvl);

void __si_amf_memfree_TimeBasedHandoverInformation( SI_AMF_DT_TimeBasedHandoverInformation * data);

int __si_amf_Encode_TimeBasedHandoverInformation( SI_AMF_DT_TimeBasedHandoverInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimerApproachForGUAMIRemoval( char * key, uint8_t eTimerApproachForGUAMIRemoval, int lvl);

int __si_amf_Encode_TimerApproachForGUAMIRemoval( uint8_t eTimerApproachForGUAMIRemoval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimeSinceFailure( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TimeSinceFailure( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TimeSinceFailure( SI_AMF_DT_TimeSinceFailure * data);


void __si_amf_init_TimeStamp( SI_AMF_DT_TimeStamp ** data);

void __si_amf_init_TimeStamp2( SI_AMF_DT_TimeStamp ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TimeStamp( char * key, SI_AMF_DT_TimeStamp * data, int lvl);

void __si_amf_memfree_TimeStamp( SI_AMF_DT_TimeStamp * data);

int __si_amf_Encode_TimeStamp( SI_AMF_DT_TimeStamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimeSyncAssistanceInfo_timeDistributionIndication( char * key, uint8_t eTimeSyncAssistanceInfo_timeDistributionIndication, int lvl);

int __si_amf_Encode_TimeSyncAssistanceInfo_timeDistributionIndication( uint8_t eTimeSyncAssistanceInfo_timeDistributionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget( SI_AMF_DT_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget * data);


void __si_amf_init_TimeSyncAssistanceInfo( SI_AMF_DT_TimeSyncAssistanceInfo ** data);

void __si_amf_debug_TimeSyncAssistanceInfo( char * key, SI_AMF_DT_TimeSyncAssistanceInfo * data, int lvl);

void __si_amf_memfree_TimeSyncAssistanceInfo( SI_AMF_DT_TimeSyncAssistanceInfo * data);

int __si_amf_Encode_TimeSyncAssistanceInfo( SI_AMF_DT_TimeSyncAssistanceInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TimeToWait( char * key, uint8_t eTimeToWait, int lvl);

int __si_amf_Encode_TimeToWait( uint8_t eTimeToWait, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TNAP_ID( SI_AMF_DT_TNAP_ID ** data);

void __si_amf_init_TNAP_ID2( SI_AMF_DT_TNAP_ID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TNAP_ID( char * key, SI_AMF_DT_TNAP_ID * data, int lvl);

void __si_amf_memfree_TNAP_ID( SI_AMF_DT_TNAP_ID * data);

int __si_amf_Encode_TNAP_ID( SI_AMF_DT_TNAP_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TNLAssociationList( SI_AMF_DT_TNLAssociationList ** data);

void __si_amf_debug_TNLAssociationList( char * key, SI_AMF_DT_TNLAssociationList * data, int lvl);

void __si_amf_memfree_TNLAssociationList( SI_AMF_DT_TNLAssociationList * data);

int __si_amf_Encode_TNLAssociationList( SI_AMF_DT_TNLAssociationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TNLAssociationItem( SI_AMF_DT_TNLAssociationItem ** data);

void __si_amf_debug_TNLAssociationItem( char * key, SI_AMF_DT_TNLAssociationItem * data, int lvl);

void __si_amf_memfree_TNLAssociationItem( SI_AMF_DT_TNLAssociationItem * data);

int __si_amf_Encode_TNLAssociationItem( SI_AMF_DT_TNLAssociationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_TraceDepth( char * key, uint8_t eTraceDepth, int lvl);

int __si_amf_Encode_TraceDepth( uint8_t eTraceDepth, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TraceActivation( SI_AMF_DT_TraceActivation ** data);

void __si_amf_debug_TraceActivation( char * key, SI_AMF_DT_TraceActivation * data, int lvl);

void __si_amf_memfree_TraceActivation( SI_AMF_DT_TraceActivation * data);

int __si_amf_Encode_TraceActivation( SI_AMF_DT_TraceActivation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TWAP_ID( SI_AMF_DT_TWAP_ID ** data);

void __si_amf_init_TWAP_ID2( SI_AMF_DT_TWAP_ID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_TWAP_ID( char * key, SI_AMF_DT_TWAP_ID * data, int lvl);

void __si_amf_memfree_TWAP_ID( SI_AMF_DT_TWAP_ID * data);

int __si_amf_Encode_TWAP_ID( SI_AMF_DT_TWAP_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TSCAssistanceInformation( SI_AMF_DT_TSCAssistanceInformation ** data);

void __si_amf_debug_TSCAssistanceInformation( char * key, SI_AMF_DT_TSCAssistanceInformation * data, int lvl);

void __si_amf_memfree_TSCAssistanceInformation( SI_AMF_DT_TSCAssistanceInformation * data);

int __si_amf_Encode_TSCAssistanceInformation( SI_AMF_DT_TSCAssistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_TSCTrafficCharacteristics( SI_AMF_DT_TSCTrafficCharacteristics ** data);

void __si_amf_debug_TSCTrafficCharacteristics( char * key, SI_AMF_DT_TSCTrafficCharacteristics * data, int lvl);

void __si_amf_memfree_TSCTrafficCharacteristics( SI_AMF_DT_TSCTrafficCharacteristics * data);

int __si_amf_Encode_TSCTrafficCharacteristics( SI_AMF_DT_TSCTrafficCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEAggregateMaximumBitRate( SI_AMF_DT_UEAggregateMaximumBitRate ** data);

void __si_amf_debug_UEAggregateMaximumBitRate( char * key, SI_AMF_DT_UEAggregateMaximumBitRate * data, int lvl);

void __si_amf_memfree_UEAggregateMaximumBitRate( SI_AMF_DT_UEAggregateMaximumBitRate * data);

int __si_amf_Encode_UEAggregateMaximumBitRate( SI_AMF_DT_UEAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEAppLayerMeasConfigInfo_qoEMeasurementStatus( char * key, uint8_t eUEAppLayerMeasConfigInfo_qoEMeasurementStatus, int lvl);

int __si_amf_Encode_UEAppLayerMeasConfigInfo_qoEMeasurementStatus( uint8_t eUEAppLayerMeasConfigInfo_qoEMeasurementStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig( SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig ** data);

void __si_amf_init_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig2( SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig( char * key, SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig * data, int lvl);

void __si_amf_memfree_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig( SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig * data);

int __si_amf_Encode_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig( SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEAppLayerMeasConfigInfo_measConfigAppLayerID( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_UEAppLayerMeasConfigInfo_measConfigAppLayerID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_UEAppLayerMeasConfigInfo_measConfigAppLayerID( SI_AMF_DT_UEAppLayerMeasConfigInfo_measConfigAppLayerID * data);


void __si_amf_init_UEAppLayerMeasConfigInfo( SI_AMF_DT_UEAppLayerMeasConfigInfo ** data);

void __si_amf_debug_UEAppLayerMeasConfigInfo( char * key, SI_AMF_DT_UEAppLayerMeasConfigInfo * data, int lvl);

void __si_amf_memfree_UEAppLayerMeasConfigInfo( SI_AMF_DT_UEAppLayerMeasConfigInfo * data);

int __si_amf_Encode_UEAppLayerMeasConfigInfo( SI_AMF_DT_UEAppLayerMeasConfigInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEAppLayerMeasInfoItem( SI_AMF_DT_UEAppLayerMeasInfoItem ** data);

void __si_amf_debug_UEAppLayerMeasInfoItem( char * key, SI_AMF_DT_UEAppLayerMeasInfoItem * data, int lvl);

void __si_amf_memfree_UEAppLayerMeasInfoItem( SI_AMF_DT_UEAppLayerMeasInfoItem * data);

int __si_amf_Encode_UEAppLayerMeasInfoItem( SI_AMF_DT_UEAppLayerMeasInfoItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_associatedLogicalNG_connectionItem( SI_AMF_DT_UE_associatedLogicalNG_connectionItem ** data);

void __si_amf_debug_UE_associatedLogicalNG_connectionItem( char * key, SI_AMF_DT_UE_associatedLogicalNG_connectionItem * data, int lvl);

void __si_amf_memfree_UE_associatedLogicalNG_connectionItem( SI_AMF_DT_UE_associatedLogicalNG_connectionItem * data);

int __si_amf_Encode_UE_associatedLogicalNG_connectionItem( SI_AMF_DT_UE_associatedLogicalNG_connectionItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UECapabilityInfoRequest( char * key, uint8_t eUECapabilityInfoRequest, int lvl);

int __si_amf_Encode_UECapabilityInfoRequest( uint8_t eUECapabilityInfoRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEContextRequest( char * key, uint8_t eUEContextRequest, int lvl);

int __si_amf_Encode_UEContextRequest( uint8_t eUEContextRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEContextResumeRequestTransfer( SI_AMF_DT_UEContextResumeRequestTransfer ** data);

void __si_amf_debug_UEContextResumeRequestTransfer( char * key, SI_AMF_DT_UEContextResumeRequestTransfer * data, int lvl);

void __si_amf_memfree_UEContextResumeRequestTransfer( SI_AMF_DT_UEContextResumeRequestTransfer * data);

int __si_amf_Encode_UEContextResumeRequestTransfer( SI_AMF_DT_UEContextResumeRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEContextResumeResponseTransfer( SI_AMF_DT_UEContextResumeResponseTransfer ** data);

void __si_amf_debug_UEContextResumeResponseTransfer( char * key, SI_AMF_DT_UEContextResumeResponseTransfer * data, int lvl);

void __si_amf_memfree_UEContextResumeResponseTransfer( SI_AMF_DT_UEContextResumeResponseTransfer * data);

int __si_amf_Encode_UEContextResumeResponseTransfer( SI_AMF_DT_UEContextResumeResponseTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEContextSuspendRequestTransfer( SI_AMF_DT_UEContextSuspendRequestTransfer ** data);

void __si_amf_debug_UEContextSuspendRequestTransfer( char * key, SI_AMF_DT_UEContextSuspendRequestTransfer * data, int lvl);

void __si_amf_memfree_UEContextSuspendRequestTransfer( SI_AMF_DT_UEContextSuspendRequestTransfer * data);

int __si_amf_Encode_UEContextSuspendRequestTransfer( SI_AMF_DT_UEContextSuspendRequestTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEDifferentiationInfo_periodicCommunicationIndicator( char * key, uint8_t eUEDifferentiationInfo_periodicCommunicationIndicator, int lvl);

int __si_amf_Encode_UEDifferentiationInfo_periodicCommunicationIndicator( uint8_t eUEDifferentiationInfo_periodicCommunicationIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEDifferentiationInfo_periodicTime( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_UEDifferentiationInfo_periodicTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_UEDifferentiationInfo_periodicTime( SI_AMF_DT_UEDifferentiationInfo_periodicTime * data);


void __si_amf_debug_UEDifferentiationInfo_stationaryIndication( char * key, uint8_t eUEDifferentiationInfo_stationaryIndication, int lvl);

int __si_amf_Encode_UEDifferentiationInfo_stationaryIndication( uint8_t eUEDifferentiationInfo_stationaryIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEDifferentiationInfo_trafficProfile( char * key, uint8_t eUEDifferentiationInfo_trafficProfile, int lvl);

int __si_amf_Encode_UEDifferentiationInfo_trafficProfile( uint8_t eUEDifferentiationInfo_trafficProfile, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEDifferentiationInfo_batteryIndication( char * key, uint8_t eUEDifferentiationInfo_batteryIndication, int lvl);

int __si_amf_Encode_UEDifferentiationInfo_batteryIndication( uint8_t eUEDifferentiationInfo_batteryIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_DifferentiationInfo( SI_AMF_DT_UE_DifferentiationInfo ** data);

void __si_amf_debug_UE_DifferentiationInfo( char * key, SI_AMF_DT_UE_DifferentiationInfo * data, int lvl);

void __si_amf_memfree_UE_DifferentiationInfo( SI_AMF_DT_UE_DifferentiationInfo * data);

int __si_amf_Encode_UE_DifferentiationInfo( SI_AMF_DT_UE_DifferentiationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEHistoryInformationFromTheUE( SI_AMF_DT_UEHistoryInformationFromTheUE ** data);

void __si_amf_debug_UEHistoryInformationFromTheUE( char * key, SI_AMF_DT_UEHistoryInformationFromTheUE * data, int lvl);

void __si_amf_memfree_UEHistoryInformationFromTheUE( SI_AMF_DT_UEHistoryInformationFromTheUE * data);

int __si_amf_Encode_UEHistoryInformationFromTheUE( SI_AMF_DT_UEHistoryInformationFromTheUE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_NGAP_ID_pair( SI_AMF_DT_UE_NGAP_ID_pair ** data);

void __si_amf_debug_UE_NGAP_ID_pair( char * key, SI_AMF_DT_UE_NGAP_ID_pair * data, int lvl);

void __si_amf_memfree_UE_NGAP_ID_pair( SI_AMF_DT_UE_NGAP_ID_pair * data);

int __si_amf_Encode_UE_NGAP_ID_pair( SI_AMF_DT_UE_NGAP_ID_pair * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UE_NGAP_IDs( SI_AMF_DT_UE_NGAP_IDs ** data);

void __si_amf_debug_UE_NGAP_IDs( char * key, SI_AMF_DT_UE_NGAP_IDs * data, int lvl);

void __si_amf_memfree_UE_NGAP_IDs( SI_AMF_DT_UE_NGAP_IDs * data);

int __si_amf_Encode_UE_NGAP_IDs( SI_AMF_DT_UE_NGAP_IDs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEPagingIdentity( SI_AMF_DT_UEPagingIdentity ** data);

void __si_amf_debug_UEPagingIdentity( char * key, SI_AMF_DT_UEPagingIdentity * data, int lvl);

void __si_amf_memfree_UEPagingIdentity( SI_AMF_DT_UEPagingIdentity * data);

int __si_amf_Encode_UEPagingIdentity( SI_AMF_DT_UEPagingIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UEPresence( char * key, uint8_t eUEPresence, int lvl);

int __si_amf_Encode_UEPresence( uint8_t eUEPresence, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEPresenceInAreaOfInterestList( SI_AMF_DT_UEPresenceInAreaOfInterestList ** data);

void __si_amf_debug_UEPresenceInAreaOfInterestList( char * key, SI_AMF_DT_UEPresenceInAreaOfInterestList * data, int lvl);

void __si_amf_memfree_UEPresenceInAreaOfInterestList( SI_AMF_DT_UEPresenceInAreaOfInterestList * data);

int __si_amf_Encode_UEPresenceInAreaOfInterestList( SI_AMF_DT_UEPresenceInAreaOfInterestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UEPresenceInAreaOfInterestItem( SI_AMF_DT_UEPresenceInAreaOfInterestItem ** data);

void __si_amf_debug_UEPresenceInAreaOfInterestItem( char * key, SI_AMF_DT_UEPresenceInAreaOfInterestItem * data, int lvl);

void __si_amf_memfree_UEPresenceInAreaOfInterestItem( SI_AMF_DT_UEPresenceInAreaOfInterestItem * data);

int __si_amf_Encode_UEPresenceInAreaOfInterestItem( SI_AMF_DT_UEPresenceInAreaOfInterestItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapability( SI_AMF_DT_UERadioCapability ** data);

void __si_amf_init_UERadioCapability2( SI_AMF_DT_UERadioCapability ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UERadioCapability( char * key, SI_AMF_DT_UERadioCapability * data, int lvl);

void __si_amf_memfree_UERadioCapability( SI_AMF_DT_UERadioCapability * data);

int __si_amf_Encode_UERadioCapability( SI_AMF_DT_UERadioCapability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapabilityForPagingOfNR( SI_AMF_DT_UERadioCapabilityForPagingOfNR ** data);

void __si_amf_init_UERadioCapabilityForPagingOfNR2( SI_AMF_DT_UERadioCapabilityForPagingOfNR ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UERadioCapabilityForPagingOfNR( char * key, SI_AMF_DT_UERadioCapabilityForPagingOfNR * data, int lvl);

void __si_amf_memfree_UERadioCapabilityForPagingOfNR( SI_AMF_DT_UERadioCapabilityForPagingOfNR * data);

int __si_amf_Encode_UERadioCapabilityForPagingOfNR( SI_AMF_DT_UERadioCapabilityForPagingOfNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapabilityForPagingOfEUTRA( SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA ** data);

void __si_amf_init_UERadioCapabilityForPagingOfEUTRA2( SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UERadioCapabilityForPagingOfEUTRA( char * key, SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA * data, int lvl);

void __si_amf_memfree_UERadioCapabilityForPagingOfEUTRA( SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA * data);

int __si_amf_Encode_UERadioCapabilityForPagingOfEUTRA( SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapabilityForPaging( SI_AMF_DT_UERadioCapabilityForPaging ** data);

void __si_amf_debug_UERadioCapabilityForPaging( char * key, SI_AMF_DT_UERadioCapabilityForPaging * data, int lvl);

void __si_amf_memfree_UERadioCapabilityForPaging( SI_AMF_DT_UERadioCapabilityForPaging * data);

int __si_amf_Encode_UERadioCapabilityForPaging( SI_AMF_DT_UERadioCapabilityForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapabilityForPagingOfNB_IoT( SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT ** data);

void __si_amf_init_UERadioCapabilityForPagingOfNB_IoT2( SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UERadioCapabilityForPagingOfNB_IoT( char * key, SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT * data, int lvl);

void __si_amf_memfree_UERadioCapabilityForPagingOfNB_IoT( SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT * data);

int __si_amf_Encode_UERadioCapabilityForPagingOfNB_IoT( SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UERadioCapabilityID( SI_AMF_DT_UERadioCapabilityID ** data);

void __si_amf_init_UERadioCapabilityID2( SI_AMF_DT_UERadioCapabilityID ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_UERadioCapabilityID( char * key, SI_AMF_DT_UERadioCapabilityID * data, int lvl);

void __si_amf_memfree_UERadioCapabilityID( SI_AMF_DT_UERadioCapabilityID * data);

int __si_amf_Encode_UERadioCapabilityID( SI_AMF_DT_UERadioCapabilityID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UERetentionInformation( char * key, uint8_t eUERetentionInformation, int lvl);

int __si_amf_Encode_UERetentionInformation( uint8_t eUERetentionInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UESecurityCapabilities( SI_AMF_DT_UESecurityCapabilities ** data);

void __si_amf_debug_UESecurityCapabilities( char * key, SI_AMF_DT_UESecurityCapabilities * data, int lvl);

void __si_amf_memfree_UESecurityCapabilities( SI_AMF_DT_UESecurityCapabilities * data);

int __si_amf_Encode_UESecurityCapabilities( SI_AMF_DT_UESecurityCapabilities * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UESliceMaximumBitRateList( SI_AMF_DT_UESliceMaximumBitRateList ** data);

void __si_amf_debug_UESliceMaximumBitRateList( char * key, SI_AMF_DT_UESliceMaximumBitRateList * data, int lvl);

void __si_amf_memfree_UESliceMaximumBitRateList( SI_AMF_DT_UESliceMaximumBitRateList * data);

int __si_amf_Encode_UESliceMaximumBitRateList( SI_AMF_DT_UESliceMaximumBitRateList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UESliceMaximumBitRateItem( SI_AMF_DT_UESliceMaximumBitRateItem ** data);

void __si_amf_debug_UESliceMaximumBitRateItem( char * key, SI_AMF_DT_UESliceMaximumBitRateItem * data, int lvl);

void __si_amf_memfree_UESliceMaximumBitRateItem( SI_AMF_DT_UESliceMaximumBitRateItem * data);

int __si_amf_Encode_UESliceMaximumBitRateItem( SI_AMF_DT_UESliceMaximumBitRateItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UE_UP_CIoT_Support( char * key, uint8_t eUE_UP_CIoT_Support, int lvl);

int __si_amf_Encode_UE_UP_CIoT_Support( uint8_t eUE_UP_CIoT_Support, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UL_NAS_MAC( SI_AMF_DT_UL_NAS_MAC ** data);

void __si_amf_init_UL_NAS_MAC2( SI_AMF_DT_UL_NAS_MAC ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_UL_NAS_MAC( char * key, SI_AMF_DT_UL_NAS_MAC * data, int lvl);

void __si_amf_memfree_UL_NAS_MAC( SI_AMF_DT_UL_NAS_MAC * data);

int __si_amf_Encode_UL_NAS_MAC( SI_AMF_DT_UL_NAS_MAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UL_NAS_Count( SI_AMF_DT_UL_NAS_Count ** data);

void __si_amf_init_UL_NAS_Count2( SI_AMF_DT_UL_NAS_Count ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_amf_debug_UL_NAS_Count( char * key, SI_AMF_DT_UL_NAS_Count * data, int lvl);

void __si_amf_memfree_UL_NAS_Count( SI_AMF_DT_UL_NAS_Count * data);

int __si_amf_Encode_UL_NAS_Count( SI_AMF_DT_UL_NAS_Count * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UL_CP_SecurityInformation( SI_AMF_DT_UL_CP_SecurityInformation ** data);

void __si_amf_debug_UL_CP_SecurityInformation( char * key, SI_AMF_DT_UL_CP_SecurityInformation * data, int lvl);

void __si_amf_memfree_UL_CP_SecurityInformation( SI_AMF_DT_UL_CP_SecurityInformation * data);

int __si_amf_Encode_UL_CP_SecurityInformation( SI_AMF_DT_UL_CP_SecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UL_NGU_UP_TNLModifyList( SI_AMF_DT_UL_NGU_UP_TNLModifyList ** data);

void __si_amf_debug_UL_NGU_UP_TNLModifyList( char * key, SI_AMF_DT_UL_NGU_UP_TNLModifyList * data, int lvl);

void __si_amf_memfree_UL_NGU_UP_TNLModifyList( SI_AMF_DT_UL_NGU_UP_TNLModifyList * data);

int __si_amf_Encode_UL_NGU_UP_TNLModifyList( SI_AMF_DT_UL_NGU_UP_TNLModifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UL_NGU_UP_TNLModifyItem( SI_AMF_DT_UL_NGU_UP_TNLModifyItem ** data);

void __si_amf_debug_UL_NGU_UP_TNLModifyItem( char * key, SI_AMF_DT_UL_NGU_UP_TNLModifyItem * data, int lvl);

void __si_amf_memfree_UL_NGU_UP_TNLModifyItem( SI_AMF_DT_UL_NGU_UP_TNLModifyItem * data);

int __si_amf_Encode_UL_NGU_UP_TNLModifyItem( SI_AMF_DT_UL_NGU_UP_TNLModifyItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UnavailableGUAMIList( SI_AMF_DT_UnavailableGUAMIList ** data);

void __si_amf_debug_UnavailableGUAMIList( char * key, SI_AMF_DT_UnavailableGUAMIList * data, int lvl);

void __si_amf_memfree_UnavailableGUAMIList( SI_AMF_DT_UnavailableGUAMIList * data);

int __si_amf_Encode_UnavailableGUAMIList( SI_AMF_DT_UnavailableGUAMIList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UnavailableGUAMIItem( SI_AMF_DT_UnavailableGUAMIItem ** data);

void __si_amf_debug_UnavailableGUAMIItem( char * key, SI_AMF_DT_UnavailableGUAMIItem * data, int lvl);

void __si_amf_memfree_UnavailableGUAMIItem( SI_AMF_DT_UnavailableGUAMIItem * data);

int __si_amf_Encode_UnavailableGUAMIItem( SI_AMF_DT_UnavailableGUAMIItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_ULForwarding( char * key, uint8_t eULForwarding, int lvl);

int __si_amf_Encode_ULForwarding( uint8_t eULForwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UPTransportLayerInformationList( SI_AMF_DT_UPTransportLayerInformationList ** data);

void __si_amf_debug_UPTransportLayerInformationList( char * key, SI_AMF_DT_UPTransportLayerInformationList * data, int lvl);

void __si_amf_memfree_UPTransportLayerInformationList( SI_AMF_DT_UPTransportLayerInformationList * data);

int __si_amf_Encode_UPTransportLayerInformationList( SI_AMF_DT_UPTransportLayerInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UPTransportLayerInformationItem( SI_AMF_DT_UPTransportLayerInformationItem ** data);

void __si_amf_debug_UPTransportLayerInformationItem( char * key, SI_AMF_DT_UPTransportLayerInformationItem * data, int lvl);

void __si_amf_memfree_UPTransportLayerInformationItem( SI_AMF_DT_UPTransportLayerInformationItem * data);

int __si_amf_Encode_UPTransportLayerInformationItem( SI_AMF_DT_UPTransportLayerInformationItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UPTransportLayerInformationPairItem( SI_AMF_DT_UPTransportLayerInformationPairItem ** data);

void __si_amf_debug_UPTransportLayerInformationPairItem( char * key, SI_AMF_DT_UPTransportLayerInformationPairItem * data, int lvl);

void __si_amf_memfree_UPTransportLayerInformationPairItem( SI_AMF_DT_UPTransportLayerInformationPairItem * data);

int __si_amf_Encode_UPTransportLayerInformationPairItem( SI_AMF_DT_UPTransportLayerInformationPairItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_URI_address( SI_AMF_DT_URI_address ** data);

void __si_amf_init_URI_address2( SI_AMF_DT_URI_address ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_URI_address( char * key, SI_AMF_DT_URI_address * data, int lvl);

void __si_amf_memfree_URI_address( SI_AMF_DT_URI_address * data);

int __si_amf_Encode_URI_address( SI_AMF_DT_URI_address * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationEUTRA( SI_AMF_DT_UserLocationInformationEUTRA ** data);

void __si_amf_debug_UserLocationInformationEUTRA( char * key, SI_AMF_DT_UserLocationInformationEUTRA * data, int lvl);

void __si_amf_memfree_UserLocationInformationEUTRA( SI_AMF_DT_UserLocationInformationEUTRA * data);

int __si_amf_Encode_UserLocationInformationEUTRA( SI_AMF_DT_UserLocationInformationEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationNR( SI_AMF_DT_UserLocationInformationNR ** data);

void __si_amf_debug_UserLocationInformationNR( char * key, SI_AMF_DT_UserLocationInformationNR * data, int lvl);

void __si_amf_memfree_UserLocationInformationNR( SI_AMF_DT_UserLocationInformationNR * data);

int __si_amf_Encode_UserLocationInformationNR( SI_AMF_DT_UserLocationInformationNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationN3IWF_with_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber ** data);

void __si_amf_debug_UserLocationInformationN3IWF_with_PortNumber( char * key, SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber * data, int lvl);

void __si_amf_memfree_UserLocationInformationN3IWF_with_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber * data);

int __si_amf_Encode_UserLocationInformationN3IWF_with_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformation( SI_AMF_DT_UserLocationInformation ** data);

void __si_amf_debug_UserLocationInformation( char * key, SI_AMF_DT_UserLocationInformation * data, int lvl);

void __si_amf_memfree_UserLocationInformation( SI_AMF_DT_UserLocationInformation * data);

int __si_amf_Encode_UserLocationInformation( SI_AMF_DT_UserLocationInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationN3IWF_without_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber ** data);

void __si_amf_debug_UserLocationInformationN3IWF_without_PortNumber( char * key, SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber * data, int lvl);

void __si_amf_memfree_UserLocationInformationN3IWF_without_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber * data);

int __si_amf_Encode_UserLocationInformationN3IWF_without_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationTNGF( SI_AMF_DT_UserLocationInformationTNGF ** data);

void __si_amf_debug_UserLocationInformationTNGF( char * key, SI_AMF_DT_UserLocationInformationTNGF * data, int lvl);

void __si_amf_memfree_UserLocationInformationTNGF( SI_AMF_DT_UserLocationInformationTNGF * data);

int __si_amf_Encode_UserLocationInformationTNGF( SI_AMF_DT_UserLocationInformationTNGF * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationTWIF( SI_AMF_DT_UserLocationInformationTWIF ** data);

void __si_amf_debug_UserLocationInformationTWIF( char * key, SI_AMF_DT_UserLocationInformationTWIF * data, int lvl);

void __si_amf_memfree_UserLocationInformationTWIF( SI_AMF_DT_UserLocationInformationTWIF * data);

int __si_amf_Encode_UserLocationInformationTWIF( SI_AMF_DT_UserLocationInformationTWIF * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserLocationInformationW_AGF( SI_AMF_DT_UserLocationInformationW_AGF ** data);

void __si_amf_debug_UserLocationInformationW_AGF( char * key, SI_AMF_DT_UserLocationInformationW_AGF * data, int lvl);

void __si_amf_memfree_UserLocationInformationW_AGF( SI_AMF_DT_UserLocationInformationW_AGF * data);

int __si_amf_Encode_UserLocationInformationW_AGF( SI_AMF_DT_UserLocationInformationW_AGF * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UserPlaneFailureType( char * key, uint8_t eUserPlaneFailureType, int lvl);

int __si_amf_Encode_UserPlaneFailureType( uint8_t eUserPlaneFailureType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_UserPlaneFailureIndication( SI_AMF_DT_UserPlaneFailureIndication ** data);

void __si_amf_debug_UserPlaneFailureIndication( char * key, SI_AMF_DT_UserPlaneFailureIndication * data, int lvl);

void __si_amf_memfree_UserPlaneFailureIndication( SI_AMF_DT_UserPlaneFailureIndication * data);

int __si_amf_Encode_UserPlaneFailureIndication( SI_AMF_DT_UserPlaneFailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_UserPlaneFailureIndicationReport( char * key, uint8_t eUserPlaneFailureIndicationReport, int lvl);

int __si_amf_Encode_UserPlaneFailureIndicationReport( uint8_t eUserPlaneFailureIndicationReport, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_VolumeTimedReportItem_startTimeStamp( SI_AMF_DT_VolumeTimedReportItem_startTimeStamp ** data);

void __si_amf_init_VolumeTimedReportItem_startTimeStamp2( SI_AMF_DT_VolumeTimedReportItem_startTimeStamp ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_VolumeTimedReportItem_startTimeStamp( char * key, SI_AMF_DT_VolumeTimedReportItem_startTimeStamp * data, int lvl);

void __si_amf_memfree_VolumeTimedReportItem_startTimeStamp( SI_AMF_DT_VolumeTimedReportItem_startTimeStamp * data);

int __si_amf_Encode_VolumeTimedReportItem_startTimeStamp( SI_AMF_DT_VolumeTimedReportItem_startTimeStamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_VolumeTimedReportItem_endTimeStamp( SI_AMF_DT_VolumeTimedReportItem_endTimeStamp ** data);

void __si_amf_init_VolumeTimedReportItem_endTimeStamp2( SI_AMF_DT_VolumeTimedReportItem_endTimeStamp ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_VolumeTimedReportItem_endTimeStamp( char * key, SI_AMF_DT_VolumeTimedReportItem_endTimeStamp * data, int lvl);

void __si_amf_memfree_VolumeTimedReportItem_endTimeStamp( SI_AMF_DT_VolumeTimedReportItem_endTimeStamp * data);

int __si_amf_Encode_VolumeTimedReportItem_endTimeStamp( SI_AMF_DT_VolumeTimedReportItem_endTimeStamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_VolumeTimedReportItem_usageCountUL( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_VolumeTimedReportItem_usageCountUL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_VolumeTimedReportItem_usageCountUL( SI_AMF_DT_VolumeTimedReportItem_usageCountUL * data);


void __si_amf_debug_VolumeTimedReportItem_usageCountDL( char * key, unsigned long long int data, int lvl);

int __si_amf_Encode_VolumeTimedReportItem_usageCountDL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_memfree_VolumeTimedReportItem_usageCountDL( SI_AMF_DT_VolumeTimedReportItem_usageCountDL * data);


void __si_amf_init_VolumeTimedReport_Item( SI_AMF_DT_VolumeTimedReport_Item ** data);

void __si_amf_debug_VolumeTimedReport_Item( char * key, SI_AMF_DT_VolumeTimedReport_Item * data, int lvl);

void __si_amf_memfree_VolumeTimedReport_Item( SI_AMF_DT_VolumeTimedReport_Item * data);

int __si_amf_Encode_VolumeTimedReport_Item( SI_AMF_DT_VolumeTimedReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WarningAreaCoordinates( SI_AMF_DT_WarningAreaCoordinates ** data);

void __si_amf_init_WarningAreaCoordinates2( SI_AMF_DT_WarningAreaCoordinates ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_WarningAreaCoordinates( char * key, SI_AMF_DT_WarningAreaCoordinates * data, int lvl);

void __si_amf_memfree_WarningAreaCoordinates( SI_AMF_DT_WarningAreaCoordinates * data);

int __si_amf_Encode_WarningAreaCoordinates( SI_AMF_DT_WarningAreaCoordinates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WarningAreaList( SI_AMF_DT_WarningAreaList ** data);

void __si_amf_debug_WarningAreaList( char * key, SI_AMF_DT_WarningAreaList * data, int lvl);

void __si_amf_memfree_WarningAreaList( SI_AMF_DT_WarningAreaList * data);

int __si_amf_Encode_WarningAreaList( SI_AMF_DT_WarningAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WarningMessageContents( SI_AMF_DT_WarningMessageContents ** data);

void __si_amf_init_WarningMessageContents2( SI_AMF_DT_WarningMessageContents ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_WarningMessageContents( char * key, SI_AMF_DT_WarningMessageContents * data, int lvl);

void __si_amf_memfree_WarningMessageContents( SI_AMF_DT_WarningMessageContents * data);

int __si_amf_Encode_WarningMessageContents( SI_AMF_DT_WarningMessageContents * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WarningSecurityInfo( SI_AMF_DT_WarningSecurityInfo ** data);

void __si_amf_init_WarningSecurityInfo2( SI_AMF_DT_WarningSecurityInfo ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_WarningSecurityInfo( char * key, SI_AMF_DT_WarningSecurityInfo * data, int lvl);

void __si_amf_memfree_WarningSecurityInfo( SI_AMF_DT_WarningSecurityInfo * data);

int __si_amf_Encode_WarningSecurityInfo( SI_AMF_DT_WarningSecurityInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WarningType( SI_AMF_DT_WarningType ** data);

void __si_amf_init_WarningType2( SI_AMF_DT_WarningType ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_WarningType( char * key, SI_AMF_DT_WarningType * data, int lvl);

void __si_amf_memfree_WarningType( SI_AMF_DT_WarningType * data);

int __si_amf_Encode_WarningType( SI_AMF_DT_WarningType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WLANName( SI_AMF_DT_WLANName ** data);

void __si_amf_init_WLANName2( SI_AMF_DT_WLANName ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_WLANName( char * key, SI_AMF_DT_WLANName * data, int lvl);

void __si_amf_memfree_WLANName( SI_AMF_DT_WLANName * data);

int __si_amf_Encode_WLANName( SI_AMF_DT_WLANName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WLANMeasConfigNameItem( SI_AMF_DT_WLANMeasConfigNameItem ** data);

void __si_amf_debug_WLANMeasConfigNameItem( char * key, SI_AMF_DT_WLANMeasConfigNameItem * data, int lvl);

void __si_amf_memfree_WLANMeasConfigNameItem( SI_AMF_DT_WLANMeasConfigNameItem * data);

int __si_amf_Encode_WLANMeasConfigNameItem( SI_AMF_DT_WLANMeasConfigNameItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_WUS_Assistance_Information( SI_AMF_DT_WUS_Assistance_Information ** data);

void __si_amf_debug_WUS_Assistance_Information( char * key, SI_AMF_DT_WUS_Assistance_Information * data, int lvl);

void __si_amf_memfree_WUS_Assistance_Information( SI_AMF_DT_WUS_Assistance_Information * data);

int __si_amf_Encode_WUS_Assistance_Information( SI_AMF_DT_WUS_Assistance_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_XnGTP_TLAs( SI_AMF_DT_XnGTP_TLAs ** data);

void __si_amf_debug_XnGTP_TLAs( char * key, SI_AMF_DT_XnGTP_TLAs * data, int lvl);

void __si_amf_memfree_XnGTP_TLAs( SI_AMF_DT_XnGTP_TLAs * data);

int __si_amf_Encode_XnGTP_TLAs( SI_AMF_DT_XnGTP_TLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_XnExtTLA_Item( SI_AMF_DT_XnExtTLA_Item ** data);

void __si_amf_debug_XnExtTLA_Item( char * key, SI_AMF_DT_XnExtTLA_Item * data, int lvl);

void __si_amf_memfree_XnExtTLA_Item( SI_AMF_DT_XnExtTLA_Item * data);

int __si_amf_Encode_XnExtTLA_Item( SI_AMF_DT_XnExtTLA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_debug_XrDeviceWith2Rx( char * key, uint8_t eXrDeviceWith2Rx, int lvl);

int __si_amf_Encode_XrDeviceWith2Rx( uint8_t eXrDeviceWith2Rx, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_amf_init_DefaultOctetString( SI_AMF_DT_DefaultOctetString ** data);

void __si_amf_init_DefaultOctetString2( SI_AMF_DT_DefaultOctetString ** data, u_char * cstr, uint32_t len);

void __si_amf_debug_DefaultOctetString( char * key, SI_AMF_DT_DefaultOctetString * data, int lvl);

void __si_amf_memfree_DefaultOctetString( SI_AMF_DT_DefaultOctetString * data);

int __si_amf_Encode_DefaultOctetString( SI_AMF_DT_DefaultOctetString * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType -><- Got NULL L:7426

int __si_amf_Decode_Criticality( uint8_t * eCriticality,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Presence( uint8_t * ePresence,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PrivateIEID_local( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PrivateIE_ID( SI_AMF_DT_PrivateIE_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ProcedureCode( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ProtocolExtensionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ProtocolIE_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TriggeringMessage( uint8_t * eTriggeringMessage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NULL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AdditionalDLUPTNLInformationForHOList( SI_AMF_DT_AdditionalDLUPTNLInformationForHOList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TransportLayerAddress( SI_AMF_DT_TransportLayerAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GTP_TEID( SI_AMF_DT_GTP_TEID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GTPTunnel( SI_AMF_DT_GTPTunnel ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UPTransportLayerInformation( SI_AMF_DT_UPTransportLayerInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowListWithDataForwarding( SI_AMF_DT_QosFlowListWithDataForwarding ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AdditionalDLUPTNLInformationForHOItem( SI_AMF_DT_AdditionalDLUPTNLInformationForHOItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AdditionalQosFlowInformation( uint8_t * eAdditionalQosFlowInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AerialUEsubscriptionInformation( uint8_t * eAerialUEsubscriptionInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BitRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2X_PC5_FlowBitRates( SI_AMF_DT_A2X_PC5_FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2X_PC5_QoS_Flow_List( SI_AMF_DT_A2X_PC5_QoS_Flow_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2XPC5QoSFlowItem_a2X_PQI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2XPC5QoSFlowItem_a2X_Range( uint8_t * eA2XPC5QoSFlowItem_a2X_Range,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2X_PC5_QoS_Flow_Item( SI_AMF_DT_A2X_PC5_QoS_Flow_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_A2X_PC5_QoS_Parameters( SI_AMF_DT_A2X_PC5_QoS_Parameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AdditionalCancelledlocationReportingReferenceIDList( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LocationReportingReferenceID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AdditionalCancelledlocationReportingReferenceIDItem( SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PriorityLevelARP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Pre_emptionCapability( uint8_t * ePre_emptionCapability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Pre_emptionVulnerability( uint8_t * ePre_emptionVulnerability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllocationAndRetentionPriority( SI_AMF_DT_AllocationAndRetentionPriority ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Allowed_CAG_List_per_PLMN( SI_AMF_DT_Allowed_CAG_List_per_PLMN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllowedNSSAI( SI_AMF_DT_AllowedNSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SST( SI_AMF_DT_SST ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SD( SI_AMF_DT_SD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_S_NSSAI( SI_AMF_DT_S_NSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllowedNSSAI_Item( SI_AMF_DT_AllowedNSSAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Allowed_PNI_NPN_List( SI_AMF_DT_Allowed_PNI_NPN_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllowedPNINPNItem_pNI_NPN_restricted( uint8_t * eAllowedPNINPNItem_pNI_NPN_restricted,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PLMNIdentity( SI_AMF_DT_PLMNIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Allowed_PNI_NPN_Item( SI_AMF_DT_Allowed_PNI_NPN_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllowedTACs( SI_AMF_DT_AllowedTACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AlternativeQoSParaSetIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AlternativeQoSParaSetNotifyIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AlternativeQoSParaSetList( SI_AMF_DT_AlternativeQoSParaSetList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PacketDelayBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PacketErrorRate_pERScalar( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PacketErrorRate_pERExponent( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PacketErrorRate( SI_AMF_DT_PacketErrorRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AlternativeQoSParaSetItem( SI_AMF_DT_AlternativeQoSParaSetItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssistanceInformationQoE_Meas( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFName( SI_AMF_DT_AMFName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFNameVisibleString( SI_AMF_DT_AMFNameVisibleString ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFNameUTF8String( SI_AMF_DT_AMFNameUTF8String ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GNBID_gNB_ID( SI_AMF_DT_GNBID_gNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GNB_ID( SI_AMF_DT_GNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalGNB_ID( SI_AMF_DT_GlobalGNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NgENBID_macroNgENB_ID( SI_AMF_DT_NgENBID_macroNgENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NgENBID_shortMacroNgENB_ID( SI_AMF_DT_NgENBID_shortMacroNgENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NgENBID_longMacroNgENB_ID( SI_AMF_DT_NgENBID_longMacroNgENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NgENB_ID( SI_AMF_DT_NgENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalNgENB_ID( SI_AMF_DT_GlobalNgENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_N3IWFID_n3IWF_ID( SI_AMF_DT_N3IWFID_n3IWF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_N3IWF_ID( SI_AMF_DT_N3IWF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalN3IWF_ID( SI_AMF_DT_GlobalN3IWF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalRANNodeID( SI_AMF_DT_GlobalRANNodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAC( SI_AMF_DT_TAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAI( SI_AMF_DT_TAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFPagingTarget( SI_AMF_DT_AMFPagingTarget ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFPointer( SI_AMF_DT_AMFPointer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFRegionID( SI_AMF_DT_AMFRegionID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMFSetID( SI_AMF_DT_AMFSetID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationSetupList( SI_AMF_DT_AMF_TNLAssociationSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CPTransportLayerInformation( SI_AMF_DT_CPTransportLayerInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationSetupItem( SI_AMF_DT_AMF_TNLAssociationSetupItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToAddList( SI_AMF_DT_AMF_TNLAssociationToAddList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNLAssociationUsage( uint8_t * eTNLAssociationUsage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNLAddressWeightFactor( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToAddItem( SI_AMF_DT_AMF_TNLAssociationToAddItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToRemoveList( SI_AMF_DT_AMF_TNLAssociationToRemoveList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToRemoveItem( SI_AMF_DT_AMF_TNLAssociationToRemoveItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToUpdateList( SI_AMF_DT_AMF_TNLAssociationToUpdateList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_TNLAssociationToUpdateItem( SI_AMF_DT_AMF_TNLAssociationToUpdateItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AMF_UE_NGAP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestTAIList( SI_AMF_DT_AreaOfInterestTAIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestCellList( SI_AMF_DT_AreaOfInterestCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestRANNodeList( SI_AMF_DT_AreaOfInterestRANNodeList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterest( SI_AMF_DT_AreaOfInterest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRCellIdentity( SI_AMF_DT_NRCellIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_CGI( SI_AMF_DT_NR_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRACellIdentity( SI_AMF_DT_EUTRACellIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_CGI( SI_AMF_DT_EUTRA_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_CGI( SI_AMF_DT_NGRAN_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestCellItem( SI_AMF_DT_AreaOfInterestCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestList( SI_AMF_DT_AreaOfInterestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestItem( SI_AMF_DT_AreaOfInterestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestRANNodeItem( SI_AMF_DT_AreaOfInterestRANNodeItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaOfInterestTAIItem( SI_AMF_DT_AreaOfInterestTAIItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedCellList( SI_AMF_DT_RecommendedCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedCellsForPaging( SI_AMF_DT_RecommendedCellsForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssistanceDataForRecommendedCells( SI_AMF_DT_AssistanceDataForRecommendedCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingAttemptCount( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntendedNumberOfPagingAttempts( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NextPagingAreaScope( uint8_t * eNextPagingAreaScope,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingAttemptInformation( SI_AMF_DT_PagingAttemptInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssistanceDataForPaging( SI_AMF_DT_AssistanceDataForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedMBSQosFlowSetupRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowIdentifier( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedMBSQosFlowSetupRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetupRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedMBSQosFlowSetuporModifyRequestList( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedMBSQosFlowSetuporModifyRequestItem( SI_AMF_DT_AssociatedMBSQosFlowSetuporModifyRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedQosFlowList( SI_AMF_DT_AssociatedQosFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedQosFlowItem_qosFlowMappingIndication( uint8_t * eAssociatedQosFlowItem_qosFlowMappingIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedQosFlowItem( SI_AMF_DT_AssociatedQosFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AssociatedSessionID( SI_AMF_DT_AssociatedSessionID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AUN3DeviceAccessInfo_aUN3DeviceAccess( uint8_t * eAUN3DeviceAccessInfo_aUN3DeviceAccess,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AUN3DeviceAccessInfo_existingNGConnectionwithSameLocation( uint8_t * eAUN3DeviceAccessInfo_existingNGConnectionwithSameLocation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AUN3DeviceAccessInfo( SI_AMF_DT_AUN3DeviceAccessInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AuthenticatedIndication( uint8_t * eAuthenticatedIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AveragingWindow( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIdListforMDT_NR( SI_AMF_DT_CellIdListforMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellBasedMDT_NR( SI_AMF_DT_CellBasedMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAListforMDT( SI_AMF_DT_TAListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TABasedMDT( SI_AMF_DT_TABasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListforMDT( SI_AMF_DT_TAIListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBasedMDT( SI_AMF_DT_TAIBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaScopeOfMDT_NR( SI_AMF_DT_AreaScopeOfMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIdListforMDT_EUTRA( SI_AMF_DT_CellIdListforMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellBasedMDT_EUTRA( SI_AMF_DT_CellBasedMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaScopeOfMDT_EUTRA( SI_AMF_DT_AreaScopeOfMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaScopeOfNeighCellsList( SI_AMF_DT_AreaScopeOfNeighCellsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRARFCN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRFrequencyBand_List( SI_AMF_DT_NRFrequencyBand_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRFrequencyInfo( SI_AMF_DT_NRFrequencyInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PCIListForMDT( SI_AMF_DT_PCIListForMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaScopeOfNeighCellsItem( SI_AMF_DT_AreaScopeOfNeighCellsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIdListforQMC( SI_AMF_DT_CellIdListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellBasedQMC( SI_AMF_DT_CellBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAListforQMC( SI_AMF_DT_TAListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TABasedQMC( SI_AMF_DT_TABasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListforQMC( SI_AMF_DT_TAIListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBasedQMC( SI_AMF_DT_TAIBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PLMNListforQMC( SI_AMF_DT_PLMNListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PLMNAreaBasedQMC( SI_AMF_DT_PLMNAreaBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AreaScopeOfQMC( SI_AMF_DT_AreaScopeOfQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList( uint8_t * eAvailableRANVisibleQoEMetrics_applicationLayerBufferLevelList,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup( uint8_t * eAvailableRANVisibleQoEMetrics_playoutDelayForMediaStartup,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AvailableRANVisibleQoEMetrics( SI_AMF_DT_AvailableRANVisibleQoEMetrics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BeamMeasurementsReportQuantity_rSRP( uint8_t * eBeamMeasurementsReportQuantity_rSRP,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BeamMeasurementsReportQuantity_rSRQ( uint8_t * eBeamMeasurementsReportQuantity_rSRQ,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BeamMeasurementsReportQuantity_sINR( uint8_t * eBeamMeasurementsReportQuantity_sINR,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BeamMeasurementsReportQuantity( SI_AMF_DT_BeamMeasurementsReportQuantity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MaxNrofRS_IndexesToReport( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BeamMeasurementsReportConfiguration( SI_AMF_DT_BeamMeasurementsReportConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDCancelledEUTRA( SI_AMF_DT_CellIDCancelledEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAICancelledEUTRA( SI_AMF_DT_TAICancelledEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDCancelledEUTRA( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDCancelledNR( SI_AMF_DT_CellIDCancelledNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAICancelledNR( SI_AMF_DT_TAICancelledNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDCancelledNR( SI_AMF_DT_EmergencyAreaIDCancelledNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastCancelledAreaList( SI_AMF_DT_BroadcastCancelledAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDBroadcastEUTRA( SI_AMF_DT_CellIDBroadcastEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBroadcastEUTRA( SI_AMF_DT_TAIBroadcastEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDBroadcastEUTRA( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDBroadcastNR( SI_AMF_DT_CellIDBroadcastNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBroadcastNR( SI_AMF_DT_TAIBroadcastNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDBroadcastNR( SI_AMF_DT_EmergencyAreaIDBroadcastNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastCompletedAreaList( SI_AMF_DT_BroadcastCompletedAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastPLMNList( SI_AMF_DT_BroadcastPLMNList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceSupportList( SI_AMF_DT_SliceSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastPLMNItem( SI_AMF_DT_BroadcastPLMNItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TMGI( SI_AMF_DT_TMGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NID( SI_AMF_DT_NID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionID( SI_AMF_DT_MBS_SessionID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CauseRadioNetwork( uint8_t * eCauseRadioNetwork,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CauseTransport( uint8_t * eCauseTransport,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CauseNas( uint8_t * eCauseNas,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CauseProtocol( uint8_t * eCauseProtocol,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CauseMisc( uint8_t * eCauseMisc,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Cause( SI_AMF_DT_Cause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CriticalityDiagnostics_IE_List( SI_AMF_DT_CriticalityDiagnostics_IE_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CriticalityDiagnostics( SI_AMF_DT_CriticalityDiagnostics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastTransportFailureTransfer( SI_AMF_DT_BroadcastTransportFailureTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfoNGRANList( SI_AMF_DT_MBS_SessionTNLInfoNGRANList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfoNGRAN( SI_AMF_DT_MBS_SessionTNLInfoNGRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastTransportRequestTransfer( SI_AMF_DT_BroadcastTransportRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BroadcastTransportResponseTransfer( SI_AMF_DT_BroadcastTransportResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t * eBluetoothMeasurementConfiguration_bt_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothMeasConfig( uint8_t * eBluetoothMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothMeasConfigNameList( SI_AMF_DT_BluetoothMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothMeasurementConfiguration( SI_AMF_DT_BluetoothMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothName( SI_AMF_DT_BluetoothName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BluetoothMeasConfigNameItem( SI_AMF_DT_BluetoothMeasConfigNameItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BurstArrivalTime( SI_AMF_DT_BurstArrivalTime ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BurstArrivalTimeWindow_burstArrivalTimeWindowStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BurstArrivalTimeWindow_burstArrivalTimeWindowEnd( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_BurstArrivalTimeWindow( SI_AMF_DT_BurstArrivalTimeWindow ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CAG_ID( SI_AMF_DT_CAG_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateRelayUEInformationList( SI_AMF_DT_CandidateRelayUEInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateRelayUE_ID( SI_AMF_DT_CandidateRelayUE_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateRelayUEInformationItem( SI_AMF_DT_CandidateRelayUEInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelAllWarningMessages( uint8_t * eCancelAllWarningMessages,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInEAI_EUTRA( SI_AMF_DT_CancelledCellsInEAI_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NumberOfBroadcasts( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInEAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInEAI_EUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInEAI_NR( SI_AMF_DT_CancelledCellsInEAI_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInEAI_NR_Item( SI_AMF_DT_CancelledCellsInEAI_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInTAI_EUTRA( SI_AMF_DT_CancelledCellsInTAI_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInTAI_EUTRA_Item( SI_AMF_DT_CancelledCellsInTAI_EUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInTAI_NR( SI_AMF_DT_CancelledCellsInTAI_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CancelledCellsInTAI_NR_Item( SI_AMF_DT_CancelledCellsInTAI_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateCellList( SI_AMF_DT_CandidateCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateCellID( SI_AMF_DT_CandidateCellID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidatePCI_candidatePCI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidatePCI_candidateNRARFCN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidatePCI( SI_AMF_DT_CandidatePCI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateCell( SI_AMF_DT_CandidateCell ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CandidateCellItem( SI_AMF_DT_CandidateCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellCAGList( SI_AMF_DT_CellCAGList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Cell_CAGInformation( SI_AMF_DT_Cell_CAGInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDBroadcastEUTRA_Item( SI_AMF_DT_CellIDBroadcastEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDBroadcastNR_Item( SI_AMF_DT_CellIDBroadcastNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDCancelledEUTRA_Item( SI_AMF_DT_CellIDCancelledEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDCancelledNR_Item( SI_AMF_DT_CellIDCancelledNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_CGIList( SI_AMF_DT_EUTRA_CGIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_CGIList( SI_AMF_DT_NR_CGIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellIDListForRestart( SI_AMF_DT_CellIDListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellSize( uint8_t * eCellSize,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellType( SI_AMF_DT_CellType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CEmodeBSupport_Indicator( uint8_t * eCEmodeBSupport_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CEmodeBrestricted( uint8_t * eCEmodeBrestricted,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockAccuracy_clockAccuracyValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockAccuracy_clockAccuracyIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockAccuracy( SI_AMF_DT_ClockAccuracy ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_synchronisationState( SI_AMF_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_traceabletoUTC( uint8_t * eClockQualityAcceptanceCriteria_traceabletoUTC,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_traceabletoGNSS( uint8_t * eClockQualityAcceptanceCriteria_traceabletoGNSS,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_AMF_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_clockAccuracy( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria_parentTImeSource( SI_AMF_DT_ClockQualityAcceptanceCriteria_parentTImeSource ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceCriteria( SI_AMF_DT_ClockQualityAcceptanceCriteria ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityAcceptanceIndication( SI_AMF_DT_ClockQualityAcceptanceIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityDetailLevel( SI_AMF_DT_ClockQualityDetailLevel ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ClockQualityReportingControlInfo( SI_AMF_DT_ClockQualityReportingControlInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedActivityPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedIdlePeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceOfUEActivityBehaviourInformation( uint8_t * eSourceOfUEActivityBehaviourInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEActivityBehaviour( SI_AMF_DT_ExpectedUEActivityBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedHOInterval( uint8_t * eExpectedHOInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEMobility( uint8_t * eExpectedUEMobility,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEMovingTrajectory( SI_AMF_DT_ExpectedUEMovingTrajectory ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEBehaviour( SI_AMF_DT_ExpectedUEBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNAssistedRANTuning( SI_AMF_DT_CNAssistedRANTuning ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNsubgroupID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNTypeRestrictionsForEquivalent( SI_AMF_DT_CNTypeRestrictionsForEquivalent ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNTypeRestrictionsForEquivalentItem_cn_Type( uint8_t * eCNTypeRestrictionsForEquivalentItem_cn_Type,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNTypeRestrictionsForEquivalentItem( SI_AMF_DT_CNTypeRestrictionsForEquivalentItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CNTypeRestrictionsForServing( uint8_t * eCNTypeRestrictionsForServing,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CommonNetworkInstance( SI_AMF_DT_CommonNetworkInstance ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInEAI_EUTRA( SI_AMF_DT_CompletedCellsInEAI_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInEAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInEAI_EUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInEAI_NR( SI_AMF_DT_CompletedCellsInEAI_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInEAI_NR_Item( SI_AMF_DT_CompletedCellsInEAI_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInTAI_EUTRA( SI_AMF_DT_CompletedCellsInTAI_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInTAI_EUTRA_Item( SI_AMF_DT_CompletedCellsInTAI_EUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInTAI_NR( SI_AMF_DT_CompletedCellsInTAI_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompletedCellsInTAI_NR_Item( SI_AMF_DT_CompletedCellsInTAI_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ConcurrentWarningMessageInd( uint8_t * eConcurrentWarningMessageInd,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ConfidentialityProtectionIndication( uint8_t * eConfidentialityProtectionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ConfidentialityProtectionResult( uint8_t * eConfidentialityProtectionResult,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ConfiguredTACIndication( uint8_t * eConfiguredTACIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEIdentityIndexValue_indexLength10( SI_AMF_DT_UEIdentityIndexValue_indexLength10 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEIdentityIndexValue( SI_AMF_DT_UEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingDRX( uint8_t * ePagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PeriodicRegistrationUpdateTimer( SI_AMF_DT_PeriodicRegistrationUpdateTimer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MICOModeIndication( uint8_t * eMICOModeIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForInactive( SI_AMF_DT_TAIListForInactive ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CoreNetworkAssistanceInformationForInactive( SI_AMF_DT_CoreNetworkAssistanceInformationForInactive ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CN_MT_CommunicationHandling( uint8_t * eCN_MT_CommunicationHandling,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCPSN12_pDCP_SN12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCPSN12_hFN_PDCP_SN12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCP_SN12( SI_AMF_DT_COUNTValueForPDCP_SN12 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCPSN18_pDCP_SN18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCPSN18_hFN_PDCP_SN18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_COUNTValueForPDCP_SN18( SI_AMF_DT_COUNTValueForPDCP_SN18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CoverageEnhancementLevel( SI_AMF_DT_CoverageEnhancementLevel ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TypeOfError( uint8_t * eTypeOfError,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CriticalityDiagnostics_IE_Item( SI_AMF_DT_CriticalityDiagnostics_IE_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_C_RNTI( SI_AMF_DT_C_RNTI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CAGListforMDT( SI_AMF_DT_CAGListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CAGListforMDTItem( SI_AMF_DT_CAGListforMDTItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataCodingScheme( SI_AMF_DT_DataCodingScheme ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingAccepted( uint8_t * eDataForwardingAccepted,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingNotPossible( uint8_t * eDataForwardingNotPossible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingResponseDRBList( SI_AMF_DT_DataForwardingResponseDRBList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingResponseDRBItem( SI_AMF_DT_DataForwardingResponseDRBItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSRequestInfo_dAPSIndicator( uint8_t * eDAPSRequestInfo_dAPSIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSRequestInfo( SI_AMF_DT_DAPSRequestInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSResponseInfoList( SI_AMF_DT_DAPSResponseInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSResponseInfo_dapsresponseindicator( uint8_t * eDAPSResponseInfo_dapsresponseindicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSResponseInfo( SI_AMF_DT_DAPSResponseInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DAPSResponseInfoItem( SI_AMF_DT_DAPSResponseInfoItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingResponseERABList( SI_AMF_DT_DataForwardingResponseERABList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_E_RAB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DataForwardingResponseERABListItem( SI_AMF_DT_DataForwardingResponseERABListItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DelayCritical( uint8_t * eDelayCritical,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DL_NAS_MAC( SI_AMF_DT_DL_NAS_MAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DL_CP_SecurityInformation( SI_AMF_DT_DL_CP_SecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DL_Signalling( uint8_t * eDL_Signalling,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DLForwarding( uint8_t * eDLForwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DL_NGU_TNLInformationReused( uint8_t * eDL_NGU_TNLInformationReused,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DirectForwardingPathAvailability( uint8_t * eDirectForwardingPathAvailability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToStatusTransferList( SI_AMF_DT_DRBsSubjectToStatusTransferList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL12_receiveStatusOfUL_PDCP_SDUs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusUL12( SI_AMF_DT_DRBStatusUL12 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs( SI_AMF_DT_DRBStatusUL18_receiveStatusOfUL_PDCP_SDUs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusUL18( SI_AMF_DT_DRBStatusUL18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusUL( SI_AMF_DT_DRBStatusUL ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusDL12( SI_AMF_DT_DRBStatusDL12 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusDL18( SI_AMF_DT_DRBStatusDL18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBStatusDL( SI_AMF_DT_DRBStatusDL ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToStatusTransferItem( SI_AMF_DT_DRBsSubjectToStatusTransferItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsToQosFlowsMappingList( SI_AMF_DT_DRBsToQosFlowsMappingList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsToQosFlowsMappingItem( SI_AMF_DT_DRBsToQosFlowsMappingItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PriorityLevelQos( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveQI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MaximumDataBurstVolume( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Dynamic5QIDescriptor( SI_AMF_DT_Dynamic5QIDescriptor ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EarlyMeasurement( uint8_t * eEarlyMeasurement,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToEarlyStatusTransfer_List( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FirstDLCount( SI_AMF_DT_FirstDLCount ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ProcedureStageChoice( SI_AMF_DT_ProcedureStageChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EarlyStatusTransfer_TransparentContainer( SI_AMF_DT_EarlyStatusTransfer_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToDLDiscarding_List( SI_AMF_DT_DRBsSubjectToDLDiscarding_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DLDiscarding( SI_AMF_DT_DLDiscarding ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DLCountChoice( SI_AMF_DT_DLCountChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToDLDiscarding_Item( SI_AMF_DT_DRBsSubjectToDLDiscarding_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DRBsSubjectToEarlyStatusTransfer_Item( SI_AMF_DT_DRBsSubjectToEarlyStatusTransfer_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ECNMarkingAtRANRequest( uint8_t * eECNMarkingAtRANRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ECNMarkingAtUPFRequest( uint8_t * eECNMarkingAtUPFRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CongestionInformationRequest( uint8_t * eCongestionInformationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ECNMarkingorCongestionInformationReportingRequest( SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ECNMarkingorCongestionInformationReportingStatus( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ActivationStatus( uint8_t * eActivationStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ECNMarkingorCongestionInformationReportingStatus_Item( SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EDT_Session( uint8_t * eEDT_Session,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaID( SI_AMF_DT_EmergencyAreaID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDBroadcastEUTRA_Item( SI_AMF_DT_EmergencyAreaIDBroadcastEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDBroadcastNR_Item( SI_AMF_DT_EmergencyAreaIDBroadcastNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDCancelledEUTRA_Item( SI_AMF_DT_EmergencyAreaIDCancelledEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDCancelledNR_Item( SI_AMF_DT_EmergencyAreaIDCancelledNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDList( SI_AMF_DT_EmergencyAreaIDList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyAreaIDListForRestart( SI_AMF_DT_EmergencyAreaIDListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyFallbackRequestIndicator( uint8_t * eEmergencyFallbackRequestIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyServiceTargetCN( uint8_t * eEmergencyServiceTargetCN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EmergencyFallbackIndicator( SI_AMF_DT_EmergencyFallbackIndicator ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ENBID_macroENB_ID( SI_AMF_DT_ENBID_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ENBID_homeENB_ID( SI_AMF_DT_ENBID_homeENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ENBID_short_macroENB_ID( SI_AMF_DT_ENBID_short_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ENBID_long_macroENB_ID( SI_AMF_DT_ENBID_long_macroENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ENB_ID( SI_AMF_DT_ENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Enhanced_CoverageRestriction( uint8_t * eEnhanced_CoverageRestriction,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Extended_ConnectedTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EN_DCSONConfigurationTransfer( SI_AMF_DT_EN_DCSONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PortNumber( SI_AMF_DT_PortNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EndpointIPAddressAndPort( SI_AMF_DT_EndpointIPAddressAndPort ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EndIndication( uint8_t * eEndIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EquivalentPLMNs( SI_AMF_DT_EquivalentPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EPS_TAC( SI_AMF_DT_EPS_TAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EPS_TAI( SI_AMF_DT_EPS_TAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_E_RABInformationList( SI_AMF_DT_E_RABInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_E_RABInformationItem( SI_AMF_DT_E_RABInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ERedCapIndication( uint8_t * eERedCapIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_CGIListForWarning( SI_AMF_DT_EUTRA_CGIListForWarning ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_Paging_eDRX_Cycle( uint8_t * eEUTRA_Paging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_Paging_Time_Window( uint8_t * eEUTRA_Paging_Time_Window,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRA_PagingeDRXInformation( SI_AMF_DT_EUTRA_PagingeDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAencryptionAlgorithms( SI_AMF_DT_EUTRAencryptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAintegrityProtectionAlgorithms( SI_AMF_DT_EUTRAintegrityProtectionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EventType( uint8_t * eEventType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExcessPacketDelayThresholdConfiguration( SI_AMF_DT_ExcessPacketDelayThresholdConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExcessPacketDelayThresholdValue( uint8_t * eExcessPacketDelayThresholdValue,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExcessPacketDelayThresholdItem( SI_AMF_DT_ExcessPacketDelayThresholdItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEMovingTrajectoryItem_timeStayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExpectedUEMovingTrajectoryItem( SI_AMF_DT_ExpectedUEMovingTrajectoryItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Extended_AMFName( SI_AMF_DT_Extended_AMFName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedPacketDelayBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANNodeNameVisibleString( SI_AMF_DT_RANNodeNameVisibleString ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANNodeNameUTF8String( SI_AMF_DT_RANNodeNameUTF8String ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Extended_RANNodeName( SI_AMF_DT_Extended_RANNodeName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_AMF_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedRATRestrictionInformation( SI_AMF_DT_ExtendedRATRestrictionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedRNC_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedSliceSupportList( SI_AMF_DT_ExtendedSliceSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedUEIdentityIndexValue( SI_AMF_DT_ExtendedUEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EventTrigger_outOfCoverage( uint8_t * eEventTrigger_outOfCoverage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Threshold_RSRP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Threshold_RSRQ( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MeasurementThresholdL1LoggedMDT( SI_AMF_DT_MeasurementThresholdL1LoggedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Hysteresis( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeToTrigger( uint8_t * eTimeToTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EventL1LoggedMDTConfig( SI_AMF_DT_EventL1LoggedMDTConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EventTrigger( SI_AMF_DT_EventTrigger ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EquivalentSNPNsList( SI_AMF_DT_EquivalentSNPNsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EquivalentSNPNsItem( SI_AMF_DT_EquivalentSNPNsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRUERLFReportContainer( SI_AMF_DT_NRUERLFReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEUERLFReportContainer( SI_AMF_DT_LTEUERLFReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERLFReportContainer( SI_AMF_DT_UERLFReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FailureIndication( SI_AMF_DT_FailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE( uint8_t * eNR_Paging_Long_eDRX_Cycle_for_RRC_INACTIVE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_Paging_Time_Window_for_RRC_INACTIVE( uint8_t * eNR_Paging_Time_Window_for_RRC_INACTIVE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE( SI_AMF_DT_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HLComActivate( SI_AMF_DT_HLComActivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HLComDeactivate_uEReachabilityIndication( uint8_t * eHLComDeactivate_uEReachabilityIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HLComDeactivate( SI_AMF_DT_HLComDeactivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGCAction( SI_AMF_DT_FiveGCAction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeDirectDiscovery( uint8_t * eFiveGProSeDirectDiscovery,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeDirectCommunication( uint8_t * eFiveGProSeDirectCommunication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer2UEtoNetworkRelay( uint8_t * eFiveGProSeLayer2UEtoNetworkRelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer3UEtoNetworkRelay( uint8_t * eFiveGProSeLayer3UEtoNetworkRelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer2RemoteUE( uint8_t * eFiveGProSeLayer2RemoteUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveG_ProSeAuthorized( SI_AMF_DT_FiveG_ProSeAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer2Multipath( uint8_t * eFiveGProSeLayer2Multipath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer2UEtoUERelay( uint8_t * eFiveGProSeLayer2UEtoUERelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSeLayer2UEtoUERemote( uint8_t * eFiveGProSeLayer2UEtoUERemote,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSePC5QoSFlowList( SI_AMF_DT_FiveGProSePC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveG_ProSePC5QoSParameters( SI_AMF_DT_FiveG_ProSePC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSePC5FlowBitRates( SI_AMF_DT_FiveGProSePC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Range( uint8_t * eRange,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveGProSePC5QoSFlowItem( SI_AMF_DT_FiveGProSePC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveG_TMSI( SI_AMF_DT_FiveG_TMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FiveG_S_TMSI( SI_AMF_DT_FiveG_S_TMSI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ForbiddenAreaInformation( SI_AMF_DT_ForbiddenAreaInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ForbiddenTACs( SI_AMF_DT_ForbiddenTACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ForbiddenAreaInformation_Item( SI_AMF_DT_ForbiddenAreaInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalENB_ID( SI_AMF_DT_GlobalENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONeNBID( SI_AMF_DT_IntersystemSONeNBID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONNGRANnodeID( SI_AMF_DT_IntersystemSONNGRANnodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FromEUTRANtoNGRAN( SI_AMF_DT_FromEUTRANtoNGRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_FromNGRANtoEUTRAN( SI_AMF_DT_FromNGRANtoEUTRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotificationControl( uint8_t * eNotificationControl,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PacketLossRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GBR_QosInformation( SI_AMF_DT_GBR_QosInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalCable_ID( SI_AMF_DT_GlobalCable_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalCable_ID_new( SI_AMF_DT_GlobalCable_ID_new ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalLineIdentity( SI_AMF_DT_GlobalLineIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LineType( uint8_t * eLineType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalLine_ID( SI_AMF_DT_GlobalLine_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNGFID_tNGF_ID( SI_AMF_DT_TNGFID_tNGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNGF_ID( SI_AMF_DT_TNGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalTNGF_ID( SI_AMF_DT_GlobalTNGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TWIFID_tWIF_ID( SI_AMF_DT_TWIFID_tWIF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TWIF_ID( SI_AMF_DT_TWIF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalTWIF_ID( SI_AMF_DT_GlobalTWIF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WAGFID_w_AGF_ID( SI_AMF_DT_WAGFID_w_AGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_W_AGF_ID( SI_AMF_DT_W_AGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GlobalW_AGF_ID( SI_AMF_DT_GlobalW_AGF_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GUAMI( SI_AMF_DT_GUAMI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GUAMIType( uint8_t * eGUAMIType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowToBeForwardedList( SI_AMF_DT_QosFlowToBeForwardedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverCommandTransfer( SI_AMF_DT_HandoverCommandTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverFlag( uint8_t * eHandoverFlag,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverPreparationUnsuccessfulTransfer( SI_AMF_DT_HandoverPreparationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntegrityProtectionResult( uint8_t * eIntegrityProtectionResult,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecurityResult( SI_AMF_DT_SecurityResult ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowListWithCause( SI_AMF_DT_QosFlowListWithCause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverRequestAcknowledgeTransfer( SI_AMF_DT_HandoverRequestAcknowledgeTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverRequiredTransfer( SI_AMF_DT_HandoverRequiredTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_HandoverResourceAllocationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverType( uint8_t * eHandoverType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HashedUEIdentityIndexValue( SI_AMF_DT_HashedUEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HFCNode_ID( SI_AMF_DT_HFCNode_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HFCNode_ID_new( SI_AMF_DT_HFCNode_ID_new ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HOReport_handoverReportType( uint8_t * eHOReport_handoverReportType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HOReport_sourcecellC_RNTI( SI_AMF_DT_HOReport_sourcecellC_RNTI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobilityInformation( SI_AMF_DT_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HOReport( SI_AMF_DT_HOReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IAB_Authorized( uint8_t * eIAB_Authorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobileIAB_MTUserLocationInformation( SI_AMF_DT_MobileIAB_MTUserLocationInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IAB_Supported( uint8_t * eIAB_Supported,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IABNodeIndication( uint8_t * eIABNodeIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IMSVoiceSupportIndicator( uint8_t * eIMSVoiceSupportIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IndexToRFSP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedRANNodeList( SI_AMF_DT_RecommendedRANNodeList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedRANNodesForPaging( SI_AMF_DT_RecommendedRANNodesForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_InfoOnRecommendedCellsAndRANNodesForPaging( SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntegrityProtectionIndication( uint8_t * eIntegrityProtectionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_InterfacesToTrace( SI_AMF_DT_InterfacesToTrace ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MeasurementsToActivate( SI_AMF_DT_MeasurementsToActivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M1ReportingTrigger( uint8_t * eM1ReportingTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Threshold_SINR( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M1ThresholdType( SI_AMF_DT_M1ThresholdType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M1ThresholdEventA2( SI_AMF_DT_M1ThresholdEventA2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportIntervalMDT( uint8_t * eReportIntervalMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportAmountMDT( uint8_t * eReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M1PeriodicReporting( SI_AMF_DT_M1PeriodicReporting ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M1Configuration( SI_AMF_DT_M1Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M4period( uint8_t * eM4period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Links_to_log( uint8_t * eLinks_to_log,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M4Configuration( SI_AMF_DT_M4Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M5period( uint8_t * eM5period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M5Configuration( SI_AMF_DT_M5Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M6report_Interval( uint8_t * eM6report_Interval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M6Configuration( SI_AMF_DT_M6Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M7period( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M7Configuration( SI_AMF_DT_M7Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasConfig( uint8_t * eWLANMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasConfigNameList( SI_AMF_DT_WLANMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasurementConfiguration_wlan_rssi( uint8_t * eWLANMeasurementConfiguration_wlan_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasurementConfiguration_wlan_rtt( uint8_t * eWLANMeasurementConfiguration_wlan_rtt,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasurementConfiguration( SI_AMF_DT_WLANMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Location_Information( SI_AMF_DT_MDT_Location_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Location_Info( SI_AMF_DT_MDT_Location_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorMeasConfig( uint8_t * eSensorMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorMeasConfigNameList( SI_AMF_DT_SensorMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorMeasurementConfiguration( SI_AMF_DT_SensorMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ImmediateMDTNr( SI_AMF_DT_ImmediateMDTNr ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_InterSystemFailureIndication( SI_AMF_DT_InterSystemFailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONTransferType( SI_AMF_DT_IntersystemSONTransferType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TooearlyIntersystemHO( SI_AMF_DT_TooearlyIntersystemHO ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemUnnecessaryHO_earlyIRATHO( uint8_t * eIntersystemUnnecessaryHO_earlyIRATHO,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemUnnecessaryHO( SI_AMF_DT_IntersystemUnnecessaryHO ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_InterSystemHandoverReportType( SI_AMF_DT_InterSystemHandoverReportType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_InterSystemHOReport( SI_AMF_DT_InterSystemHOReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONInformationReport( SI_AMF_DT_IntersystemSONInformationReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONInformation( SI_AMF_DT_IntersystemSONInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONConfigurationTransfer( SI_AMF_DT_IntersystemSONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemCellActivationRequest_activationID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CellsToActivateList( SI_AMF_DT_CellsToActivateList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemCellActivationRequest( SI_AMF_DT_IntersystemCellActivationRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_CellToReportList( SI_AMF_DT_EUTRAN_CellToReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_ReportingSystemIEs( SI_AMF_DT_EUTRAN_ReportingSystemIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_CellToReportList( SI_AMF_DT_NGRAN_CellToReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_ReportingSystemIEs( SI_AMF_DT_NGRAN_ReportingSystemIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportingSystem( SI_AMF_DT_ReportingSystem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportCharacteristics( SI_AMF_DT_ReportCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemResourceThreshold( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NumberOfMeasurementReportingLevels( uint8_t * eNumberOfMeasurementReportingLevels,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EventBasedReportingIEs( SI_AMF_DT_EventBasedReportingIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportingPeriodicity( uint8_t * eReportingPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PeriodicReportingIEs( SI_AMF_DT_PeriodicReportingIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportType( SI_AMF_DT_ReportType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemResourceStatusRequest( SI_AMF_DT_IntersystemResourceStatusRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONInformationRequest( SI_AMF_DT_IntersystemSONInformationRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_CellToReportItem( SI_AMF_DT_EUTRAN_CellToReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_CellToReportItem( SI_AMF_DT_NGRAN_CellToReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ActivatedCellList( SI_AMF_DT_ActivatedCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemCellActivationReply_activation_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemCellActivationReply( SI_AMF_DT_IntersystemCellActivationReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemResourceStatusReply( SI_AMF_DT_IntersystemResourceStatusReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemSONInformationReply( SI_AMF_DT_IntersystemSONInformationReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotificationCellList( SI_AMF_DT_NotificationCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemCellStateIndication( SI_AMF_DT_IntersystemCellStateIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotificationCellItem_notifyFlag( uint8_t * eNotificationCellItem_notifyFlag,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotificationCell_Item( SI_AMF_DT_NotificationCell_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_CellReportList( SI_AMF_DT_EUTRAN_CellReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_ReportingStatusIEs( SI_AMF_DT_EUTRAN_ReportingStatusIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_CellReportList( SI_AMF_DT_NGRAN_CellReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_ReportingStatusIEs( SI_AMF_DT_NGRAN_ReportingStatusIEs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ResourceStatusReportingSystem( SI_AMF_DT_ResourceStatusReportingSystem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemResourceStatusReport( SI_AMF_DT_IntersystemResourceStatusReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompositeAvailableCapacity_cellCapacityClassValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompositeAvailableCapacity_capacityValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_CompositeAvailableCapacity( SI_AMF_DT_CompositeAvailableCapacity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_CompositeAvailableCapacityGroup( SI_AMF_DT_EUTRAN_CompositeAvailableCapacityGroup ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_NumberOfActiveUEs( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_NoofRRCConnections( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_dL_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_uL_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_dL_non_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_uL_non_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_dL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_uL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_dL_scheduling_PDCCH_CCE_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRANRadioResourceStatus_uL_scheduling_PDCCH_CCE_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_RadioResourceStatus( SI_AMF_DT_EUTRAN_RadioResourceStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_EUTRAN_CellReportItem( SI_AMF_DT_EUTRAN_CellReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_NumberOfActiveUEs( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_dL_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_uL_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_dL_non_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_uL_non_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_dL_Total_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANRadioResourceStatus_uL_Total_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_RadioResourceStatus( SI_AMF_DT_NGRAN_RadioResourceStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_CellReportItem( SI_AMF_DT_NGRAN_CellReportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IntersystemMobilityFailureforVoiceFallback( SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LAC( SI_AMF_DT_LAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LAI( SI_AMF_DT_LAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeUEStayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeUEStayedInCellEnhancedGranularity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedNGRANCellInformation( SI_AMF_DT_LastVisitedNGRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedEUTRANCellInformation( SI_AMF_DT_LastVisitedEUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedUTRANCellInformation( SI_AMF_DT_LastVisitedUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedGERANCellInformation( SI_AMF_DT_LastVisitedGERANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedCellInformation( SI_AMF_DT_LastVisitedCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedCellItem( SI_AMF_DT_LastVisitedCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedPSCellList( SI_AMF_DT_LastVisitedPSCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedPSCellInformation_timeStay( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LastVisitedPSCellInformation( SI_AMF_DT_LastVisitedPSCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LocationReportingAdditionalInfo( uint8_t * eLocationReportingAdditionalInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReportArea( uint8_t * eReportArea,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LocationReportingRequestType( SI_AMF_DT_LocationReportingRequestType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LoggingInterval( uint8_t * eLoggingInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LoggingDuration( uint8_t * eLoggingDuration,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LoggedMDTTrigger( SI_AMF_DT_LoggedMDTTrigger ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LoggedMDTNr( SI_AMF_DT_LoggedMDTNr ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEM_Indication( uint8_t * eLTEM_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VehicleUE( uint8_t * eVehicleUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PedestrianUE( uint8_t * ePedestrianUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEV2XServicesAuthorized( SI_AMF_DT_LTEV2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEUESidelinkAggregateMaximumBitrate( SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEA2XServicesAuthorized_aerialUE( uint8_t * eLTEA2XServicesAuthorized_aerialUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTEA2XServicesAuthorized_aerialControllerUE( uint8_t * eLTEA2XServicesAuthorized_aerialControllerUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_LTE_A2X_ServicesAuthorized( SI_AMF_DT_LTE_A2X_ServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MaskedIMEISV( SI_AMF_DT_MaskedIMEISV ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MessageIdentifier( SI_AMF_DT_MessageIdentifier ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MaximumIntegrityProtectedDataRate( uint8_t * eMaximumIntegrityProtectedDataRate,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_AreaSessionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSCommServiceType( uint8_t * eMBSCommServiceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DataForwardingResponseMRBList( SI_AMF_DT_MBS_DataForwardingResponseMRBList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MRB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MRBProgressInformation_pDCP_SN_Length12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MRBProgressInformation_pDCP_SN_Length18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MRB_ProgressInformation( SI_AMF_DT_MRB_ProgressInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DataForwardingResponseMRBItem( SI_AMF_DT_MBS_DataForwardingResponseMRBItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_MappingandDataForwardingRequestList( SI_AMF_DT_MBS_MappingandDataForwardingRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_QoSFlowList( SI_AMF_DT_MBS_QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_MappingandDataForwardingRequestItem( SI_AMF_DT_MBS_MappingandDataForwardingRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_QoSFlowsToBeSetupList( SI_AMF_DT_MBS_QoSFlowsToBeSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NonDynamic5QIDescriptor( SI_AMF_DT_NonDynamic5QIDescriptor ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosCharacteristics( SI_AMF_DT_QosCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ReflectiveQosAttribute( uint8_t * eReflectiveQosAttribute,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowLevelQosParameters( SI_AMF_DT_QosFlowLevelQosParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_QoSFlowsToBeSetupItem( SI_AMF_DT_MBS_QoSFlowsToBeSetupItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceAreaCellList( SI_AMF_DT_MBS_ServiceAreaCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceAreaTAIList( SI_AMF_DT_MBS_ServiceAreaTAIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceAreaInformation( SI_AMF_DT_MBS_ServiceAreaInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceAreaInformationList( SI_AMF_DT_MBS_ServiceAreaInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceArea( SI_AMF_DT_MBS_ServiceArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ServiceAreaInformationItem( SI_AMF_DT_MBS_ServiceAreaInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionFailedtoSetupList( SI_AMF_DT_MBSSessionFailedtoSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionFailedtoSetupItem( SI_AMF_DT_MBSSessionFailedtoSetupItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ActiveSessionInformation_SourcetoTargetList( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ActiveSessionInformation_SourcetoTargetItem( SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ActiveSessionInformation_TargettoSourceList( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_ActiveSessionInformation_TargettoSourceItem( SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_AssistanceInformation( uint8_t * eMBS_AssistanceInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupOrModFailureTransfer( SI_AMF_DT_MBSSessionSetupOrModFailureTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupResponseList( SI_AMF_DT_MBSSessionSetupResponseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupResponseItem( SI_AMF_DT_MBSSessionSetupResponseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SupportedUETypeList( SI_AMF_DT_SupportedUETypeList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SupportedUEType( uint8_t * eSupportedUEType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionFSAIDList( SI_AMF_DT_MBS_SessionFSAIDList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionFSAID( SI_AMF_DT_MBS_SessionFSAID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionReleaseResponseTransfer( SI_AMF_DT_MBSSessionReleaseResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupOrModResponseTransfer( SI_AMF_DT_MBSSessionSetupOrModResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SupportIndicator( uint8_t * eMBS_SupportIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SharedNGU_MulticastTNLInformation( SI_AMF_DT_SharedNGU_MulticastTNLInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfo5GCList( SI_AMF_DT_MBS_SessionTNLInfo5GCList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfo5GC( SI_AMF_DT_MBS_SessionTNLInfo5GC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfo5GCItem( SI_AMF_DT_MBS_SessionTNLInfo5GCItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_SessionTNLInfoNGRANItem( SI_AMF_DT_MBS_SessionTNLInfoNGRANItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DistributionReleaseRequestTransfer( SI_AMF_DT_MBS_DistributionReleaseRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DistributionSetupRequestTransfer( SI_AMF_DT_MBS_DistributionSetupRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionStatus( uint8_t * eMBSSessionStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DistributionSetupResponseTransfer( SI_AMF_DT_MBS_DistributionSetupResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_DistributionSetupUnsuccessfulTransfer( SI_AMF_DT_MBS_DistributionSetupUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_UP_FailureIndication( uint8_t * eMBS_UP_FailureIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_UP_FailureIndicationList( SI_AMF_DT_MBS_UP_FailureIndicationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_NGUFailureIndication( SI_AMF_DT_MBS_NGUFailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_UP_FailureIndicationItem( SI_AMF_DT_MBS_UP_FailureIndicationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupRequestList( SI_AMF_DT_MBSSessionSetupRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetupRequestItem( SI_AMF_DT_MBSSessionSetupRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetuporModifyRequestList( SI_AMF_DT_MBSSessionSetuporModifyRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionSetuporModifyRequestItem( SI_AMF_DT_MBSSessionSetuporModifyRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionToReleaseList( SI_AMF_DT_MBSSessionToReleaseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBSSessionToReleaseItem( SI_AMF_DT_MBSSessionToReleaseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MicoAllPLMN( uint8_t * eMicoAllPLMN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedMobilityInformation( SI_AMF_DT_ExtendedMobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RATRestrictions( SI_AMF_DT_RATRestrictions ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ServiceAreaInformation( SI_AMF_DT_ServiceAreaInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobilityRestrictionList( SI_AMF_DT_MobilityRestrictionList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRANTraceID( SI_AMF_DT_NGRANTraceID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_AlignmentInfo( SI_AMF_DT_MDT_AlignmentInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDTPLMNList( SI_AMF_DT_MDTPLMNList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDTPLMNModificationList( SI_AMF_DT_MDTPLMNModificationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Activation( uint8_t * eMDT_Activation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDTModeNr( SI_AMF_DT_MDTModeNr ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Configuration_NR( SI_AMF_DT_MDT_Configuration_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDTModeEutra( SI_AMF_DT_MDTModeEutra ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Configuration_EUTRA( SI_AMF_DT_MDT_Configuration_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MDT_Configuration( SI_AMF_DT_MDT_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MN_only_MDT_collection( uint8_t * eMN_only_MDT_collection,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobileIAB_Authorized( uint8_t * eMobileIAB_Authorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobileIABNodeIndication( uint8_t * eMobileIABNodeIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MobileIAB_Supported( uint8_t * eMobileIAB_Supported,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MulticastSessionActivationRequestTransfer( SI_AMF_DT_MulticastSessionActivationRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MulticastSessionDeactivationRequestTransfer( SI_AMF_DT_MulticastSessionDeactivationRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MulticastGroupPagingAreaList( SI_AMF_DT_MulticastGroupPagingAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MBS_AreaTAIList( SI_AMF_DT_MBS_AreaTAIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MulticastGroupPagingArea( SI_AMF_DT_MulticastGroupPagingArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_PagingList( SI_AMF_DT_UE_PagingList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_MulticastGroupPagingAreaItem( SI_AMF_DT_MulticastGroupPagingAreaItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_PagingItem( SI_AMF_DT_UE_PagingItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_IncludeBeamMeasurementsIndication( uint8_t * eIncludeBeamMeasurementsIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M4ReportAmountMDT( uint8_t * eM4ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M5ReportAmountMDT( uint8_t * eM5ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M6ReportAmountMDT( uint8_t * eM6ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_M7ReportAmountMDT( uint8_t * eM7ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_N6JitterInformation_n6JitterLowerBound( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_N6JitterInformation_n6JitterUpperBound( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_N6JitterInformation( SI_AMF_DT_N6JitterInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NAS_PDU( SI_AMF_DT_NAS_PDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NASSecurityParametersFromNGRAN( SI_AMF_DT_NASSecurityParametersFromNGRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_DefaultPagingDRX( uint8_t * eNB_IoT_DefaultPagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_PagingDRX( uint8_t * eNB_IoT_PagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_Paging_eDRXCycle( uint8_t * eNB_IoT_Paging_eDRXCycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_Paging_TimeWindow( uint8_t * eNB_IoT_Paging_TimeWindow,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_Paging_eDRXInfo( SI_AMF_DT_NB_IoT_Paging_eDRXInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NB_IoT_UEPriority( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NetworkControlledRepeaterAuthorized( uint8_t * eNetworkControlledRepeaterAuthorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NetworkInstance( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NewSecurityContextInd( uint8_t * eNewSecurityContextInd,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NextHopChainingCount( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationRequestList( SI_AMF_DT_NGAPIESupportInformationRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationRequestItem( SI_AMF_DT_NGAPIESupportInformationRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationResponseList( SI_AMF_DT_NGAPIESupportInformationResponseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo( uint8_t * eNGAPIESupportInformationResponseItem_ngap_ProtocolIESupportInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo( uint8_t * eNGAPIESupportInformationResponseItem_ngap_ProtocolIEPresenceInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGAPIESupportInformationResponseItem( SI_AMF_DT_NGAPIESupportInformationResponseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotifySourceNGRANNode( uint8_t * eNotifySourceNGRANNode,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_TNLAssociationToRemoveList( SI_AMF_DT_NGRAN_TNLAssociationToRemoveList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NGRAN_TNLAssociationToRemoveItem( SI_AMF_DT_NGRAN_TNLAssociationToRemoveItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NoPDUSessionIndication( uint8_t * eNoPDUSessionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotAllowedTACs( SI_AMF_DT_NotAllowedTACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NotificationCause( uint8_t * eNotificationCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NPN_AccessInformation( SI_AMF_DT_NPN_AccessInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPN_MobilityInformation( SI_AMF_DT_SNPN_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PNI_NPN_MobilityInformation( SI_AMF_DT_PNI_NPN_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NPN_MobilityInformation( SI_AMF_DT_NPN_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NPN_PagingAssistanceInformation( SI_AMF_DT_NPN_PagingAssistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NPN_Support( SI_AMF_DT_NPN_Support ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_CGIListForWarning( SI_AMF_DT_NR_CGIListForWarning ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_Paging_eDRX_Cycle( uint8_t * eNR_Paging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_Paging_Time_Window( uint8_t * eNR_Paging_Time_Window,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_PagingeDRXInformation( SI_AMF_DT_NR_PagingeDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRencryptionAlgorithms( SI_AMF_DT_NRencryptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRintegrityProtectionAlgorithms( SI_AMF_DT_NRintegrityProtectionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRMobilityHistoryReport( SI_AMF_DT_NRMobilityHistoryReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRPPa_PDU( SI_AMF_DT_NRPPa_PDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TACListInNRNTN( SI_AMF_DT_TACListInNRNTN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRNTNTAIInformation( SI_AMF_DT_NRNTNTAIInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NumberOfBroadcastsRequested( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRFrequencyBand( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRFrequencyBandItem( SI_AMF_DT_NRFrequencyBandItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_PCI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRV2XServicesAuthorized( SI_AMF_DT_NRV2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRUESidelinkAggregateMaximumBitrate( SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NSAG_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRA2XServicesAuthorized_aerialUE( uint8_t * eNRA2XServicesAuthorized_aerialUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NRA2XServicesAuthorized_aerialControllerUE( uint8_t * eNRA2XServicesAuthorized_aerialControllerUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_NR_A2X_ServicesAuthorized( SI_AMF_DT_NR_A2X_ServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_OnboardingSupport( uint8_t * eOnboardingSupport,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_OverloadAction( uint8_t * eOverloadAction,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_OverloadResponse( SI_AMF_DT_OverloadResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_OverloadStartNSSAIList( SI_AMF_DT_OverloadStartNSSAIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceOverloadList( SI_AMF_DT_SliceOverloadList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TrafficLoadReductionIndication( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_OverloadStartNSSAIItem( SI_AMF_DT_OverloadStartNSSAIItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingAssisDataforCEcapabUE( SI_AMF_DT_PagingAssisDataforCEcapabUE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingCause( uint8_t * ePagingCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingCauseIndicationForVoiceService( uint8_t * ePagingCauseIndicationForVoiceService,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingOrigin( uint8_t * ePagingOrigin,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionForPagingList( SI_AMF_DT_PDUSessionForPagingList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPolicyDifferentiation( SI_AMF_DT_PagingPolicyDifferentiation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPolicyDifferentiationList( SI_AMF_DT_PagingPolicyDifferentiationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionForPagingItem( SI_AMF_DT_PDUSessionForPagingItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPolicyDifferentiationItem_dl_DataSize( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPolicyIndicator( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPolicyDifferentiationItem( SI_AMF_DT_PagingPolicyDifferentiationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingPriority( uint8_t * ePagingPriority,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PagingProbabilityInformation( uint8_t * ePagingProbabilityInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ParentTImeSource( uint8_t * eParentTImeSource,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Partially_Allowed_NSSAI( SI_AMF_DT_Partially_Allowed_NSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PartiallyAllowedNSSAI_Item( SI_AMF_DT_PartiallyAllowedNSSAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecurityIndication( SI_AMF_DT_SecurityIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PathSwitchRequestAcknowledgeTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PathSwitchRequestSetupFailedTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserPlaneSecurityInformation( SI_AMF_DT_UserPlaneSecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAcceptedList( SI_AMF_DT_QosFlowAcceptedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PathSwitchRequestTransfer( SI_AMF_DT_PathSwitchRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PathSwitchRequestUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PC5QoSFlowList( SI_AMF_DT_PC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PC5QoSParameters( SI_AMF_DT_PC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PC5FlowBitRates( SI_AMF_DT_PC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PC5QoSFlowItem( SI_AMF_DT_PC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PrivacyIndicator( uint8_t * ePrivacyIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionAggregateMaximumBitRate( SI_AMF_DT_PDUSessionAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionPairID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceAdmittedList( SI_AMF_DT_PDUSessionResourceAdmittedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceAdmittedItem_handoverRequestAcknowledgeTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceAdmittedItem( SI_AMF_DT_PDUSessionResourceAdmittedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyListModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm_pDUSessionResourceModifyIndicationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyItemModCfm( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModCfm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyListModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes_pDUSessionResourceModifyUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToModifyItemModRes( SI_AMF_DT_PDUSessionResourceFailedToModifyItemModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToResumeListRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToResumeItemRESReq( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToResumeListRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToResumeItemRESRes( SI_AMF_DT_PDUSessionResourceFailedToResumeItemRESRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupListCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail_pDUSessionResourceSetupUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemCxtFail( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtFail ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupListCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes_pDUSessionResourceSetupUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemCxtRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupListHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck_handoverResourceAllocationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemHOAck( SI_AMF_DT_PDUSessionResourceFailedToSetupItemHOAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupListPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq_pathSwitchRequestSetupFailedTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemPSReq( SI_AMF_DT_PDUSessionResourceFailedToSetupItemPSReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupListSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes_pDUSessionResourceSetupUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceFailedToSetupItemSURes( SI_AMF_DT_PDUSessionResourceFailedToSetupItemSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceHandoverList( SI_AMF_DT_PDUSessionResourceHandoverList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceHandoverItem_handoverCommandTransfer( SI_AMF_DT_PDUSessionResourceHandoverItem_handoverCommandTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceHandoverItem( SI_AMF_DT_PDUSessionResourceHandoverItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceInformationList( SI_AMF_DT_PDUSessionResourceInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowInformationList( SI_AMF_DT_QosFlowInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceInformationItem( SI_AMF_DT_PDUSessionResourceInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceListCxtRelCpl( SI_AMF_DT_PDUSessionResourceListCxtRelCpl ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceItemCxtRelCpl( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceListCxtRelReq( SI_AMF_DT_PDUSessionResourceListCxtRelReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceItemCxtRelReq( SI_AMF_DT_PDUSessionResourceItemCxtRelReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceListHORqd( SI_AMF_DT_PDUSessionResourceListHORqd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceItemHORqd_handoverRequiredTransfer( SI_AMF_DT_PDUSessionResourceItemHORqd_handoverRequiredTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceItemHORqd( SI_AMF_DT_PDUSessionResourceItemHORqd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionListMTCommHReq( SI_AMF_DT_PDUSessionListMTCommHReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionListMTCommHReq_Item( SI_AMF_DT_PDUSessionListMTCommHReq_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowModifyConfirmList( SI_AMF_DT_QosFlowModifyConfirmList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UPTransportLayerInformationPairList( SI_AMF_DT_UPTransportLayerInformationPairList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyConfirmTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyIndicationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAddOrModifyResponseList( SI_AMF_DT_QosFlowAddOrModifyResponseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowPerTNLInformationList( SI_AMF_DT_QosFlowPerTNLInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowPerTNLInformation( SI_AMF_DT_QosFlowPerTNLInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyIndicationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyListModCfm( SI_AMF_DT_PDUSessionResourceModifyListModCfm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModCfm_pDUSessionResourceModifyConfirmTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModCfm( SI_AMF_DT_PDUSessionResourceModifyItemModCfm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyListModInd( SI_AMF_DT_PDUSessionResourceModifyListModInd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModInd_pDUSessionResourceModifyIndicationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModInd( SI_AMF_DT_PDUSessionResourceModifyItemModInd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyListModReq( SI_AMF_DT_PDUSessionResourceModifyListModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModReq_pDUSessionResourceModifyRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModReq( SI_AMF_DT_PDUSessionResourceModifyItemModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyListModRes( SI_AMF_DT_PDUSessionResourceModifyListModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer( SI_AMF_DT_PDUSessionResourceModifyItemModRes_pDUSessionResourceModifyResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyItemModRes( SI_AMF_DT_PDUSessionResourceModifyItemModRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceModifyUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceModifyUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceNotifyList( SI_AMF_DT_PDUSessionResourceNotifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyItem_pDUSessionResourceNotifyTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceNotifyItem( SI_AMF_DT_PDUSessionResourceNotifyItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceNotifyReleasedTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserPlaneErrorIndicator( uint8_t * eUserPlaneErrorIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowNotifyList( SI_AMF_DT_QosFlowNotifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceNotifyTransfer( SI_AMF_DT_PDUSessionResourceNotifyTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceReleaseCommandTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedListNot( SI_AMF_DT_PDUSessionResourceReleasedListNot ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemNot_pDUSessionResourceNotifyReleasedTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemNot( SI_AMF_DT_PDUSessionResourceReleasedItemNot ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedListPSAck( SI_AMF_DT_PDUSessionResourceReleasedListPSAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck_pathSwitchRequestUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemPSAck( SI_AMF_DT_PDUSessionResourceReleasedItemPSAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedListPSFail( SI_AMF_DT_PDUSessionResourceReleasedListPSFail ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail_pathSwitchRequestUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemPSFail( SI_AMF_DT_PDUSessionResourceReleasedItemPSFail ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedListRelRes( SI_AMF_DT_PDUSessionResourceReleasedListRelRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes_pDUSessionResourceReleaseResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleasedItemRelRes( SI_AMF_DT_PDUSessionResourceReleasedItemRelRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceReleaseResponseTransfer( SI_AMF_DT_PDUSessionResourceReleaseResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeListRESReq( SI_AMF_DT_PDUSessionResourceResumeListRESReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESReq_uEContextResumeRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeItemRESReq( SI_AMF_DT_PDUSessionResourceResumeItemRESReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeListRESRes( SI_AMF_DT_PDUSessionResourceResumeListRESRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer( SI_AMF_DT_PDUSessionResourceResumeItemRESRes_uEContextResumeResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceResumeItemRESRes( SI_AMF_DT_PDUSessionResourceResumeItemRESRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSecondaryRATUsageList( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem_secondaryRATDataUsageReportTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSecondaryRATUsageItem( SI_AMF_DT_PDUSessionResourceSecondaryRATUsageItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupListCxtReq( SI_AMF_DT_PDUSessionResourceSetupListCxtReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq_pDUSessionResourceSetupRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemCxtReq( SI_AMF_DT_PDUSessionResourceSetupItemCxtReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupListCxtRes( SI_AMF_DT_PDUSessionResourceSetupListCxtRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes_pDUSessionResourceSetupResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemCxtRes( SI_AMF_DT_PDUSessionResourceSetupItemCxtRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupListHOReq( SI_AMF_DT_PDUSessionResourceSetupListHOReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemHOReq_handoverRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemHOReq( SI_AMF_DT_PDUSessionResourceSetupItemHOReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupListSUReq( SI_AMF_DT_PDUSessionResourceSetupListSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSUReq_pDUSessionResourceSetupRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemSUReq( SI_AMF_DT_PDUSessionResourceSetupItemSUReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupListSURes( SI_AMF_DT_PDUSessionResourceSetupListSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupItemSURes_pDUSessionResourceSetupResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupItemSURes( SI_AMF_DT_PDUSessionResourceSetupItemSURes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupResponseTransfer( SI_AMF_DT_PDUSessionResourceSetupResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSetupUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceSetupUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSuspendListSUSReq( SI_AMF_DT_PDUSessionResourceSuspendListSUSReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq_uEContextSuspendRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSuspendItemSUSReq( SI_AMF_DT_PDUSessionResourceSuspendItemSUSReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSwitchedList( SI_AMF_DT_PDUSessionResourceSwitchedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer( SI_AMF_DT_PDUSessionResourceSwitchedItem_pathSwitchRequestAcknowledgeTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceSwitchedItem( SI_AMF_DT_PDUSessionResourceSwitchedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToBeSwitchedDLList( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem_pathSwitchRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToBeSwitchedDLItem( SI_AMF_DT_PDUSessionResourceToBeSwitchedDLItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseListHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd_handoverPreparationUnsuccessfulTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseItemHOCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemHOCmd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseListRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd_pDUSessionResourceReleaseCommandTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionResourceToReleaseItemRelCmd( SI_AMF_DT_PDUSessionResourceToReleaseItemRelCmd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionType( uint8_t * ePDUSessionType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionUsageReport_rATType( uint8_t * ePDUSessionUsageReport_rATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReportList( SI_AMF_DT_VolumeTimedReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSessionUsageReport( SI_AMF_DT_PDUSessionUsageReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUsetQoSInformation_pduSetIntegratedHandlingInformation( uint8_t * ePDUsetQoSInformation_pduSetIntegratedHandlingInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUsetQoSInformation( SI_AMF_DT_PDUsetQoSInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUsetQoSParameters( SI_AMF_DT_PDUsetQoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PDUSetbasedHandlingIndicator( uint8_t * ePDUSetbasedHandlingIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PEIPSassistanceInformation( SI_AMF_DT_PEIPSassistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Periodicity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PeriodicityBound( SI_AMF_DT_PeriodicityBound ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_AllowedPeriodicityList( SI_AMF_DT_AllowedPeriodicityList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PeriodicityList( SI_AMF_DT_PeriodicityList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PeriodicityRange( SI_AMF_DT_PeriodicityRange ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PLMNSupportList( SI_AMF_DT_PLMNSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PLMNSupportItem( SI_AMF_DT_PLMNSupportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PWSFailedCellIDList( SI_AMF_DT_PWSFailedCellIDList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PNI_NPN_AreaScopeofMDT( SI_AMF_DT_PNI_NPN_AreaScopeofMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_PNI_NPNBasedMDT( SI_AMF_DT_PNI_NPNBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasInfoList( SI_AMF_DT_UEAppLayerMeasInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QMCConfigInfo( SI_AMF_DT_QMCConfigInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoEReferenceList( SI_AMF_DT_QoEReferenceList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QMCDeactivation( SI_AMF_DT_QMCDeactivation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoEReference( SI_AMF_DT_QoEReference ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoERVQoEReportingPaths_qoEReportingPath( uint8_t * eQoERVQoEReportingPaths_qoEReportingPath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoERVQoEReportingPaths_rVQoEReportingPath( uint8_t * eQoERVQoEReportingPaths_rVQoEReportingPath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoERVQoEReportingPaths( SI_AMF_DT_QoERVQoEReportingPaths ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAcceptedItem( SI_AMF_DT_QosFlowAcceptedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAdditionalInfoListRelCom( SI_AMF_DT_QosFlowAdditionalInfoListRelCom ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TLContainer( SI_AMF_DT_TLContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAdditionalInfoItemRelCom( SI_AMF_DT_QosFlowAdditionalInfoItemRelCom ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAdditionalInfoListRelRes( SI_AMF_DT_QosFlowAdditionalInfoListRelRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAdditionalInfoItemRelRes( SI_AMF_DT_QosFlowAdditionalInfoItemRelRes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAddOrModifyRequestList( SI_AMF_DT_QosFlowAddOrModifyRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAddOrModifyRequestItem( SI_AMF_DT_QosFlowAddOrModifyRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowAddOrModifyResponseItem( SI_AMF_DT_QosFlowAddOrModifyResponseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowFeedbackList( SI_AMF_DT_QosFlowFeedbackList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UpdateFeedback( SI_AMF_DT_UpdateFeedback ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowFeedbackItem( SI_AMF_DT_QosFlowFeedbackItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowInformationItem( SI_AMF_DT_QosFlowInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosMonitoringRequest( uint8_t * eQosMonitoringRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosMonitoringReportingFrequency( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowList( SI_AMF_DT_QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowWithCauseItem( SI_AMF_DT_QosFlowWithCauseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowModifyConfirmItem( SI_AMF_DT_QosFlowModifyConfirmItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowNotifyItem( SI_AMF_DT_QosFlowNotifyItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowParametersList( SI_AMF_DT_QosFlowParametersList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowParametersItem( SI_AMF_DT_QosFlowParametersItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowPerTNLInformationItem( SI_AMF_DT_QosFlowPerTNLInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowSetupRequestList( SI_AMF_DT_QosFlowSetupRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowSetupRequestItem( SI_AMF_DT_QosFlowSetupRequestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowItemWithDataForwarding( SI_AMF_DT_QosFlowItemWithDataForwarding ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QosFlowToBeForwardedItem( SI_AMF_DT_QosFlowToBeForwardedItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowTSCList( SI_AMF_DT_QoSFlowTSCList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TSCFeedbackInformation_burstArrivalTimeOffset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TSCFeedbackInformation( SI_AMF_DT_TSCFeedbackInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TSCTrafficCharacteristicsFeedback( SI_AMF_DT_TSCTrafficCharacteristicsFeedback ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowTSCItem( SI_AMF_DT_QoSFlowTSCItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowsUsageReportList( SI_AMF_DT_QoSFlowsUsageReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowsUsageReportItem_rATType( uint8_t * eQoSFlowsUsageReportItem_rATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_QoSFlowsUsageReport_Item( SI_AMF_DT_QoSFlowsUsageReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANfeedbacktype_proactive( SI_AMF_DT_RANfeedbacktype_proactive ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANfeedbacktypereactive_capabilityForBATAdaptation( uint8_t * eRANfeedbacktypereactive_capabilityForBATAdaptation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANfeedbacktype_reactive( SI_AMF_DT_RANfeedbacktype_reactive ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANfeedbacktype( SI_AMF_DT_RANfeedbacktype ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANNodeName( SI_AMF_DT_RANNodeName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANPagingPriority( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANStatusTransfer_TransparentContainer( SI_AMF_DT_RANStatusTransfer_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTimingSynchronisationStatusInfo_synchronisationState( uint8_t * eRANTimingSynchronisationStatusInfo_synchronisationState,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTimingSynchronisationStatusInfo_traceabletoUTC( uint8_t * eRANTimingSynchronisationStatusInfo_traceabletoUTC,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTimingSynchronisationStatusInfo_traceabletoGNSS( uint8_t * eRANTimingSynchronisationStatusInfo_traceabletoGNSS,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTimingSynchronisationStatusInfo_clockFrequencyStability( SI_AMF_DT_RANTimingSynchronisationStatusInfo_clockFrequencyStability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTimingSynchronisationStatusInfo( SI_AMF_DT_RANTimingSynchronisationStatusInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RAN_TSSRequestType( uint8_t * eRAN_TSSRequestType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTSSCellList( SI_AMF_DT_RANTSSCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RAN_TSSScope( SI_AMF_DT_RAN_TSSScope ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RANTSSCellItem( SI_AMF_DT_RANTSSCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RAN_UE_NGAP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RAT_Information( uint8_t * eRAT_Information,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RATRestrictionInformation( SI_AMF_DT_RATRestrictionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RATRestrictions_Item( SI_AMF_DT_RATRestrictions_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedCellItem_timeStayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedCellItem( SI_AMF_DT_RecommendedCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RecommendedRANNodeItem( SI_AMF_DT_RecommendedRANNodeItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RedCapIndication( uint8_t * eRedCapIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RedirectionVoiceFallback( uint8_t * eRedirectionVoiceFallback,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RSN( uint8_t * eRSN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RedundantPDUSessionInformation( SI_AMF_DT_RedundantPDUSessionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RedundantQosFlowIndicator( uint8_t * eRedundantQosFlowIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RelativeAMFCapacity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RepetitionPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ResetAll( uint8_t * eResetAll,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ExtendedReportIntervalMDT( uint8_t * eExtendedReportIntervalMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_associatedLogicalNG_connectionList( SI_AMF_DT_UE_associatedLogicalNG_connectionList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ResetType( SI_AMF_DT_ResetType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RGLevelWirelineAccessCharacteristics( SI_AMF_DT_RGLevelWirelineAccessCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RNC_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RoutingID( SI_AMF_DT_RoutingID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RRCContainer( SI_AMF_DT_RRCContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RRCEstablishmentCause( uint8_t * eRRCEstablishmentCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RRCInactiveTransitionReportRequest( uint8_t * eRRCInactiveTransitionReportRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RRCState( uint8_t * eRRCState,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetRANNodeID_RIM( SI_AMF_DT_TargetRANNodeID_RIM ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceRANNodeID( SI_AMF_DT_SourceRANNodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_GNBSetID( SI_AMF_DT_GNBSetID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RIMInformation_rIM_RSDetection( uint8_t * eRIMInformation_rIM_RSDetection,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RIMInformation( SI_AMF_DT_RIMInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RIMInformationTransfer( SI_AMF_DT_RIMInformationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RSPPQoSFlowList( SI_AMF_DT_RSPPQoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RSPPFlowBitRates( SI_AMF_DT_RSPPFlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RSPPQoSFlowItem( SI_AMF_DT_RSPPQoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ScheduledCommunicationTime_dayofWeek( SI_AMF_DT_ScheduledCommunicationTime_dayofWeek ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ScheduledCommunicationTime_timeofDayStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ScheduledCommunicationTime_timeofDayEnd( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ScheduledCommunicationTime( SI_AMF_DT_ScheduledCommunicationTime ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SCTP_TLAs( SI_AMF_DT_SCTP_TLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecondaryRATUsageInformation( SI_AMF_DT_SecondaryRATUsageInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecondaryRATDataUsageReportTransfer( SI_AMF_DT_SecondaryRATDataUsageReportTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecurityKey( SI_AMF_DT_SecurityKey ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SecurityContext( SI_AMF_DT_SecurityContext ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorNameConfig_uncompensatedBarometricConfig( uint8_t * eSensorNameConfig_uncompensatedBarometricConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorNameConfig_ueSpeedConfig( uint8_t * eSensorNameConfig_ueSpeedConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorNameConfig_ueOrientationConfig( uint8_t * eSensorNameConfig_ueOrientationConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorNameConfig( SI_AMF_DT_SensorNameConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SensorMeasConfigNameItem( SI_AMF_DT_SensorMeasConfigNameItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SerialNumber( SI_AMF_DT_SerialNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ServedGUAMIList( SI_AMF_DT_ServedGUAMIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ServedGUAMIItem( SI_AMF_DT_ServedGUAMIItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ServiceAreaInformation_Item( SI_AMF_DT_ServiceAreaInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ServiceType( uint8_t * eServiceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SgNB_UE_X2AP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceOverloadItem( SI_AMF_DT_SliceOverloadItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceSupportItem( SI_AMF_DT_SliceSupportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceSupportListQMC( SI_AMF_DT_SliceSupportListQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SliceSupportQMC_Item( SI_AMF_DT_SliceSupportQMC_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetRANNodeID_SON( SI_AMF_DT_TargetRANNodeID_SON ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SONInformationRequest( uint8_t * eSONInformationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XnTLAs( SI_AMF_DT_XnTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XnExtTLAs( SI_AMF_DT_XnExtTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XnTNLConfigurationInfo( SI_AMF_DT_XnTNLConfigurationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SONInformationReply( SI_AMF_DT_SONInformationReply ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SONInformation( SI_AMF_DT_SONInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SONConfigurationTransfer( SI_AMF_DT_SONConfigurationTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SONInformationReport( SI_AMF_DT_SONInformationReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNCellIdListforMDT( SI_AMF_DT_SNPNCellIdListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPN_CellBasedMDT( SI_AMF_DT_SNPN_CellBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNCellIdListforMDTItem( SI_AMF_DT_SNPNCellIdListforMDTItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNTAIListforMDT( SI_AMF_DT_SNPNTAIListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPN_TAIBasedMDT( SI_AMF_DT_SNPN_TAIBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNTAIListforMDTItem( SI_AMF_DT_SNPNTAIListforMDTItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNListforMDT( SI_AMF_DT_SNPNListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPN_BasedMDT( SI_AMF_DT_SNPN_BasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SNPNListforMDTItem( SI_AMF_DT_SNPNListforMDTItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulHandoverReportList( SI_AMF_DT_SuccessfulHandoverReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulHandoverReportItem_successfulHOReportContainer( SI_AMF_DT_SuccessfulHandoverReportItem_successfulHOReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulHandoverReport_Item( SI_AMF_DT_SuccessfulHandoverReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulPSCellChangeReportList( SI_AMF_DT_SuccessfulPSCellChangeReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer( SI_AMF_DT_SuccessfulPSCellChangeReportItem_successfulPSCellChangeReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuccessfulPSCellChangeReport_Item( SI_AMF_DT_SuccessfulPSCellChangeReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEHistoryInformation( SI_AMF_DT_UEHistoryInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer( SI_AMF_DT_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceNodeID( SI_AMF_DT_SourceNodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceToTarget_TransparentContainer( SI_AMF_DT_SourceToTarget_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ConfiguredNSSAI( SI_AMF_DT_ConfiguredNSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RejectedNSSAIinPLMN( SI_AMF_DT_RejectedNSSAIinPLMN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_RejectedNSSAIinTA( SI_AMF_DT_RejectedNSSAIinTA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SourceToTarget_AMFInformationReroute( SI_AMF_DT_SourceToTarget_AMFInformationReroute ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SRVCCOperationPossible( uint8_t * eSRVCCOperationPossible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SupportedTAList( SI_AMF_DT_SupportedTAList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SupportedTAItem( SI_AMF_DT_SupportedTAItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SuspendIndicator( uint8_t * eSuspendIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Suspend_Request_Indication( uint8_t * eSuspend_Request_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_Suspend_Response_Indication( uint8_t * eSuspend_Response_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SurvivalTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SLPositioningRangingAuthorized( uint8_t * eSLPositioningRangingAuthorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SLPositioningRangingQoSParameters( SI_AMF_DT_SLPositioningRangingQoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_SLPositioningRangingServiceInfo( SI_AMF_DT_SLPositioningRangingServiceInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBroadcastEUTRA_Item( SI_AMF_DT_TAIBroadcastEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIBroadcastNR_Item( SI_AMF_DT_TAIBroadcastNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAICancelledEUTRA_Item( SI_AMF_DT_TAICancelledEUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAICancelledNR_Item( SI_AMF_DT_TAICancelledNR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForInactiveItem( SI_AMF_DT_TAIListForInactiveItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForPaging( SI_AMF_DT_TAIListForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForPagingItem( SI_AMF_DT_TAIListForPagingItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForRestart( SI_AMF_DT_TAIListForRestart ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAIListForWarning( SI_AMF_DT_TAIListForWarning ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAINSAGSupportList( SI_AMF_DT_TAINSAGSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TAINSAGSupportItem( SI_AMF_DT_TAINSAGSupportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargeteNB_ID( SI_AMF_DT_TargeteNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetHomeENBID_homeENB_ID( SI_AMF_DT_TargetHomeENBID_homeENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetHomeENB_ID( SI_AMF_DT_TargetHomeENB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetRANNodeID( SI_AMF_DT_TargetRANNodeID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetID( SI_AMF_DT_TargetID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer( SI_AMF_DT_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetNSSAI( SI_AMF_DT_TargetNSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetNSSAI_Item( SI_AMF_DT_TargetNSSAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetNSSAIInformation( SI_AMF_DT_TargetNSSAIInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetRNC_ID( SI_AMF_DT_TargetRNC_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargetToSource_TransparentContainer( SI_AMF_DT_TargetToSource_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TargettoSource_Failure_TransparentContainer( SI_AMF_DT_TargettoSource_Failure_TransparentContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverWindowStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_HandoverWindowDuration( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeBasedHandoverInformation( SI_AMF_DT_TimeBasedHandoverInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimerApproachForGUAMIRemoval( uint8_t * eTimerApproachForGUAMIRemoval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeSinceFailure( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeStamp( SI_AMF_DT_TimeStamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeSyncAssistanceInfo_timeDistributionIndication( uint8_t * eTimeSyncAssistanceInfo_timeDistributionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeSyncAssistanceInfo_uUTimeSyncErrorBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeSyncAssistanceInfo( SI_AMF_DT_TimeSyncAssistanceInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TimeToWait( uint8_t * eTimeToWait,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNAP_ID( SI_AMF_DT_TNAP_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNLAssociationList( SI_AMF_DT_TNLAssociationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TNLAssociationItem( SI_AMF_DT_TNLAssociationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TraceDepth( uint8_t * eTraceDepth,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TraceActivation( SI_AMF_DT_TraceActivation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TWAP_ID( SI_AMF_DT_TWAP_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TSCAssistanceInformation( SI_AMF_DT_TSCAssistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_TSCTrafficCharacteristics( SI_AMF_DT_TSCTrafficCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAggregateMaximumBitRate( SI_AMF_DT_UEAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasConfigInfo_qoEMeasurementStatus( uint8_t * eUEAppLayerMeasConfigInfo_qoEMeasurementStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig( SI_AMF_DT_UEAppLayerMeasConfigInfo_containerForAppLayerMeasConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasConfigInfo_measConfigAppLayerID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasConfigInfo( SI_AMF_DT_UEAppLayerMeasConfigInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEAppLayerMeasInfoItem( SI_AMF_DT_UEAppLayerMeasInfoItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_associatedLogicalNG_connectionItem( SI_AMF_DT_UE_associatedLogicalNG_connectionItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UECapabilityInfoRequest( uint8_t * eUECapabilityInfoRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEContextRequest( uint8_t * eUEContextRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEContextResumeRequestTransfer( SI_AMF_DT_UEContextResumeRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEContextResumeResponseTransfer( SI_AMF_DT_UEContextResumeResponseTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEContextSuspendRequestTransfer( SI_AMF_DT_UEContextSuspendRequestTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEDifferentiationInfo_periodicCommunicationIndicator( uint8_t * eUEDifferentiationInfo_periodicCommunicationIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEDifferentiationInfo_periodicTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEDifferentiationInfo_stationaryIndication( uint8_t * eUEDifferentiationInfo_stationaryIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEDifferentiationInfo_trafficProfile( uint8_t * eUEDifferentiationInfo_trafficProfile,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEDifferentiationInfo_batteryIndication( uint8_t * eUEDifferentiationInfo_batteryIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_DifferentiationInfo( SI_AMF_DT_UE_DifferentiationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEHistoryInformationFromTheUE( SI_AMF_DT_UEHistoryInformationFromTheUE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_NGAP_ID_pair( SI_AMF_DT_UE_NGAP_ID_pair ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_NGAP_IDs( SI_AMF_DT_UE_NGAP_IDs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEPagingIdentity( SI_AMF_DT_UEPagingIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEPresence( uint8_t * eUEPresence,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEPresenceInAreaOfInterestList( SI_AMF_DT_UEPresenceInAreaOfInterestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UEPresenceInAreaOfInterestItem( SI_AMF_DT_UEPresenceInAreaOfInterestItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapability( SI_AMF_DT_UERadioCapability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapabilityForPagingOfNR( SI_AMF_DT_UERadioCapabilityForPagingOfNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapabilityForPagingOfEUTRA( SI_AMF_DT_UERadioCapabilityForPagingOfEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapabilityForPaging( SI_AMF_DT_UERadioCapabilityForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapabilityForPagingOfNB_IoT( SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERadioCapabilityID( SI_AMF_DT_UERadioCapabilityID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UERetentionInformation( uint8_t * eUERetentionInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UESecurityCapabilities( SI_AMF_DT_UESecurityCapabilities ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UESliceMaximumBitRateList( SI_AMF_DT_UESliceMaximumBitRateList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UESliceMaximumBitRateItem( SI_AMF_DT_UESliceMaximumBitRateItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UE_UP_CIoT_Support( uint8_t * eUE_UP_CIoT_Support,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UL_NAS_MAC( SI_AMF_DT_UL_NAS_MAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UL_NAS_Count( SI_AMF_DT_UL_NAS_Count ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UL_CP_SecurityInformation( SI_AMF_DT_UL_CP_SecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UL_NGU_UP_TNLModifyList( SI_AMF_DT_UL_NGU_UP_TNLModifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UL_NGU_UP_TNLModifyItem( SI_AMF_DT_UL_NGU_UP_TNLModifyItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UnavailableGUAMIList( SI_AMF_DT_UnavailableGUAMIList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UnavailableGUAMIItem( SI_AMF_DT_UnavailableGUAMIItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_ULForwarding( uint8_t * eULForwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UPTransportLayerInformationList( SI_AMF_DT_UPTransportLayerInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UPTransportLayerInformationItem( SI_AMF_DT_UPTransportLayerInformationItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UPTransportLayerInformationPairItem( SI_AMF_DT_UPTransportLayerInformationPairItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_URI_address( SI_AMF_DT_URI_address ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationEUTRA( SI_AMF_DT_UserLocationInformationEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationNR( SI_AMF_DT_UserLocationInformationNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationN3IWF_with_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_with_PortNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformation( SI_AMF_DT_UserLocationInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationN3IWF_without_PortNumber( SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationTNGF( SI_AMF_DT_UserLocationInformationTNGF ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationTWIF( SI_AMF_DT_UserLocationInformationTWIF ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserLocationInformationW_AGF( SI_AMF_DT_UserLocationInformationW_AGF ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserPlaneFailureType( uint8_t * eUserPlaneFailureType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserPlaneFailureIndication( SI_AMF_DT_UserPlaneFailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_UserPlaneFailureIndicationReport( uint8_t * eUserPlaneFailureIndicationReport,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReportItem_startTimeStamp( SI_AMF_DT_VolumeTimedReportItem_startTimeStamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReportItem_endTimeStamp( SI_AMF_DT_VolumeTimedReportItem_endTimeStamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReportItem_usageCountUL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReportItem_usageCountDL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_VolumeTimedReport_Item( SI_AMF_DT_VolumeTimedReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WarningAreaCoordinates( SI_AMF_DT_WarningAreaCoordinates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WarningAreaList( SI_AMF_DT_WarningAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WarningMessageContents( SI_AMF_DT_WarningMessageContents ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WarningSecurityInfo( SI_AMF_DT_WarningSecurityInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WarningType( SI_AMF_DT_WarningType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANName( SI_AMF_DT_WLANName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WLANMeasConfigNameItem( SI_AMF_DT_WLANMeasConfigNameItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_WUS_Assistance_Information( SI_AMF_DT_WUS_Assistance_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XnGTP_TLAs( SI_AMF_DT_XnGTP_TLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XnExtTLA_Item( SI_AMF_DT_XnExtTLA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_XrDeviceWith2Rx( uint8_t * eXrDeviceWith2Rx,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_amf_Decode_DefaultOctetString( SI_AMF_DT_DefaultOctetString ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// PDU-Message Dependencies List = 647
// dlist -> 1 - AdditionalDLUPTNLInformationForHOItem-ExtIEs
// dlist -> 2 - A2X-PC5-FlowBitRates-ExtIEs
// dlist -> 3 - A2X-PC5-QoS-Flow-Item-ExtIEs
// dlist -> 4 - A2X-PC5-QoS-Parameters-ExtIEs
// dlist -> 5 - AdditionalCancelledlocationReportingReferenceIDItem-ExtIEs
// dlist -> 6 - AllocationAndRetentionPriority-ExtIEs
// dlist -> 7 - AllowedNSSAI-Item-ExtIEs
// dlist -> 8 - Allowed-PNI-NPN-Item-ExtIEs
// dlist -> 9 - AlternativeQoSParaSetItem-ExtIEs
// dlist -> 10 - AMFPagingTarget-ExtIEs
// dlist -> 11 - AMF-TNLAssociationSetupItem-ExtIEs
// dlist -> 12 - AMF-TNLAssociationToAddItem-ExtIEs
// dlist -> 13 - AMF-TNLAssociationToRemoveItem-ExtIEs
// dlist -> 14 - AMF-TNLAssociationToUpdateItem-ExtIEs
// dlist -> 15 - AreaOfInterest-ExtIEs
// dlist -> 16 - AreaOfInterestCellItem-ExtIEs
// dlist -> 17 - AreaOfInterestItem-ExtIEs
// dlist -> 18 - AreaOfInterestRANNodeItem-ExtIEs
// dlist -> 19 - AreaOfInterestTAIItem-ExtIEs
// dlist -> 20 - AssistanceDataForPaging-ExtIEs
// dlist -> 21 - AssistanceDataForRecommendedCells-ExtIEs
// dlist -> 22 - AssociatedMBSQosFlowSetupRequestItem-ExtIEs
// dlist -> 23 - AssociatedMBSQosFlowSetuporModifyRequestItem-ExtIEs
// dlist -> 24 - AssociatedQosFlowItem-ExtIEs
// dlist -> 25 - AUN3DeviceAccessInfo-ExtIEs
// dlist -> 26 - AreaScopeOfMDT-NR-ExtIEs
// dlist -> 27 - AreaScopeOfMDT-EUTRA-ExtIEs
// dlist -> 28 - AreaScopeOfNeighCellsItem-ExtIEs
// dlist -> 29 - AreaScopeOfQMC-ExtIEs
// dlist -> 30 - AvailableRANVisibleQoEMetrics-ExtIEs
// dlist -> 31 - BeamMeasurementsReportConfiguration-ExtIEs
// dlist -> 32 - BeamMeasurementsReportQuantity-ExtIEs
// dlist -> 33 - BroadcastCancelledAreaList-ExtIEs
// dlist -> 34 - BroadcastCompletedAreaList-ExtIEs
// dlist -> 35 - BroadcastPLMNItem-ExtIEs
// dlist -> 36 - BroadcastTransportFailureTransfer-ExtIEs
// dlist -> 37 - BroadcastTransportRequestTransfer-ExtIEs
// dlist -> 38 - BroadcastTransportResponseTransfer-ExtIEs
// dlist -> 39 - BluetoothMeasurementConfiguration-ExtIEs
// dlist -> 40 - BluetoothMeasConfigNameItem-ExtIEs
// dlist -> 41 - BurstArrivalTimeWindow-ExtIEs
// dlist -> 42 - CandidateRelayUEInformationItem-ExtIEs
// dlist -> 43 - CancelledCellsInEAI-EUTRA-Item-ExtIEs
// dlist -> 44 - CancelledCellsInEAI-NR-Item-ExtIEs
// dlist -> 45 - CancelledCellsInTAI-EUTRA-Item-ExtIEs
// dlist -> 46 - CancelledCellsInTAI-NR-Item-ExtIEs
// dlist -> 47 - CandidateCellItem-ExtIEs
// dlist -> 48 - CandidateCell-ExtIEs
// dlist -> 49 - CandidateCellID-ExtIEs
// dlist -> 50 - CandidatePCI-ExtIEs
// dlist -> 51 - Cause-ExtIEs
// dlist -> 52 - Cell-CAGInformation-ExtIEs
// dlist -> 53 - CellIDBroadcastEUTRA-Item-ExtIEs
// dlist -> 54 - CellIDBroadcastNR-Item-ExtIEs
// dlist -> 55 - CellIDCancelledEUTRA-Item-ExtIEs
// dlist -> 56 - CellIDCancelledNR-Item-ExtIEs
// dlist -> 57 - CellIDListForRestart-ExtIEs
// dlist -> 58 - CellType-ExtIEs
// dlist -> 59 - ClockAccuracy-ExtIEs
// dlist -> 60 - ClockQualityAcceptanceIndication-ExtIEs
// dlist -> 61 - ClockQualityAcceptanceCriteria-ExtIEs
// dlist -> 62 - ClockQualityReportingControlInfo-ExtIEs
// dlist -> 63 - ClockQualityDetailLevel-ExtIEs
// dlist -> 64 - CNAssistedRANTuning-ExtIEs
// dlist -> 65 - CNTypeRestrictionsForEquivalentItem-ExtIEs
// dlist -> 66 - CompletedCellsInEAI-EUTRA-Item-ExtIEs
// dlist -> 67 - CompletedCellsInEAI-NR-Item-ExtIEs
// dlist -> 68 - CompletedCellsInTAI-EUTRA-Item-ExtIEs
// dlist -> 69 - CompletedCellsInTAI-NR-Item-ExtIEs
// dlist -> 70 - CoreNetworkAssistanceInformationForInactive-ExtIEs
// dlist -> 71 - COUNTValueForPDCP-SN12-ExtIEs
// dlist -> 72 - COUNTValueForPDCP-SN18-ExtIEs
// dlist -> 73 - CPTransportLayerInformation-ExtIEs
// dlist -> 74 - CriticalityDiagnostics-ExtIEs
// dlist -> 75 - CriticalityDiagnostics-IE-Item-ExtIEs
// dlist -> 76 - CellBasedMDT-NR-ExtIEs
// dlist -> 77 - CellBasedMDT-EUTRA-ExtIEs
// dlist -> 78 - CellBasedQMC-ExtIEs
// dlist -> 79 - CAGListforMDTItem-ExtIEs
// dlist -> 80 - DataForwardingResponseDRBItem-ExtIEs
// dlist -> 81 - DAPSRequestInfo-ExtIEs
// dlist -> 82 - DAPSResponseInfoItem-ExtIEs
// dlist -> 83 - DAPSResponseInfo-ExtIEs
// dlist -> 84 - DataForwardingResponseERABListItem-ExtIEs
// dlist -> 85 - DL-CP-SecurityInformation-ExtIEs
// dlist -> 86 - DRBsSubjectToStatusTransferItem-ExtIEs
// dlist -> 87 - DRBStatusDL-ExtIEs
// dlist -> 88 - DRBStatusDL12-ExtIEs
// dlist -> 89 - DRBStatusDL18-ExtIEs
// dlist -> 90 - DRBStatusUL-ExtIEs
// dlist -> 91 - DRBStatusUL12-ExtIEs
// dlist -> 92 - DRBStatusUL18-ExtIEs
// dlist -> 93 - DRBsToQosFlowsMappingItem-ExtIEs
// dlist -> 94 - Dynamic5QIDescriptor-ExtIEs
// dlist -> 95 - EarlyStatusTransfer-TransparentContainer-ExtIEs
// dlist -> 96 - ProcedureStageChoice-ExtIEs
// dlist -> 97 - DLDiscarding-ExtIEs
// dlist -> 98 - DRBsSubjectToDLDiscarding-Item-ExtIEs
// dlist -> 99 - DLCountChoice-ExtIEs
// dlist -> 100 - FirstDLCount-ExtIEs
// dlist -> 101 - DRBsSubjectToEarlyStatusTransfer-Item-ExtIEs
// dlist -> 102 - ECNMarkingorCongestionInformationReportingRequest-ExtIEs
// dlist -> 103 - ECNMarkingorCongestionInformationReportingStatus-Item-ExtIEs
// dlist -> 104 - EmergencyAreaIDBroadcastEUTRA-Item-ExtIEs
// dlist -> 105 - EmergencyAreaIDBroadcastNR-Item-ExtIEs
// dlist -> 106 - EmergencyAreaIDCancelledEUTRA-Item-ExtIEs
// dlist -> 107 - EmergencyAreaIDCancelledNR-Item-ExtIEs
// dlist -> 108 - EmergencyFallbackIndicator-ExtIEs
// dlist -> 109 - ENB-ID-ExtIEs
// dlist -> 110 - EndpointIPAddressAndPort-ExtIEs
// dlist -> 111 - EPS-TAI-ExtIEs
// dlist -> 112 - E-RABInformationItem-ExtIEs
// dlist -> 113 - EUTRA-CGI-ExtIEs
// dlist -> 114 - EUTRA-PagingeDRXInformation-ExtIEs
// dlist -> 115 - ExcessPacketDelayThresholdItem-ExtIEs
// dlist -> 116 - ExpectedUEActivityBehaviour-ExtIEs
// dlist -> 117 - ExpectedUEBehaviour-ExtIEs
// dlist -> 118 - ExpectedUEMovingTrajectoryItem-ExtIEs
// dlist -> 119 - Extended-AMFName-ExtIEs
// dlist -> 120 - Extended-RANNodeName-ExtIEs
// dlist -> 121 - ExtendedRATRestrictionInformation-ExtIEs
// dlist -> 122 - EventTrigger-ExtIEs
// dlist -> 123 - EventL1LoggedMDTConfig-ExtIEs
// dlist -> 124 - MeasurementThresholdL1LoggedMDT-ExtIEs
// dlist -> 125 - EquivalentSNPNsItem-ExtIEs
// dlist -> 126 - FailureIndication-ExtIEs
// dlist -> 127 - FiveGCAction-ExtIEs
// dlist -> 128 - FiveG-ProSeAuthorized-ExtIEs
// dlist -> 129 - FiveG-ProSePC5QoSParameters-ExtIEs
// dlist -> 130 - FiveGProSePC5QoSFlowItem-ExtIEs
// dlist -> 131 - FiveGProSePC5FlowBitRates-ExtIEs
// dlist -> 132 - FiveG-S-TMSI-ExtIEs
// dlist -> 133 - ForbiddenAreaInformation-Item-ExtIEs
// dlist -> 134 - FromEUTRANtoNGRAN-ExtIEs
// dlist -> 135 - FromNGRANtoEUTRAN-ExtIEs
// dlist -> 136 - GBR-QosInformation-ExtIEs
// dlist -> 137 - GlobalCable-ID-new-ExtIEs
// dlist -> 138 - GlobalENB-ID-ExtIEs
// dlist -> 139 - GlobalGNB-ID-ExtIEs
// dlist -> 140 - GlobalN3IWF-ID-ExtIEs
// dlist -> 141 - GlobalLine-ID-ExtIEs
// dlist -> 142 - GlobalNgENB-ID-ExtIEs
// dlist -> 143 - GlobalRANNodeID-ExtIEs
// dlist -> 144 - GlobalTNGF-ID-ExtIEs
// dlist -> 145 - GlobalTWIF-ID-ExtIEs
// dlist -> 146 - GlobalW-AGF-ID-ExtIEs
// dlist -> 147 - GNB-ID-ExtIEs
// dlist -> 148 - GTPTunnel-ExtIEs
// dlist -> 149 - GUAMI-ExtIEs
// dlist -> 150 - HandoverCommandTransfer-ExtIEs
// dlist -> 151 - HandoverPreparationUnsuccessfulTransfer-ExtIEs
// dlist -> 152 - HandoverRequestAcknowledgeTransfer-ExtIEs
// dlist -> 153 - HandoverRequiredTransfer-ExtIEs
// dlist -> 154 - HandoverResourceAllocationUnsuccessfulTransfer-ExtIEs
// dlist -> 155 - HFCNode-ID-new-ExtIEs
// dlist -> 156 - HLComActivate-ExtIEs
// dlist -> 157 - HLComDeactivate-ExtIEs
// dlist -> 158 - HOReport-ExtIEs
// dlist -> 159 - MobileIAB-MTUserLocationInformation-ExtIEs
// dlist -> 160 - InfoOnRecommendedCellsAndRANNodesForPaging-ExtIEs
// dlist -> 161 - ImmediateMDTNr-ExtIEs
// dlist -> 162 - InterSystemFailureIndication-ExtIEs
// dlist -> 163 - IntersystemSONConfigurationTransfer-ExtIEs
// dlist -> 164 - IntersystemSONTransferType-ExtIEs
// dlist -> 165 - IntersystemSONeNBID-ExtIEs
// dlist -> 166 - IntersystemSONNGRANnodeID-ExtIEs
// dlist -> 167 - IntersystemSONInformation-ExtIEs
// dlist -> 168 - IntersystemSONInformationRequest-ExtIEs
// dlist -> 169 - IntersystemCellActivationRequest-ExtIEs
// dlist -> 170 - IntersystemResourceStatusRequest-ExtIEs
// dlist -> 171 - ReportingSystem-ExtIEs
// dlist -> 172 - EUTRAN-ReportingSystemIEs-ExtIEs
// dlist -> 173 - NGRAN-ReportingSystemIEs-ExtIEs
// dlist -> 174 - EUTRAN-CellToReportItem-ExtIEs
// dlist -> 175 - NGRAN-CellToReportItem-ExtIEs
// dlist -> 176 - ReportType-ExtIEs
// dlist -> 177 - EventBasedReportingIEs-ExtIEs
// dlist -> 178 - PeriodicReportingIEs-ExtIEs
// dlist -> 179 - IntersystemSONInformationReply-ExtIEs
// dlist -> 180 - IntersystemCellActivationReply-ExtIEs
// dlist -> 181 - IntersystemResourceStatusReply-ExtIEs
// dlist -> 182 - IntersystemSONInformationReport-ExtIEs
// dlist -> 183 - IntersystemCellStateIndication-ExtIEs
// dlist -> 184 - NotificationCell-Item-ExtIEs
// dlist -> 185 - IntersystemResourceStatusReport-ExtIEs
// dlist -> 186 - ResourceStatusReportingSystem-ExtIEs
// dlist -> 187 - EUTRAN-ReportingStatusIEs-ExtIEs
// dlist -> 188 - EUTRAN-CellReportItem-ExtIEs
// dlist -> 189 - EUTRAN-CompositeAvailableCapacityGroup-ExtIEs
// dlist -> 190 - CompositeAvailableCapacity-ExtIEs
// dlist -> 191 - EUTRAN-RadioResourceStatus-ExtIEs
// dlist -> 192 - NGRAN-ReportingStatusIEs-ExtIEs
// dlist -> 193 - NGRAN-CellReportItem-ExtIEs
// dlist -> 194 - NGRAN-RadioResourceStatus-ExtIEs
// dlist -> 195 - InterSystemHOReport-ExtIEs
// dlist -> 196 - InterSystemHandoverReportType-ExtIEs
// dlist -> 197 - IntersystemMobilityFailureforVoiceFallback-ExtIEs
// dlist -> 198 - IntersystemUnnecessaryHO-ExtIEs
// dlist -> 199 - LAI-ExtIEs
// dlist -> 200 - LastVisitedCellInformation-ExtIEs
// dlist -> 201 - LastVisitedCellItem-ExtIEs
// dlist -> 202 - LastVisitedNGRANCellInformation-ExtIEs
// dlist -> 203 - LastVisitedPSCellInformation-ExtIEs
// dlist -> 204 - LocationReportingRequestType-ExtIEs
// dlist -> 205 - LoggedMDTNr-ExtIEs
// dlist -> 206 - LoggedMDTTrigger-ExtIEs
// dlist -> 207 - LTEV2XServicesAuthorized-ExtIEs
// dlist -> 208 - LTEUE-Sidelink-Aggregate-MaximumBitrates-ExtIEs
// dlist -> 209 - LTE-A2X-ServicesAuthorized-ExtIEs
// dlist -> 210 - MBS-DataForwardingResponseMRBItem-ExtIEs
// dlist -> 211 - MBS-MappingandDataForwardingRequestItem-ExtIEs
// dlist -> 212 - MRB-ProgressInformation-ExtIEs
// dlist -> 213 - MBS-QoSFlowsToBeSetupItem-ExtIEs
// dlist -> 214 - MBS-ServiceArea-ExtIEs
// dlist -> 215 - MBS-ServiceAreaInformationItem-ExtIEs
// dlist -> 216 - MBS-ServiceAreaInformation-ExtIEs
// dlist -> 217 - MBS-SessionID-ExtIEs
// dlist -> 218 - MBSSessionFailedtoSetupItem-ExtIEs
// dlist -> 219 - MBS-ActiveSessionInformation-SourcetoTargetItem-ExtIEs
// dlist -> 220 - MBS-ActiveSessionInformation-TargettoSourceItem-ExtIEs
// dlist -> 221 - MBSSessionSetupOrModFailureTransfer-ExtIEs
// dlist -> 222 - MBSSessionSetupResponseItem-ExtIEs
// dlist -> 223 - MBSSessionReleaseResponseTransfer-ExtIEs
// dlist -> 224 - MBSSessionSetupOrModResponseTransfer-ExtIEs
// dlist -> 225 - MBS-SessionTNLInfo5GC-ExtIEs
// dlist -> 226 - MBS-SessionTNLInfo5GCItem-ExtIEs
// dlist -> 227 - MBS-SessionTNLInfoNGRAN-ExtIEs
// dlist -> 228 - MBS-SessionTNLInfoNGRANItem-ExtIEs
// dlist -> 229 - MBS-DistributionReleaseRequesTransfer-ExtIEs
// dlist -> 230 - MBS-DistributionSetupRequestTransfer-ExtIEs
// dlist -> 231 - MBS-DistributionSetupResponseTransfer-ExtIEs
// dlist -> 232 - MBS-DistributionSetupUnsuccessfulTransfer-ExtIEs
// dlist -> 233 - MBS-NGUFailureIndication-ExtIEs
// dlist -> 234 - MBS-UP-FailureIndicationItem-ExtIEs
// dlist -> 235 - MBSSessionSetupRequestItem-ExtIEs
// dlist -> 236 - MBSSessionSetuporModifyRequestItem-ExtIEs
// dlist -> 237 - MBSSessionToReleaseItem-ExtIEs
// dlist -> 238 - MobilityRestrictionList-ExtIEs
// dlist -> 239 - MDT-AlignmentInfo-ExtIEs
// dlist -> 240 - MDT-Configuration-ExtIEs
// dlist -> 241 - MDT-Configuration-NR-ExtIEs
// dlist -> 242 - MDT-Configuration-EUTRA-ExtIEs
// dlist -> 243 - MDTModeNr-ExtIEs
// dlist -> 244 - MulticastSessionActivationRequestTransfer-ExtIEs
// dlist -> 245 - MulticastSessionDeactivationRequestTransfer-ExtIEs
// dlist -> 246 - MulticastGroupPagingAreaItem-ExtIEs
// dlist -> 247 - MulticastGroupPagingArea-ExtIEs
// dlist -> 248 - UE-PagingItem-ExtIEs
// dlist -> 249 - M1Configuration-ExtIEs
// dlist -> 250 - M1ThresholdEventA2-ExtIEs
// dlist -> 251 - M1ThresholdType-ExtIEs
// dlist -> 252 - M1PeriodicReporting-ExtIEs
// dlist -> 253 - M4Configuration-ExtIEs
// dlist -> 254 - M5Configuration-ExtIEs
// dlist -> 255 - M6Configuration-ExtIEs
// dlist -> 256 - M7Configuration-ExtIEs
// dlist -> 257 - MDT-Location-Info-ExtIEs
// dlist -> 258 - N3IWF-ID-ExtIEs
// dlist -> 259 - N6JitterInformation-ExtIEs
// dlist -> 260 - NB-IoT-Paging-eDRXInfo-ExtIEs
// dlist -> 261 - NGAPIESupportInformationRequestItem-ExtIEs
// dlist -> 262 - NGAPIESupportInformationResponseItem-ExtIEs
// dlist -> 263 - NgENB-ID-ExtIEs
// dlist -> 264 - NGRAN-CGI-ExtIEs
// dlist -> 265 - NGRAN-TNLAssociationToRemoveItem-ExtIEs
// dlist -> 266 - NonDynamic5QIDescriptor-ExtIEs
// dlist -> 267 - NPN-AccessInformation-ExtIEs
// dlist -> 268 - NPN-MobilityInformation-ExtIEs
// dlist -> 269 - NPN-PagingAssistanceInformation-ExtIEs
// dlist -> 270 - NPN-Support-ExtIEs
// dlist -> 271 - NR-CGI-ExtIEs
// dlist -> 272 - NR-PagingeDRXInformation-ExtIEs
// dlist -> 273 - NR-Paging-Long-eDRX-Information-for-RRC-INACTIVE-ExtIEs
// dlist -> 274 - NRNTNTAIInformation-ExtIEs
// dlist -> 275 - NRFrequencyBandItem-ExtIEs
// dlist -> 276 - NRFrequencyInfo-ExtIEs
// dlist -> 277 - NRV2XServicesAuthorized-ExtIEs
// dlist -> 278 - NRUESidelinkAggregateMaximumBitrate-ExtIEs
// dlist -> 279 - NR-A2X-ServicesAuthorized-ExtIEs
// dlist -> 280 - OverloadResponse-ExtIEs
// dlist -> 281 - OverloadStartNSSAIItem-ExtIEs
// dlist -> 282 - PacketErrorRate-ExtIEs
// dlist -> 283 - PagingAssisDataforCEcapabUE-ExtIEs
// dlist -> 284 - PagingAttemptInformation-ExtIEs
// dlist -> 285 - PagingPolicyDifferentiation-ExtIEs
// dlist -> 286 - PDUSessionForPagingItem-ExtIEs
// dlist -> 287 - PagingPolicyDifferentiationItem-ExtIEs
// dlist -> 288 - PartiallyAllowedNSSAI-Item-ExtIEs
// dlist -> 289 - PathSwitchRequestAcknowledgeTransfer-ExtIEs
// dlist -> 290 - PathSwitchRequestSetupFailedTransfer-ExtIEs
// dlist -> 291 - PathSwitchRequestTransfer-ExtIEs
// dlist -> 292 - PathSwitchRequestUnsuccessfulTransfer-ExtIEs
// dlist -> 293 - PC5QoSParameters-ExtIEs
// dlist -> 294 - PC5QoSFlowItem-ExtIEs
// dlist -> 295 - PC5FlowBitRates-ExtIEs
// dlist -> 296 - PDUSessionAggregateMaximumBitRate-ExtIEs
// dlist -> 297 - PDUSessionResourceAdmittedItem-ExtIEs
// dlist -> 298 - PDUSessionResourceFailedToModifyItemModCfm-ExtIEs
// dlist -> 299 - PDUSessionResourceFailedToModifyItemModRes-ExtIEs
// dlist -> 300 - PDUSessionResourceFailedToResumeItemRESReq-ExtIEs
// dlist -> 301 - PDUSessionResourceFailedToResumeItemRESRes-ExtIEs
// dlist -> 302 - PDUSessionResourceFailedToSetupItemCxtFail-ExtIEs
// dlist -> 303 - PDUSessionResourceFailedToSetupItemCxtRes-ExtIEs
// dlist -> 304 - PDUSessionResourceFailedToSetupItemHOAck-ExtIEs
// dlist -> 305 - PDUSessionResourceFailedToSetupItemPSReq-ExtIEs
// dlist -> 306 - PDUSessionResourceFailedToSetupItemSURes-ExtIEs
// dlist -> 307 - PDUSessionResourceHandoverItem-ExtIEs
// dlist -> 308 - PDUSessionResourceInformationItem-ExtIEs
// dlist -> 309 - PDUSessionResourceItemCxtRelCpl-ExtIEs
// dlist -> 310 - PDUSessionResourceItemCxtRelReq-ExtIEs
// dlist -> 311 - PDUSessionResourceItemHORqd-ExtIEs
// dlist -> 312 - PDUSessionListMTCommHReq-Item-ExtIEs
// dlist -> 313 - PDUSessionResourceModifyConfirmTransfer-ExtIEs
// dlist -> 314 - PDUSessionResourceModifyIndicationUnsuccessfulTransfer-ExtIEs
// dlist -> 315 - PDUSessionResourceModifyResponseTransfer-ExtIEs
// dlist -> 316 - PDUSessionResourceModifyIndicationTransfer-ExtIEs
// dlist -> 317 - PDUSessionResourceModifyItemModCfm-ExtIEs
// dlist -> 318 - PDUSessionResourceModifyItemModInd-ExtIEs
// dlist -> 319 - PDUSessionResourceModifyItemModReq-ExtIEs
// dlist -> 320 - PDUSessionResourceModifyItemModRes-ExtIEs
// dlist -> 321 - PDUSessionResourceModifyUnsuccessfulTransfer-ExtIEs
// dlist -> 322 - PDUSessionResourceNotifyItem-ExtIEs
// dlist -> 323 - PDUSessionResourceNotifyReleasedTransfer-ExtIEs
// dlist -> 324 - PDUSessionResourceNotifyTransfer-ExtIEs
// dlist -> 325 - PDUSessionResourceReleaseCommandTransfer-ExtIEs
// dlist -> 326 - PDUSessionResourceReleasedItemNot-ExtIEs
// dlist -> 327 - PDUSessionResourceReleasedItemPSAck-ExtIEs
// dlist -> 328 - PDUSessionResourceReleasedItemPSFail-ExtIEs
// dlist -> 329 - PDUSessionResourceReleasedItemRelRes-ExtIEs
// dlist -> 330 - PDUSessionResourceReleaseResponseTransfer-ExtIEs
// dlist -> 331 - PDUSessionResourceResumeItemRESReq-ExtIEs
// dlist -> 332 - PDUSessionResourceResumeItemRESRes-ExtIEs
// dlist -> 333 - PDUSessionResourceSecondaryRATUsageItem-ExtIEs
// dlist -> 334 - PDUSessionResourceSetupItemCxtReq-ExtIEs
// dlist -> 335 - PDUSessionResourceSetupItemCxtRes-ExtIEs
// dlist -> 336 - PDUSessionResourceSetupItemHOReq-ExtIEs
// dlist -> 337 - PDUSessionResourceSetupItemSUReq-ExtIEs
// dlist -> 338 - PDUSessionResourceSetupItemSURes-ExtIEs
// dlist -> 339 - PDUSessionResourceSetupResponseTransfer-ExtIEs
// dlist -> 340 - PDUSessionResourceSetupUnsuccessfulTransfer-ExtIEs
// dlist -> 341 - PDUSessionResourceSuspendItemSUSReq-ExtIEs
// dlist -> 342 - PDUSessionResourceSwitchedItem-ExtIEs
// dlist -> 343 - PDUSessionResourceToBeSwitchedDLItem-ExtIEs
// dlist -> 344 - PDUSessionResourceToReleaseItemHOCmd-ExtIEs
// dlist -> 345 - PDUSessionResourceToReleaseItemRelCmd-ExtIEs
// dlist -> 346 - PDUSessionUsageReport-ExtIEs
// dlist -> 347 - PDUsetQoSParameters-ExtIEs
// dlist -> 348 - PDUsetQoSInformation-ExtIEs
// dlist -> 349 - PEIPSassistanceInformation-ExtIEs
// dlist -> 350 - PeriodicityBound-ExtIEs
// dlist -> 351 - PeriodicityList-ExtIEs
// dlist -> 352 - PeriodicityRange-ExtIEs
// dlist -> 353 - PLMNAreaBasedQMC-ExtIEs
// dlist -> 354 - PLMNSupportItem-ExtIEs
// dlist -> 355 - PNI-NPN-MobilityInformation-ExtIEs
// dlist -> 356 - PWSFailedCellIDList-ExtIEs
// dlist -> 357 - PNI-NPN-AreaScopeofMDT-ExtIEs
// dlist -> 358 - PNI-NPNBasedMDT-ExtIEs
// dlist -> 359 - QMCConfigInfo-ExtIEs
// dlist -> 360 - QMCDeactivation-ExtIEs
// dlist -> 361 - QoERVQoEReportingPaths-ExtIEs
// dlist -> 362 - QosCharacteristics-ExtIEs
// dlist -> 363 - QosFlowAcceptedItem-ExtIEs
// dlist -> 364 - QosFlowAdditionalInfoItemRelCom-ExtIEs
// dlist -> 365 - QosFlowAdditionalInfoItemRelRes-ExtIEs
// dlist -> 366 - QosFlowAddOrModifyRequestItem-ExtIEs
// dlist -> 367 - QosFlowAddOrModifyResponseItem-ExtIEs
// dlist -> 368 - QosFlowFeedbackItem-ExtIEs
// dlist -> 369 - QosFlowInformationItem-ExtIEs
// dlist -> 370 - QosFlowLevelQosParameters-ExtIEs
// dlist -> 371 - QosFlowWithCauseItem-ExtIEs
// dlist -> 372 - QosFlowModifyConfirmItem-ExtIEs
// dlist -> 373 - QosFlowNotifyItem-ExtIEs
// dlist -> 374 - QosFlowParametersItem-ExtIEs
// dlist -> 375 - QosFlowPerTNLInformation-ExtIEs
// dlist -> 376 - QosFlowPerTNLInformationItem-ExtIEs
// dlist -> 377 - QosFlowSetupRequestItem-ExtIEs
// dlist -> 378 - QosFlowItemWithDataForwarding-ExtIEs
// dlist -> 379 - QosFlowToBeForwardedItem-ExtIEs
// dlist -> 380 - QoSFlowTSCItem-ExtIEs
// dlist -> 381 - QoSFlowsUsageReport-Item-ExtIEs
// dlist -> 382 - RANfeedbacktype-ExtIEs
// dlist -> 383 - RANfeedbacktype-proactive-ExtIEs
// dlist -> 384 - RANfeedbacktype-reactive-ExtIEs
// dlist -> 385 - RANStatusTransfer-TransparentContainer-ExtIEs
// dlist -> 386 - RANTimingSynchronisationStatusInfo-ExtIEs
// dlist -> 387 - RAN-TSSScope-ExtIEs
// dlist -> 388 - RANTSSCellItem-ExtIEs
// dlist -> 389 - RATRestrictions-Item-ExtIEs
// dlist -> 390 - RecommendedCellsForPaging-ExtIEs
// dlist -> 391 - RecommendedCellItem-ExtIEs
// dlist -> 392 - RecommendedRANNodesForPaging-ExtIEs
// dlist -> 393 - RecommendedRANNodeItem-ExtIEs
// dlist -> 394 - RedundantPDUSessionInformation-ExtIEs
// dlist -> 395 - ResetType-ExtIEs
// dlist -> 396 - RIMInformationTransfer-ExtIEs
// dlist -> 397 - RIMInformation-ExtIEs
// dlist -> 398 - RSPPQoSFlowItem-ExtIEs
// dlist -> 399 - RSPPFlowBitRates-ExtIEs
// dlist -> 400 - ScheduledCommunicationTime-ExtIEs
// dlist -> 401 - SecondaryRATUsageInformation-ExtIEs
// dlist -> 402 - SecondaryRATDataUsageReportTransfer-ExtIEs
// dlist -> 403 - SecurityContext-ExtIEs
// dlist -> 404 - SecurityIndication-ExtIEs
// dlist -> 405 - SecurityResult-ExtIEs
// dlist -> 406 - SensorMeasurementConfiguration-ExtIEs
// dlist -> 407 - SensorMeasConfigNameItem-ExtIEs
// dlist -> 408 - SensorNameConfig-ExtIEs
// dlist -> 409 - ServedGUAMIItem-ExtIEs
// dlist -> 410 - ServiceAreaInformation-Item-ExtIEs
// dlist -> 411 - SharedNGU-MulticastTNLInformation-ExtIEs
// dlist -> 412 - SliceOverloadItem-ExtIEs
// dlist -> 413 - SliceSupportItem-ExtIEs
// dlist -> 414 - SliceSupportQMC-Item-ExtIEs
// dlist -> 415 - SNPN-MobilityInformation-ExtIEs
// dlist -> 416 - S-NSSAI-ExtIEs
// dlist -> 417 - SONConfigurationTransfer-ExtIEs
// dlist -> 418 - SONInformation-ExtIEs
// dlist -> 419 - SONInformationReply-ExtIEs
// dlist -> 420 - SONInformationReport-ExtIEs
// dlist -> 421 - SNPN-CellBasedMDT-ExtIEs
// dlist -> 422 - SNPNCellIdListforMDTItem-ExtIEs
// dlist -> 423 - SNPN-TAIBasedMDT-ExtIEs
// dlist -> 424 - SNPNTAIListforMDTItem-ExtIEs
// dlist -> 425 - SNPN-BasedMDT-ExtIEs
// dlist -> 426 - SNPNListforMDTItem-ExtIEs
// dlist -> 427 - SuccessfulHandoverReport-Item-ExtIEs
// dlist -> 428 - SuccessfulPSCellChangeReport-Item-ExtIEs
// dlist -> 429 - SourceNGRANNode-ToTargetNGRANNode-TransparentContainer-ExtIEs
// dlist -> 430 - SourceNodeID-ExtIEs
// dlist -> 431 - SourceRANNodeID-ExtIEs
// dlist -> 432 - SourceToTarget-AMFInformationReroute-ExtIEs
// dlist -> 433 - SupportedTAItem-ExtIEs
// dlist -> 434 - SLPositioningRangingServiceInfo-ExtIEs
// dlist -> 435 - SLPositioningRangingQoSParameters-ExtIEs
// dlist -> 436 - TAI-ExtIEs
// dlist -> 437 - TAIBroadcastEUTRA-Item-ExtIEs
// dlist -> 438 - TAIBroadcastNR-Item-ExtIEs
// dlist -> 439 - TAICancelledEUTRA-Item-ExtIEs
// dlist -> 440 - TAICancelledNR-Item-ExtIEs
// dlist -> 441 - TAIListForInactiveItem-ExtIEs
// dlist -> 442 - TAIListForPagingItem-ExtIEs
// dlist -> 443 - TAINSAGSupportItem-ExtIEs
// dlist -> 444 - TargeteNB-ID-ExtIEs
// dlist -> 445 - TargetHomeENB-ID-ExtIEs
// dlist -> 446 - TargetID-ExtIEs
// dlist -> 447 - TargetNGRANNode-ToSourceNGRANNode-TransparentContainer-ExtIEs
// dlist -> 448 - TargetNGRANNode-ToSourceNGRANNode-FailureTransparentContainer-ExtIEs
// dlist -> 449 - TargetNSSAI-Item-ExtIEs
// dlist -> 450 - TargetNSSAIInformation-Item-ExtIEs
// dlist -> 451 - TargetRANNodeID-ExtIEs
// dlist -> 452 - TargetRANNodeID-RIM-ExtIEs
// dlist -> 453 - TargetRANNodeID-SON-ExtIEs
// dlist -> 454 - TargetRNC-ID-ExtIEs
// dlist -> 455 - TimeBasedHandoverInformation-ExtIEs
// dlist -> 456 - TimeSyncAssistanceInfo-ExtIEs
// dlist -> 457 - TNGF-ID-ExtIEs
// dlist -> 458 - TNLAssociationItem-ExtIEs
// dlist -> 459 - TooearlyIntersystemHO-ExtIEs
// dlist -> 460 - TraceActivation-ExtIEs
// dlist -> 461 - TAIBasedMDT-ExtIEs
// dlist -> 462 - TAIBasedQMC-ExtIEs
// dlist -> 463 - TABasedQMC-ExtIEs
// dlist -> 464 - TABasedMDT-ExtIEs
// dlist -> 465 - TWIF-ID-ExtIEs
// dlist -> 466 - TSCAssistanceInformation-ExtIEs
// dlist -> 467 - TSCTrafficCharacteristics-ExtIEs
// dlist -> 468 - TSCTrafficCharacteristicsFeedback-ExtIEs
// dlist -> 469 - TSCFeedbackInformation-ExtIEs
// dlist -> 470 - UEAggregateMaximumBitRate-ExtIEs
// dlist -> 471 - UEAppLayerMeasInfoItem-ExtIEs
// dlist -> 472 - UEAppLayerMeasConfigInfo-ExtIEs
// dlist -> 473 - UE-associatedLogicalNG-connectionItem-ExtIEs
// dlist -> 474 - UEContextResumeRequestTransfer-ExtIEs
// dlist -> 475 - UEContextResumeResponseTransfer-ExtIEs
// dlist -> 476 - UEContextSuspendRequestTransfer-ExtIEs
// dlist -> 477 - UE-DifferentiationInfo-ExtIEs
// dlist -> 478 - UEHistoryInformationFromTheUE-ExtIEs
// dlist -> 479 - UEIdentityIndexValue-ExtIEs
// dlist -> 480 - UE-NGAP-IDs-ExtIEs
// dlist -> 481 - UE-NGAP-ID-pair-ExtIEs
// dlist -> 482 - UEPagingIdentity-ExtIEs
// dlist -> 483 - UEPresenceInAreaOfInterestItem-ExtIEs
// dlist -> 484 - UERadioCapabilityForPaging-ExtIEs
// dlist -> 485 - UERLFReportContainer-ExtIEs
// dlist -> 486 - UESecurityCapabilities-ExtIEs
// dlist -> 487 - UESliceMaximumBitRateItem-ExtIEs
// dlist -> 488 - UL-CP-SecurityInformation-ExtIEs
// dlist -> 489 - UL-NGU-UP-TNLModifyItem-ExtIEs
// dlist -> 490 - UnavailableGUAMIItem-ExtIEs
// dlist -> 491 - UPTransportLayerInformation-ExtIEs
// dlist -> 492 - UPTransportLayerInformationItem-ExtIEs
// dlist -> 493 - UPTransportLayerInformationPairItem-ExtIEs
// dlist -> 494 - UserLocationInformation-ExtIEs
// dlist -> 495 - UserLocationInformationEUTRA-ExtIEs
// dlist -> 496 - UserLocationInformationN3IWF-with-PortNumber-ExtIEs
// dlist -> 497 - UserLocationInformationN3IWF-without-PortNumber-ExtIEs
// dlist -> 498 - UserLocationInformationTNGF-ExtIEs
// dlist -> 499 - UserLocationInformationTWIF-ExtIEs
// dlist -> 500 - UserLocationInformationW-AGF-ExtIEs
// dlist -> 501 - UserLocationInformationNR-ExtIEs
// dlist -> 502 - UserPlaneFailureIndication-ExtIEs
// dlist -> 503 - UserPlaneSecurityInformation-ExtIEs
// dlist -> 504 - VolumeTimedReport-Item-ExtIEs
// dlist -> 505 - W-AGF-ID-ExtIEs
// dlist -> 506 - WarningAreaList-ExtIEs
// dlist -> 507 - WLANMeasurementConfiguration-ExtIEs
// dlist -> 508 - WLANMeasConfigNameItem-ExtIEs
// dlist -> 509 - WUS-Assistance-Information-ExtIEs
// dlist -> 510 - XnExtTLA-Item-ExtIEs
// dlist -> 511 - XnTNLConfigurationInfo-ExtIEs
// dlist -> 512 - PDUSessionResourceSetupRequest
// dlist -> 513 - PDUSessionResourceSetupResponse
// dlist -> 514 - PDUSessionResourceReleaseCommand
// dlist -> 515 - PDUSessionResourceReleaseResponse
// dlist -> 516 - PDUSessionResourceModifyRequest
// dlist -> 517 - PDUSessionResourceModifyResponse
// dlist -> 518 - PDUSessionResourceNotify
// dlist -> 519 - PDUSessionResourceModifyIndication
// dlist -> 520 - PDUSessionResourceModifyConfirm
// dlist -> 521 - InitialContextSetupRequest
// dlist -> 522 - InitialContextSetupResponse
// dlist -> 523 - InitialContextSetupFailure
// dlist -> 524 - UEContextReleaseRequest
// dlist -> 525 - UEContextReleaseCommand
// dlist -> 526 - UEContextReleaseComplete
// dlist -> 527 - UEContextResumeRequest
// dlist -> 528 - UEContextResumeResponse
// dlist -> 529 - UEContextResumeFailure
// dlist -> 530 - UEContextSuspendRequest
// dlist -> 531 - UEContextSuspendResponse
// dlist -> 532 - UEContextSuspendFailure
// dlist -> 533 - UEContextModificationRequest
// dlist -> 534 - UEContextModificationResponse
// dlist -> 535 - UEContextModificationFailure
// dlist -> 536 - RRCInactiveTransitionReport
// dlist -> 537 - RetrieveUEInformation
// dlist -> 538 - UEInformationTransfer
// dlist -> 539 - RANCPRelocationIndication
// dlist -> 540 - HandoverRequired
// dlist -> 541 - HandoverCommand
// dlist -> 542 - HandoverPreparationFailure
// dlist -> 543 - HandoverRequest
// dlist -> 544 - HandoverRequestAcknowledge
// dlist -> 545 - HandoverFailure
// dlist -> 546 - HandoverNotify
// dlist -> 547 - PathSwitchRequest
// dlist -> 548 - PathSwitchRequestAcknowledge
// dlist -> 549 - PathSwitchRequestFailure
// dlist -> 550 - HandoverCancel
// dlist -> 551 - HandoverCancelAcknowledge
// dlist -> 552 - HandoverSuccess
// dlist -> 553 - UplinkRANEarlyStatusTransfer
// dlist -> 554 - DownlinkRANEarlyStatusTransfer
// dlist -> 555 - UplinkRANStatusTransfer
// dlist -> 556 - DownlinkRANStatusTransfer
// dlist -> 557 - Paging
// dlist -> 558 - InitialUEMessage
// dlist -> 559 - DownlinkNASTransport
// dlist -> 560 - OCTET
// dlist -> 561 - UplinkNASTransport
// dlist -> 562 - NASNonDeliveryIndication
// dlist -> 563 - RerouteNASRequest
// dlist -> 564 - NGSetupRequest
// dlist -> 565 - NGSetupResponse
// dlist -> 566 - NGSetupFailure
// dlist -> 567 - RANConfigurationUpdate
// dlist -> 568 - RANConfigurationUpdateAcknowledge
// dlist -> 569 - RANConfigurationUpdateFailure
// dlist -> 570 - AMFConfigurationUpdate
// dlist -> 571 - AMFConfigurationUpdateAcknowledge
// dlist -> 572 - AMFConfigurationUpdateFailure
// dlist -> 573 - AMFStatusIndication
// dlist -> 574 - NGReset
// dlist -> 575 - NGResetAcknowledge
// dlist -> 576 - ErrorIndication
// dlist -> 577 - OverloadStart
// dlist -> 578 - OverloadStop
// dlist -> 579 - UplinkRANConfigurationTransfer
// dlist -> 580 - DownlinkRANConfigurationTransfer
// dlist -> 581 - WriteReplaceWarningRequest
// dlist -> 582 - WriteReplaceWarningResponse
// dlist -> 583 - PWSCancelRequest
// dlist -> 584 - PWSCancelResponse
// dlist -> 585 - PWSRestartIndication
// dlist -> 586 - PWSFailureIndication
// dlist -> 587 - DownlinkUEAssociatedNRPPaTransport
// dlist -> 588 - UplinkUEAssociatedNRPPaTransport
// dlist -> 589 - DownlinkNonUEAssociatedNRPPaTransport
// dlist -> 590 - UplinkNonUEAssociatedNRPPaTransport
// dlist -> 591 - TraceStart
// dlist -> 592 - TraceFailureIndication
// dlist -> 593 - DeactivateTrace
// dlist -> 594 - CellTrafficTrace
// dlist -> 595 - LocationReportingControl
// dlist -> 596 - LocationReportingFailureIndication
// dlist -> 597 - LocationReport
// dlist -> 598 - UETNLABindingReleaseRequest
// dlist -> 599 - UERadioCapabilityInfoIndication
// dlist -> 600 - UERadioCapabilityCheckRequest
// dlist -> 601 - UERadioCapabilityCheckResponse
// dlist -> 602 - PrivateMessage
// dlist -> 603 - SecondaryRATDataUsageReport
// dlist -> 604 - UplinkRIMInformationTransfer
// dlist -> 605 - DownlinkRIMInformationTransfer
// dlist -> 606 - ConnectionEstablishmentIndication
// dlist -> 607 - UERadioCapabilityIDMappingRequest
// dlist -> 608 - UERadioCapabilityIDMappingResponse
// dlist -> 609 - AMFCPRelocationIndication
// dlist -> 610 - BroadcastSessionSetupRequest
// dlist -> 611 - BroadcastSessionSetupResponse
// dlist -> 612 - BroadcastSessionSetupFailure
// dlist -> 613 - BroadcastSessionModificationRequest
// dlist -> 614 - BroadcastSessionModificationResponse
// dlist -> 615 - BroadcastSessionModificationFailure
// dlist -> 616 - BroadcastSessionReleaseRequest
// dlist -> 617 - BroadcastSessionReleaseRequired
// dlist -> 618 - BroadcastSessionReleaseResponse
// dlist -> 619 - BroadcastSessionTransportRequest
// dlist -> 620 - BroadcastSessionTransportResponse
// dlist -> 621 - BroadcastSessionTransportFailure
// dlist -> 622 - DistributionSetupRequest
// dlist -> 623 - DistributionSetupResponse
// dlist -> 624 - DistributionSetupFailure
// dlist -> 625 - DistributionReleaseRequest
// dlist -> 626 - DistributionReleaseResponse
// dlist -> 627 - MulticastSessionActivationRequest
// dlist -> 628 - MulticastSessionActivationResponse
// dlist -> 629 - MulticastSessionActivationFailure
// dlist -> 630 - MulticastSessionDeactivationRequest
// dlist -> 631 - MulticastSessionDeactivationResponse
// dlist -> 632 - MulticastSessionUpdateRequest
// dlist -> 633 - MulticastSessionUpdateResponse
// dlist -> 634 - MulticastSessionUpdateFailure
// dlist -> 635 - MulticastGroupPaging
// dlist -> 636 - TimingSynchronisationStatusRequest
// dlist -> 637 - TimingSynchronisationStatusResponse
// dlist -> 638 - TimingSynchronisationStatusFailure
// dlist -> 639 - TimingSynchronisationStatusReport
// dlist -> 640 - MTCommunicationHandlingRequest
// dlist -> 641 - MTCommunicationHandlingResponse
// dlist -> 642 - MTCommunicationHandlingFailure
// dlist -> 643 - RANPagingRequest
// dlist -> 644 - MBSSessionSetupOrModRequestTransfer
// dlist -> 645 - MulticastSessionUpdateRequestTransfer
// dlist -> 646 - PDUSessionResourceModifyRequestTransfer
// dlist -> 647 - PDUSessionResourceSetupRequestTransfer
// ------------------------------------------------------------ 
//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AdditionalDLUPTNLInformationForHOItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalRedundantDL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * additionalRedundantDLNGUUPTNLInformation;
	int additionalRedundantDLNGUUPTNLInformation_isset;

	
} SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_A2X_PC5_FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_A2X_PC5_QoS_Flow_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_A2X_PC5_QoS_Parameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AllocationAndRetentionPriority_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AllowedNSSAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Allowed_PNI_NPN_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AlternativeQoSParaSetItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MaximumDataBurstVolume, PRESENCE = optional L:10555
	unsigned long long int maximumDataBurstVolume;
	int maximumDataBurstVolume_isset;

	
} SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AMFPagingTarget_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AMF_TNLAssociationSetupItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AMF_TNLAssociationToAddItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AMF_TNLAssociationToRemoveItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TNLAssociationTransportLayerAddressNGRAN, PRESENCE = optional L:10555
	SI_AMF_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddressNGRAN;
	int tNLAssociationTransportLayerAddressNGRAN_isset;

	
} SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AMF_TNLAssociationToUpdateItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaOfInterest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaOfInterest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaOfInterestCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaOfInterestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaOfInterestRANNodeItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaOfInterestTAIItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AssistanceDataForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NPN-PagingAssistanceInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_PagingAssistanceInformation * nPNPagingAssistanceInformation;
	int nPNPagingAssistanceInformation_isset;

	// ID = id-PagingAssisDataforCEcapabUE, PRESENCE = optional L:10555
	SI_AMF_DT_PagingAssisDataforCEcapabUE * pagingAssisDataforCEcapabUE;
	int pagingAssisDataforCEcapabUE_isset;

	
} SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AssistanceDataForRecommendedCells_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetupRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AssociatedQosFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10555
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	
} SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AUN3DeviceAccessInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaScopeOfMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PNI-NPNBasedMDT, PRESENCE = mandatory L:10555
	SI_AMF_DT_PNI_NPNBasedMDT * pNINPNBasedMDT;
	int pNINPNBasedMDT_isset;

	// ID = id-SNPN-CellBasedMDT, PRESENCE = mandatory L:10555
	SI_AMF_DT_SNPN_CellBasedMDT * sNPNCellBasedMDT;
	int sNPNCellBasedMDT_isset;

	// ID = id-SNPN-TAIBasedMDT, PRESENCE = mandatory L:10555
	SI_AMF_DT_SNPN_TAIBasedMDT * sNPNTAIBasedMDT;
	int sNPNTAIBasedMDT_isset;

	// ID = id-SNPN-BasedMDT, PRESENCE = mandatory L:10555
	SI_AMF_DT_SNPN_BasedMDT * sNPNBasedMDT;
	int sNPNBasedMDT_isset;

	
} SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaScopeOfMDT_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaScopeOfNeighCellsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AreaScopeOfQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_AvailableRANVisibleQoEMetrics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BeamMeasurementsReportConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BeamMeasurementsReportQuantity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastCancelledAreaList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastCompletedAreaList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastPLMNItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NPN-Support, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_Support * nPNSupport;
	int nPNSupport_isset;

	// ID = id-ExtendedTAISliceSupportList, PRESENCE = optional L:10555
	SI_AMF_DT_ExtendedSliceSupportList * extendedTAISliceSupportList;
	int extendedTAISliceSupportList_isset;

	// ID = id-TAINSAGSupportList, PRESENCE = optional L:10555
	SI_AMF_DT_TAINSAGSupportList * tAINSAGSupportList;
	int tAINSAGSupportList_isset;

	
} SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastTransportFailureTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastTransportRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastTransportResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BluetoothMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BluetoothMeasConfigNameItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_BurstArrivalTimeWindow_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CandidateRelayUEInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CancelledCellsInEAI_EUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CancelledCellsInEAI_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CancelledCellsInTAI_EUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CancelledCellsInTAI_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CandidateCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CandidateCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CandidateCell_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CandidateCell_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CandidateCellID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CandidateCellID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CandidatePCI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CandidatePCI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Cause_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_Cause_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Cell_CAGInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellIDBroadcastEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellIDBroadcastNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellIDCancelledEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellIDCancelledNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellIDListForRestart_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ClockAccuracy_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ClockAccuracy_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ClockQualityAcceptanceIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ClockQualityAcceptanceCriteria_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ClockQualityReportingControlInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ClockQualityDetailLevel_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CNAssistedRANTuning_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CNTypeRestrictionsForEquivalentItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CompletedCellsInEAI_EUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CompletedCellsInEAI_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CompletedCellsInTAI_EUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CompletedCellsInTAI_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CoreNetworkAssistanceInformationForInactive_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EUTRA-PagingeDRXInformation, PRESENCE = optional L:10555
	SI_AMF_DT_EUTRA_PagingeDRXInformation * eUTRAPagingeDRXInformation;
	int eUTRAPagingeDRXInformation_isset;

	// ID = id-ExtendedUEIdentityIndexValue, PRESENCE = optional L:10555
	SI_AMF_DT_ExtendedUEIdentityIndexValue * extendedUEIdentityIndexValue;
	int extendedUEIdentityIndexValue_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-MicoAllPLMN, PRESENCE = optional L:10555
	uint8_t micoAllPLMN;
	int micoAllPLMN_isset;

	// ID = id-NR-PagingeDRXInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NR_PagingeDRXInformation * nRPagingeDRXInformation;
	int nRPagingeDRXInformation_isset;

	// ID = id-PagingCauseIndicationForVoiceService, PRESENCE = optional L:10555
	uint8_t pagingCauseIndicationForVoiceService;
	int pagingCauseIndicationForVoiceService_isset;

	// ID = id-PEIPSassistanceInformation, PRESENCE = optional L:10555
	SI_AMF_DT_PEIPSassistanceInformation * pEIPSassistanceInformation;
	int pEIPSassistanceInformation_isset;

	// ID = id-HashedUEIdentityIndexValue, PRESENCE = optional L:10555
	SI_AMF_DT_HashedUEIdentityIndexValue * hashedUEIdentityIndexValue;
	int hashedUEIdentityIndexValue_isset;

	// ID = id-CN-MT-CommunicationHandling, PRESENCE = optional L:10555
	uint8_t cNMTCommunicationHandling;
	int cNMTCommunicationHandling_isset;

	
} SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_COUNTValueForPDCP_SN12_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_COUNTValueForPDCP_SN18_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CPTransportLayerInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EndpointIPAddressAndPort, PRESENCE = mandatory L:10555
	SI_AMF_DT_EndpointIPAddressAndPort * endpointIPAddressAndPort;
	int endpointIPAddressAndPort_isset;

	
} SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CriticalityDiagnostics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CriticalityDiagnostics_IE_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellBasedMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellBasedMDT_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CellBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CellBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CAGListforMDTItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DataForwardingResponseDRBItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DAPSRequestInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DAPSResponseInfoItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DAPSResponseInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DataForwardingResponseERABListItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DL_CP_SecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBsSubjectToStatusTransferItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-OldAssociatedQosFlowList-ULendmarkerexpected, PRESENCE = optional L:10555
	SI_AMF_DT_AssociatedQosFlowList * oldAssociatedQosFlowListULendmarkerexpected;
	int oldAssociatedQosFlowListULendmarkerexpected_isset;

	
} SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusDL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusDL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusDL12_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusDL18_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusUL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusUL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusUL12_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBStatusUL18_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBsToQosFlowsMappingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DAPSRequestInfo, PRESENCE = optional L:10555
	SI_AMF_DT_DAPSRequestInfo * dAPSRequestInfo;
	int dAPSRequestInfo_isset;

	
} SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Dynamic5QIDescriptor_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedPacketDelayBudget, PRESENCE = optional L:10555
	unsigned long long int extendedPacketDelayBudget;
	int extendedPacketDelayBudget_isset;

	// ID = id-CNPacketDelayBudgetDL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetDL;
	int cNPacketDelayBudgetDL_isset;

	// ID = id-CNPacketDelayBudgetUL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetUL;
	int cNPacketDelayBudgetUL_isset;

	
} SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EarlyStatusTransfer_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ProcedureStageChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DLDiscarding, PRESENCE = mandatory L:10555
	SI_AMF_DT_DLDiscarding * dLDiscarding;
	int dLDiscarding_isset;

	
} SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DLDiscarding_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DLDiscarding_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBsSubjectToDLDiscarding_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DLCountChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DLCountChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FirstDLCount_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FirstDLCount_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EmergencyAreaIDBroadcastNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EmergencyAreaIDCancelledNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EmergencyFallbackIndicator_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EndpointIPAddressAndPort_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EPS_TAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EPS_TAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_E_RABInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SourceTNLAddrInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TransportLayerAddress * sourceTNLAddrInfo;
	int sourceTNLAddrInfo_isset;

	// ID = id-SourceNodeTNLAddrInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TransportLayerAddress * sourceNodeTNLAddrInfo;
	int sourceNodeTNLAddrInfo_isset;

	
} SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRA_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRA_PagingeDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ExcessPacketDelayThresholdItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ExpectedUEActivityBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ExpectedUEBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ExpectedUEMovingTrajectoryItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Extended_AMFName_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_Extended_AMFName_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_Extended_RANNodeName_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ExtendedRATRestrictionInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EventTrigger_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EventTrigger_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EventL1LoggedMDTConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MeasurementThresholdL1LoggedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EquivalentSNPNsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveGCAction_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FiveGCAction_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveG_ProSeAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveGProSeLayer2Multipath, PRESENCE = optional L:10555
	uint8_t fiveGProSeLayer2Multipath;
	int fiveGProSeLayer2Multipath_isset;

	// ID = id-FiveGProSeLayer2UEtoUERelay, PRESENCE = optional L:10555
	uint8_t fiveGProSeLayer2UEtoUERelay;
	int fiveGProSeLayer2UEtoUERelay_isset;

	// ID = id-FiveGProSeLayer2UEtoUERemote, PRESENCE = optional L:10555
	uint8_t fiveGProSeLayer2UEtoUERemote;
	int fiveGProSeLayer2UEtoUERemote_isset;

	
} SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveG_ProSePC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveGProSePC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveGProSePC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FiveG_S_TMSI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ForbiddenAreaInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FromEUTRANtoNGRAN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_FromNGRANtoEUTRAN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GBR_QosInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AlternativeQoSParaSetList, PRESENCE = optional L:10555
	SI_AMF_DT_AlternativeQoSParaSetList * alternativeQoSParaSetList;
	int alternativeQoSParaSetList_isset;

	
} SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalCable_ID_new_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalGNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalN3IWF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalLine_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAI, PRESENCE = optional L:10555
	SI_AMF_DT_TAI * tAI;
	int tAI_isset;

	
} SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalNgENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalRANNodeID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalTNGF-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalTNGF_ID * globalTNGFID;
	int globalTNGFID_isset;

	// ID = id-GlobalTWIF-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalTWIF_ID * globalTWIFID;
	int globalTWIFID_isset;

	// ID = id-GlobalW-AGF-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalW_AGF_ID * globalWAGFID;
	int globalWAGFID_isset;

	
} SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalTNGF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalTWIF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GlobalW_AGF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GTPTunnel_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GTPTunnel_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_GUAMI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_GUAMI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverCommandTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalDLForwardingUPTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalDLForwardingUPTNLInformation;
	int additionalDLForwardingUPTNLInformation_isset;

	// ID = id-ULForwardingUP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * uLForwardingUPTNLInformation;
	int uLForwardingUPTNLInformation_isset;

	// ID = id-AdditionalULForwardingUPTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalULForwardingUPTNLInformation;
	int additionalULForwardingUPTNLInformation_isset;

	// ID = id-DataForwardingResponseERABList, PRESENCE = optional L:10555
	SI_AMF_DT_DataForwardingResponseERABList * dataForwardingResponseERABList;
	int dataForwardingResponseERABList_isset;

	// ID = id-QosFlowFailedToSetupList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowListWithCause * qosFlowFailedToSetupList;
	int qosFlowFailedToSetupList_isset;

	
} SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverPreparationUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverRequestAcknowledgeTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalDLUPTNLInformationForHOList, PRESENCE = optional L:10555
	SI_AMF_DT_AdditionalDLUPTNLInformationForHOList * additionalDLUPTNLInformationForHOList;
	int additionalDLUPTNLInformationForHOList_isset;

	// ID = id-ULForwardingUP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * uLForwardingUPTNLInformation;
	int uLForwardingUPTNLInformation_isset;

	// ID = id-AdditionalULForwardingUPTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalULForwardingUPTNLInformation;
	int additionalULForwardingUPTNLInformation_isset;

	// ID = id-DataForwardingResponseERABList, PRESENCE = optional L:10555
	SI_AMF_DT_DataForwardingResponseERABList * dataForwardingResponseERABList;
	int dataForwardingResponseERABList_isset;

	// ID = id-RedundantDL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantDLNGUUPTNLInformation;
	int redundantDLNGUUPTNLInformation_isset;

	// ID = id-UsedRSNInformation, PRESENCE = optional L:10555
	SI_AMF_DT_RedundantPDUSessionInformation * usedRSNInformation;
	int usedRSNInformation_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-MBS-SupportIndicator, PRESENCE = optional L:10555
	uint8_t mBSSupportIndicator;
	int mBSSupportIndicator_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10555
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingStatus, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * eCNMarkingorCongestionInformationReportingStatus;
	int eCNMarkingorCongestionInformationReportingStatus_isset;

	
} SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverRequiredTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HFCNode_ID_new_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalCable-ID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalCable_ID * globalCableID;
	int globalCableID_isset;

	
} SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HLComActivate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_HLComActivate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HLComDeactivate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_HLComDeactivate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_HOReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedMobilityInformation, PRESENCE = optional L:10555
	SI_AMF_DT_ExtendedMobilityInformation * extendedMobilityInformation;
	int extendedMobilityInformation_isset;

	// ID = id-TargetCellCRNTI, PRESENCE = optional L:10555
	SI_AMF_DT_C_RNTI * targetCellCRNTI;
	int targetCellCRNTI_isset;

	// ID = id-TimeSinceFailure, PRESENCE = optional L:10555
	unsigned long long int timeSinceFailure;
	int timeSinceFailure_isset;

	
} SI_AMF_DT_PDU_HOReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MobileIAB_MTUserLocationInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ImmediateMDTNr_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_InterSystemFailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONConfigurationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONTransferType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONeNBID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONNGRANnodeID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-IntersystemSONInformationRequest, PRESENCE = mandatory L:10555
	SI_AMF_DT_IntersystemSONInformationRequest * intersystemSONInformationRequest;
	int intersystemSONInformationRequest_isset;

	// ID = id-IntersystemSONInformationReply, PRESENCE = mandatory L:10555
	SI_AMF_DT_IntersystemSONInformationReply * intersystemSONInformationReply;
	int intersystemSONInformationReply_isset;

	
} SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONInformationRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemCellActivationRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemResourceStatusRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ReportingSystem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ReportingSystem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_ReportingSystemIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_ReportingSystemIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_CellToReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_CellToReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ReportType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ReportType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EventBasedReportingIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PeriodicReportingIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONInformationReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemCellActivationReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemResourceStatusReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemSONInformationReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EnergySavingIndication, PRESENCE = mandatory L:10555
	SI_AMF_DT_IntersystemCellStateIndication * energySavingIndication;
	int energySavingIndication_isset;

	// ID = id-IntersystemResourceStatusUpdate, PRESENCE = mandatory L:10555
	SI_AMF_DT_IntersystemResourceStatusReport * intersystemResourceStatusUpdate;
	int intersystemResourceStatusUpdate_isset;

	
} SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemCellStateIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NotificationCell_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemResourceStatusReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ResourceStatusReportingSystem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_ReportingStatusIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_CellReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_CompositeAvailableCapacity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_EUTRAN_RadioResourceStatus_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_ReportingStatusIEs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_CellReportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_RadioResourceStatus_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_InterSystemHOReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_InterSystemHandoverReportType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-IntersystemMobilityFailureforVoiceFallback, PRESENCE = mandatory L:10555
	SI_AMF_DT_IntersystemMobilityFailureforVoiceFallback * intersystemMobilityFailureforVoiceFallback;
	int intersystemMobilityFailureforVoiceFallback_isset;

	
} SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemMobilityFailureforVoiceFallback_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_IntersystemUnnecessaryHO_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LastVisitedCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LastVisitedCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LastVisitedNGRANCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-LastVisitedPSCellList, PRESENCE = optional L:10555
	SI_AMF_DT_LastVisitedPSCellList * lastVisitedPSCellList;
	int lastVisitedPSCellList_isset;

	
} SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LastVisitedPSCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LocationReportingRequestType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-LocationReportingAdditionalInfo, PRESENCE = optional L:10555
	uint8_t locationReportingAdditionalInfo;
	int locationReportingAdditionalInfo_isset;

	// ID = id-AdditionalCancelledlocationReportingReferenceIDList, PRESENCE = optional L:10555
	SI_AMF_DT_AdditionalCancelledlocationReportingReferenceIDList * additionalCancelledlocationReportingReferenceIDList;
	int additionalCancelledlocationReportingReferenceIDList_isset;

	
} SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LoggedMDTNr_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EarlyMeasurement, PRESENCE = optional L:10555
	uint8_t earlyMeasurement;
	int earlyMeasurement_isset;

	
} SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LoggedMDTTrigger_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LTEV2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_LTE_A2X_ServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_DataForwardingResponseMRBItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_MappingandDataForwardingRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MRB_ProgressInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_QoSFlowsToBeSetupItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_ServiceArea_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_ServiceAreaInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_ServiceAreaInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_SessionID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_SessionID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionFailedtoSetupItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetupOrModFailureTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetupResponseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionReleaseResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetupOrModResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_SessionTNLInfo5GCItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRAN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_SessionTNLInfoNGRANItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_DistributionReleaseRequesTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_DistributionSetupRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_DistributionSetupResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_NGUFailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBS_UP_FailureIndicationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetupRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-AssistanceInformation, PRESENCE = optional L:10555
	uint8_t mBSAssistanceInformation;
	int mBSAssistanceInformation_isset;

	
} SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetuporModifyRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-AssistanceInformation, PRESENCE = optional L:10555
	uint8_t mBSAssistanceInformation;
	int mBSAssistanceInformation_isset;

	
} SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionToReleaseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MobilityRestrictionList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-LastEUTRAN-PLMNIdentity, PRESENCE = optional L:10555
	SI_AMF_DT_PLMNIdentity * lastEUTRANPLMNIdentity;
	int lastEUTRANPLMNIdentity_isset;

	// ID = id-CNTypeRestrictionsForServing, PRESENCE = optional L:10555
	uint8_t cNTypeRestrictionsForServing;
	int cNTypeRestrictionsForServing_isset;

	// ID = id-CNTypeRestrictionsForEquivalent, PRESENCE = optional L:10555
	SI_AMF_DT_CNTypeRestrictionsForEquivalent * cNTypeRestrictionsForEquivalent;
	int cNTypeRestrictionsForEquivalent_isset;

	// ID = id-NPN-MobilityInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_MobilityInformation * nPNMobilityInformation;
	int nPNMobilityInformation_isset;

	
} SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDT_AlignmentInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDT_Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MN-only-MDT-collection, PRESENCE = optional L:10555
	uint8_t mNonlyMDTcollection;
	int mNonlyMDTcollection_isset;

	
} SI_AMF_DT_PDU_MDT_Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDT_Configuration_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PNI-NPN-AreaScopeofMDT, PRESENCE = optional L:10555
	SI_AMF_DT_PNI_NPN_AreaScopeofMDT * pNINPNAreaScopeofMDT;
	int pNINPNAreaScopeofMDT_isset;

	
} SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDT_Configuration_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDTModeNr_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MDTModeNr_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionActivationRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionDeactivationRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastGroupPagingAreaItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastGroupPagingArea_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UE_PagingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UE_PagingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M1Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-IncludeBeamMeasurementsIndication, PRESENCE = optional L:10555
	uint8_t includeBeamMeasurementsIndication;
	int includeBeamMeasurementsIndication_isset;

	// ID = id-BeamMeasurementsReportConfiguration, PRESENCE = conditional L:10555
	SI_AMF_DT_BeamMeasurementsReportConfiguration * beamMeasurementsReportConfiguration;
	int beamMeasurementsReportConfiguration_isset;

	
} SI_AMF_DT_PDU_M1Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M1ThresholdEventA2_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M1ThresholdType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_M1ThresholdType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M1PeriodicReporting_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedReportIntervalMDT, PRESENCE = optional L:10555
	uint8_t extendedReportIntervalMDT;
	int extendedReportIntervalMDT_isset;

	
} SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M4Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M4ReportAmount, PRESENCE = optional L:10555
	uint8_t m4ReportAmount;
	int m4ReportAmount_isset;

	
} SI_AMF_DT_PDU_M4Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M5Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M5ReportAmount, PRESENCE = optional L:10555
	uint8_t m5ReportAmount;
	int m5ReportAmount_isset;

	
} SI_AMF_DT_PDU_M5Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M6Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M6ReportAmount, PRESENCE = optional L:10555
	uint8_t m6ReportAmount;
	int m6ReportAmount_isset;

	// ID = id-ExcessPacketDelayThresholdConfiguration, PRESENCE = optional L:10555
	SI_AMF_DT_ExcessPacketDelayThresholdConfiguration * excessPacketDelayThresholdConfiguration;
	int excessPacketDelayThresholdConfiguration_isset;

	
} SI_AMF_DT_PDU_M6Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_M7Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M7ReportAmount, PRESENCE = optional L:10555
	uint8_t m7ReportAmount;
	int m7ReportAmount_isset;

	
} SI_AMF_DT_PDU_M7Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MDT_Location_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_N3IWF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_N3IWF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_N6JitterInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_N6JitterInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NB_IoT_Paging_eDRXInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGAPIESupportInformationRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGAPIESupportInformationResponseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NgENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NgENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NGRAN_TNLAssociationToRemoveItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NonDynamic5QIDescriptor_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CNPacketDelayBudgetDL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetDL;
	int cNPacketDelayBudgetDL_isset;

	// ID = id-CNPacketDelayBudgetUL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetUL;
	int cNPacketDelayBudgetUL_isset;

	
} SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NPN_AccessInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NPN_MobilityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NPN_PagingAssistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NPN_Support_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NPN_Support_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NR_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NR_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NR_PagingeDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NRNTNTAIInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NRFrequencyBandItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NRFrequencyInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NRV2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NRUESidelinkAggregateMaximumBitrate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_NR_A2X_ServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_OverloadResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_OverloadResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_OverloadStartNSSAIItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PacketErrorRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PacketErrorRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PagingAssisDataforCEcapabUE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PagingAttemptInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PagingPolicyDifferentiation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionForPagingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PagingPolicyDifferentiationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PartiallyAllowedNSSAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestAcknowledgeTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalNGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationPairList * additionalNGUUPTNLInformation;
	int additionalNGUUPTNLInformation_isset;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-AdditionalRedundantNGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationPairList * additionalRedundantNGUUPTNLInformation;
	int additionalRedundantNGUUPTNLInformation_isset;

	// ID = id-QosFlowParametersList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowParametersList * qosFlowParametersList;
	int qosFlowParametersList_isset;

	
} SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestSetupFailedTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalDLQosFlowPerTNLInformation;
	int additionalDLQosFlowPerTNLInformation_isset;

	// ID = id-RedundantDL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantDLNGUUPTNLInformation;
	int redundantDLNGUUPTNLInformation_isset;

	// ID = id-RedundantDL-NGU-TNLInformationReused, PRESENCE = optional L:10555
	uint8_t redundantDLNGUTNLInformationReused;
	int redundantDLNGUTNLInformationReused_isset;

	// ID = id-AdditionalRedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalRedundantDLQosFlowPerTNLInformation;
	int additionalRedundantDLQosFlowPerTNLInformation_isset;

	// ID = id-UsedRSNInformation, PRESENCE = optional L:10555
	SI_AMF_DT_RedundantPDUSessionInformation * usedRSNInformation;
	int usedRSNInformation_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-MBS-SupportIndicator, PRESENCE = optional L:10555
	uint8_t mBSSupportIndicator;
	int mBSSupportIndicator_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10555
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingStatus, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * eCNMarkingorCongestionInformationReportingStatus;
	int eCNMarkingorCongestionInformationReportingStatus_isset;

	
} SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceAdmittedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToModifyItemModRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceFailedToSetupItemSURes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceHandoverItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelCpl_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionResourceReleaseResponseTransfer, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceItemCxtRelCpl_ExtIEs_id_PDUSessionResourceReleaseResponseTransfer * pDUSessionResourceReleaseResponseTransfer;
	int pDUSessionResourceReleaseResponseTransfer_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceItemCxtRelReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceItemHORqd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionListMTCommHReq_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirmTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-AdditionalRedundantNGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationPairList * additionalRedundantNGUUPTNLInformation;
	int additionalRedundantNGUUPTNLInformation_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalNGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationPairList * additionalNGUUPTNLInformation;
	int additionalNGUUPTNLInformation_isset;

	// ID = id-RedundantDL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantDLNGUUPTNLInformation;
	int redundantDLNGUUPTNLInformation_isset;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-AdditionalRedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalRedundantDLQosFlowPerTNLInformation;
	int additionalRedundantDLQosFlowPerTNLInformation_isset;

	// ID = id-AdditionalRedundantNGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationPairList * additionalRedundantNGUUPTNLInformation;
	int additionalRedundantNGUUPTNLInformation_isset;

	// ID = id-SecondaryRATUsageInformation, PRESENCE = optional L:10555
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int secondaryRATUsageInformation_isset;

	// ID = id-MBS-SupportIndicator, PRESENCE = optional L:10555
	uint8_t mBSSupportIndicator;
	int mBSSupportIndicator_isset;

	// ID = id-MBSSessionSetuporModifyResponseList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionSetupResponseList * mBSSessionSetuporModifyResponseList;
	int mBSSessionSetuporModifyResponseList_isset;

	// ID = id-MBSSessionFailedtoSetuporModifyList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionFailedtoSetupList * mBSSessionFailedtoSetuporModifyList;
	int mBSSessionFailedtoSetuporModifyList_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingStatus, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * eCNMarkingorCongestionInformationReportingStatus;
	int eCNMarkingorCongestionInformationReportingStatus_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10555
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	// ID = id-UserPlaneFailureIndicationReport, PRESENCE = optional L:10555
	uint8_t userPlaneFailureIndicationReport;
	int userPlaneFailureIndicationReport_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyIndicationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondaryRATUsageInformation, PRESENCE = optional L:10555
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int secondaryRATUsageInformation_isset;

	// ID = id-SecurityResult, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityResult * securityResult;
	int securityResult_isset;

	// ID = id-RedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformation * redundantDLQosFlowPerTNLInformation;
	int redundantDLQosFlowPerTNLInformation_isset;

	// ID = id-AdditionalRedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalRedundantDLQosFlowPerTNLInformation;
	int additionalRedundantDLQosFlowPerTNLInformation_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingStatus, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * eCNMarkingorCongestionInformationReportingStatus;
	int eCNMarkingorCongestionInformationReportingStatus_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModCfm_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModInd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-PduSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10555
	SI_AMF_DT_ExpectedUEActivityBehaviour * pduSessionExpectedUEActivityBehaviour;
	int pduSessionExpectedUEActivityBehaviour_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyItemModRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceNotifyItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceNotifyReleasedTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondaryRATUsageInformation, PRESENCE = optional L:10555
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int secondaryRATUsageInformation_isset;

	// ID = id-UserPlaneErrorIndicator, PRESENCE = optional L:10555
	uint8_t userPlaneErrorIndicator;
	int userPlaneErrorIndicator_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceNotifyTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondaryRATUsageInformation, PRESENCE = optional L:10555
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int secondaryRATUsageInformation_isset;

	// ID = id-QosFlowFeedbackList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowFeedbackList * qosFlowFeedbackList;
	int qosFlowFeedbackList_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommandTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QosFlowAdditionalInfoList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowAdditionalInfoListRelCom * qosFlowAdditionalInfoList;
	int qosFlowAdditionalInfoList_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemNot_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemPSFail_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleasedItemRelRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondaryRATUsageInformation, PRESENCE = optional L:10555
	SI_AMF_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;
	int secondaryRATUsageInformation_isset;

	// ID = id-QosFlowAdditionalInfoList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowAdditionalInfoListRelRes * qosFlowAdditionalInfoList;
	int qosFlowAdditionalInfoList_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceResumeItemRESRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSecondaryRATUsageItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PduSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10555
	SI_AMF_DT_ExpectedUEActivityBehaviour * pduSessionExpectedUEActivityBehaviour;
	int pduSessionExpectedUEActivityBehaviour_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupItemCxtRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupItemHOReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PduSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10555
	SI_AMF_DT_ExpectedUEActivityBehaviour * pduSessionExpectedUEActivityBehaviour;
	int pduSessionExpectedUEActivityBehaviour_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSUReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PduSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10555
	SI_AMF_DT_ExpectedUEActivityBehaviour * pduSessionExpectedUEActivityBehaviour;
	int pduSessionExpectedUEActivityBehaviour_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupItemSURes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformation * redundantDLQosFlowPerTNLInformation;
	int redundantDLQosFlowPerTNLInformation_isset;

	// ID = id-AdditionalRedundantDLQosFlowPerTNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowPerTNLInformationList * additionalRedundantDLQosFlowPerTNLInformation;
	int additionalRedundantDLQosFlowPerTNLInformation_isset;

	// ID = id-UsedRSNInformation, PRESENCE = optional L:10555
	SI_AMF_DT_RedundantPDUSessionInformation * usedRSNInformation;
	int usedRSNInformation_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-MBS-SupportIndicator, PRESENCE = optional L:10555
	uint8_t mBSSupportIndicator;
	int mBSSupportIndicator_isset;

	// ID = id-MBSSessionSetupResponseList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionSetupResponseList * mBSSessionSetupResponseList;
	int mBSSessionSetupResponseList_isset;

	// ID = id-MBSSessionFailedtoSetupList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionFailedtoSetupList * mBSSessionFailedtoSetupList;
	int mBSSessionFailedtoSetupList_isset;

	// ID = id-QoSFlowTSCList, PRESENCE = optional L:10555
	SI_AMF_DT_QoSFlowTSCList * qoSFlowTSCList;
	int qoSFlowTSCList_isset;

	// ID = id-UplinkTLContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TLContainer * uplinkTLContainer;
	int uplinkTLContainer_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingStatus, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingStatus * eCNMarkingorCongestionInformationReportingStatus;
	int eCNMarkingorCongestionInformationReportingStatus_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10555
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSuspendItemSUSReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSwitchedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PduSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10555
	SI_AMF_DT_ExpectedUEActivityBehaviour * pduSessionExpectedUEActivityBehaviour;
	int pduSessionExpectedUEActivityBehaviour_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceToBeSwitchedDLItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemHOCmd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceToReleaseItemRelCmd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionUsageReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUsetQoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUsetQoSInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PEIPSassistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PeriodicityBound_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PeriodicityBound_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PeriodicityList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PeriodicityList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PeriodicityRange_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PeriodicityRange_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PLMNAreaBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PLMNSupportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NPN-Support, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_Support * nPNSupport;
	int nPNSupport_isset;

	// ID = id-ExtendedSliceSupportList, PRESENCE = optional L:10555
	SI_AMF_DT_ExtendedSliceSupportList * extendedSliceSupportList;
	int extendedSliceSupportList_isset;

	// ID = id-OnboardingSupport, PRESENCE = optional L:10555
	uint8_t onboardingSupport;
	int onboardingSupport_isset;

	
} SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PNI_NPN_MobilityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PWSFailedCellIDList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PNI_NPN_AreaScopeofMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PNI_NPNBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QMCConfigInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QMCDeactivation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QMCDeactivation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QoERVQoEReportingPaths_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosCharacteristics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosCharacteristics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowAcceptedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10555
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	
} SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelCom_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowAdditionalInfoItemRelRes_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowAddOrModifyRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10555
	SI_AMF_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	// ID = id-RedundantQosFlowIndicator, PRESENCE = optional L:10555
	uint8_t redundantQosFlowIndicator;
	int redundantQosFlowIndicator_isset;

	// ID = id-UL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * uLNGUUPTNLInformation;
	int uLNGUUPTNLInformation_isset;

	// ID = id-DownlinkTLContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TLContainer * downlinkTLContainer;
	int downlinkTLContainer_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingRequest, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest * eCNMarkingorCongestionInformationReportingRequest;
	int eCNMarkingorCongestionInformationReportingRequest_isset;

	
} SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowAddOrModifyResponseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10555
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	// ID = id-TSCTrafficCharacteristicsFeedback, PRESENCE = optional L:10555
	SI_AMF_DT_TSCTrafficCharacteristicsFeedback * tSCTrafficCharacteristicsFeedback;
	int tSCTrafficCharacteristicsFeedback_isset;

	// ID = id-UplinkTLContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TLContainer * uplinkTLContainer;
	int uplinkTLContainer_isset;

	// ID = id-DL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * dLNGUUPTNLInformation;
	int dLNGUUPTNLInformation_isset;

	// ID = id-ANPacketDelayBudgetUL, PRESENCE = optional L:10555
	unsigned long long int aNPacketDelayBudgetUL;
	int aNPacketDelayBudgetUL_isset;

	
} SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowFeedbackItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ULForwarding, PRESENCE = optional L:10555
	uint8_t uLForwarding;
	int uLForwarding_isset;

	// ID = id-SourceTNLAddrInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TransportLayerAddress * sourceTNLAddrInfo;
	int sourceTNLAddrInfo_isset;

	// ID = id-SourceNodeTNLAddrInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TransportLayerAddress * sourceNodeTNLAddrInfo;
	int sourceNodeTNLAddrInfo_isset;

	
} SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowLevelQosParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QosMonitoringRequest, PRESENCE = optional L:10555
	uint8_t qosMonitoringRequest;
	int qosMonitoringRequest_isset;

	// ID = id-QosMonitoringReportingFrequency, PRESENCE = optional L:10555
	unsigned long long int qosMonitoringReportingFrequency;
	int qosMonitoringReportingFrequency_isset;

	// ID = id-PDUsetQoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_PDUsetQoSParameters * pDUsetQoSParameters;
	int pDUsetQoSParameters_isset;

	
} SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowWithCauseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowModifyConfirmItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowNotifyItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10555
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	// ID = id-TSCTrafficCharacteristicsFeedback, PRESENCE = optional L:10555
	SI_AMF_DT_TSCTrafficCharacteristicsFeedback * tSCTrafficCharacteristicsFeedback;
	int tSCTrafficCharacteristicsFeedback_isset;

	
} SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowParametersItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CNPacketDelayBudgetDL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetDL;
	int cNPacketDelayBudgetDL_isset;

	// ID = id-CNPacketDelayBudgetUL, PRESENCE = optional L:10555
	unsigned long long int cNPacketDelayBudgetUL;
	int cNPacketDelayBudgetUL_isset;

	// ID = id-BurstArrivalTimeDownlink, PRESENCE = optional L:10555
	SI_AMF_DT_BurstArrivalTime * burstArrivalTimeDownlink;
	int burstArrivalTimeDownlink_isset;

	
} SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowPerTNLInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowPerTNLInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowSetupRequestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10555
	SI_AMF_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	// ID = id-RedundantQosFlowIndicator, PRESENCE = optional L:10555
	uint8_t redundantQosFlowIndicator;
	int redundantQosFlowIndicator_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingRequest, PRESENCE = optional L:10555
	SI_AMF_DT_ECNMarkingorCongestionInformationReportingRequest * eCNMarkingorCongestionInformationReportingRequest;
	int eCNMarkingorCongestionInformationReportingRequest_isset;

	
} SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowItemWithDataForwarding_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10555
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	
} SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QosFlowToBeForwardedItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QoSFlowTSCItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_QoSFlowsUsageReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANfeedbacktype_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANfeedbacktype_proactive_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANfeedbacktype_reactive_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANStatusTransfer_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANTimingSynchronisationStatusInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RAN_TSSScope_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RANTSSCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RATRestrictions_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedRATRestrictionInformation, PRESENCE = optional L:10555
	SI_AMF_DT_ExtendedRATRestrictionInformation * extendedRATRestrictionInformation;
	int extendedRATRestrictionInformation_isset;

	
} SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RecommendedCellsForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RecommendedCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RecommendedRANNodesForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RecommendedRANNodeItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RedundantPDUSessionInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionPairID, PRESENCE = optional L:10555
	unsigned long long int pDUSessionPairID;
	int pDUSessionPairID_isset;

	
} SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ResetType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ResetType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RIMInformationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RIMInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RIMInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RSPPQoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_RSPPFlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ScheduledCommunicationTime_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SecondaryRATUsageInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SecondaryRATDataUsageReportTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SecurityContext_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SecurityContext_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SecurityIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MaximumIntegrityProtectedDataRate-DL, PRESENCE = optional L:10555
	uint8_t maximumIntegrityProtectedDataRateDL;
	int maximumIntegrityProtectedDataRateDL_isset;

	
} SI_AMF_DT_PDU_SecurityIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SecurityResult_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SecurityResult_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SensorMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SensorMeasConfigNameItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SensorNameConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SensorNameConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ServedGUAMIItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GUAMIType, PRESENCE = optional L:10555
	uint8_t gUAMIType;
	int gUAMIType_isset;

	
} SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_ServiceAreaInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SharedNGU_MulticastTNLInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SliceOverloadItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SliceSupportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SliceSupportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SliceSupportQMC_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPN_MobilityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EquivalentSNPNsList, PRESENCE = optional L:10555
	SI_AMF_DT_EquivalentSNPNsList * equivalentSNPNsList;
	int equivalentSNPNsList_isset;

	
} SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_S_NSSAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_S_NSSAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SONConfigurationTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SONInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SONInformationReport, PRESENCE = mandatory L:10555
	SI_AMF_DT_SONInformationReport * sONInformationReport;
	int sONInformationReport_isset;

	
} SI_AMF_DT_PDU_SONInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SONInformationReply_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SONInformationReply_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SONInformationReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SuccessfulHandoverReportList, PRESENCE = mandatory L:10555
	SI_AMF_DT_SuccessfulHandoverReportList * successfulHandoverReportList;
	int successfulHandoverReportList_isset;

	// ID = id-SuccessfulPSCellChangeReportList, PRESENCE = mandatory L:10555
	SI_AMF_DT_SuccessfulPSCellChangeReportList * successfulPSCellChangeReportList;
	int successfulPSCellChangeReportList_isset;

	
} SI_AMF_DT_PDU_SONInformationReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPN_CellBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPNCellIdListforMDTItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPN_TAIBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPNTAIListforMDTItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPN_BasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SNPNListforMDTItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SuccessfulHandoverReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SuccessfulPSCellChangeReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SgNB-UE-X2AP-ID, PRESENCE = optional L:10555
	unsigned long long int sgNBUEX2APID;
	int sgNBUEX2APID_isset;

	// ID = id-UEHistoryInformationFromTheUE, PRESENCE = optional L:10555
	SI_AMF_DT_UEHistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-SourceNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_SourceNodeID * sourceNodeID;
	int sourceNodeID_isset;

	// ID = id-UEContextReferenceAtSource, PRESENCE = optional L:10555
	unsigned long long int uEContextReferenceAtSource;
	int uEContextReferenceAtSource_isset;

	// ID = id-MBS-ActiveSessionInformation-SourcetoTargetList, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_ActiveSessionInformation_SourcetoTargetList * mBSActiveSessionInformationSourcetoTargetList;
	int mBSActiveSessionInformationSourcetoTargetList_isset;

	// ID = id-QMCConfigInfo, PRESENCE = optional L:10555
	SI_AMF_DT_QMCConfigInfo * qMCConfigInfo;
	int qMCConfigInfo_isset;

	// ID = id-NGAPIESupportInformationRequestList, PRESENCE = optional L:10555
	SI_AMF_DT_NGAPIESupportInformationRequestList * nGAPIESupportInformationRequestList;
	int nGAPIESupportInformationRequestList_isset;

	// ID = id-CandidateRelayUEInformationList, PRESENCE = optional L:10555
	SI_AMF_DT_CandidateRelayUEInformationList * candidateRelayUEInformationList;
	int candidateRelayUEInformationList_isset;

	// ID = id-TimeBasedHandoverInformation, PRESENCE = optional L:10555
	SI_AMF_DT_TimeBasedHandoverInformation * timeBasedHandoverInformation;
	int timeBasedHandoverInformation_isset;

	// ID = id-SourceSN-to-TargetSN-QMCInfo, PRESENCE = optional L:10555
	SI_AMF_DT_QMCConfigInfo * sourceSNtoTargetSNQMCInfo;
	int sourceSNtoTargetSNQMCInfo_isset;

	
} SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SourceNodeID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SourceNodeID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SourceRANNodeID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SourceToTarget_AMFInformationReroute_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SupportedTAItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ConfiguredTACIndication, PRESENCE = optional L:10555
	uint8_t configuredTACIndication;
	int configuredTACIndication_isset;

	// ID = id-RAT-Information, PRESENCE = optional L:10555
	uint8_t rATInformation;
	int rATInformation_isset;

	
} SI_AMF_DT_PDU_SupportedTAItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SLPositioningRangingServiceInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_SLPositioningRangingQoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIBroadcastEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIBroadcastNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAICancelledEUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAICancelledNR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIListForInactiveItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIListForPagingItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAINSAGSupportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargeteNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetHomeENB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TargetRNC-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_TargetRNC_ID * targetRNCID;
	int targetRNCID_isset;

	// ID = id-TargetHomeENB-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_TargetHomeENB_ID * targetHomeENBID;
	int targetHomeENBID_isset;

	
} SI_AMF_DT_PDU_TargetID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DAPSResponseInfoList, PRESENCE = optional L:10555
	SI_AMF_DT_DAPSResponseInfoList * dAPSResponseInfoList;
	int dAPSResponseInfoList_isset;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10555
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-MBS-ActiveSessionInformation-TargettoSourceList, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_ActiveSessionInformation_TargettoSourceList * mBSActiveSessionInformationTargettoSourceList;
	int mBSActiveSessionInformationTargettoSourceList_isset;

	// ID = id-NGAPIESupportInformationResponseList, PRESENCE = optional L:10555
	SI_AMF_DT_NGAPIESupportInformationResponseList * nGAPIESupportInformationResponseList;
	int nGAPIESupportInformationResponseList_isset;

	
} SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGAPIESupportInformationResponseList, PRESENCE = optional L:10555
	SI_AMF_DT_NGAPIESupportInformationResponseList * nGAPIESupportInformationResponseList;
	int nGAPIESupportInformationResponseList_isset;

	
} SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetNSSAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetNSSAIInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetRANNodeID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Selected-Target-SNPN-Identity, PRESENCE = optional L:10555
	SI_AMF_DT_NID * selectedTargetSNPNIdentity;
	int selectedTargetSNPNIdentity_isset;

	
} SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetRANNodeID_RIM_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetRANNodeID_SON_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NR-CGI, PRESENCE = optional L:10555
	SI_AMF_DT_NR_CGI * nRCGI;
	int nRCGI_isset;

	
} SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TargetRNC_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TimeBasedHandoverInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TimeSyncAssistanceInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ClockQualityReportingControlInfo, PRESENCE = optional L:10555
	SI_AMF_DT_ClockQualityReportingControlInfo * clockQualityReportingControlInfo;
	int clockQualityReportingControlInfo_isset;

	
} SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TNGF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TNGF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TNLAssociationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TooearlyIntersystemHO_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TraceActivation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MDTConfiguration, PRESENCE = optional L:10555
	SI_AMF_DT_MDT_Configuration * mDTConfiguration;
	int mDTConfiguration_isset;

	// ID = id-TraceCollectionEntityURI, PRESENCE = optional L:10555
	SI_AMF_DT_URI_address * traceCollectionEntityURI;
	int traceCollectionEntityURI_isset;

	
} SI_AMF_DT_PDU_TraceActivation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TAIBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TABasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TABasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TABasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TABasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TWIF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TWIF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TSCAssistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SurvivalTime, PRESENCE = optional L:10555
	unsigned long long int survivalTime;
	int survivalTime_isset;

	// ID = id-RANfeedbacktype, PRESENCE = optional L:10555
	SI_AMF_DT_RANfeedbacktype * rANfeedbacktype;
	int rANfeedbacktype_isset;

	// ID = id-N6JitterInformation, PRESENCE = optional L:10555
	SI_AMF_DT_N6JitterInformation * n6JitterInformation;
	int n6JitterInformation_isset;

	
} SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TSCTrafficCharacteristics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TSCTrafficCharacteristicsFeedback_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_TSCFeedbackInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEAppLayerMeasInfoItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEAppLayerMeasConfigInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AssistanceInformationQoE-Meas, PRESENCE = optional L:10555
	unsigned long long int assistanceInformationQoEMeas;
	int assistanceInformationQoEMeas_isset;

	// ID = id-MBSCommServiceType, PRESENCE = optional L:10555
	uint8_t mBSCommServiceType;
	int mBSCommServiceType_isset;

	// ID = id-QoERVQoEReportingPaths, PRESENCE = optional L:10555
	SI_AMF_DT_QoERVQoEReportingPaths * qoERVQoEReportingPaths;
	int qoERVQoEReportingPaths_isset;

	
} SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UE_associatedLogicalNG_connectionItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextResumeRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextResumeResponseTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextSuspendRequestTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UE_DifferentiationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEHistoryInformationFromTheUE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEIdentityIndexValue_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UE_NGAP_IDs_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UE_NGAP_ID_pair_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEPagingIdentity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UEPresenceInAreaOfInterestItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERadioCapabilityForPagingOfNB-IoT, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityForPagingOfNB_IoT * uERadioCapabilityForPagingOfNBIoT;
	int uERadioCapabilityForPagingOfNBIoT_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UERLFReportContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UESecurityCapabilities_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UESliceMaximumBitRateItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UL_CP_SecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UL_NGU_UP_TNLModifyItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-RedundantDL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantDLNGUUPTNLInformation;
	int redundantDLNGUUPTNLInformation_isset;

	
} SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UnavailableGUAMIItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UPTransportLayerInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UPTransportLayerInformationItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CommonNetworkInstance, PRESENCE = optional L:10555
	SI_AMF_DT_CommonNetworkInstance * commonNetworkInstance;
	int commonNetworkInstance_isset;

	
} SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UPTransportLayerInformationPairItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UserLocationInformationTNGF, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformationTNGF * userLocationInformationTNGF;
	int userLocationInformationTNGF_isset;

	// ID = id-UserLocationInformationTWIF, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformationTWIF * userLocationInformationTWIF;
	int userLocationInformationTWIF_isset;

	// ID = id-UserLocationInformationW-AGF, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformationW_AGF * userLocationInformationWAGF;
	int userLocationInformationWAGF_isset;

	// ID = id-UserLocationInformationN3IWF-without-PortNumber, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformationN3IWF_without_PortNumber * userLocationInformationN3IWFwithoutPortNumber;
	int userLocationInformationN3IWFwithoutPortNumber_isset;

	
} SI_AMF_DT_PDU_UserLocationInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationEUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PSCellInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NGRAN_CGI * pSCellInformation;
	int pSCellInformation_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationN3IWF_with_PortNumber_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAI, PRESENCE = optional L:10555
	SI_AMF_DT_TAI * tAI;
	int tAI_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationN3IWF_without_PortNumber_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationTNGF_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAI, PRESENCE = optional L:10555
	SI_AMF_DT_TAI * tAI;
	int tAI_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationTWIF_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAI, PRESENCE = optional L:10555
	SI_AMF_DT_TAI * tAI;
	int tAI_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationW_AGF_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalCable-ID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalCable_ID * globalCableID;
	int globalCableID_isset;

	// ID = id-HFCNode-ID-new, PRESENCE = mandatory L:10555
	SI_AMF_DT_HFCNode_ID_new * hFCNodeIDnew;
	int hFCNodeIDnew_isset;

	// ID = id-GlobalCable-ID-new, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalCable_ID_new * globalCableIDnew;
	int globalCableIDnew_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserLocationInformationNR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PSCellInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NGRAN_CGI * pSCellInformation;
	int pSCellInformation_isset;

	// ID = id-NID, PRESENCE = optional L:10555
	SI_AMF_DT_NID * nID;
	int nID_isset;

	// ID = id-NRNTNTAIInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NRNTNTAIInformation * nRNTNTAIInformation;
	int nRNTNTAIInformation_isset;

	// ID = id-MobileIAB-MTUserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_MobileIAB_MTUserLocationInformation * mobileIABMTUserLocationInformation;
	int mobileIABMTUserLocationInformation_isset;

	
} SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserPlaneFailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_UserPlaneSecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_VolumeTimedReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_W_AGF_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_W_AGF_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_WarningAreaList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_WarningAreaList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_WLANMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_WLANMeasConfigNameItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_WUS_Assistance_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_XnExtTLA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SCTP-TLAs, PRESENCE = optional L:10555
	SI_AMF_DT_SCTP_TLAs * sCTPTLAs;
	int sCTPTLAs_isset;

	
} SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_XnTNLConfigurationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceSetup  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANPagingPriority, PRESENCE = optional L:10555
	unsigned long long int rANPagingPriority;
	int rANPagingPriority_isset;

	// ID = id-NAS-PDU, PRESENCE = optional L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-PDUSessionResourceSetupListSUReq, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceSetupListSUReq * pDUSessionResourceSetupListSUReq;
	int pDUSessionResourceSetupListSUReq_isset;

	// ID = id-UEAggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_UEAggregateMaximumBitRate * uEAggregateMaximumBitRate;
	int uEAggregateMaximumBitRate_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10555
	SI_AMF_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupRequest;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceSetup  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceSetupListSURes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceSetupListSURes * pDUSessionResourceSetupListSURes;
	int pDUSessionResourceSetupListSURes_isset;

	// ID = id-PDUSessionResourceFailedToSetupListSURes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToSetupListSURes * pDUSessionResourceFailedToSetupListSURes;
	int pDUSessionResourceFailedToSetupListSURes_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupResponse;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceRelease  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleaseCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANPagingPriority, PRESENCE = optional L:10555
	unsigned long long int rANPagingPriority;
	int rANPagingPriority_isset;

	// ID = id-NAS-PDU, PRESENCE = optional L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-PDUSessionResourceToReleaseListRelCmd, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceToReleaseListRelCmd * pDUSessionResourceToReleaseListRelCmd;
	int pDUSessionResourceToReleaseListRelCmd_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceRelease  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceReleaseResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceReleasedListRelRes, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceReleasedListRelRes * pDUSessionResourceReleasedListRelRes;
	int pDUSessionResourceReleasedListRelRes_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceModify  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANPagingPriority, PRESENCE = optional L:10555
	unsigned long long int rANPagingPriority;
	int rANPagingPriority_isset;

	// ID = id-PDUSessionResourceModifyListModReq, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceModifyListModReq * pDUSessionResourceModifyListModReq;
	int pDUSessionResourceModifyListModReq_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyRequest;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceModify  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceModifyListModRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceModifyListModRes * pDUSessionResourceModifyListModRes;
	int pDUSessionResourceModifyListModRes_isset;

	// ID = id-PDUSessionResourceFailedToModifyListModRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToModifyListModRes * pDUSessionResourceFailedToModifyListModRes;
	int pDUSessionResourceFailedToModifyListModRes_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyResponse;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceNotify  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceNotify
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceNotifyList, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceNotifyList * pDUSessionResourceNotifyList;
	int pDUSessionResourceNotifyList_isset;

	// ID = id-PDUSessionResourceReleasedListNot, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceReleasedListNot * pDUSessionResourceReleasedListNot;
	int pDUSessionResourceReleasedListNot_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceNotify;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceModifyIndication  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceModifyListModInd, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceModifyListModInd * pDUSessionResourceModifyListModInd;
	int pDUSessionResourceModifyListModInd_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyIndication;


//ELEMENTARY-PROCEDURE = [2] pDUSessionResourceModifyIndication  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceModifyListModCfm, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceModifyListModCfm * pDUSessionResourceModifyListModCfm;
	int pDUSessionResourceModifyListModCfm_isset;

	// ID = id-PDUSessionResourceFailedToModifyListModCfm, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToModifyListModCfm * pDUSessionResourceFailedToModifyListModCfm;
	int pDUSessionResourceFailedToModifyListModCfm_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10515

// L:10517
typedef struct __si_amf_dt_InitialContextSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-OldAMF, PRESENCE = optional L:10555
	SI_AMF_DT_AMFName * oldAMF;
	int oldAMF_isset;

	// ID = id-UEAggregateMaximumBitRate, PRESENCE = conditional L:10555
	SI_AMF_DT_UEAggregateMaximumBitRate * uEAggregateMaximumBitRate;
	int uEAggregateMaximumBitRate_isset;

	// ID = id-CoreNetworkAssistanceInformationForInactive, PRESENCE = optional L:10555
	SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * coreNetworkAssistanceInformationForInactive;
	int coreNetworkAssistanceInformationForInactive_isset;

	// ID = id-GUAMI, PRESENCE = mandatory L:10555
	SI_AMF_DT_GUAMI * gUAMI;
	int gUAMI_isset;

	// ID = id-PDUSessionResourceSetupListCxtReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceSetupListCxtReq * pDUSessionResourceSetupListCxtReq;
	int pDUSessionResourceSetupListCxtReq_isset;

	// ID = id-AllowedNSSAI, PRESENCE = mandatory L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10555
	SI_AMF_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-SecurityKey, PRESENCE = mandatory L:10555
	SI_AMF_DT_SecurityKey * securityKey;
	int securityKey_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10555
	SI_AMF_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-MobilityRestrictionList, PRESENCE = optional L:10555
	SI_AMF_DT_MobilityRestrictionList * mobilityRestrictionList;
	int mobilityRestrictionList_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-IndexToRFSP, PRESENCE = optional L:10555
	unsigned long long int indexToRFSP;
	int indexToRFSP_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10555
	SI_AMF_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-NAS-PDU, PRESENCE = optional L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-EmergencyFallbackIndicator, PRESENCE = optional L:10555
	SI_AMF_DT_EmergencyFallbackIndicator * emergencyFallbackIndicator;
	int emergencyFallbackIndicator_isset;

	// ID = id-RRCInactiveTransitionReportRequest, PRESENCE = optional L:10555
	uint8_t rRCInactiveTransitionReportRequest;
	int rRCInactiveTransitionReportRequest_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-RedirectionVoiceFallback, PRESENCE = optional L:10555
	uint8_t redirectionVoiceFallback;
	int redirectionVoiceFallback_isset;

	// ID = id-LocationReportingRequestType, PRESENCE = optional L:10555
	SI_AMF_DT_LocationReportingRequestType * locationReportingRequestType;
	int locationReportingRequestType_isset;

	// ID = id-CNAssistedRANTuning, PRESENCE = optional L:10555
	SI_AMF_DT_CNAssistedRANTuning * cNAssistedRANTuning;
	int cNAssistedRANTuning_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10555
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10555
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-Extended-ConnectedTime, PRESENCE = optional L:10555
	unsigned long long int extendedConnectedTime;
	int extendedConnectedTime_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEUESidelinkAggregateMaximumBitrate;
	int lTEUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-UE-UP-CIoT-Support, PRESENCE = optional L:10555
	uint8_t uEUPCIoTSupport;
	int uEUPCIoTSupport_isset;

	// ID = id-RGLevelWirelineAccessCharacteristics, PRESENCE = optional L:10555
	SI_AMF_DT_RGLevelWirelineAccessCharacteristics * rGLevelWirelineAccessCharacteristics;
	int rGLevelWirelineAccessCharacteristics_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10555
	SI_AMF_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-TimeSyncAssistanceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TimeSyncAssistanceInfo * timeSyncAssistanceInfo;
	int timeSyncAssistanceInfo_isset;

	// ID = id-QMCConfigInfo, PRESENCE = optional L:10555
	SI_AMF_DT_QMCConfigInfo * qMCConfigInfo;
	int qMCConfigInfo_isset;

	// ID = id-TargetNSSAIInformation, PRESENCE = optional L:10555
	SI_AMF_DT_TargetNSSAIInformation * targetNSSAIInformation;
	int targetNSSAIInformation_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10555
	SI_AMF_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	// ID = id-FiveG-ProSeAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveG-ProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-FiveG-ProSePC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-NetworkControlledRepeaterAuthorized, PRESENCE = optional L:10555
	uint8_t networkControlledRepeaterAuthorized;
	int networkControlledRepeaterAuthorized_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10555
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-NR-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NR_A2X_ServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTE-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTE_A2X_ServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-NR-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTE-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-A2X-PC5-QoS-Parameters, PRESENCE = optional L:10555
	SI_AMF_DT_A2X_PC5_QoS_Parameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-MobileIAB-Authorized, PRESENCE = optional L:10555
	uint8_t mobileIABAuthorized;
	int mobileIABAuthorized_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	// ID = id-SLPositioningRangingServiceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_SLPositioningRangingServiceInfo * sLPositioningRangingServiceInfo;
	int sLPositioningRangingServiceInfo_isset;

	
} SI_AMF_DT_PDU_InitialContextSetupRequest;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10515

// L:10517
typedef struct __si_amf_dt_InitialContextSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceSetupListCxtRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceSetupListCxtRes * pDUSessionResourceSetupListCxtRes;
	int pDUSessionResourceSetupListCxtRes_isset;

	// ID = id-PDUSessionResourceFailedToSetupListCxtRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtRes * pDUSessionResourceFailedToSetupListCxtRes;
	int pDUSessionResourceFailedToSetupListCxtRes_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_InitialContextSetupResponse;


//ELEMENTARY-PROCEDURE = [2] initialContextSetup  L:10515

// L:10517
typedef struct __si_amf_dt_InitialContextSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceFailedToSetupListCxtFail, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToSetupListCxtFail * pDUSessionResourceFailedToSetupListCxtFail;
	int pDUSessionResourceFailedToSetupListCxtFail_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_InitialContextSetupFailure;


//ELEMENTARY-PROCEDURE = [2] uEContextReleaseRequest  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceListCxtRelReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceListCxtRelReq * pDUSessionResourceListCxtRelReq;
	int pDUSessionResourceListCxtRelReq_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_UEContextReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextRelease  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextReleaseCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-NGAP-IDs, PRESENCE = mandatory L:10555
	SI_AMF_DT_UE_NGAP_IDs * uENGAPIDs;
	int uENGAPIDs_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_UEContextReleaseCommand;


//ELEMENTARY-PROCEDURE = [2] uEContextRelease  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextReleaseComplete
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-InfoOnRecommendedCellsAndRANNodesForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * infoOnRecommendedCellsAndRANNodesForPaging;
	int infoOnRecommendedCellsAndRANNodesForPaging_isset;

	// ID = id-PDUSessionResourceListCxtRelCpl, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceListCxtRelCpl * pDUSessionResourceListCxtRelCpl;
	int pDUSessionResourceListCxtRelCpl_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-PagingAssisDataforCEcapabUE, PRESENCE = optional L:10555
	SI_AMF_DT_PagingAssisDataforCEcapabUE * pagingAssisDataforCEcapabUE;
	int pagingAssisDataforCEcapabUE_isset;

	
} SI_AMF_DT_PDU_UEContextReleaseComplete;


//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextResumeRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RRC-Resume-Cause, PRESENCE = mandatory L:10555
	uint8_t rRCResumeCause;
	int rRCResumeCause_isset;

	// ID = id-PDUSessionResourceResumeListRESReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceResumeListRESReq * pDUSessionResourceResumeListRESReq;
	int pDUSessionResourceResumeListRESReq_isset;

	// ID = id-PDUSessionResourceFailedToResumeListRESReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToResumeListRESReq * pDUSessionResourceFailedToResumeListRESReq;
	int pDUSessionResourceFailedToResumeListRESReq_isset;

	// ID = id-Suspend-Request-Indication, PRESENCE = optional L:10555
	uint8_t suspendRequestIndication;
	int suspendRequestIndication_isset;

	// ID = id-InfoOnRecommendedCellsAndRANNodesForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * infoOnRecommendedCellsAndRANNodesForPaging;
	int infoOnRecommendedCellsAndRANNodesForPaging_isset;

	// ID = id-PagingAssisDataforCEcapabUE, PRESENCE = optional L:10555
	SI_AMF_DT_PagingAssisDataforCEcapabUE * pagingAssisDataforCEcapabUE;
	int pagingAssisDataforCEcapabUE_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_UEContextResumeRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextResumeResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceResumeListRESRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceResumeListRESRes * pDUSessionResourceResumeListRESRes;
	int pDUSessionResourceResumeListRESRes_isset;

	// ID = id-PDUSessionResourceFailedToResumeListRESRes, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToResumeListRESRes * pDUSessionResourceFailedToResumeListRESRes;
	int pDUSessionResourceFailedToResumeListRESRes_isset;

	// ID = id-SecurityContext, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-Suspend-Response-Indication, PRESENCE = optional L:10555
	uint8_t suspendResponseIndication;
	int suspendResponseIndication_isset;

	// ID = id-Extended-ConnectedTime, PRESENCE = optional L:10555
	unsigned long long int extendedConnectedTime;
	int extendedConnectedTime_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextResumeResponse;


//ELEMENTARY-PROCEDURE = [2] uEContextResume  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextResumeFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextResumeFailure;


//ELEMENTARY-PROCEDURE = [2] uEContextSuspend  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextSuspendRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-InfoOnRecommendedCellsAndRANNodesForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_InfoOnRecommendedCellsAndRANNodesForPaging * infoOnRecommendedCellsAndRANNodesForPaging;
	int infoOnRecommendedCellsAndRANNodesForPaging_isset;

	// ID = id-PagingAssisDataforCEcapabUE, PRESENCE = optional L:10555
	SI_AMF_DT_PagingAssisDataforCEcapabUE * pagingAssisDataforCEcapabUE;
	int pagingAssisDataforCEcapabUE_isset;

	// ID = id-PDUSessionResourceSuspendListSUSReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceSuspendListSUSReq * pDUSessionResourceSuspendListSUSReq;
	int pDUSessionResourceSuspendListSUSReq_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_UEContextSuspendRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextSuspend  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextSuspendResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-SecurityContext, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextSuspendResponse;


//ELEMENTARY-PROCEDURE = [2] uEContextSuspend  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextSuspendFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextSuspendFailure;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextModificationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANPagingPriority, PRESENCE = optional L:10555
	unsigned long long int rANPagingPriority;
	int rANPagingPriority_isset;

	// ID = id-SecurityKey, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityKey * securityKey;
	int securityKey_isset;

	// ID = id-IndexToRFSP, PRESENCE = optional L:10555
	unsigned long long int indexToRFSP;
	int indexToRFSP_isset;

	// ID = id-UEAggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_UEAggregateMaximumBitRate * uEAggregateMaximumBitRate;
	int uEAggregateMaximumBitRate_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = optional L:10555
	SI_AMF_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-CoreNetworkAssistanceInformationForInactive, PRESENCE = optional L:10555
	SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * coreNetworkAssistanceInformationForInactive;
	int coreNetworkAssistanceInformationForInactive_isset;

	// ID = id-EmergencyFallbackIndicator, PRESENCE = optional L:10555
	SI_AMF_DT_EmergencyFallbackIndicator * emergencyFallbackIndicator;
	int emergencyFallbackIndicator_isset;

	// ID = id-NewAMF-UE-NGAP-ID, PRESENCE = optional L:10555
	unsigned long long int newAMFUENGAPID;
	int newAMFUENGAPID_isset;

	// ID = id-RRCInactiveTransitionReportRequest, PRESENCE = optional L:10555
	uint8_t rRCInactiveTransitionReportRequest;
	int rRCInactiveTransitionReportRequest_isset;

	// ID = id-NewGUAMI, PRESENCE = optional L:10555
	SI_AMF_DT_GUAMI * newGUAMI;
	int newGUAMI_isset;

	// ID = id-CNAssistedRANTuning, PRESENCE = optional L:10555
	SI_AMF_DT_CNAssistedRANTuning * cNAssistedRANTuning;
	int cNAssistedRANTuning_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10555
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10555
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEUESidelinkAggregateMaximumBitrate;
	int lTEUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-RGLevelWirelineAccessCharacteristics, PRESENCE = optional L:10555
	SI_AMF_DT_RGLevelWirelineAccessCharacteristics * rGLevelWirelineAccessCharacteristics;
	int rGLevelWirelineAccessCharacteristics_isset;

	// ID = id-TimeSyncAssistanceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TimeSyncAssistanceInfo * timeSyncAssistanceInfo;
	int timeSyncAssistanceInfo_isset;

	// ID = id-QMCConfigInfo, PRESENCE = optional L:10555
	SI_AMF_DT_QMCConfigInfo * qMCConfigInfo;
	int qMCConfigInfo_isset;

	// ID = id-QMCDeactivation, PRESENCE = optional L:10555
	SI_AMF_DT_QMCDeactivation * qMCDeactivation;
	int qMCDeactivation_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10555
	SI_AMF_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	// ID = id-ManagementBasedMDTPLMNModificationList, PRESENCE = optional L:10555
	SI_AMF_DT_MDTPLMNModificationList * managementBasedMDTPLMNModificationList;
	int managementBasedMDTPLMNModificationList_isset;

	// ID = id-FiveG-ProSeAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveG-ProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-FiveG-ProSePC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-NetworkControlledRepeaterAuthorized, PRESENCE = optional L:10555
	uint8_t networkControlledRepeaterAuthorized;
	int networkControlledRepeaterAuthorized_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10555
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-NR-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NR_A2X_ServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTE-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTE_A2X_ServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-NR-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTE-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-A2X-PC5-QoS-Parameters, PRESENCE = optional L:10555
	SI_AMF_DT_A2X_PC5_QoS_Parameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-MobileIAB-Authorized, PRESENCE = optional L:10555
	uint8_t mobileIABAuthorized;
	int mobileIABAuthorized_isset;

	// ID = id-SLPositioningRangingServiceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_SLPositioningRangingServiceInfo * sLPositioningRangingServiceInfo;
	int sLPositioningRangingServiceInfo_isset;

	
} SI_AMF_DT_PDU_UEContextModificationRequest;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextModificationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RRCState, PRESENCE = optional L:10555
	uint8_t rRCState;
	int rRCState_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextModificationResponse;


//ELEMENTARY-PROCEDURE = [2] uEContextModification  L:10515

// L:10517
typedef struct __si_amf_dt_UEContextModificationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UEContextModificationFailure;


//ELEMENTARY-PROCEDURE = [2] rRCInactiveTransitionReport  L:10515

// L:10517
typedef struct __si_amf_dt_RRCInactiveTransitionReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RRCState, PRESENCE = mandatory L:10555
	uint8_t rRCState;
	int rRCState_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_RRCInactiveTransitionReport;


//ELEMENTARY-PROCEDURE = [2] retrieveUEInformation  L:10515

// L:10517
typedef struct __si_amf_dt_RetrieveUEInformation
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveG-S-TMSI, PRESENCE = mandatory L:10555
	SI_AMF_DT_FiveG_S_TMSI * fiveGSTMSI;
	int fiveGSTMSI_isset;

	
} SI_AMF_DT_PDU_RetrieveUEInformation;


//ELEMENTARY-PROCEDURE = [2] uEInformationTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_UEInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveG-S-TMSI, PRESENCE = mandatory L:10555
	SI_AMF_DT_FiveG_S_TMSI * fiveGSTMSI;
	int fiveGSTMSI_isset;

	// ID = id-NB-IoT-UEPriority, PRESENCE = optional L:10555
	unsigned long long int nBIoTUEPriority;
	int nBIoTUEPriority_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-S-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10555
	SI_AMF_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	
} SI_AMF_DT_PDU_UEInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] rANCPRelocationIndication  L:10515

// L:10517
typedef struct __si_amf_dt_RANCPRelocationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-FiveG-S-TMSI, PRESENCE = mandatory L:10555
	SI_AMF_DT_FiveG_S_TMSI * fiveGSTMSI;
	int fiveGSTMSI_isset;

	// ID = id-EUTRA-CGI, PRESENCE = mandatory L:10555
	SI_AMF_DT_EUTRA_CGI * eUTRACGI;
	int eUTRACGI_isset;

	// ID = id-TAI, PRESENCE = mandatory L:10555
	SI_AMF_DT_TAI * tAI;
	int tAI_isset;

	// ID = id-UL-CP-SecurityInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UL_CP_SecurityInformation * uLCPSecurityInformation;
	int uLCPSecurityInformation_isset;

	
} SI_AMF_DT_PDU_RANCPRelocationIndication;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10555
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-TargetID, PRESENCE = mandatory L:10555
	SI_AMF_DT_TargetID * targetID;
	int targetID_isset;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10555
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-PDUSessionResourceListHORqd, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceListHORqd * pDUSessionResourceListHORqd;
	int pDUSessionResourceListHORqd_isset;

	// ID = id-SourceToTarget-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_SourceToTarget_TransparentContainer * sourceToTargetTransparentContainer;
	int sourceToTargetTransparentContainer_isset;

	
} SI_AMF_DT_PDU_HandoverRequired;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverCommand
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10555
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-NASSecurityParametersFromNGRAN, PRESENCE = conditional L:10555
	SI_AMF_DT_NASSecurityParametersFromNGRAN * nASSecurityParametersFromNGRAN;
	int nASSecurityParametersFromNGRAN_isset;

	// ID = id-PDUSessionResourceHandoverList, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceHandoverList * pDUSessionResourceHandoverList;
	int pDUSessionResourceHandoverList_isset;

	// ID = id-PDUSessionResourceToReleaseListHOCmd, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceToReleaseListHOCmd * pDUSessionResourceToReleaseListHOCmd;
	int pDUSessionResourceToReleaseListHOCmd_isset;

	// ID = id-TargetToSource-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_TargetToSource_TransparentContainer * targetToSourceTransparentContainer;
	int targetToSourceTransparentContainer_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_HandoverCommand;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverPreparationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-TargettoSource-Failure-TransparentContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TargettoSource_Failure_TransparentContainer * targettoSourceFailureTransparentContainer;
	int targettoSourceFailureTransparentContainer_isset;

	
} SI_AMF_DT_PDU_HandoverPreparationFailure;


//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-HandoverType, PRESENCE = mandatory L:10555
	uint8_t handoverType;
	int handoverType_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-UEAggregateMaximumBitRate, PRESENCE = mandatory L:10555
	SI_AMF_DT_UEAggregateMaximumBitRate * uEAggregateMaximumBitRate;
	int uEAggregateMaximumBitRate_isset;

	// ID = id-CoreNetworkAssistanceInformationForInactive, PRESENCE = optional L:10555
	SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * coreNetworkAssistanceInformationForInactive;
	int coreNetworkAssistanceInformationForInactive_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10555
	SI_AMF_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-SecurityContext, PRESENCE = mandatory L:10555
	SI_AMF_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-NewSecurityContextInd, PRESENCE = optional L:10555
	uint8_t newSecurityContextInd;
	int newSecurityContextInd_isset;

	// ID = id-NASC, PRESENCE = optional L:10555
	SI_AMF_DT_NAS_PDU * nASC;
	int nASC_isset;

	// ID = id-PDUSessionResourceSetupListHOReq, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceSetupListHOReq * pDUSessionResourceSetupListHOReq;
	int pDUSessionResourceSetupListHOReq_isset;

	// ID = id-AllowedNSSAI, PRESENCE = mandatory L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10555
	SI_AMF_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10555
	SI_AMF_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-SourceToTarget-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_SourceToTarget_TransparentContainer * sourceToTargetTransparentContainer;
	int sourceToTargetTransparentContainer_isset;

	// ID = id-MobilityRestrictionList, PRESENCE = optional L:10555
	SI_AMF_DT_MobilityRestrictionList * mobilityRestrictionList;
	int mobilityRestrictionList_isset;

	// ID = id-LocationReportingRequestType, PRESENCE = optional L:10555
	SI_AMF_DT_LocationReportingRequestType * locationReportingRequestType;
	int locationReportingRequestType_isset;

	// ID = id-RRCInactiveTransitionReportRequest, PRESENCE = optional L:10555
	uint8_t rRCInactiveTransitionReportRequest;
	int rRCInactiveTransitionReportRequest_isset;

	// ID = id-GUAMI, PRESENCE = mandatory L:10555
	SI_AMF_DT_GUAMI * gUAMI;
	int gUAMI_isset;

	// ID = id-RedirectionVoiceFallback, PRESENCE = optional L:10555
	uint8_t redirectionVoiceFallback;
	int redirectionVoiceFallback_isset;

	// ID = id-CNAssistedRANTuning, PRESENCE = optional L:10555
	SI_AMF_DT_CNAssistedRANTuning * cNAssistedRANTuning;
	int cNAssistedRANTuning_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10555
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10555
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEUESidelinkAggregateMaximumBitrate;
	int lTEUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-UE-UP-CIoT-Support, PRESENCE = optional L:10555
	uint8_t uEUPCIoTSupport;
	int uEUPCIoTSupport_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10555
	SI_AMF_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-Extended-ConnectedTime, PRESENCE = optional L:10555
	unsigned long long int extendedConnectedTime;
	int extendedConnectedTime_isset;

	// ID = id-TimeSyncAssistanceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TimeSyncAssistanceInfo * timeSyncAssistanceInfo;
	int timeSyncAssistanceInfo_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10555
	SI_AMF_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	// ID = id-FiveG-ProSeAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveG-ProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-FiveG-ProSePC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10555
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-NR-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NR_A2X_ServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTE-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTE_A2X_ServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-NR-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTE-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-A2X-PC5-QoS-Parameters, PRESENCE = optional L:10555
	SI_AMF_DT_A2X_PC5_QoS_Parameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-MobileIAB-Authorized, PRESENCE = optional L:10555
	uint8_t mobileIABAuthorized;
	int mobileIABAuthorized_isset;

	// ID = id-NoPDUSessionIndication, PRESENCE = optional L:10555
	uint8_t noPDUSessionIndication;
	int noPDUSessionIndication_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	// ID = id-SLPositioningRangingServiceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_SLPositioningRangingServiceInfo * sLPositioningRangingServiceInfo;
	int sLPositioningRangingServiceInfo_isset;

	
} SI_AMF_DT_PDU_HandoverRequest;


//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceAdmittedList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceAdmittedList * pDUSessionResourceAdmittedList;
	int pDUSessionResourceAdmittedList_isset;

	// ID = id-PDUSessionResourceFailedToSetupListHOAck, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToSetupListHOAck * pDUSessionResourceFailedToSetupListHOAck;
	int pDUSessionResourceFailedToSetupListHOAck_isset;

	// ID = id-TargetToSource-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_TargetToSource_TransparentContainer * targetToSourceTransparentContainer;
	int targetToSourceTransparentContainer_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-NPN-AccessInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_AccessInformation * nPNAccessInformation;
	int nPNAccessInformation_isset;

	// ID = id-RedCapIndication, PRESENCE = optional L:10555
	uint8_t redCapIndication;
	int redCapIndication_isset;

	// ID = id-ERedCapIndication, PRESENCE = optional L:10555
	uint8_t eRedCapIndication;
	int eRedCapIndication_isset;

	
} SI_AMF_DT_PDU_HandoverRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] handoverResourceAllocation  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-TargettoSource-Failure-TransparentContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TargettoSource_Failure_TransparentContainer * targettoSourceFailureTransparentContainer;
	int targettoSourceFailureTransparentContainer_isset;

	
} SI_AMF_DT_PDU_HandoverFailure;


//ELEMENTARY-PROCEDURE = [2] handoverNotification  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverNotify
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-NotifySourceNGRANNode, PRESENCE = optional L:10555
	uint8_t notifySourceNGRANNode;
	int notifySourceNGRANNode_isset;

	
} SI_AMF_DT_PDU_HandoverNotify;


//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-SourceAMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int sourceAMFUENGAPID;
	int sourceAMFUENGAPID_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10555
	SI_AMF_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-PDUSessionResourceToBeSwitchedDLList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceToBeSwitchedDLList * pDUSessionResourceToBeSwitchedDLList;
	int pDUSessionResourceToBeSwitchedDLList_isset;

	// ID = id-PDUSessionResourceFailedToSetupListPSReq, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceFailedToSetupListPSReq * pDUSessionResourceFailedToSetupListPSReq;
	int pDUSessionResourceFailedToSetupListPSReq_isset;

	// ID = id-RRC-Resume-Cause, PRESENCE = optional L:10555
	uint8_t rRCResumeCause;
	int rRCResumeCause_isset;

	// ID = id-RedCapIndication, PRESENCE = optional L:10555
	uint8_t redCapIndication;
	int redCapIndication_isset;

	// ID = id-ERedCapIndication, PRESENCE = optional L:10555
	uint8_t eRedCapIndication;
	int eRedCapIndication_isset;

	
} SI_AMF_DT_PDU_PathSwitchRequest;


//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = optional L:10555
	SI_AMF_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-SecurityContext, PRESENCE = mandatory L:10555
	SI_AMF_DT_SecurityContext * securityContext;
	int securityContext_isset;

	// ID = id-NewSecurityContextInd, PRESENCE = optional L:10555
	uint8_t newSecurityContextInd;
	int newSecurityContextInd_isset;

	// ID = id-PDUSessionResourceSwitchedList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceSwitchedList * pDUSessionResourceSwitchedList;
	int pDUSessionResourceSwitchedList_isset;

	// ID = id-PDUSessionResourceReleasedListPSAck, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionResourceReleasedListPSAck * pDUSessionResourceReleasedListPSAck;
	int pDUSessionResourceReleasedListPSAck_isset;

	// ID = id-AllowedNSSAI, PRESENCE = mandatory L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-CoreNetworkAssistanceInformationForInactive, PRESENCE = optional L:10555
	SI_AMF_DT_CoreNetworkAssistanceInformationForInactive * coreNetworkAssistanceInformationForInactive;
	int coreNetworkAssistanceInformationForInactive_isset;

	// ID = id-RRCInactiveTransitionReportRequest, PRESENCE = optional L:10555
	uint8_t rRCInactiveTransitionReportRequest;
	int rRCInactiveTransitionReportRequest_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-RedirectionVoiceFallback, PRESENCE = optional L:10555
	uint8_t redirectionVoiceFallback;
	int redirectionVoiceFallback_isset;

	// ID = id-CNAssistedRANTuning, PRESENCE = optional L:10555
	SI_AMF_DT_CNAssistedRANTuning * cNAssistedRANTuning;
	int cNAssistedRANTuning_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10555
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-Extended-ConnectedTime, PRESENCE = optional L:10555
	unsigned long long int extendedConnectedTime;
	int extendedConnectedTime_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRUESidelinkAggregateMaximumBitrate;
	int nRUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitrate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEUESidelinkAggregateMaximumBitrate;
	int lTEUESidelinkAggregateMaximumBitrate_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-UE-UP-CIoT-Support, PRESENCE = optional L:10555
	uint8_t uEUPCIoTSupport;
	int uEUPCIoTSupport_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10555
	SI_AMF_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-TimeSyncAssistanceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_TimeSyncAssistanceInfo * timeSyncAssistanceInfo;
	int timeSyncAssistanceInfo_isset;

	// ID = id-FiveG-ProSeAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveG-ProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-FiveG-ProSePC5QoSParameters, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_ProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-ManagementBasedMDTPLMNModificationList, PRESENCE = optional L:10555
	SI_AMF_DT_MDTPLMNModificationList * managementBasedMDTPLMNModificationList;
	int managementBasedMDTPLMNModificationList_isset;

	// ID = id-IAB-Authorized, PRESENCE = optional L:10555
	uint8_t iABAuthorized;
	int iABAuthorized_isset;

	// ID = id-AerialUEsubscriptionInformation, PRESENCE = optional L:10555
	uint8_t aerialUEsubscriptionInformation;
	int aerialUEsubscriptionInformation_isset;

	// ID = id-NR-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_NR_A2X_ServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTE-A2X-ServicesAuthorized, PRESENCE = optional L:10555
	SI_AMF_DT_LTE_A2X_ServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-NR-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_NRUESidelinkAggregateMaximumBitrate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTE-A2X-UE-PC5-AggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_LTEUESidelinkAggregateMaximumBitrate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-A2X-PC5-QoS-Parameters, PRESENCE = optional L:10555
	SI_AMF_DT_A2X_PC5_QoS_Parameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-MobileIAB-Authorized, PRESENCE = optional L:10555
	uint8_t mobileIABAuthorized;
	int mobileIABAuthorized_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	// ID = id-SLPositioningRangingServiceInfo, PRESENCE = optional L:10555
	SI_AMF_DT_SLPositioningRangingServiceInfo * sLPositioningRangingServiceInfo;
	int sLPositioningRangingServiceInfo_isset;

	
} SI_AMF_DT_PDU_PathSwitchRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] pathSwitchRequest  L:10515

// L:10517
typedef struct __si_amf_dt_PathSwitchRequestFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceReleasedListPSFail, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceReleasedListPSFail * pDUSessionResourceReleasedListPSFail;
	int pDUSessionResourceReleasedListPSFail_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_PathSwitchRequestFailure;


//ELEMENTARY-PROCEDURE = [2] handoverCancel  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverCancel
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_HandoverCancel;


//ELEMENTARY-PROCEDURE = [2] handoverCancel  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverCancelAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_HandoverCancelAcknowledge;


//ELEMENTARY-PROCEDURE = [2] handoverSuccess  L:10515

// L:10517
typedef struct __si_amf_dt_HandoverSuccess
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	
} SI_AMF_DT_PDU_HandoverSuccess;


//ELEMENTARY-PROCEDURE = [2] uplinkRANEarlyStatusTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkRANEarlyStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-EarlyStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_EarlyStatusTransfer_TransparentContainer * earlyStatusTransferTransparentContainer;
	int earlyStatusTransferTransparentContainer_isset;

	
} SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] downlinkRANEarlyStatusTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkRANEarlyStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-EarlyStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_EarlyStatusTransfer_TransparentContainer * earlyStatusTransferTransparentContainer;
	int earlyStatusTransferTransparentContainer_isset;

	
} SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] uplinkRANStatusTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkRANStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_RANStatusTransfer_TransparentContainer * rANStatusTransferTransparentContainer;
	int rANStatusTransferTransparentContainer_isset;

	
} SI_AMF_DT_PDU_UplinkRANStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] downlinkRANStatusTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkRANStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RANStatusTransfer-TransparentContainer, PRESENCE = mandatory L:10555
	SI_AMF_DT_RANStatusTransfer_TransparentContainer * rANStatusTransferTransparentContainer;
	int rANStatusTransferTransparentContainer_isset;

	
} SI_AMF_DT_PDU_DownlinkRANStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] paging  L:10515

// L:10517
typedef struct __si_amf_dt_Paging
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UEPagingIdentity, PRESENCE = mandatory L:10555
	SI_AMF_DT_UEPagingIdentity * uEPagingIdentity;
	int uEPagingIdentity_isset;

	// ID = id-PagingDRX, PRESENCE = optional L:10555
	uint8_t pagingDRX;
	int pagingDRX_isset;

	// ID = id-TAIListForPaging, PRESENCE = mandatory L:10555
	SI_AMF_DT_TAIListForPaging * tAIListForPaging;
	int tAIListForPaging_isset;

	// ID = id-PagingPriority, PRESENCE = optional L:10555
	uint8_t pagingPriority;
	int pagingPriority_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-PagingOrigin, PRESENCE = optional L:10555
	uint8_t pagingOrigin;
	int pagingOrigin_isset;

	// ID = id-AssistanceDataForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_AssistanceDataForPaging * assistanceDataForPaging;
	int assistanceDataForPaging_isset;

	// ID = id-NB-IoT-Paging-eDRXInfo, PRESENCE = optional L:10555
	SI_AMF_DT_NB_IoT_Paging_eDRXInfo * nBIoTPagingeDRXInfo;
	int nBIoTPagingeDRXInfo_isset;

	// ID = id-NB-IoT-PagingDRX, PRESENCE = optional L:10555
	uint8_t nBIoTPagingDRX;
	int nBIoTPagingDRX_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-WUS-Assistance-Information, PRESENCE = optional L:10555
	SI_AMF_DT_WUS_Assistance_Information * wUSAssistanceInformation;
	int wUSAssistanceInformation_isset;

	// ID = id-EUTRA-PagingeDRXInformation, PRESENCE = optional L:10555
	SI_AMF_DT_EUTRA_PagingeDRXInformation * eUTRAPagingeDRXInformation;
	int eUTRAPagingeDRXInformation_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-NR-PagingeDRXInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NR_PagingeDRXInformation * nRPagingeDRXInformation;
	int nRPagingeDRXInformation_isset;

	// ID = id-PagingCause, PRESENCE = optional L:10555
	uint8_t pagingCause;
	int pagingCause_isset;

	// ID = id-PEIPSassistanceInformation, PRESENCE = optional L:10555
	SI_AMF_DT_PEIPSassistanceInformation * pEIPSassistanceInformation;
	int pEIPSassistanceInformation_isset;

	
} SI_AMF_DT_PDU_Paging;


//ELEMENTARY-PROCEDURE = [2] initialUEMessage  L:10515

// L:10517
typedef struct __si_amf_dt_InitialUEMessage
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-RRCEstablishmentCause, PRESENCE = mandatory L:10555
	uint8_t rRCEstablishmentCause;
	int rRCEstablishmentCause_isset;

	// ID = id-FiveG-S-TMSI, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_S_TMSI * fiveGSTMSI;
	int fiveGSTMSI_isset;

	// ID = id-AMFSetID, PRESENCE = optional L:10555
	SI_AMF_DT_AMFSetID * aMFSetID;
	int aMFSetID_isset;

	// ID = id-UEContextRequest, PRESENCE = optional L:10555
	uint8_t uEContextRequest;
	int uEContextRequest_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-SourceToTarget-AMFInformationReroute, PRESENCE = optional L:10555
	SI_AMF_DT_SourceToTarget_AMFInformationReroute * sourceToTargetAMFInformationReroute;
	int sourceToTargetAMFInformationReroute_isset;

	// ID = id-SelectedPLMNIdentity, PRESENCE = optional L:10555
	SI_AMF_DT_PLMNIdentity * selectedPLMNIdentity;
	int selectedPLMNIdentity_isset;

	// ID = id-IABNodeIndication, PRESENCE = optional L:10555
	uint8_t iABNodeIndication;
	int iABNodeIndication_isset;

	// ID = id-CEmodeBSupport-Indicator, PRESENCE = optional L:10555
	uint8_t cEmodeBSupportIndicator;
	int cEmodeBSupportIndicator_isset;

	// ID = id-LTEM-Indication, PRESENCE = optional L:10555
	uint8_t lTEMIndication;
	int lTEMIndication_isset;

	// ID = id-EDT-Session, PRESENCE = optional L:10555
	uint8_t eDTSession;
	int eDTSession_isset;

	// ID = id-AuthenticatedIndication, PRESENCE = optional L:10555
	uint8_t authenticatedIndication;
	int authenticatedIndication_isset;

	// ID = id-NPN-AccessInformation, PRESENCE = optional L:10555
	SI_AMF_DT_NPN_AccessInformation * nPNAccessInformation;
	int nPNAccessInformation_isset;

	// ID = id-RedCapIndication, PRESENCE = optional L:10555
	uint8_t redCapIndication;
	int redCapIndication_isset;

	// ID = id-SelectedNID, PRESENCE = optional L:10555
	SI_AMF_DT_NID * selectedNID;
	int selectedNID_isset;

	// ID = id-MobileIABNodeIndication, PRESENCE = optional L:10555
	uint8_t mobileIABNodeIndication;
	int mobileIABNodeIndication_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	// ID = id-ERedCapIndication, PRESENCE = optional L:10555
	uint8_t eRedCapIndication;
	int eRedCapIndication_isset;

	// ID = id-AUN3DeviceAccessInfo, PRESENCE = optional L:10555
	SI_AMF_DT_AUN3DeviceAccessInfo * aUN3DeviceAccessInfo;
	int aUN3DeviceAccessInfo_isset;

	
} SI_AMF_DT_PDU_InitialUEMessage;


//ELEMENTARY-PROCEDURE = [2] downlinkNASTransport  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkNASTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-OldAMF, PRESENCE = optional L:10555
	SI_AMF_DT_AMFName * oldAMF;
	int oldAMF_isset;

	// ID = id-RANPagingPriority, PRESENCE = optional L:10555
	unsigned long long int rANPagingPriority;
	int rANPagingPriority_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-MobilityRestrictionList, PRESENCE = optional L:10555
	SI_AMF_DT_MobilityRestrictionList * mobilityRestrictionList;
	int mobilityRestrictionList_isset;

	// ID = id-IndexToRFSP, PRESENCE = optional L:10555
	unsigned long long int indexToRFSP;
	int indexToRFSP_isset;

	// ID = id-UEAggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_UEAggregateMaximumBitRate * uEAggregateMaximumBitRate;
	int uEAggregateMaximumBitRate_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-SRVCCOperationPossible, PRESENCE = optional L:10555
	uint8_t sRVCCOperationPossible;
	int sRVCCOperationPossible_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-Extended-ConnectedTime, PRESENCE = optional L:10555
	unsigned long long int extendedConnectedTime;
	int extendedConnectedTime_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-UECapabilityInfoRequest, PRESENCE = optional L:10555
	uint8_t uECapabilityInfoRequest;
	int uECapabilityInfoRequest_isset;

	// ID = id-EndIndication, PRESENCE = optional L:10555
	uint8_t endIndication;
	int endIndication_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-TargetNSSAIInformation, PRESENCE = optional L:10555
	SI_AMF_DT_TargetNSSAIInformation * targetNSSAIInformation;
	int targetNSSAIInformation_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10555
	SI_AMF_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	// ID = id-MobileIAB-Authorized, PRESENCE = optional L:10555
	uint8_t mobileIABAuthorized;
	int mobileIABAuthorized_isset;

	
} SI_AMF_DT_PDU_DownlinkNASTransport;


// GOT-NULL OCTET
//ELEMENTARY-PROCEDURE = [2] uplinkNASTransport  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkNASTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	//id-W-AGFIdentityInformation:OCTET
	//id-TNGFIdentityInformation:OCTET
	//id-TWIFIdentityInformation:OCTET
	
} SI_AMF_DT_PDU_UplinkNASTransport;


//ELEMENTARY-PROCEDURE = [2] nASNonDeliveryIndication  L:10515

// L:10517
typedef struct __si_amf_dt_NASNonDeliveryIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NAS-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NAS_PDU * nASPDU;
	int nASPDU_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_NASNonDeliveryIndication;


//ELEMENTARY-PROCEDURE = [2] rerouteNASRequest  L:10515

// L:10517
typedef struct __si_amf_dt_RerouteNASRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = optional L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	//id-NGAP-Message:OCTET
	// ID = id-AMFSetID, PRESENCE = mandatory L:10555
	SI_AMF_DT_AMFSetID * aMFSetID;
	int aMFSetID_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-SourceToTarget-AMFInformationReroute, PRESENCE = optional L:10555
	SI_AMF_DT_SourceToTarget_AMFInformationReroute * sourceToTargetAMFInformationReroute;
	int sourceToTargetAMFInformationReroute_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	
} SI_AMF_DT_PDU_RerouteNASRequest;


//ELEMENTARY-PROCEDURE = [2] nGSetup  L:10515

// L:10517
typedef struct __si_amf_dt_NGSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalRANNodeID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-RANNodeName, PRESENCE = optional L:10555
	SI_AMF_DT_RANNodeName * rANNodeName;
	int rANNodeName_isset;

	// ID = id-SupportedTAList, PRESENCE = mandatory L:10555
	SI_AMF_DT_SupportedTAList * supportedTAList;
	int supportedTAList_isset;

	// ID = id-DefaultPagingDRX, PRESENCE = mandatory L:10555
	uint8_t defaultPagingDRX;
	int defaultPagingDRX_isset;

	// ID = id-UERetentionInformation, PRESENCE = optional L:10555
	uint8_t uERetentionInformation;
	int uERetentionInformation_isset;

	// ID = id-NB-IoT-DefaultPagingDRX, PRESENCE = optional L:10555
	uint8_t nBIoTDefaultPagingDRX;
	int nBIoTDefaultPagingDRX_isset;

	// ID = id-Extended-RANNodeName, PRESENCE = optional L:10555
	SI_AMF_DT_Extended_RANNodeName * extendedRANNodeName;
	int extendedRANNodeName_isset;

	
} SI_AMF_DT_PDU_NGSetupRequest;


//ELEMENTARY-PROCEDURE = [2] nGSetup  L:10515

// L:10517
typedef struct __si_amf_dt_NGSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMFName, PRESENCE = mandatory L:10555
	SI_AMF_DT_AMFName * aMFName;
	int aMFName_isset;

	// ID = id-ServedGUAMIList, PRESENCE = mandatory L:10555
	SI_AMF_DT_ServedGUAMIList * servedGUAMIList;
	int servedGUAMIList_isset;

	// ID = id-RelativeAMFCapacity, PRESENCE = mandatory L:10555
	unsigned long long int relativeAMFCapacity;
	int relativeAMFCapacity_isset;

	// ID = id-PLMNSupportList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PLMNSupportList * pLMNSupportList;
	int pLMNSupportList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-UERetentionInformation, PRESENCE = optional L:10555
	uint8_t uERetentionInformation;
	int uERetentionInformation_isset;

	// ID = id-IAB-Supported, PRESENCE = optional L:10555
	uint8_t iABSupported;
	int iABSupported_isset;

	// ID = id-Extended-AMFName, PRESENCE = optional L:10555
	SI_AMF_DT_Extended_AMFName * extendedAMFName;
	int extendedAMFName_isset;

	// ID = id-MobileIAB-Supported, PRESENCE = optional L:10555
	uint8_t mobileIABSupported;
	int mobileIABSupported_isset;

	
} SI_AMF_DT_PDU_NGSetupResponse;


//ELEMENTARY-PROCEDURE = [2] nGSetup  L:10515

// L:10517
typedef struct __si_amf_dt_NGSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10555
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_NGSetupFailure;


//ELEMENTARY-PROCEDURE = [2] rANConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_RANConfigurationUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RANNodeName, PRESENCE = optional L:10555
	SI_AMF_DT_RANNodeName * rANNodeName;
	int rANNodeName_isset;

	// ID = id-SupportedTAList, PRESENCE = optional L:10555
	SI_AMF_DT_SupportedTAList * supportedTAList;
	int supportedTAList_isset;

	// ID = id-DefaultPagingDRX, PRESENCE = optional L:10555
	uint8_t defaultPagingDRX;
	int defaultPagingDRX_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = optional L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-NGRAN-TNLAssociationToRemoveList, PRESENCE = optional L:10555
	SI_AMF_DT_NGRAN_TNLAssociationToRemoveList * nGRANTNLAssociationToRemoveList;
	int nGRANTNLAssociationToRemoveList_isset;

	// ID = id-NB-IoT-DefaultPagingDRX, PRESENCE = optional L:10555
	uint8_t nBIoTDefaultPagingDRX;
	int nBIoTDefaultPagingDRX_isset;

	// ID = id-Extended-RANNodeName, PRESENCE = optional L:10555
	SI_AMF_DT_Extended_RANNodeName * extendedRANNodeName;
	int extendedRANNodeName_isset;

	
} SI_AMF_DT_PDU_RANConfigurationUpdate;


//ELEMENTARY-PROCEDURE = [2] rANConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_RANConfigurationUpdateAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge;


//ELEMENTARY-PROCEDURE = [2] rANConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_RANConfigurationUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10555
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_RANConfigurationUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] aMFConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_AMFConfigurationUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMFName, PRESENCE = optional L:10555
	SI_AMF_DT_AMFName * aMFName;
	int aMFName_isset;

	// ID = id-ServedGUAMIList, PRESENCE = optional L:10555
	SI_AMF_DT_ServedGUAMIList * servedGUAMIList;
	int servedGUAMIList_isset;

	// ID = id-RelativeAMFCapacity, PRESENCE = optional L:10555
	unsigned long long int relativeAMFCapacity;
	int relativeAMFCapacity_isset;

	// ID = id-PLMNSupportList, PRESENCE = optional L:10555
	SI_AMF_DT_PLMNSupportList * pLMNSupportList;
	int pLMNSupportList_isset;

	// ID = id-AMF-TNLAssociationToAddList, PRESENCE = optional L:10555
	SI_AMF_DT_AMF_TNLAssociationToAddList * aMFTNLAssociationToAddList;
	int aMFTNLAssociationToAddList_isset;

	// ID = id-AMF-TNLAssociationToRemoveList, PRESENCE = optional L:10555
	SI_AMF_DT_AMF_TNLAssociationToRemoveList * aMFTNLAssociationToRemoveList;
	int aMFTNLAssociationToRemoveList_isset;

	// ID = id-AMF-TNLAssociationToUpdateList, PRESENCE = optional L:10555
	SI_AMF_DT_AMF_TNLAssociationToUpdateList * aMFTNLAssociationToUpdateList;
	int aMFTNLAssociationToUpdateList_isset;

	// ID = id-Extended-AMFName, PRESENCE = optional L:10555
	SI_AMF_DT_Extended_AMFName * extendedAMFName;
	int extendedAMFName_isset;

	
} SI_AMF_DT_PDU_AMFConfigurationUpdate;


//ELEMENTARY-PROCEDURE = [2] aMFConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_AMFConfigurationUpdateAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-TNLAssociationSetupList, PRESENCE = optional L:10555
	SI_AMF_DT_AMF_TNLAssociationSetupList * aMFTNLAssociationSetupList;
	int aMFTNLAssociationSetupList_isset;

	// ID = id-AMF-TNLAssociationFailedToSetupList, PRESENCE = optional L:10555
	SI_AMF_DT_TNLAssociationList * aMFTNLAssociationFailedToSetupList;
	int aMFTNLAssociationFailedToSetupList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge;


//ELEMENTARY-PROCEDURE = [2] aMFConfigurationUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_AMFConfigurationUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10555
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_AMFConfigurationUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] aMFStatusIndication  L:10515

// L:10517
typedef struct __si_amf_dt_AMFStatusIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UnavailableGUAMIList, PRESENCE = mandatory L:10555
	SI_AMF_DT_UnavailableGUAMIList * unavailableGUAMIList;
	int unavailableGUAMIList_isset;

	
} SI_AMF_DT_PDU_AMFStatusIndication;


//ELEMENTARY-PROCEDURE = [2] nGReset  L:10515

// L:10517
typedef struct __si_amf_dt_NGReset
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-ResetType, PRESENCE = mandatory L:10555
	SI_AMF_DT_ResetType * resetType;
	int resetType_isset;

	
} SI_AMF_DT_PDU_NGReset;


//ELEMENTARY-PROCEDURE = [2] nGReset  L:10515

// L:10517
typedef struct __si_amf_dt_NGResetAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UE-associatedLogicalNG-connectionList, PRESENCE = optional L:10555
	SI_AMF_DT_UE_associatedLogicalNG_connectionList * uEassociatedLogicalNGconnectionList;
	int uEassociatedLogicalNGconnectionList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_NGResetAcknowledge;


//ELEMENTARY-PROCEDURE = [2] errorIndication  L:10515

// L:10517
typedef struct __si_amf_dt_ErrorIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = optional L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = optional L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = optional L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-FiveG-S-TMSI, PRESENCE = optional L:10555
	SI_AMF_DT_FiveG_S_TMSI * fiveGSTMSI;
	int fiveGSTMSI_isset;

	
} SI_AMF_DT_PDU_ErrorIndication;


//ELEMENTARY-PROCEDURE = [2] overloadStart  L:10515

// L:10517
typedef struct __si_amf_dt_OverloadStart
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMFOverloadResponse, PRESENCE = optional L:10555
	SI_AMF_DT_OverloadResponse * aMFOverloadResponse;
	int aMFOverloadResponse_isset;

	// ID = id-AMFTrafficLoadReductionIndication, PRESENCE = optional L:10555
	unsigned long long int aMFTrafficLoadReductionIndication;
	int aMFTrafficLoadReductionIndication_isset;

	// ID = id-OverloadStartNSSAIList, PRESENCE = optional L:10555
	SI_AMF_DT_OverloadStartNSSAIList * overloadStartNSSAIList;
	int overloadStartNSSAIList_isset;

	
} SI_AMF_DT_PDU_OverloadStart;


//ELEMENTARY-PROCEDURE = [2] overloadStop  L:10515

// L:10517
typedef struct __si_amf_dt_OverloadStop
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_OverloadStop;


//ELEMENTARY-PROCEDURE = [2] uplinkRANConfigurationTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkRANConfigurationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SONConfigurationTransferUL, PRESENCE = optional L:10555
	SI_AMF_DT_SONConfigurationTransfer * sONConfigurationTransferUL;
	int sONConfigurationTransferUL_isset;

	// ID = id-ENDC-SONConfigurationTransferUL, PRESENCE = optional L:10555
	SI_AMF_DT_EN_DCSONConfigurationTransfer * eNDCSONConfigurationTransferUL;
	int eNDCSONConfigurationTransferUL_isset;

	// ID = id-IntersystemSONConfigurationTransferUL, PRESENCE = optional L:10555
	SI_AMF_DT_IntersystemSONConfigurationTransfer * intersystemSONConfigurationTransferUL;
	int intersystemSONConfigurationTransferUL_isset;

	
} SI_AMF_DT_PDU_UplinkRANConfigurationTransfer;


//ELEMENTARY-PROCEDURE = [2] downlinkRANConfigurationTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkRANConfigurationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SONConfigurationTransferDL, PRESENCE = optional L:10555
	SI_AMF_DT_SONConfigurationTransfer * sONConfigurationTransferDL;
	int sONConfigurationTransferDL_isset;

	// ID = id-ENDC-SONConfigurationTransferDL, PRESENCE = optional L:10555
	SI_AMF_DT_EN_DCSONConfigurationTransfer * eNDCSONConfigurationTransferDL;
	int eNDCSONConfigurationTransferDL_isset;

	// ID = id-IntersystemSONConfigurationTransferDL, PRESENCE = optional L:10555
	SI_AMF_DT_IntersystemSONConfigurationTransfer * intersystemSONConfigurationTransferDL;
	int intersystemSONConfigurationTransferDL_isset;

	
} SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer;


//ELEMENTARY-PROCEDURE = [2] writeReplaceWarning  L:10515

// L:10517
typedef struct __si_amf_dt_WriteReplaceWarningRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10555
	SI_AMF_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10555
	SI_AMF_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-WarningAreaList, PRESENCE = optional L:10555
	SI_AMF_DT_WarningAreaList * warningAreaList;
	int warningAreaList_isset;

	// ID = id-RepetitionPeriod, PRESENCE = mandatory L:10555
	unsigned long long int repetitionPeriod;
	int repetitionPeriod_isset;

	// ID = id-NumberOfBroadcastsRequested, PRESENCE = mandatory L:10555
	unsigned long long int numberOfBroadcastsRequested;
	int numberOfBroadcastsRequested_isset;

	// ID = id-WarningType, PRESENCE = optional L:10555
	SI_AMF_DT_WarningType * warningType;
	int warningType_isset;

	// ID = id-WarningSecurityInfo, PRESENCE = optional L:10555
	SI_AMF_DT_WarningSecurityInfo * warningSecurityInfo;
	int warningSecurityInfo_isset;

	// ID = id-DataCodingScheme, PRESENCE = optional L:10555
	SI_AMF_DT_DataCodingScheme * dataCodingScheme;
	int dataCodingScheme_isset;

	// ID = id-WarningMessageContents, PRESENCE = optional L:10555
	SI_AMF_DT_WarningMessageContents * warningMessageContents;
	int warningMessageContents_isset;

	// ID = id-ConcurrentWarningMessageInd, PRESENCE = optional L:10555
	uint8_t concurrentWarningMessageInd;
	int concurrentWarningMessageInd_isset;

	// ID = id-WarningAreaCoordinates, PRESENCE = optional L:10555
	SI_AMF_DT_WarningAreaCoordinates * warningAreaCoordinates;
	int warningAreaCoordinates_isset;

	
} SI_AMF_DT_PDU_WriteReplaceWarningRequest;


//ELEMENTARY-PROCEDURE = [2] writeReplaceWarning  L:10515

// L:10517
typedef struct __si_amf_dt_WriteReplaceWarningResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10555
	SI_AMF_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10555
	SI_AMF_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-BroadcastCompletedAreaList, PRESENCE = optional L:10555
	SI_AMF_DT_BroadcastCompletedAreaList * broadcastCompletedAreaList;
	int broadcastCompletedAreaList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_WriteReplaceWarningResponse;


//ELEMENTARY-PROCEDURE = [2] pWSCancel  L:10515

// L:10517
typedef struct __si_amf_dt_PWSCancelRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10555
	SI_AMF_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10555
	SI_AMF_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-WarningAreaList, PRESENCE = optional L:10555
	SI_AMF_DT_WarningAreaList * warningAreaList;
	int warningAreaList_isset;

	// ID = id-CancelAllWarningMessages, PRESENCE = optional L:10555
	uint8_t cancelAllWarningMessages;
	int cancelAllWarningMessages_isset;

	
} SI_AMF_DT_PDU_PWSCancelRequest;


//ELEMENTARY-PROCEDURE = [2] pWSCancel  L:10515

// L:10517
typedef struct __si_amf_dt_PWSCancelResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MessageIdentifier, PRESENCE = mandatory L:10555
	SI_AMF_DT_MessageIdentifier * messageIdentifier;
	int messageIdentifier_isset;

	// ID = id-SerialNumber, PRESENCE = mandatory L:10555
	SI_AMF_DT_SerialNumber * serialNumber;
	int serialNumber_isset;

	// ID = id-BroadcastCancelledAreaList, PRESENCE = optional L:10555
	SI_AMF_DT_BroadcastCancelledAreaList * broadcastCancelledAreaList;
	int broadcastCancelledAreaList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_PWSCancelResponse;


//ELEMENTARY-PROCEDURE = [2] pWSRestartIndication  L:10515

// L:10517
typedef struct __si_amf_dt_PWSRestartIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CellIDListForRestart, PRESENCE = mandatory L:10555
	SI_AMF_DT_CellIDListForRestart * cellIDListForRestart;
	int cellIDListForRestart_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	// ID = id-TAIListForRestart, PRESENCE = mandatory L:10555
	SI_AMF_DT_TAIListForRestart * tAIListForRestart;
	int tAIListForRestart_isset;

	// ID = id-EmergencyAreaIDListForRestart, PRESENCE = optional L:10555
	SI_AMF_DT_EmergencyAreaIDListForRestart * emergencyAreaIDListForRestart;
	int emergencyAreaIDListForRestart_isset;

	
} SI_AMF_DT_PDU_PWSRestartIndication;


//ELEMENTARY-PROCEDURE = [2] pWSFailureIndication  L:10515

// L:10517
typedef struct __si_amf_dt_PWSFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PWSFailedCellIDList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PWSFailedCellIDList * pWSFailedCellIDList;
	int pWSFailedCellIDList_isset;

	// ID = id-GlobalRANNodeID, PRESENCE = mandatory L:10555
	SI_AMF_DT_GlobalRANNodeID * globalRANNodeID;
	int globalRANNodeID_isset;

	
} SI_AMF_DT_PDU_PWSFailureIndication;


//ELEMENTARY-PROCEDURE = [2] downlinkUEAssociatedNRPPaTransport  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkUEAssociatedNRPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-NRPPa-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NRPPa_PDU * nRPPaPDU;
	int nRPPaPDU_isset;

	
} SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport;


//ELEMENTARY-PROCEDURE = [2] uplinkUEAssociatedNRPPaTransport  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkUEAssociatedNRPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-NRPPa-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NRPPa_PDU * nRPPaPDU;
	int nRPPaPDU_isset;

	
} SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport;


//ELEMENTARY-PROCEDURE = [2] downlinkNonUEAssociatedNRPPaTransport  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkNonUEAssociatedNRPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-NRPPa-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NRPPa_PDU * nRPPaPDU;
	int nRPPaPDU_isset;

	
} SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport;


//ELEMENTARY-PROCEDURE = [2] uplinkNonUEAssociatedNRPPaTransport  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkNonUEAssociatedNRPPaTransport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-NRPPa-PDU, PRESENCE = mandatory L:10555
	SI_AMF_DT_NRPPa_PDU * nRPPaPDU;
	int nRPPaPDU_isset;

	
} SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport;


//ELEMENTARY-PROCEDURE = [2] traceStart  L:10515

// L:10517
typedef struct __si_amf_dt_TraceStart
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-TraceActivation, PRESENCE = mandatory L:10555
	SI_AMF_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	
} SI_AMF_DT_PDU_TraceStart;


//ELEMENTARY-PROCEDURE = [2] traceFailureIndication  L:10515

// L:10517
typedef struct __si_amf_dt_TraceFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NGRANTraceID, PRESENCE = mandatory L:10555
	SI_AMF_DT_NGRANTraceID * nGRANTraceID;
	int nGRANTraceID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_TraceFailureIndication;


//ELEMENTARY-PROCEDURE = [2] deactivateTrace  L:10515

// L:10517
typedef struct __si_amf_dt_DeactivateTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NGRANTraceID, PRESENCE = mandatory L:10555
	SI_AMF_DT_NGRANTraceID * nGRANTraceID;
	int nGRANTraceID_isset;

	
} SI_AMF_DT_PDU_DeactivateTrace;


//ELEMENTARY-PROCEDURE = [2] cellTrafficTrace  L:10515

// L:10517
typedef struct __si_amf_dt_CellTrafficTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-NGRANTraceID, PRESENCE = mandatory L:10555
	SI_AMF_DT_NGRANTraceID * nGRANTraceID;
	int nGRANTraceID_isset;

	// ID = id-NGRAN-CGI, PRESENCE = mandatory L:10555
	SI_AMF_DT_NGRAN_CGI * nGRANCGI;
	int nGRANCGI_isset;

	// ID = id-TraceCollectionEntityIPAddress, PRESENCE = mandatory L:10555
	SI_AMF_DT_TransportLayerAddress * traceCollectionEntityIPAddress;
	int traceCollectionEntityIPAddress_isset;

	// ID = id-PrivacyIndicator, PRESENCE = optional L:10555
	uint8_t privacyIndicator;
	int privacyIndicator_isset;

	// ID = id-TraceCollectionEntityURI, PRESENCE = optional L:10555
	SI_AMF_DT_URI_address * traceCollectionEntityURI;
	int traceCollectionEntityURI_isset;

	
} SI_AMF_DT_PDU_CellTrafficTrace;


//ELEMENTARY-PROCEDURE = [2] locationReportingControl  L:10515

// L:10517
typedef struct __si_amf_dt_LocationReportingControl
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-LocationReportingRequestType, PRESENCE = mandatory L:10555
	SI_AMF_DT_LocationReportingRequestType * locationReportingRequestType;
	int locationReportingRequestType_isset;

	
} SI_AMF_DT_PDU_LocationReportingControl;


//ELEMENTARY-PROCEDURE = [2] locationReportingFailureIndication  L:10515

// L:10517
typedef struct __si_amf_dt_LocationReportingFailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_LocationReportingFailureIndication;


//ELEMENTARY-PROCEDURE = [2] locationReport  L:10515

// L:10517
typedef struct __si_amf_dt_LocationReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UserLocationInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	// ID = id-UEPresenceInAreaOfInterestList, PRESENCE = optional L:10555
	SI_AMF_DT_UEPresenceInAreaOfInterestList * uEPresenceInAreaOfInterestList;
	int uEPresenceInAreaOfInterestList_isset;

	// ID = id-LocationReportingRequestType, PRESENCE = mandatory L:10555
	SI_AMF_DT_LocationReportingRequestType * locationReportingRequestType;
	int locationReportingRequestType_isset;

	
} SI_AMF_DT_PDU_LocationReport;


//ELEMENTARY-PROCEDURE = [2] uETNLABindingRelease  L:10515

// L:10517
typedef struct __si_amf_dt_UETNLABindingReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	
} SI_AMF_DT_PDU_UETNLABindingReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityInfoIndication  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityInfoIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UERadioCapability, PRESENCE = mandatory L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-UERadioCapability-EUTRA-Format, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapabilityEUTRAFormat;
	int uERadioCapabilityEUTRAFormat_isset;

	// ID = id-XrDeviceWith2Rx, PRESENCE = optional L:10555
	uint8_t xrDeviceWith2Rx;
	int xrDeviceWith2Rx_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityInfoIndication;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityCheck  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityCheckRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityCheckRequest;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityCheck  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityCheckResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-IMSVoiceSupportIndicator, PRESENCE = mandatory L:10555
	uint8_t iMSVoiceSupportIndicator;
	int iMSVoiceSupportIndicator_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityCheckResponse;


//ELEMENTARY-PROCEDURE = [2] privateMessage  L:10515

// L:10517
typedef struct __si_amf_dt_PrivateMessage
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_AMF_DT_PDU_PrivateMessage;


//ELEMENTARY-PROCEDURE = [2] secondaryRATDataUsageReport  L:10515

// L:10517
typedef struct __si_amf_dt_SecondaryRATDataUsageReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PDUSessionResourceSecondaryRATUsageList, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionResourceSecondaryRATUsageList * pDUSessionResourceSecondaryRATUsageList;
	int pDUSessionResourceSecondaryRATUsageList_isset;

	// ID = id-HandoverFlag, PRESENCE = optional L:10555
	uint8_t handoverFlag;
	int handoverFlag_isset;

	// ID = id-UserLocationInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UserLocationInformation * userLocationInformation;
	int userLocationInformation_isset;

	
} SI_AMF_DT_PDU_SecondaryRATDataUsageReport;


//ELEMENTARY-PROCEDURE = [2] uplinkRIMInformationTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_UplinkRIMInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RIMInformationTransfer, PRESENCE = optional L:10555
	SI_AMF_DT_RIMInformationTransfer * rIMInformationTransfer;
	int rIMInformationTransfer_isset;

	
} SI_AMF_DT_PDU_UplinkRIMInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] downlinkRIMInformationTransfer  L:10515

// L:10517
typedef struct __si_amf_dt_DownlinkRIMInformationTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RIMInformationTransfer, PRESENCE = optional L:10555
	SI_AMF_DT_RIMInformationTransfer * rIMInformationTransfer;
	int rIMInformationTransfer_isset;

	
} SI_AMF_DT_PDU_DownlinkRIMInformationTransfer;


//ELEMENTARY-PROCEDURE = [2] connectionEstablishmentIndication  L:10515

// L:10517
typedef struct __si_amf_dt_ConnectionEstablishmentIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-UERadioCapability, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-EndIndication, PRESENCE = optional L:10555
	uint8_t endIndication;
	int endIndication_isset;

	// ID = id-S-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-UE-DifferentiationInfo, PRESENCE = optional L:10555
	SI_AMF_DT_UE_DifferentiationInfo * uEDifferentiationInfo;
	int uEDifferentiationInfo_isset;

	// ID = id-DL-CP-SecurityInformation, PRESENCE = optional L:10555
	SI_AMF_DT_DL_CP_SecurityInformation * dLCPSecurityInformation;
	int dLCPSecurityInformation_isset;

	// ID = id-NB-IoT-UEPriority, PRESENCE = optional L:10555
	unsigned long long int nBIoTUEPriority;
	int nBIoTUEPriority_isset;

	// ID = id-Enhanced-CoverageRestriction, PRESENCE = optional L:10555
	uint8_t enhancedCoverageRestriction;
	int enhancedCoverageRestriction_isset;

	// ID = id-CEmodeBrestricted, PRESENCE = optional L:10555
	uint8_t cEmodeBrestricted;
	int cEmodeBrestricted_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10555
	SI_AMF_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-OldAMF, PRESENCE = optional L:10555
	SI_AMF_DT_AMFName * oldAMF;
	int oldAMF_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	
} SI_AMF_DT_PDU_ConnectionEstablishmentIndication;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityIDMapping  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityIDMappingRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERadioCapabilityID, PRESENCE = mandatory L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest;


//ELEMENTARY-PROCEDURE = [2] uERadioCapabilityIDMapping  L:10515

// L:10517
typedef struct __si_amf_dt_UERadioCapabilityIDMappingResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERadioCapabilityID, PRESENCE = mandatory L:10555
	SI_AMF_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-UERadioCapability, PRESENCE = mandatory L:10555
	SI_AMF_DT_UERadioCapability * uERadioCapability;
	int uERadioCapability_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse;


//ELEMENTARY-PROCEDURE = [2] aMFCPRelocationIndication  L:10515

// L:10517
typedef struct __si_amf_dt_AMFCPRelocationIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-S-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-AllowedNSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_AllowedNSSAI * allowedNSSAI;
	int allowedNSSAI_isset;

	// ID = id-Partially-Allowed-NSSAI, PRESENCE = optional L:10555
	SI_AMF_DT_Partially_Allowed_NSSAI * partiallyAllowedNSSAI;
	int partiallyAllowedNSSAI_isset;

	
} SI_AMF_DT_PDU_AMFCPRelocationIndication;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-S-NSSAI, PRESENCE = mandatory L:10555
	SI_AMF_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-MBS-ServiceArea, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_ServiceArea * mBSServiceArea;
	int mBSServiceArea_isset;

	//id-MBSSessionSetupRequestTransfer:OCTET
	// ID = id-AssociatedSessionID, PRESENCE = optional L:10555
	SI_AMF_DT_AssociatedSessionID * associatedSessionID;
	int associatedSessionID_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionSetupRequest;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MBSSessionSetupResponseTransfer:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionSetupResponse;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MBSSessionSetupFailureTransfer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionSetupFailure;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionModification  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionModificationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-ServiceArea, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_ServiceArea * mBSServiceArea;
	int mBSServiceArea_isset;

	//id-MBSSessionModificationRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_BroadcastSessionModificationRequest;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionModification  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionModificationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MBSSessionModificationResponseTransfer:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionModificationResponse;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionModification  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionModificationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MBSSessionModificationFailureTransfer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionModificationFailure;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionRelease  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionReleaseRequired  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionReleaseRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionReleaseRequired;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionRelease  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionReleaseResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MBSSessionReleaseResponseTransfer:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionReleaseResponse;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionTransport  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionTransportRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-BroadcastTransportRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_BroadcastSessionTransportRequest;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionTransport  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionTransportResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-BroadcastTransportResponseTransfer:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionTransportResponse;


//ELEMENTARY-PROCEDURE = [2] broadcastSessionTransport  L:10515

// L:10517
typedef struct __si_amf_dt_BroadcastSessionTransportFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-BroadcastTransportFailureTransfer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_BroadcastSessionTransportFailure;


//ELEMENTARY-PROCEDURE = [2] distributionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_DistributionSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	//id-MBS-DistributionSetupRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_DistributionSetupRequest;


//ELEMENTARY-PROCEDURE = [2] distributionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_DistributionSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	//id-MBS-DistributionSetupResponseTransfer:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_DistributionSetupResponse;


//ELEMENTARY-PROCEDURE = [2] distributionSetup  L:10515

// L:10517
typedef struct __si_amf_dt_DistributionSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	//id-MBS-DistributionSetupUnsuccessfulTransfer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_DistributionSetupFailure;


//ELEMENTARY-PROCEDURE = [2] distributionRelease  L:10515

// L:10517
typedef struct __si_amf_dt_DistributionReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	//id-MBS-DistributionReleaseRequestTransfer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	
} SI_AMF_DT_PDU_DistributionReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] distributionRelease  L:10515

// L:10517
typedef struct __si_amf_dt_DistributionReleaseResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_DistributionReleaseResponse;


//ELEMENTARY-PROCEDURE = [2] multicastSessionActivation  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionActivationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MulticastSessionActivationRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_MulticastSessionActivationRequest;


//ELEMENTARY-PROCEDURE = [2] multicastSessionActivation  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionActivationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MulticastSessionActivationResponse;


//ELEMENTARY-PROCEDURE = [2] multicastSessionActivation  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionActivationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MulticastSessionActivationFailure;


//ELEMENTARY-PROCEDURE = [2] multicastSessionDeactivation  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionDeactivationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	//id-MulticastSessionDeactivationRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_MulticastSessionDeactivationRequest;


//ELEMENTARY-PROCEDURE = [2] multicastSessionDeactivation  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionDeactivationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MulticastSessionDeactivationResponse;


//ELEMENTARY-PROCEDURE = [2] multicastSessionUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionUpdateRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	//id-MulticastSessionUpdateRequestTransfer:OCTET
	
} SI_AMF_DT_PDU_MulticastSessionUpdateRequest;


//ELEMENTARY-PROCEDURE = [2] multicastSessionUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionUpdateResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MulticastSessionUpdateResponse;


//ELEMENTARY-PROCEDURE = [2] multicastSessionUpdate  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-AreaSessionID, PRESENCE = optional L:10555
	unsigned long long int mBSAreaSessionID;
	int mBSAreaSessionID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MulticastSessionUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] multicastGroupPaging  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastGroupPaging
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-ServiceArea, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_ServiceArea * mBSServiceArea;
	int mBSServiceArea_isset;

	// ID = id-MulticastGroupPagingAreaList, PRESENCE = mandatory L:10555
	SI_AMF_DT_MulticastGroupPagingAreaList * multicastGroupPagingAreaList;
	int multicastGroupPagingAreaList_isset;

	
} SI_AMF_DT_PDU_MulticastGroupPaging;


//ELEMENTARY-PROCEDURE = [2] timingSynchronisationStatus  L:10515

// L:10517
typedef struct __si_amf_dt_TimingSynchronisationStatusRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-RAN-TSSRequestType, PRESENCE = mandatory L:10555
	uint8_t rANTSSRequestType;
	int rANTSSRequestType_isset;

	
} SI_AMF_DT_PDU_TimingSynchronisationStatusRequest;


//ELEMENTARY-PROCEDURE = [2] timingSynchronisationStatus  L:10515

// L:10517
typedef struct __si_amf_dt_TimingSynchronisationStatusResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_TimingSynchronisationStatusResponse;


//ELEMENTARY-PROCEDURE = [2] timingSynchronisationStatus  L:10515

// L:10517
typedef struct __si_amf_dt_TimingSynchronisationStatusFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_TimingSynchronisationStatusFailure;


//ELEMENTARY-PROCEDURE = [2] timingSynchronisationStatusReport  L:10515

// L:10517
typedef struct __si_amf_dt_TimingSynchronisationStatusReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RoutingID, PRESENCE = mandatory L:10555
	SI_AMF_DT_RoutingID * routingID;
	int routingID_isset;

	// ID = id-RANTimingSynchronisationStatusInfo, PRESENCE = mandatory L:10555
	SI_AMF_DT_RANTimingSynchronisationStatusInfo * rANTimingSynchronisationStatusInfo;
	int rANTimingSynchronisationStatusInfo_isset;

	// ID = id-RAN-TSSScope, PRESENCE = mandatory L:10555
	SI_AMF_DT_RAN_TSSScope * rANTSSScope;
	int rANTSSScope_isset;

	
} SI_AMF_DT_PDU_TimingSynchronisationStatusReport;


//ELEMENTARY-PROCEDURE = [2] mTCommunicationHandling  L:10515

// L:10517
typedef struct __si_amf_dt_MTCommunicationHandlingRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-FiveGCAction, PRESENCE = mandatory L:10555
	SI_AMF_DT_FiveGCAction * fiveGCAction;
	int fiveGCAction_isset;

	// ID = id-PDUSessionListMTCommHReq, PRESENCE = mandatory L:10555
	SI_AMF_DT_PDUSessionListMTCommHReq * pDUSessionListMTCommHReq;
	int pDUSessionListMTCommHReq_isset;

	
} SI_AMF_DT_PDU_MTCommunicationHandlingRequest;


//ELEMENTARY-PROCEDURE = [2] mTCommunicationHandling  L:10515

// L:10517
typedef struct __si_amf_dt_MTCommunicationHandlingResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MTCommunicationHandlingResponse;


//ELEMENTARY-PROCEDURE = [2] mTCommunicationHandling  L:10515

// L:10517
typedef struct __si_amf_dt_MTCommunicationHandlingFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10555
	SI_AMF_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10555
	SI_AMF_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_AMF_DT_PDU_MTCommunicationHandlingFailure;


//ELEMENTARY-PROCEDURE = [2] rANPagingRequest  L:10515

// L:10517
typedef struct __si_amf_dt_RANPagingRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AMF-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int aMFUENGAPID;
	int aMFUENGAPID_isset;

	// ID = id-RAN-UE-NGAP-ID, PRESENCE = mandatory L:10555
	unsigned long long int rANUENGAPID;
	int rANUENGAPID_isset;

	// ID = id-PagingPolicyDifferentiation, PRESENCE = optional L:10555
	SI_AMF_DT_PagingPolicyDifferentiation * pagingPolicyDifferentiation;
	int pagingPolicyDifferentiation_isset;

	// ID = id-DL-Signalling, PRESENCE = optional L:10555
	uint8_t dLSignalling;
	int dLSignalling_isset;

	
} SI_AMF_DT_PDU_RANPagingRequest;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MBSSessionSetupOrModRequestTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionTNLInfo5GC, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_SessionTNLInfo5GC * mBSSessionTNLInfo5GC;
	int mBSSessionTNLInfo5GC_isset;

	// ID = id-MBS-QoSFlowsToBeSetupModList, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_QoSFlowsToBeSetupList * mBSQoSFlowsToBeSetupModList;
	int mBSQoSFlowsToBeSetupModList_isset;

	// ID = id-MBS-SessionFSAIDList, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_SessionFSAIDList * mBSSessionFSAIDList;
	int mBSSessionFSAIDList_isset;

	// ID = id-SupportedUETypeList, PRESENCE = optional L:10555
	SI_AMF_DT_SupportedUETypeList * supportedUETypeList;
	int supportedUETypeList_isset;

	// ID = id-MBS-NGUFailureIndication, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_NGUFailureIndication * mBSNGUFailureIndication;
	int mBSNGUFailureIndication_isset;

	
} SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_MulticastSessionUpdateRequestTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-SessionID, PRESENCE = mandatory L:10555
	SI_AMF_DT_MBS_SessionID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-MBS-ServiceArea, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_ServiceArea * mBSServiceArea;
	int mBSServiceArea_isset;

	// ID = id-MBS-QoSFlowsToBeSetupModList, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_QoSFlowsToBeSetupList * mBSQoSFlowsToBeSetupModList;
	int mBSQoSFlowsToBeSetupModList_isset;

	// ID = id-MBS-QoSFlowToReleaseList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowListWithCause * mBSQoSFlowToReleaseList;
	int mBSQoSFlowToReleaseList_isset;

	// ID = id-MBS-SessionTNLInfo5GC, PRESENCE = optional L:10555
	SI_AMF_DT_MBS_SessionTNLInfo5GC * mBSSessionTNLInfo5GC;
	int mBSSessionTNLInfo5GC_isset;

	
} SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceModifyRequestTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionAggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionAggregateMaximumBitRate * pDUSessionAggregateMaximumBitRate;
	int pDUSessionAggregateMaximumBitRate_isset;

	// ID = id-UL-NGU-UP-TNLModifyList, PRESENCE = optional L:10555
	SI_AMF_DT_UL_NGU_UP_TNLModifyList * uLNGUUPTNLModifyList;
	int uLNGUUPTNLModifyList_isset;

	// ID = id-NetworkInstance, PRESENCE = optional L:10555
	unsigned long long int networkInstance;
	int networkInstance_isset;

	// ID = id-QosFlowAddOrModifyRequestList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowAddOrModifyRequestList * qosFlowAddOrModifyRequestList;
	int qosFlowAddOrModifyRequestList_isset;

	// ID = id-QosFlowToReleaseList, PRESENCE = optional L:10555
	SI_AMF_DT_QosFlowListWithCause * qosFlowToReleaseList;
	int qosFlowToReleaseList_isset;

	// ID = id-AdditionalUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalULNGUUPTNLInformation;
	int additionalULNGUUPTNLInformation_isset;

	// ID = id-CommonNetworkInstance, PRESENCE = optional L:10555
	SI_AMF_DT_CommonNetworkInstance * commonNetworkInstance;
	int commonNetworkInstance_isset;

	// ID = id-AdditionalRedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalRedundantULNGUUPTNLInformation;
	int additionalRedundantULNGUUPTNLInformation_isset;

	// ID = id-RedundantCommonNetworkInstance, PRESENCE = optional L:10555
	SI_AMF_DT_CommonNetworkInstance * redundantCommonNetworkInstance;
	int redundantCommonNetworkInstance_isset;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	// ID = id-MBSSessionSetuporModifyRequestList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionSetuporModifyRequestList * mBSSessionSetuporModifyRequestList;
	int mBSSessionSetuporModifyRequestList_isset;

	// ID = id-MBSSessionToReleaseList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionToReleaseList * mBSSessionToReleaseList;
	int mBSSessionToReleaseList_isset;

	// ID = id-UserPlaneFailureIndication, PRESENCE = optional L:10555
	SI_AMF_DT_UserPlaneFailureIndication * userPlaneFailureIndication;
	int userPlaneFailureIndication_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10515

// L:10517
typedef struct __si_amf_dt_PDUSessionResourceSetupRequestTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionAggregateMaximumBitRate, PRESENCE = optional L:10555
	SI_AMF_DT_PDUSessionAggregateMaximumBitRate * pDUSessionAggregateMaximumBitRate;
	int pDUSessionAggregateMaximumBitRate_isset;

	// ID = id-UL-NGU-UP-TNLInformation, PRESENCE = mandatory L:10555
	SI_AMF_DT_UPTransportLayerInformation * uLNGUUPTNLInformation;
	int uLNGUUPTNLInformation_isset;

	// ID = id-AdditionalUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalULNGUUPTNLInformation;
	int additionalULNGUUPTNLInformation_isset;

	// ID = id-DataForwardingNotPossible, PRESENCE = optional L:10555
	uint8_t dataForwardingNotPossible;
	int dataForwardingNotPossible_isset;

	// ID = id-PDUSessionType, PRESENCE = mandatory L:10555
	uint8_t pDUSessionType;
	int pDUSessionType_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10555
	SI_AMF_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	// ID = id-NetworkInstance, PRESENCE = optional L:10555
	unsigned long long int networkInstance;
	int networkInstance_isset;

	// ID = id-QosFlowSetupRequestList, PRESENCE = mandatory L:10555
	SI_AMF_DT_QosFlowSetupRequestList * qosFlowSetupRequestList;
	int qosFlowSetupRequestList_isset;

	// ID = id-CommonNetworkInstance, PRESENCE = optional L:10555
	SI_AMF_DT_CommonNetworkInstance * commonNetworkInstance;
	int commonNetworkInstance_isset;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10555
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-RedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformation * redundantULNGUUPTNLInformation;
	int redundantULNGUUPTNLInformation_isset;

	// ID = id-AdditionalRedundantUL-NGU-UP-TNLInformation, PRESENCE = optional L:10555
	SI_AMF_DT_UPTransportLayerInformationList * additionalRedundantULNGUUPTNLInformation;
	int additionalRedundantULNGUUPTNLInformation_isset;

	// ID = id-RedundantCommonNetworkInstance, PRESENCE = optional L:10555
	SI_AMF_DT_CommonNetworkInstance * redundantCommonNetworkInstance;
	int redundantCommonNetworkInstance_isset;

	// ID = id-RedundantPDUSessionInformation, PRESENCE = optional L:10555
	SI_AMF_DT_RedundantPDUSessionInformation * redundantPDUSessionInformation;
	int redundantPDUSessionInformation_isset;

	// ID = id-MBSSessionSetupRequestList, PRESENCE = optional L:10555
	SI_AMF_DT_MBSSessionSetupRequestList * mBSSessionSetupRequestList;
	int mBSSessionSetupRequestList_isset;

	// ID = id-DownlinkTLContainer, PRESENCE = optional L:10555
	SI_AMF_DT_TLContainer * downlinkTLContainer;
	int downlinkTLContainer_isset;

	
} SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer;


void __si_amf_debug_pdu( uint8_t * buffer, int len);


//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs( SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs * objPDUAdditionalDLUPTNLInformationForHOItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs( SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs * objPDUAdditionalDLUPTNLInformationForHOItem_ExtIEs);
void __si_amf_debug_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs( char * key, SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs * objPDUAdditionalDLUPTNLInformationForHOItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs( SI_AMF_DT_PDU_AdditionalDLUPTNLInformationForHOItem_ExtIEs ** objPDUAdditionalDLUPTNLInformationForHOItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_A2X_PC5_FlowBitRates_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs * objPDUA2X_PC5_FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_A2X_PC5_FlowBitRates_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs * objPDUA2X_PC5_FlowBitRates_ExtIEs);
void __si_amf_debug_PDU_A2X_PC5_FlowBitRates_ExtIEs( char * key, SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs * objPDUA2X_PC5_FlowBitRates_ExtIEs, int lvl);
int __si_amf_Decode_PDU_A2X_PC5_FlowBitRates_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_FlowBitRates_ExtIEs ** objPDUA2X_PC5_FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs * objPDUA2X_PC5_QoS_Flow_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs * objPDUA2X_PC5_QoS_Flow_Item_ExtIEs);
void __si_amf_debug_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs( char * key, SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs * objPDUA2X_PC5_QoS_Flow_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Flow_Item_ExtIEs ** objPDUA2X_PC5_QoS_Flow_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_A2X_PC5_QoS_Parameters_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs * objPDUA2X_PC5_QoS_Parameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_A2X_PC5_QoS_Parameters_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs * objPDUA2X_PC5_QoS_Parameters_ExtIEs);
void __si_amf_debug_PDU_A2X_PC5_QoS_Parameters_ExtIEs( char * key, SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs * objPDUA2X_PC5_QoS_Parameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_A2X_PC5_QoS_Parameters_ExtIEs( SI_AMF_DT_PDU_A2X_PC5_QoS_Parameters_ExtIEs ** objPDUA2X_PC5_QoS_Parameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs( SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs * objPDUAdditionalCancelledlocationReportingReferenceIDItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs( SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs * objPDUAdditionalCancelledlocationReportingReferenceIDItem_ExtIEs);
void __si_amf_debug_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs( char * key, SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs * objPDUAdditionalCancelledlocationReportingReferenceIDItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs( SI_AMF_DT_PDU_AdditionalCancelledlocationReportingReferenceIDItem_ExtIEs ** objPDUAdditionalCancelledlocationReportingReferenceIDItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AllocationAndRetentionPriority_ExtIEs( SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AllocationAndRetentionPriority_ExtIEs( SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs);
void __si_amf_debug_PDU_AllocationAndRetentionPriority_ExtIEs( char * key, SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs * objPDUAllocationAndRetentionPriority_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AllocationAndRetentionPriority_ExtIEs( SI_AMF_DT_PDU_AllocationAndRetentionPriority_ExtIEs ** objPDUAllocationAndRetentionPriority_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs * objPDUAllowedNSSAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs * objPDUAllowedNSSAI_Item_ExtIEs);
void __si_amf_debug_PDU_AllowedNSSAI_Item_ExtIEs( char * key, SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs * objPDUAllowedNSSAI_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_AllowedNSSAI_Item_ExtIEs ** objPDUAllowedNSSAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Allowed_PNI_NPN_Item_ExtIEs( SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs * objPDUAllowed_PNI_NPN_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Allowed_PNI_NPN_Item_ExtIEs( SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs * objPDUAllowed_PNI_NPN_Item_ExtIEs);
void __si_amf_debug_PDU_Allowed_PNI_NPN_Item_ExtIEs( char * key, SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs * objPDUAllowed_PNI_NPN_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Allowed_PNI_NPN_Item_ExtIEs( SI_AMF_DT_PDU_Allowed_PNI_NPN_Item_ExtIEs ** objPDUAllowed_PNI_NPN_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs);
void __si_amf_debug_PDU_AlternativeQoSParaSetItem_ExtIEs( char * key, SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_AMF_DT_PDU_AlternativeQoSParaSetItem_ExtIEs ** objPDUAlternativeQoSParaSetItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AMFPagingTarget_ExtIEs( SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs * objPDUAMFPagingTarget_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AMFPagingTarget_ExtIEs( SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs * objPDUAMFPagingTarget_ExtIEs);
void __si_amf_debug_PDU_AMFPagingTarget_ExtIEs( char * key, SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs * objPDUAMFPagingTarget_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AMFPagingTarget_ExtIEs( SI_AMF_DT_PDU_AMFPagingTarget_ExtIEs ** objPDUAMFPagingTarget_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AMF_TNLAssociationSetupItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs * objPDUAMF_TNLAssociationSetupItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AMF_TNLAssociationSetupItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs * objPDUAMF_TNLAssociationSetupItem_ExtIEs);
void __si_amf_debug_PDU_AMF_TNLAssociationSetupItem_ExtIEs( char * key, SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs * objPDUAMF_TNLAssociationSetupItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AMF_TNLAssociationSetupItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationSetupItem_ExtIEs ** objPDUAMF_TNLAssociationSetupItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AMF_TNLAssociationToAddItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs * objPDUAMF_TNLAssociationToAddItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AMF_TNLAssociationToAddItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs * objPDUAMF_TNLAssociationToAddItem_ExtIEs);
void __si_amf_debug_PDU_AMF_TNLAssociationToAddItem_ExtIEs( char * key, SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs * objPDUAMF_TNLAssociationToAddItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AMF_TNLAssociationToAddItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToAddItem_ExtIEs ** objPDUAMF_TNLAssociationToAddItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs * objPDUAMF_TNLAssociationToRemoveItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs * objPDUAMF_TNLAssociationToRemoveItem_ExtIEs);
void __si_amf_debug_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs( char * key, SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs * objPDUAMF_TNLAssociationToRemoveItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToRemoveItem_ExtIEs ** objPDUAMF_TNLAssociationToRemoveItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs * objPDUAMF_TNLAssociationToUpdateItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs * objPDUAMF_TNLAssociationToUpdateItem_ExtIEs);
void __si_amf_debug_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs( char * key, SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs * objPDUAMF_TNLAssociationToUpdateItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs( SI_AMF_DT_PDU_AMF_TNLAssociationToUpdateItem_ExtIEs ** objPDUAMF_TNLAssociationToUpdateItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaOfInterest_ExtIEs( SI_AMF_DT_PDU_AreaOfInterest_ExtIEs * objPDUAreaOfInterest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaOfInterest_ExtIEs( SI_AMF_DT_PDU_AreaOfInterest_ExtIEs * objPDUAreaOfInterest_ExtIEs);
void __si_amf_debug_PDU_AreaOfInterest_ExtIEs( char * key, SI_AMF_DT_PDU_AreaOfInterest_ExtIEs * objPDUAreaOfInterest_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaOfInterest_ExtIEs( SI_AMF_DT_PDU_AreaOfInterest_ExtIEs ** objPDUAreaOfInterest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaOfInterestCellItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs * objPDUAreaOfInterestCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaOfInterestCellItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs * objPDUAreaOfInterestCellItem_ExtIEs);
void __si_amf_debug_PDU_AreaOfInterestCellItem_ExtIEs( char * key, SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs * objPDUAreaOfInterestCellItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaOfInterestCellItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestCellItem_ExtIEs ** objPDUAreaOfInterestCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs * objPDUAreaOfInterestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs * objPDUAreaOfInterestItem_ExtIEs);
void __si_amf_debug_PDU_AreaOfInterestItem_ExtIEs( char * key, SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs * objPDUAreaOfInterestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestItem_ExtIEs ** objPDUAreaOfInterestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaOfInterestRANNodeItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs * objPDUAreaOfInterestRANNodeItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaOfInterestRANNodeItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs * objPDUAreaOfInterestRANNodeItem_ExtIEs);
void __si_amf_debug_PDU_AreaOfInterestRANNodeItem_ExtIEs( char * key, SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs * objPDUAreaOfInterestRANNodeItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaOfInterestRANNodeItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestRANNodeItem_ExtIEs ** objPDUAreaOfInterestRANNodeItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaOfInterestTAIItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs * objPDUAreaOfInterestTAIItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaOfInterestTAIItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs * objPDUAreaOfInterestTAIItem_ExtIEs);
void __si_amf_debug_PDU_AreaOfInterestTAIItem_ExtIEs( char * key, SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs * objPDUAreaOfInterestTAIItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaOfInterestTAIItem_ExtIEs( SI_AMF_DT_PDU_AreaOfInterestTAIItem_ExtIEs ** objPDUAreaOfInterestTAIItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AssistanceDataForPaging_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AssistanceDataForPaging_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs);
void __si_amf_debug_PDU_AssistanceDataForPaging_ExtIEs( char * key, SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs * objPDUAssistanceDataForPaging_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AssistanceDataForPaging_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForPaging_ExtIEs ** objPDUAssistanceDataForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs);
void __si_amf_debug_PDU_AssistanceDataForRecommendedCells_ExtIEs( char * key, SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs * objPDUAssistanceDataForRecommendedCells_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AssistanceDataForRecommendedCells_ExtIEs( SI_AMF_DT_PDU_AssistanceDataForRecommendedCells_ExtIEs ** objPDUAssistanceDataForRecommendedCells_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetupRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetupRequestItem_ExtIEs);
void __si_amf_debug_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetupRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetupRequestItem_ExtIEs ** objPDUAssociatedMBSQosFlowSetupRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs);
void __si_amf_debug_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs * objPDUAssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_AssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs ** objPDUAssociatedMBSQosFlowSetuporModifyRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AssociatedQosFlowItem_ExtIEs( SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs * objPDUAssociatedQosFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AssociatedQosFlowItem_ExtIEs( SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs * objPDUAssociatedQosFlowItem_ExtIEs);
void __si_amf_debug_PDU_AssociatedQosFlowItem_ExtIEs( char * key, SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs * objPDUAssociatedQosFlowItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AssociatedQosFlowItem_ExtIEs( SI_AMF_DT_PDU_AssociatedQosFlowItem_ExtIEs ** objPDUAssociatedQosFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AUN3DeviceAccessInfo_ExtIEs( SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs * objPDUAUN3DeviceAccessInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AUN3DeviceAccessInfo_ExtIEs( SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs * objPDUAUN3DeviceAccessInfo_ExtIEs);
void __si_amf_debug_PDU_AUN3DeviceAccessInfo_ExtIEs( char * key, SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs * objPDUAUN3DeviceAccessInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AUN3DeviceAccessInfo_ExtIEs( SI_AMF_DT_PDU_AUN3DeviceAccessInfo_ExtIEs ** objPDUAUN3DeviceAccessInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs);
void __si_amf_debug_PDU_AreaScopeOfMDT_NR_ExtIEs( char * key, SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_NR_ExtIEs ** objPDUAreaScopeOfMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs);
void __si_amf_debug_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( char * key, SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs ** objPDUAreaScopeOfMDT_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs);
void __si_amf_debug_PDU_AreaScopeOfNeighCellsItem_ExtIEs( char * key, SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs ** objPDUAreaScopeOfNeighCellsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AreaScopeOfQMC_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AreaScopeOfQMC_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs);
void __si_amf_debug_PDU_AreaScopeOfQMC_ExtIEs( char * key, SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AreaScopeOfQMC_ExtIEs( SI_AMF_DT_PDU_AreaScopeOfQMC_ExtIEs ** objPDUAreaScopeOfQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_AvailableRANVisibleQoEMetrics_ExtIEs( SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs * objPDUAvailableRANVisibleQoEMetrics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_AvailableRANVisibleQoEMetrics_ExtIEs( SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs * objPDUAvailableRANVisibleQoEMetrics_ExtIEs);
void __si_amf_debug_PDU_AvailableRANVisibleQoEMetrics_ExtIEs( char * key, SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs * objPDUAvailableRANVisibleQoEMetrics_ExtIEs, int lvl);
int __si_amf_Decode_PDU_AvailableRANVisibleQoEMetrics_ExtIEs( SI_AMF_DT_PDU_AvailableRANVisibleQoEMetrics_ExtIEs ** objPDUAvailableRANVisibleQoEMetrics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs);
void __si_amf_debug_PDU_BeamMeasurementsReportConfiguration_ExtIEs( char * key, SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs ** objPDUBeamMeasurementsReportConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs);
void __si_amf_debug_PDU_BeamMeasurementsReportQuantity_ExtIEs( char * key, SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_AMF_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs ** objPDUBeamMeasurementsReportQuantity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastCancelledAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs * objPDUBroadcastCancelledAreaList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastCancelledAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs * objPDUBroadcastCancelledAreaList_ExtIEs);
void __si_amf_debug_PDU_BroadcastCancelledAreaList_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs * objPDUBroadcastCancelledAreaList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastCancelledAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCancelledAreaList_ExtIEs ** objPDUBroadcastCancelledAreaList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastCompletedAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs * objPDUBroadcastCompletedAreaList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastCompletedAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs * objPDUBroadcastCompletedAreaList_ExtIEs);
void __si_amf_debug_PDU_BroadcastCompletedAreaList_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs * objPDUBroadcastCompletedAreaList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastCompletedAreaList_ExtIEs( SI_AMF_DT_PDU_BroadcastCompletedAreaList_ExtIEs ** objPDUBroadcastCompletedAreaList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastPLMNItem_ExtIEs( SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs * objPDUBroadcastPLMNItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastPLMNItem_ExtIEs( SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs * objPDUBroadcastPLMNItem_ExtIEs);
void __si_amf_debug_PDU_BroadcastPLMNItem_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs * objPDUBroadcastPLMNItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastPLMNItem_ExtIEs( SI_AMF_DT_PDU_BroadcastPLMNItem_ExtIEs ** objPDUBroadcastPLMNItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastTransportFailureTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs * objPDUBroadcastTransportFailureTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastTransportFailureTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs * objPDUBroadcastTransportFailureTransfer_ExtIEs);
void __si_amf_debug_PDU_BroadcastTransportFailureTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs * objPDUBroadcastTransportFailureTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastTransportFailureTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportFailureTransfer_ExtIEs ** objPDUBroadcastTransportFailureTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastTransportRequestTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs * objPDUBroadcastTransportRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastTransportRequestTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs * objPDUBroadcastTransportRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_BroadcastTransportRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs * objPDUBroadcastTransportRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastTransportRequestTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportRequestTransfer_ExtIEs ** objPDUBroadcastTransportRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BroadcastTransportResponseTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs * objPDUBroadcastTransportResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BroadcastTransportResponseTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs * objPDUBroadcastTransportResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_BroadcastTransportResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs * objPDUBroadcastTransportResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BroadcastTransportResponseTransfer_ExtIEs( SI_AMF_DT_PDU_BroadcastTransportResponseTransfer_ExtIEs ** objPDUBroadcastTransportResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs);
void __si_amf_debug_PDU_BluetoothMeasurementConfiguration_ExtIEs( char * key, SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs ** objPDUBluetoothMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BluetoothMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs * objPDUBluetoothMeasConfigNameItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BluetoothMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs * objPDUBluetoothMeasConfigNameItem_ExtIEs);
void __si_amf_debug_PDU_BluetoothMeasConfigNameItem_ExtIEs( char * key, SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs * objPDUBluetoothMeasConfigNameItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BluetoothMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_BluetoothMeasConfigNameItem_ExtIEs ** objPDUBluetoothMeasConfigNameItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_BurstArrivalTimeWindow_ExtIEs( SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs * objPDUBurstArrivalTimeWindow_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_BurstArrivalTimeWindow_ExtIEs( SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs * objPDUBurstArrivalTimeWindow_ExtIEs);
void __si_amf_debug_PDU_BurstArrivalTimeWindow_ExtIEs( char * key, SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs * objPDUBurstArrivalTimeWindow_ExtIEs, int lvl);
int __si_amf_Decode_PDU_BurstArrivalTimeWindow_ExtIEs( SI_AMF_DT_PDU_BurstArrivalTimeWindow_ExtIEs ** objPDUBurstArrivalTimeWindow_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CandidateRelayUEInformationItem_ExtIEs( SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs * objPDUCandidateRelayUEInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CandidateRelayUEInformationItem_ExtIEs( SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs * objPDUCandidateRelayUEInformationItem_ExtIEs);
void __si_amf_debug_PDU_CandidateRelayUEInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs * objPDUCandidateRelayUEInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CandidateRelayUEInformationItem_ExtIEs( SI_AMF_DT_PDU_CandidateRelayUEInformationItem_ExtIEs ** objPDUCandidateRelayUEInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInEAI_EUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInEAI_EUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInEAI_EUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_EUTRA_Item_ExtIEs ** objPDUCancelledCellsInEAI_EUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CancelledCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs * objPDUCancelledCellsInEAI_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CancelledCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs * objPDUCancelledCellsInEAI_NR_Item_ExtIEs);
void __si_amf_debug_PDU_CancelledCellsInEAI_NR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs * objPDUCancelledCellsInEAI_NR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CancelledCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInEAI_NR_Item_ExtIEs ** objPDUCancelledCellsInEAI_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInTAI_EUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInTAI_EUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs * objPDUCancelledCellsInTAI_EUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_EUTRA_Item_ExtIEs ** objPDUCancelledCellsInTAI_EUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CancelledCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs * objPDUCancelledCellsInTAI_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CancelledCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs * objPDUCancelledCellsInTAI_NR_Item_ExtIEs);
void __si_amf_debug_PDU_CancelledCellsInTAI_NR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs * objPDUCancelledCellsInTAI_NR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CancelledCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CancelledCellsInTAI_NR_Item_ExtIEs ** objPDUCancelledCellsInTAI_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CandidateCellItem_ExtIEs( SI_AMF_DT_PDU_CandidateCellItem_ExtIEs * objPDUCandidateCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CandidateCellItem_ExtIEs( SI_AMF_DT_PDU_CandidateCellItem_ExtIEs * objPDUCandidateCellItem_ExtIEs);
void __si_amf_debug_PDU_CandidateCellItem_ExtIEs( char * key, SI_AMF_DT_PDU_CandidateCellItem_ExtIEs * objPDUCandidateCellItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CandidateCellItem_ExtIEs( SI_AMF_DT_PDU_CandidateCellItem_ExtIEs ** objPDUCandidateCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CandidateCell_ExtIEs( SI_AMF_DT_PDU_CandidateCell_ExtIEs * objPDUCandidateCell_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CandidateCell_ExtIEs( SI_AMF_DT_PDU_CandidateCell_ExtIEs * objPDUCandidateCell_ExtIEs);
void __si_amf_debug_PDU_CandidateCell_ExtIEs( char * key, SI_AMF_DT_PDU_CandidateCell_ExtIEs * objPDUCandidateCell_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CandidateCell_ExtIEs( SI_AMF_DT_PDU_CandidateCell_ExtIEs ** objPDUCandidateCell_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CandidateCellID_ExtIEs( SI_AMF_DT_PDU_CandidateCellID_ExtIEs * objPDUCandidateCellID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CandidateCellID_ExtIEs( SI_AMF_DT_PDU_CandidateCellID_ExtIEs * objPDUCandidateCellID_ExtIEs);
void __si_amf_debug_PDU_CandidateCellID_ExtIEs( char * key, SI_AMF_DT_PDU_CandidateCellID_ExtIEs * objPDUCandidateCellID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CandidateCellID_ExtIEs( SI_AMF_DT_PDU_CandidateCellID_ExtIEs ** objPDUCandidateCellID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CandidatePCI_ExtIEs( SI_AMF_DT_PDU_CandidatePCI_ExtIEs * objPDUCandidatePCI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CandidatePCI_ExtIEs( SI_AMF_DT_PDU_CandidatePCI_ExtIEs * objPDUCandidatePCI_ExtIEs);
void __si_amf_debug_PDU_CandidatePCI_ExtIEs( char * key, SI_AMF_DT_PDU_CandidatePCI_ExtIEs * objPDUCandidatePCI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CandidatePCI_ExtIEs( SI_AMF_DT_PDU_CandidatePCI_ExtIEs ** objPDUCandidatePCI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Cause_ExtIEs( SI_AMF_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Cause_ExtIEs( SI_AMF_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs);
void __si_amf_debug_PDU_Cause_ExtIEs( char * key, SI_AMF_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Cause_ExtIEs( SI_AMF_DT_PDU_Cause_ExtIEs ** objPDUCause_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Cell_CAGInformation_ExtIEs( SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs * objPDUCell_CAGInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Cell_CAGInformation_ExtIEs( SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs * objPDUCell_CAGInformation_ExtIEs);
void __si_amf_debug_PDU_Cell_CAGInformation_ExtIEs( char * key, SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs * objPDUCell_CAGInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Cell_CAGInformation_ExtIEs( SI_AMF_DT_PDU_Cell_CAGInformation_ExtIEs ** objPDUCell_CAGInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs * objPDUCellIDBroadcastEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs * objPDUCellIDBroadcastEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CellIDBroadcastEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs * objPDUCellIDBroadcastEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastEUTRA_Item_ExtIEs ** objPDUCellIDBroadcastEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs * objPDUCellIDBroadcastNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs * objPDUCellIDBroadcastNR_Item_ExtIEs);
void __si_amf_debug_PDU_CellIDBroadcastNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs * objPDUCellIDBroadcastNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDBroadcastNR_Item_ExtIEs ** objPDUCellIDBroadcastNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs * objPDUCellIDCancelledEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs * objPDUCellIDCancelledEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CellIDCancelledEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs * objPDUCellIDCancelledEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledEUTRA_Item_ExtIEs ** objPDUCellIDCancelledEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs * objPDUCellIDCancelledNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs * objPDUCellIDCancelledNR_Item_ExtIEs);
void __si_amf_debug_PDU_CellIDCancelledNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs * objPDUCellIDCancelledNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_CellIDCancelledNR_Item_ExtIEs ** objPDUCellIDCancelledNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellIDListForRestart_ExtIEs( SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs * objPDUCellIDListForRestart_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellIDListForRestart_ExtIEs( SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs * objPDUCellIDListForRestart_ExtIEs);
void __si_amf_debug_PDU_CellIDListForRestart_ExtIEs( char * key, SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs * objPDUCellIDListForRestart_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellIDListForRestart_ExtIEs( SI_AMF_DT_PDU_CellIDListForRestart_ExtIEs ** objPDUCellIDListForRestart_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellType_ExtIEs( SI_AMF_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellType_ExtIEs( SI_AMF_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs);
void __si_amf_debug_PDU_CellType_ExtIEs( char * key, SI_AMF_DT_PDU_CellType_ExtIEs * objPDUCellType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellType_ExtIEs( SI_AMF_DT_PDU_CellType_ExtIEs ** objPDUCellType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ClockAccuracy_ExtIEs( SI_AMF_DT_PDU_ClockAccuracy_ExtIEs * objPDUClockAccuracy_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ClockAccuracy_ExtIEs( SI_AMF_DT_PDU_ClockAccuracy_ExtIEs * objPDUClockAccuracy_ExtIEs);
void __si_amf_debug_PDU_ClockAccuracy_ExtIEs( char * key, SI_AMF_DT_PDU_ClockAccuracy_ExtIEs * objPDUClockAccuracy_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ClockAccuracy_ExtIEs( SI_AMF_DT_PDU_ClockAccuracy_ExtIEs ** objPDUClockAccuracy_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ClockQualityAcceptanceIndication_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs * objPDUClockQualityAcceptanceIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ClockQualityAcceptanceIndication_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs * objPDUClockQualityAcceptanceIndication_ExtIEs);
void __si_amf_debug_PDU_ClockQualityAcceptanceIndication_ExtIEs( char * key, SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs * objPDUClockQualityAcceptanceIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ClockQualityAcceptanceIndication_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceIndication_ExtIEs ** objPDUClockQualityAcceptanceIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs);
void __si_amf_debug_PDU_ClockQualityAcceptanceCriteria_ExtIEs( char * key, SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_AMF_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs ** objPDUClockQualityAcceptanceCriteria_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs);
void __si_amf_debug_PDU_ClockQualityReportingControlInfo_ExtIEs( char * key, SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_AMF_DT_PDU_ClockQualityReportingControlInfo_ExtIEs ** objPDUClockQualityReportingControlInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ClockQualityDetailLevel_ExtIEs( SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ClockQualityDetailLevel_ExtIEs( SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs);
void __si_amf_debug_PDU_ClockQualityDetailLevel_ExtIEs( char * key, SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ClockQualityDetailLevel_ExtIEs( SI_AMF_DT_PDU_ClockQualityDetailLevel_ExtIEs ** objPDUClockQualityDetailLevel_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CNAssistedRANTuning_ExtIEs( SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs * objPDUCNAssistedRANTuning_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CNAssistedRANTuning_ExtIEs( SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs * objPDUCNAssistedRANTuning_ExtIEs);
void __si_amf_debug_PDU_CNAssistedRANTuning_ExtIEs( char * key, SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs * objPDUCNAssistedRANTuning_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CNAssistedRANTuning_ExtIEs( SI_AMF_DT_PDU_CNAssistedRANTuning_ExtIEs ** objPDUCNAssistedRANTuning_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs);
void __si_amf_debug_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( char * key, SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_AMF_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs ** objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInEAI_EUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInEAI_EUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInEAI_EUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_EUTRA_Item_ExtIEs ** objPDUCompletedCellsInEAI_EUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CompletedCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs * objPDUCompletedCellsInEAI_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CompletedCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs * objPDUCompletedCellsInEAI_NR_Item_ExtIEs);
void __si_amf_debug_PDU_CompletedCellsInEAI_NR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs * objPDUCompletedCellsInEAI_NR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CompletedCellsInEAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInEAI_NR_Item_ExtIEs ** objPDUCompletedCellsInEAI_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInTAI_EUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInTAI_EUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs * objPDUCompletedCellsInTAI_EUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_EUTRA_Item_ExtIEs ** objPDUCompletedCellsInTAI_EUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CompletedCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs * objPDUCompletedCellsInTAI_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CompletedCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs * objPDUCompletedCellsInTAI_NR_Item_ExtIEs);
void __si_amf_debug_PDU_CompletedCellsInTAI_NR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs * objPDUCompletedCellsInTAI_NR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CompletedCellsInTAI_NR_Item_ExtIEs( SI_AMF_DT_PDU_CompletedCellsInTAI_NR_Item_ExtIEs ** objPDUCompletedCellsInTAI_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs( SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs * objPDUCoreNetworkAssistanceInformationForInactive_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs( SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs * objPDUCoreNetworkAssistanceInformationForInactive_ExtIEs);
void __si_amf_debug_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs( char * key, SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs * objPDUCoreNetworkAssistanceInformationForInactive_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs( SI_AMF_DT_PDU_CoreNetworkAssistanceInformationForInactive_ExtIEs ** objPDUCoreNetworkAssistanceInformationForInactive_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_COUNTValueForPDCP_SN12_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs * objPDUCOUNTValueForPDCP_SN12_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_COUNTValueForPDCP_SN12_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs * objPDUCOUNTValueForPDCP_SN12_ExtIEs);
void __si_amf_debug_PDU_COUNTValueForPDCP_SN12_ExtIEs( char * key, SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs * objPDUCOUNTValueForPDCP_SN12_ExtIEs, int lvl);
int __si_amf_Decode_PDU_COUNTValueForPDCP_SN12_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN12_ExtIEs ** objPDUCOUNTValueForPDCP_SN12_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_COUNTValueForPDCP_SN18_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs * objPDUCOUNTValueForPDCP_SN18_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_COUNTValueForPDCP_SN18_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs * objPDUCOUNTValueForPDCP_SN18_ExtIEs);
void __si_amf_debug_PDU_COUNTValueForPDCP_SN18_ExtIEs( char * key, SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs * objPDUCOUNTValueForPDCP_SN18_ExtIEs, int lvl);
int __si_amf_Decode_PDU_COUNTValueForPDCP_SN18_ExtIEs( SI_AMF_DT_PDU_COUNTValueForPDCP_SN18_ExtIEs ** objPDUCOUNTValueForPDCP_SN18_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs);
void __si_amf_debug_PDU_CPTransportLayerInformation_ExtIEs( char * key, SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_CPTransportLayerInformation_ExtIEs ** objPDUCPTransportLayerInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CriticalityDiagnostics_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CriticalityDiagnostics_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs);
void __si_amf_debug_PDU_CriticalityDiagnostics_ExtIEs( char * key, SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CriticalityDiagnostics_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_ExtIEs ** objPDUCriticalityDiagnostics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs);
void __si_amf_debug_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( char * key, SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs * objPDUCriticalityDiagnostics_IE_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CriticalityDiagnostics_IE_Item_ExtIEs( SI_AMF_DT_PDU_CriticalityDiagnostics_IE_Item_ExtIEs ** objPDUCriticalityDiagnostics_IE_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellBasedMDT_NR_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellBasedMDT_NR_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs);
void __si_amf_debug_PDU_CellBasedMDT_NR_ExtIEs( char * key, SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellBasedMDT_NR_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_NR_ExtIEs ** objPDUCellBasedMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs);
void __si_amf_debug_PDU_CellBasedMDT_EUTRA_ExtIEs( char * key, SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_AMF_DT_PDU_CellBasedMDT_EUTRA_ExtIEs ** objPDUCellBasedMDT_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CellBasedQMC_ExtIEs( SI_AMF_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CellBasedQMC_ExtIEs( SI_AMF_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs);
void __si_amf_debug_PDU_CellBasedQMC_ExtIEs( char * key, SI_AMF_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CellBasedQMC_ExtIEs( SI_AMF_DT_PDU_CellBasedQMC_ExtIEs ** objPDUCellBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CAGListforMDTItem_ExtIEs( SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CAGListforMDTItem_ExtIEs( SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs);
void __si_amf_debug_PDU_CAGListforMDTItem_ExtIEs( char * key, SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CAGListforMDTItem_ExtIEs( SI_AMF_DT_PDU_CAGListforMDTItem_ExtIEs ** objPDUCAGListforMDTItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs);
void __si_amf_debug_PDU_DataForwardingResponseDRBItem_ExtIEs( char * key, SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseDRBItem_ExtIEs ** objPDUDataForwardingResponseDRBItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DAPSRequestInfo_ExtIEs( SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DAPSRequestInfo_ExtIEs( SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs);
void __si_amf_debug_PDU_DAPSRequestInfo_ExtIEs( char * key, SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DAPSRequestInfo_ExtIEs( SI_AMF_DT_PDU_DAPSRequestInfo_ExtIEs ** objPDUDAPSRequestInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DAPSResponseInfoItem_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DAPSResponseInfoItem_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs);
void __si_amf_debug_PDU_DAPSResponseInfoItem_ExtIEs( char * key, SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs * objPDUDAPSResponseInfoItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DAPSResponseInfoItem_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfoItem_ExtIEs ** objPDUDAPSResponseInfoItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DAPSResponseInfo_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DAPSResponseInfo_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs);
void __si_amf_debug_PDU_DAPSResponseInfo_ExtIEs( char * key, SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs * objPDUDAPSResponseInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DAPSResponseInfo_ExtIEs( SI_AMF_DT_PDU_DAPSResponseInfo_ExtIEs ** objPDUDAPSResponseInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DataForwardingResponseERABListItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs * objPDUDataForwardingResponseERABListItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DataForwardingResponseERABListItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs * objPDUDataForwardingResponseERABListItem_ExtIEs);
void __si_amf_debug_PDU_DataForwardingResponseERABListItem_ExtIEs( char * key, SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs * objPDUDataForwardingResponseERABListItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DataForwardingResponseERABListItem_ExtIEs( SI_AMF_DT_PDU_DataForwardingResponseERABListItem_ExtIEs ** objPDUDataForwardingResponseERABListItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs);
void __si_amf_debug_PDU_DL_CP_SecurityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs * objPDUDL_CP_SecurityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_DL_CP_SecurityInformation_ExtIEs ** objPDUDL_CP_SecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBsSubjectToStatusTransferItem_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs * objPDUDRBsSubjectToStatusTransferItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBsSubjectToStatusTransferItem_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs * objPDUDRBsSubjectToStatusTransferItem_ExtIEs);
void __si_amf_debug_PDU_DRBsSubjectToStatusTransferItem_ExtIEs( char * key, SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs * objPDUDRBsSubjectToStatusTransferItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBsSubjectToStatusTransferItem_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToStatusTransferItem_ExtIEs ** objPDUDRBsSubjectToStatusTransferItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusDL_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL_ExtIEs * objPDUDRBStatusDL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusDL_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL_ExtIEs * objPDUDRBStatusDL_ExtIEs);
void __si_amf_debug_PDU_DRBStatusDL_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusDL_ExtIEs * objPDUDRBStatusDL_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusDL_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL_ExtIEs ** objPDUDRBStatusDL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusDL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs * objPDUDRBStatusDL12_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusDL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs * objPDUDRBStatusDL12_ExtIEs);
void __si_amf_debug_PDU_DRBStatusDL12_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs * objPDUDRBStatusDL12_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusDL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL12_ExtIEs ** objPDUDRBStatusDL12_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusDL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs * objPDUDRBStatusDL18_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusDL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs * objPDUDRBStatusDL18_ExtIEs);
void __si_amf_debug_PDU_DRBStatusDL18_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs * objPDUDRBStatusDL18_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusDL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusDL18_ExtIEs ** objPDUDRBStatusDL18_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusUL_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL_ExtIEs * objPDUDRBStatusUL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusUL_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL_ExtIEs * objPDUDRBStatusUL_ExtIEs);
void __si_amf_debug_PDU_DRBStatusUL_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusUL_ExtIEs * objPDUDRBStatusUL_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusUL_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL_ExtIEs ** objPDUDRBStatusUL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusUL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs * objPDUDRBStatusUL12_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusUL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs * objPDUDRBStatusUL12_ExtIEs);
void __si_amf_debug_PDU_DRBStatusUL12_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs * objPDUDRBStatusUL12_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusUL12_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL12_ExtIEs ** objPDUDRBStatusUL12_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBStatusUL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs * objPDUDRBStatusUL18_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBStatusUL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs * objPDUDRBStatusUL18_ExtIEs);
void __si_amf_debug_PDU_DRBStatusUL18_ExtIEs( char * key, SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs * objPDUDRBStatusUL18_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBStatusUL18_ExtIEs( SI_AMF_DT_PDU_DRBStatusUL18_ExtIEs ** objPDUDRBStatusUL18_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBsToQosFlowsMappingItem_ExtIEs( SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs * objPDUDRBsToQosFlowsMappingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBsToQosFlowsMappingItem_ExtIEs( SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs * objPDUDRBsToQosFlowsMappingItem_ExtIEs);
void __si_amf_debug_PDU_DRBsToQosFlowsMappingItem_ExtIEs( char * key, SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs * objPDUDRBsToQosFlowsMappingItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBsToQosFlowsMappingItem_ExtIEs( SI_AMF_DT_PDU_DRBsToQosFlowsMappingItem_ExtIEs ** objPDUDRBsToQosFlowsMappingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Dynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Dynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs);
void __si_amf_debug_PDU_Dynamic5QIDescriptor_ExtIEs( char * key, SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Dynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_Dynamic5QIDescriptor_ExtIEs ** objPDUDynamic5QIDescriptor_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUEarlyStatusTransfer_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUEarlyStatusTransfer_TransparentContainer_ExtIEs);
void __si_amf_debug_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs( char * key, SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs * objPDUEarlyStatusTransfer_TransparentContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_EarlyStatusTransfer_TransparentContainer_ExtIEs ** objPDUEarlyStatusTransfer_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ProcedureStageChoice_ExtIEs( SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ProcedureStageChoice_ExtIEs( SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs);
void __si_amf_debug_PDU_ProcedureStageChoice_ExtIEs( char * key, SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ProcedureStageChoice_ExtIEs( SI_AMF_DT_PDU_ProcedureStageChoice_ExtIEs ** objPDUProcedureStageChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DLDiscarding_ExtIEs( SI_AMF_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DLDiscarding_ExtIEs( SI_AMF_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs);
void __si_amf_debug_PDU_DLDiscarding_ExtIEs( char * key, SI_AMF_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DLDiscarding_ExtIEs( SI_AMF_DT_PDU_DLDiscarding_ExtIEs ** objPDUDLDiscarding_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs);
void __si_amf_debug_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( char * key, SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs ** objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DLCountChoice_ExtIEs( SI_AMF_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DLCountChoice_ExtIEs( SI_AMF_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs);
void __si_amf_debug_PDU_DLCountChoice_ExtIEs( char * key, SI_AMF_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DLCountChoice_ExtIEs( SI_AMF_DT_PDU_DLCountChoice_ExtIEs ** objPDUDLCountChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FirstDLCount_ExtIEs( SI_AMF_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FirstDLCount_ExtIEs( SI_AMF_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs);
void __si_amf_debug_PDU_FirstDLCount_ExtIEs( char * key, SI_AMF_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FirstDLCount_ExtIEs( SI_AMF_DT_PDU_FirstDLCount_ExtIEs ** objPDUFirstDLCount_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs);
void __si_amf_debug_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( char * key, SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_AMF_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs ** objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs);
void __si_amf_debug_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( char * key, SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs ** objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs * objPDUECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs * objPDUECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs);
void __si_amf_debug_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs( char * key, SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs * objPDUECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs( SI_AMF_DT_PDU_ECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs ** objPDUECNMarkingorCongestionInformationReportingStatus_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastEUTRA_Item_ExtIEs ** objPDUEmergencyAreaIDBroadcastEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastNR_Item_ExtIEs);
void __si_amf_debug_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs * objPDUEmergencyAreaIDBroadcastNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDBroadcastNR_Item_ExtIEs ** objPDUEmergencyAreaIDBroadcastNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDCancelledEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDCancelledEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs * objPDUEmergencyAreaIDCancelledEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledEUTRA_Item_ExtIEs ** objPDUEmergencyAreaIDCancelledEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs * objPDUEmergencyAreaIDCancelledNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs * objPDUEmergencyAreaIDCancelledNR_Item_ExtIEs);
void __si_amf_debug_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs * objPDUEmergencyAreaIDCancelledNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_EmergencyAreaIDCancelledNR_Item_ExtIEs ** objPDUEmergencyAreaIDCancelledNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EmergencyFallbackIndicator_ExtIEs( SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs * objPDUEmergencyFallbackIndicator_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EmergencyFallbackIndicator_ExtIEs( SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs * objPDUEmergencyFallbackIndicator_ExtIEs);
void __si_amf_debug_PDU_EmergencyFallbackIndicator_ExtIEs( char * key, SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs * objPDUEmergencyFallbackIndicator_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EmergencyFallbackIndicator_ExtIEs( SI_AMF_DT_PDU_EmergencyFallbackIndicator_ExtIEs ** objPDUEmergencyFallbackIndicator_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ENB_ID_ExtIEs( SI_AMF_DT_PDU_ENB_ID_ExtIEs * objPDUENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ENB_ID_ExtIEs( SI_AMF_DT_PDU_ENB_ID_ExtIEs * objPDUENB_ID_ExtIEs);
void __si_amf_debug_PDU_ENB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_ENB_ID_ExtIEs * objPDUENB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ENB_ID_ExtIEs( SI_AMF_DT_PDU_ENB_ID_ExtIEs ** objPDUENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EndpointIPAddressAndPort_ExtIEs( SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EndpointIPAddressAndPort_ExtIEs( SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs);
void __si_amf_debug_PDU_EndpointIPAddressAndPort_ExtIEs( char * key, SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EndpointIPAddressAndPort_ExtIEs( SI_AMF_DT_PDU_EndpointIPAddressAndPort_ExtIEs ** objPDUEndpointIPAddressAndPort_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EPS_TAI_ExtIEs( SI_AMF_DT_PDU_EPS_TAI_ExtIEs * objPDUEPS_TAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EPS_TAI_ExtIEs( SI_AMF_DT_PDU_EPS_TAI_ExtIEs * objPDUEPS_TAI_ExtIEs);
void __si_amf_debug_PDU_EPS_TAI_ExtIEs( char * key, SI_AMF_DT_PDU_EPS_TAI_ExtIEs * objPDUEPS_TAI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EPS_TAI_ExtIEs( SI_AMF_DT_PDU_EPS_TAI_ExtIEs ** objPDUEPS_TAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_E_RABInformationItem_ExtIEs( SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs * objPDUE_RABInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_E_RABInformationItem_ExtIEs( SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs * objPDUE_RABInformationItem_ExtIEs);
void __si_amf_debug_PDU_E_RABInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs * objPDUE_RABInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_E_RABInformationItem_ExtIEs( SI_AMF_DT_PDU_E_RABInformationItem_ExtIEs ** objPDUE_RABInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRA_CGI_ExtIEs( SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs * objPDUEUTRA_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRA_CGI_ExtIEs( SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs * objPDUEUTRA_CGI_ExtIEs);
void __si_amf_debug_PDU_EUTRA_CGI_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs * objPDUEUTRA_CGI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRA_CGI_ExtIEs( SI_AMF_DT_PDU_EUTRA_CGI_ExtIEs ** objPDUEUTRA_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRA_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs * objPDUEUTRA_PagingeDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRA_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs * objPDUEUTRA_PagingeDRXInformation_ExtIEs);
void __si_amf_debug_PDU_EUTRA_PagingeDRXInformation_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs * objPDUEUTRA_PagingeDRXInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRA_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_EUTRA_PagingeDRXInformation_ExtIEs ** objPDUEUTRA_PagingeDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs);
void __si_amf_debug_PDU_ExcessPacketDelayThresholdItem_ExtIEs( char * key, SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_AMF_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs ** objPDUExcessPacketDelayThresholdItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs);
void __si_amf_debug_PDU_ExpectedUEActivityBehaviour_ExtIEs( char * key, SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs ** objPDUExpectedUEActivityBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ExpectedUEBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ExpectedUEBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs);
void __si_amf_debug_PDU_ExpectedUEBehaviour_ExtIEs( char * key, SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ExpectedUEBehaviour_ExtIEs( SI_AMF_DT_PDU_ExpectedUEBehaviour_ExtIEs ** objPDUExpectedUEBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs);
void __si_amf_debug_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( char * key, SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_AMF_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs ** objPDUExpectedUEMovingTrajectoryItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Extended_AMFName_ExtIEs( SI_AMF_DT_PDU_Extended_AMFName_ExtIEs * objPDUExtended_AMFName_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Extended_AMFName_ExtIEs( SI_AMF_DT_PDU_Extended_AMFName_ExtIEs * objPDUExtended_AMFName_ExtIEs);
void __si_amf_debug_PDU_Extended_AMFName_ExtIEs( char * key, SI_AMF_DT_PDU_Extended_AMFName_ExtIEs * objPDUExtended_AMFName_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Extended_AMFName_ExtIEs( SI_AMF_DT_PDU_Extended_AMFName_ExtIEs ** objPDUExtended_AMFName_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_Extended_RANNodeName_ExtIEs( SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs * objPDUExtended_RANNodeName_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_Extended_RANNodeName_ExtIEs( SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs * objPDUExtended_RANNodeName_ExtIEs);
void __si_amf_debug_PDU_Extended_RANNodeName_ExtIEs( char * key, SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs * objPDUExtended_RANNodeName_ExtIEs, int lvl);
int __si_amf_Decode_PDU_Extended_RANNodeName_ExtIEs( SI_AMF_DT_PDU_Extended_RANNodeName_ExtIEs ** objPDUExtended_RANNodeName_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs);
void __si_amf_debug_PDU_ExtendedRATRestrictionInformation_ExtIEs( char * key, SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_AMF_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs ** objPDUExtendedRATRestrictionInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EventTrigger_ExtIEs( SI_AMF_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EventTrigger_ExtIEs( SI_AMF_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs);
void __si_amf_debug_PDU_EventTrigger_ExtIEs( char * key, SI_AMF_DT_PDU_EventTrigger_ExtIEs * objPDUEventTrigger_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EventTrigger_ExtIEs( SI_AMF_DT_PDU_EventTrigger_ExtIEs ** objPDUEventTrigger_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs);
void __si_amf_debug_PDU_EventL1LoggedMDTConfig_ExtIEs( char * key, SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs * objPDUEventL1LoggedMDTConfig_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EventL1LoggedMDTConfig_ExtIEs( SI_AMF_DT_PDU_EventL1LoggedMDTConfig_ExtIEs ** objPDUEventL1LoggedMDTConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs);
void __si_amf_debug_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_AMF_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs ** objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EquivalentSNPNsItem_ExtIEs( SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs * objPDUEquivalentSNPNsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EquivalentSNPNsItem_ExtIEs( SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs * objPDUEquivalentSNPNsItem_ExtIEs);
void __si_amf_debug_PDU_EquivalentSNPNsItem_ExtIEs( char * key, SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs * objPDUEquivalentSNPNsItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EquivalentSNPNsItem_ExtIEs( SI_AMF_DT_PDU_EquivalentSNPNsItem_ExtIEs ** objPDUEquivalentSNPNsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FailureIndication_ExtIEs( SI_AMF_DT_PDU_FailureIndication_ExtIEs * objPDUFailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FailureIndication_ExtIEs( SI_AMF_DT_PDU_FailureIndication_ExtIEs * objPDUFailureIndication_ExtIEs);
void __si_amf_debug_PDU_FailureIndication_ExtIEs( char * key, SI_AMF_DT_PDU_FailureIndication_ExtIEs * objPDUFailureIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FailureIndication_ExtIEs( SI_AMF_DT_PDU_FailureIndication_ExtIEs ** objPDUFailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveGCAction_ExtIEs( SI_AMF_DT_PDU_FiveGCAction_ExtIEs * objPDUFiveGCAction_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveGCAction_ExtIEs( SI_AMF_DT_PDU_FiveGCAction_ExtIEs * objPDUFiveGCAction_ExtIEs);
void __si_amf_debug_PDU_FiveGCAction_ExtIEs( char * key, SI_AMF_DT_PDU_FiveGCAction_ExtIEs * objPDUFiveGCAction_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveGCAction_ExtIEs( SI_AMF_DT_PDU_FiveGCAction_ExtIEs ** objPDUFiveGCAction_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveG_ProSeAuthorized_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs * objPDUFiveG_ProSeAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveG_ProSeAuthorized_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs * objPDUFiveG_ProSeAuthorized_ExtIEs);
void __si_amf_debug_PDU_FiveG_ProSeAuthorized_ExtIEs( char * key, SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs * objPDUFiveG_ProSeAuthorized_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveG_ProSeAuthorized_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSeAuthorized_ExtIEs ** objPDUFiveG_ProSeAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveG_ProSePC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs * objPDUFiveG_ProSePC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveG_ProSePC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs * objPDUFiveG_ProSePC5QoSParameters_ExtIEs);
void __si_amf_debug_PDU_FiveG_ProSePC5QoSParameters_ExtIEs( char * key, SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs * objPDUFiveG_ProSePC5QoSParameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveG_ProSePC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_FiveG_ProSePC5QoSParameters_ExtIEs ** objPDUFiveG_ProSePC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs);
void __si_amf_debug_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( char * key, SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs ** objPDUFiveGProSePC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs);
void __si_amf_debug_PDU_FiveGProSePC5FlowBitRates_ExtIEs( char * key, SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs ** objPDUFiveGProSePC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FiveG_S_TMSI_ExtIEs( SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs * objPDUFiveG_S_TMSI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FiveG_S_TMSI_ExtIEs( SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs * objPDUFiveG_S_TMSI_ExtIEs);
void __si_amf_debug_PDU_FiveG_S_TMSI_ExtIEs( char * key, SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs * objPDUFiveG_S_TMSI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FiveG_S_TMSI_ExtIEs( SI_AMF_DT_PDU_FiveG_S_TMSI_ExtIEs ** objPDUFiveG_S_TMSI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ForbiddenAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs * objPDUForbiddenAreaInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ForbiddenAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs * objPDUForbiddenAreaInformation_Item_ExtIEs);
void __si_amf_debug_PDU_ForbiddenAreaInformation_Item_ExtIEs( char * key, SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs * objPDUForbiddenAreaInformation_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ForbiddenAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ForbiddenAreaInformation_Item_ExtIEs ** objPDUForbiddenAreaInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FromEUTRANtoNGRAN_ExtIEs( SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs * objPDUFromEUTRANtoNGRAN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FromEUTRANtoNGRAN_ExtIEs( SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs * objPDUFromEUTRANtoNGRAN_ExtIEs);
void __si_amf_debug_PDU_FromEUTRANtoNGRAN_ExtIEs( char * key, SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs * objPDUFromEUTRANtoNGRAN_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FromEUTRANtoNGRAN_ExtIEs( SI_AMF_DT_PDU_FromEUTRANtoNGRAN_ExtIEs ** objPDUFromEUTRANtoNGRAN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_FromNGRANtoEUTRAN_ExtIEs( SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs * objPDUFromNGRANtoEUTRAN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_FromNGRANtoEUTRAN_ExtIEs( SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs * objPDUFromNGRANtoEUTRAN_ExtIEs);
void __si_amf_debug_PDU_FromNGRANtoEUTRAN_ExtIEs( char * key, SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs * objPDUFromNGRANtoEUTRAN_ExtIEs, int lvl);
int __si_amf_Decode_PDU_FromNGRANtoEUTRAN_ExtIEs( SI_AMF_DT_PDU_FromNGRANtoEUTRAN_ExtIEs ** objPDUFromNGRANtoEUTRAN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GBR_QosInformation_ExtIEs( SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GBR_QosInformation_ExtIEs( SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs);
void __si_amf_debug_PDU_GBR_QosInformation_ExtIEs( char * key, SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs * objPDUGBR_QosInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GBR_QosInformation_ExtIEs( SI_AMF_DT_PDU_GBR_QosInformation_ExtIEs ** objPDUGBR_QosInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalCable_ID_new_ExtIEs( SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs * objPDUGlobalCable_ID_new_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalCable_ID_new_ExtIEs( SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs * objPDUGlobalCable_ID_new_ExtIEs);
void __si_amf_debug_PDU_GlobalCable_ID_new_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs * objPDUGlobalCable_ID_new_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalCable_ID_new_ExtIEs( SI_AMF_DT_PDU_GlobalCable_ID_new_ExtIEs ** objPDUGlobalCable_ID_new_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalENB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs * objPDUGlobalENB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalENB_ID_ExtIEs ** objPDUGlobalENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalGNB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs * objPDUGlobalGNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalGNB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs * objPDUGlobalGNB_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalGNB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs * objPDUGlobalGNB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalGNB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalGNB_ID_ExtIEs ** objPDUGlobalGNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalN3IWF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs * objPDUGlobalN3IWF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalN3IWF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs * objPDUGlobalN3IWF_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalN3IWF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs * objPDUGlobalN3IWF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalN3IWF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalN3IWF_ID_ExtIEs ** objPDUGlobalN3IWF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalLine_ID_ExtIEs( SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs * objPDUGlobalLine_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalLine_ID_ExtIEs( SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs * objPDUGlobalLine_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalLine_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs * objPDUGlobalLine_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalLine_ID_ExtIEs( SI_AMF_DT_PDU_GlobalLine_ID_ExtIEs ** objPDUGlobalLine_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalNgENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs * objPDUGlobalNgENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalNgENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs * objPDUGlobalNgENB_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalNgENB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs * objPDUGlobalNgENB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalNgENB_ID_ExtIEs( SI_AMF_DT_PDU_GlobalNgENB_ID_ExtIEs ** objPDUGlobalNgENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalRANNodeID_ExtIEs( SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs * objPDUGlobalRANNodeID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalRANNodeID_ExtIEs( SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs * objPDUGlobalRANNodeID_ExtIEs);
void __si_amf_debug_PDU_GlobalRANNodeID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs * objPDUGlobalRANNodeID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalRANNodeID_ExtIEs( SI_AMF_DT_PDU_GlobalRANNodeID_ExtIEs ** objPDUGlobalRANNodeID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalTNGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs * objPDUGlobalTNGF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalTNGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs * objPDUGlobalTNGF_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalTNGF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs * objPDUGlobalTNGF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalTNGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTNGF_ID_ExtIEs ** objPDUGlobalTNGF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalTWIF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs * objPDUGlobalTWIF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalTWIF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs * objPDUGlobalTWIF_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalTWIF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs * objPDUGlobalTWIF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalTWIF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalTWIF_ID_ExtIEs ** objPDUGlobalTWIF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GlobalW_AGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs * objPDUGlobalW_AGF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GlobalW_AGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs * objPDUGlobalW_AGF_ID_ExtIEs);
void __si_amf_debug_PDU_GlobalW_AGF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs * objPDUGlobalW_AGF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GlobalW_AGF_ID_ExtIEs( SI_AMF_DT_PDU_GlobalW_AGF_ID_ExtIEs ** objPDUGlobalW_AGF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GNB_ID_ExtIEs( SI_AMF_DT_PDU_GNB_ID_ExtIEs * objPDUGNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GNB_ID_ExtIEs( SI_AMF_DT_PDU_GNB_ID_ExtIEs * objPDUGNB_ID_ExtIEs);
void __si_amf_debug_PDU_GNB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_GNB_ID_ExtIEs * objPDUGNB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GNB_ID_ExtIEs( SI_AMF_DT_PDU_GNB_ID_ExtIEs ** objPDUGNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GTPTunnel_ExtIEs( SI_AMF_DT_PDU_GTPTunnel_ExtIEs * objPDUGTPTunnel_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GTPTunnel_ExtIEs( SI_AMF_DT_PDU_GTPTunnel_ExtIEs * objPDUGTPTunnel_ExtIEs);
void __si_amf_debug_PDU_GTPTunnel_ExtIEs( char * key, SI_AMF_DT_PDU_GTPTunnel_ExtIEs * objPDUGTPTunnel_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GTPTunnel_ExtIEs( SI_AMF_DT_PDU_GTPTunnel_ExtIEs ** objPDUGTPTunnel_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_GUAMI_ExtIEs( SI_AMF_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_GUAMI_ExtIEs( SI_AMF_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs);
void __si_amf_debug_PDU_GUAMI_ExtIEs( char * key, SI_AMF_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_GUAMI_ExtIEs( SI_AMF_DT_PDU_GUAMI_ExtIEs ** objPDUGUAMI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HandoverCommandTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs * objPDUHandoverCommandTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HandoverCommandTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs * objPDUHandoverCommandTransfer_ExtIEs);
void __si_amf_debug_PDU_HandoverCommandTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs * objPDUHandoverCommandTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HandoverCommandTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverCommandTransfer_ExtIEs ** objPDUHandoverCommandTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs * objPDUHandoverPreparationUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs * objPDUHandoverPreparationUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs * objPDUHandoverPreparationUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverPreparationUnsuccessfulTransfer_ExtIEs ** objPDUHandoverPreparationUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs * objPDUHandoverRequestAcknowledgeTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs * objPDUHandoverRequestAcknowledgeTransfer_ExtIEs);
void __si_amf_debug_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs * objPDUHandoverRequestAcknowledgeTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequestAcknowledgeTransfer_ExtIEs ** objPDUHandoverRequestAcknowledgeTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HandoverRequiredTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs * objPDUHandoverRequiredTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HandoverRequiredTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs * objPDUHandoverRequiredTransfer_ExtIEs);
void __si_amf_debug_PDU_HandoverRequiredTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs * objPDUHandoverRequiredTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HandoverRequiredTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverRequiredTransfer_ExtIEs ** objPDUHandoverRequiredTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs * objPDUHandoverResourceAllocationUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs * objPDUHandoverResourceAllocationUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs * objPDUHandoverResourceAllocationUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_HandoverResourceAllocationUnsuccessfulTransfer_ExtIEs ** objPDUHandoverResourceAllocationUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HFCNode_ID_new_ExtIEs( SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs * objPDUHFCNode_ID_new_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HFCNode_ID_new_ExtIEs( SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs * objPDUHFCNode_ID_new_ExtIEs);
void __si_amf_debug_PDU_HFCNode_ID_new_ExtIEs( char * key, SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs * objPDUHFCNode_ID_new_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HFCNode_ID_new_ExtIEs( SI_AMF_DT_PDU_HFCNode_ID_new_ExtIEs ** objPDUHFCNode_ID_new_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HLComActivate_ExtIEs( SI_AMF_DT_PDU_HLComActivate_ExtIEs * objPDUHLComActivate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HLComActivate_ExtIEs( SI_AMF_DT_PDU_HLComActivate_ExtIEs * objPDUHLComActivate_ExtIEs);
void __si_amf_debug_PDU_HLComActivate_ExtIEs( char * key, SI_AMF_DT_PDU_HLComActivate_ExtIEs * objPDUHLComActivate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HLComActivate_ExtIEs( SI_AMF_DT_PDU_HLComActivate_ExtIEs ** objPDUHLComActivate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HLComDeactivate_ExtIEs( SI_AMF_DT_PDU_HLComDeactivate_ExtIEs * objPDUHLComDeactivate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HLComDeactivate_ExtIEs( SI_AMF_DT_PDU_HLComDeactivate_ExtIEs * objPDUHLComDeactivate_ExtIEs);
void __si_amf_debug_PDU_HLComDeactivate_ExtIEs( char * key, SI_AMF_DT_PDU_HLComDeactivate_ExtIEs * objPDUHLComDeactivate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HLComDeactivate_ExtIEs( SI_AMF_DT_PDU_HLComDeactivate_ExtIEs ** objPDUHLComDeactivate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_HOReport_ExtIEs( SI_AMF_DT_PDU_HOReport_ExtIEs * objPDUHOReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_HOReport_ExtIEs( SI_AMF_DT_PDU_HOReport_ExtIEs * objPDUHOReport_ExtIEs);
void __si_amf_debug_PDU_HOReport_ExtIEs( char * key, SI_AMF_DT_PDU_HOReport_ExtIEs * objPDUHOReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_HOReport_ExtIEs( SI_AMF_DT_PDU_HOReport_ExtIEs ** objPDUHOReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MobileIAB_MTUserLocationInformation_ExtIEs( SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs * objPDUMobileIAB_MTUserLocationInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MobileIAB_MTUserLocationInformation_ExtIEs( SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs * objPDUMobileIAB_MTUserLocationInformation_ExtIEs);
void __si_amf_debug_PDU_MobileIAB_MTUserLocationInformation_ExtIEs( char * key, SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs * objPDUMobileIAB_MTUserLocationInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MobileIAB_MTUserLocationInformation_ExtIEs( SI_AMF_DT_PDU_MobileIAB_MTUserLocationInformation_ExtIEs ** objPDUMobileIAB_MTUserLocationInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs * objPDUInfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs * objPDUInfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs);
void __si_amf_debug_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs( char * key, SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs * objPDUInfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs, int lvl);
int __si_amf_Decode_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_InfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs ** objPDUInfoOnRecommendedCellsAndRANNodesForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ImmediateMDTNr_ExtIEs( SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs * objPDUImmediateMDTNr_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ImmediateMDTNr_ExtIEs( SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs * objPDUImmediateMDTNr_ExtIEs);
void __si_amf_debug_PDU_ImmediateMDTNr_ExtIEs( char * key, SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs * objPDUImmediateMDTNr_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ImmediateMDTNr_ExtIEs( SI_AMF_DT_PDU_ImmediateMDTNr_ExtIEs ** objPDUImmediateMDTNr_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_InterSystemFailureIndication_ExtIEs( SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs * objPDUInterSystemFailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_InterSystemFailureIndication_ExtIEs( SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs * objPDUInterSystemFailureIndication_ExtIEs);
void __si_amf_debug_PDU_InterSystemFailureIndication_ExtIEs( char * key, SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs * objPDUInterSystemFailureIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_InterSystemFailureIndication_ExtIEs( SI_AMF_DT_PDU_InterSystemFailureIndication_ExtIEs ** objPDUInterSystemFailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs * objPDUIntersystemSONConfigurationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs * objPDUIntersystemSONConfigurationTransfer_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONConfigurationTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs * objPDUIntersystemSONConfigurationTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_IntersystemSONConfigurationTransfer_ExtIEs ** objPDUIntersystemSONConfigurationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONTransferType_ExtIEs( SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs * objPDUIntersystemSONTransferType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONTransferType_ExtIEs( SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs * objPDUIntersystemSONTransferType_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONTransferType_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs * objPDUIntersystemSONTransferType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONTransferType_ExtIEs( SI_AMF_DT_PDU_IntersystemSONTransferType_ExtIEs ** objPDUIntersystemSONTransferType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONeNBID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs * objPDUIntersystemSONeNBID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONeNBID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs * objPDUIntersystemSONeNBID_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONeNBID_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs * objPDUIntersystemSONeNBID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONeNBID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONeNBID_ExtIEs ** objPDUIntersystemSONeNBID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONNGRANnodeID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs * objPDUIntersystemSONNGRANnodeID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONNGRANnodeID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs * objPDUIntersystemSONNGRANnodeID_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONNGRANnodeID_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs * objPDUIntersystemSONNGRANnodeID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONNGRANnodeID_ExtIEs( SI_AMF_DT_PDU_IntersystemSONNGRANnodeID_ExtIEs ** objPDUIntersystemSONNGRANnodeID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONInformation_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs * objPDUIntersystemSONInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONInformation_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs * objPDUIntersystemSONInformation_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONInformation_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs * objPDUIntersystemSONInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONInformation_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformation_ExtIEs ** objPDUIntersystemSONInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONInformationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs * objPDUIntersystemSONInformationRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONInformationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs * objPDUIntersystemSONInformationRequest_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONInformationRequest_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs * objPDUIntersystemSONInformationRequest_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONInformationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationRequest_ExtIEs ** objPDUIntersystemSONInformationRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemCellActivationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs * objPDUIntersystemCellActivationRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemCellActivationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs * objPDUIntersystemCellActivationRequest_ExtIEs);
void __si_amf_debug_PDU_IntersystemCellActivationRequest_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs * objPDUIntersystemCellActivationRequest_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemCellActivationRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationRequest_ExtIEs ** objPDUIntersystemCellActivationRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemResourceStatusRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs * objPDUIntersystemResourceStatusRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemResourceStatusRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs * objPDUIntersystemResourceStatusRequest_ExtIEs);
void __si_amf_debug_PDU_IntersystemResourceStatusRequest_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs * objPDUIntersystemResourceStatusRequest_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemResourceStatusRequest_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusRequest_ExtIEs ** objPDUIntersystemResourceStatusRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ReportingSystem_ExtIEs( SI_AMF_DT_PDU_ReportingSystem_ExtIEs * objPDUReportingSystem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ReportingSystem_ExtIEs( SI_AMF_DT_PDU_ReportingSystem_ExtIEs * objPDUReportingSystem_ExtIEs);
void __si_amf_debug_PDU_ReportingSystem_ExtIEs( char * key, SI_AMF_DT_PDU_ReportingSystem_ExtIEs * objPDUReportingSystem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ReportingSystem_ExtIEs( SI_AMF_DT_PDU_ReportingSystem_ExtIEs ** objPDUReportingSystem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs * objPDUEUTRAN_ReportingSystemIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs * objPDUEUTRAN_ReportingSystemIEs_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_ReportingSystemIEs_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs * objPDUEUTRAN_ReportingSystemIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingSystemIEs_ExtIEs ** objPDUEUTRAN_ReportingSystemIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs * objPDUNGRAN_ReportingSystemIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs * objPDUNGRAN_ReportingSystemIEs_ExtIEs);
void __si_amf_debug_PDU_NGRAN_ReportingSystemIEs_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs * objPDUNGRAN_ReportingSystemIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_ReportingSystemIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingSystemIEs_ExtIEs ** objPDUNGRAN_ReportingSystemIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs * objPDUEUTRAN_CellToReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs * objPDUEUTRAN_CellToReportItem_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_CellToReportItem_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs * objPDUEUTRAN_CellToReportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellToReportItem_ExtIEs ** objPDUEUTRAN_CellToReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs * objPDUNGRAN_CellToReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs * objPDUNGRAN_CellToReportItem_ExtIEs);
void __si_amf_debug_PDU_NGRAN_CellToReportItem_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs * objPDUNGRAN_CellToReportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_CellToReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellToReportItem_ExtIEs ** objPDUNGRAN_CellToReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ReportType_ExtIEs( SI_AMF_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ReportType_ExtIEs( SI_AMF_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs);
void __si_amf_debug_PDU_ReportType_ExtIEs( char * key, SI_AMF_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ReportType_ExtIEs( SI_AMF_DT_PDU_ReportType_ExtIEs ** objPDUReportType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EventBasedReportingIEs_ExtIEs( SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs * objPDUEventBasedReportingIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EventBasedReportingIEs_ExtIEs( SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs * objPDUEventBasedReportingIEs_ExtIEs);
void __si_amf_debug_PDU_EventBasedReportingIEs_ExtIEs( char * key, SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs * objPDUEventBasedReportingIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EventBasedReportingIEs_ExtIEs( SI_AMF_DT_PDU_EventBasedReportingIEs_ExtIEs ** objPDUEventBasedReportingIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PeriodicReportingIEs_ExtIEs( SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs * objPDUPeriodicReportingIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PeriodicReportingIEs_ExtIEs( SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs * objPDUPeriodicReportingIEs_ExtIEs);
void __si_amf_debug_PDU_PeriodicReportingIEs_ExtIEs( char * key, SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs * objPDUPeriodicReportingIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PeriodicReportingIEs_ExtIEs( SI_AMF_DT_PDU_PeriodicReportingIEs_ExtIEs ** objPDUPeriodicReportingIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONInformationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs * objPDUIntersystemSONInformationReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONInformationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs * objPDUIntersystemSONInformationReply_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONInformationReply_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs * objPDUIntersystemSONInformationReply_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONInformationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReply_ExtIEs ** objPDUIntersystemSONInformationReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemCellActivationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs * objPDUIntersystemCellActivationReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemCellActivationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs * objPDUIntersystemCellActivationReply_ExtIEs);
void __si_amf_debug_PDU_IntersystemCellActivationReply_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs * objPDUIntersystemCellActivationReply_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemCellActivationReply_ExtIEs( SI_AMF_DT_PDU_IntersystemCellActivationReply_ExtIEs ** objPDUIntersystemCellActivationReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemResourceStatusReply_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs * objPDUIntersystemResourceStatusReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemResourceStatusReply_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs * objPDUIntersystemResourceStatusReply_ExtIEs);
void __si_amf_debug_PDU_IntersystemResourceStatusReply_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs * objPDUIntersystemResourceStatusReply_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemResourceStatusReply_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReply_ExtIEs ** objPDUIntersystemResourceStatusReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemSONInformationReport_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs * objPDUIntersystemSONInformationReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemSONInformationReport_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs * objPDUIntersystemSONInformationReport_ExtIEs);
void __si_amf_debug_PDU_IntersystemSONInformationReport_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs * objPDUIntersystemSONInformationReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemSONInformationReport_ExtIEs( SI_AMF_DT_PDU_IntersystemSONInformationReport_ExtIEs ** objPDUIntersystemSONInformationReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemCellStateIndication_ExtIEs( SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs * objPDUIntersystemCellStateIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemCellStateIndication_ExtIEs( SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs * objPDUIntersystemCellStateIndication_ExtIEs);
void __si_amf_debug_PDU_IntersystemCellStateIndication_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs * objPDUIntersystemCellStateIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemCellStateIndication_ExtIEs( SI_AMF_DT_PDU_IntersystemCellStateIndication_ExtIEs ** objPDUIntersystemCellStateIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NotificationCell_Item_ExtIEs( SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs * objPDUNotificationCell_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NotificationCell_Item_ExtIEs( SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs * objPDUNotificationCell_Item_ExtIEs);
void __si_amf_debug_PDU_NotificationCell_Item_ExtIEs( char * key, SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs * objPDUNotificationCell_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NotificationCell_Item_ExtIEs( SI_AMF_DT_PDU_NotificationCell_Item_ExtIEs ** objPDUNotificationCell_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemResourceStatusReport_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs * objPDUIntersystemResourceStatusReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemResourceStatusReport_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs * objPDUIntersystemResourceStatusReport_ExtIEs);
void __si_amf_debug_PDU_IntersystemResourceStatusReport_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs * objPDUIntersystemResourceStatusReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemResourceStatusReport_ExtIEs( SI_AMF_DT_PDU_IntersystemResourceStatusReport_ExtIEs ** objPDUIntersystemResourceStatusReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ResourceStatusReportingSystem_ExtIEs( SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs * objPDUResourceStatusReportingSystem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ResourceStatusReportingSystem_ExtIEs( SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs * objPDUResourceStatusReportingSystem_ExtIEs);
void __si_amf_debug_PDU_ResourceStatusReportingSystem_ExtIEs( char * key, SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs * objPDUResourceStatusReportingSystem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ResourceStatusReportingSystem_ExtIEs( SI_AMF_DT_PDU_ResourceStatusReportingSystem_ExtIEs ** objPDUResourceStatusReportingSystem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs * objPDUEUTRAN_ReportingStatusIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs * objPDUEUTRAN_ReportingStatusIEs_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_ReportingStatusIEs_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs * objPDUEUTRAN_ReportingStatusIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_EUTRAN_ReportingStatusIEs_ExtIEs ** objPDUEUTRAN_ReportingStatusIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs * objPDUEUTRAN_CellReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs * objPDUEUTRAN_CellReportItem_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_CellReportItem_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs * objPDUEUTRAN_CellReportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CellReportItem_ExtIEs ** objPDUEUTRAN_CellReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs * objPDUEUTRAN_CompositeAvailableCapacityGroup_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs * objPDUEUTRAN_CompositeAvailableCapacityGroup_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs * objPDUEUTRAN_CompositeAvailableCapacityGroup_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs( SI_AMF_DT_PDU_EUTRAN_CompositeAvailableCapacityGroup_ExtIEs ** objPDUEUTRAN_CompositeAvailableCapacityGroup_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_CompositeAvailableCapacity_ExtIEs( SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_CompositeAvailableCapacity_ExtIEs( SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs);
void __si_amf_debug_PDU_CompositeAvailableCapacity_ExtIEs( char * key, SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs, int lvl);
int __si_amf_Decode_PDU_CompositeAvailableCapacity_ExtIEs( SI_AMF_DT_PDU_CompositeAvailableCapacity_ExtIEs ** objPDUCompositeAvailableCapacity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_EUTRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs * objPDUEUTRAN_RadioResourceStatus_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_EUTRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs * objPDUEUTRAN_RadioResourceStatus_ExtIEs);
void __si_amf_debug_PDU_EUTRAN_RadioResourceStatus_ExtIEs( char * key, SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs * objPDUEUTRAN_RadioResourceStatus_ExtIEs, int lvl);
int __si_amf_Decode_PDU_EUTRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_EUTRAN_RadioResourceStatus_ExtIEs ** objPDUEUTRAN_RadioResourceStatus_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs * objPDUNGRAN_ReportingStatusIEs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs * objPDUNGRAN_ReportingStatusIEs_ExtIEs);
void __si_amf_debug_PDU_NGRAN_ReportingStatusIEs_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs * objPDUNGRAN_ReportingStatusIEs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_ReportingStatusIEs_ExtIEs( SI_AMF_DT_PDU_NGRAN_ReportingStatusIEs_ExtIEs ** objPDUNGRAN_ReportingStatusIEs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs * objPDUNGRAN_CellReportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs * objPDUNGRAN_CellReportItem_ExtIEs);
void __si_amf_debug_PDU_NGRAN_CellReportItem_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs * objPDUNGRAN_CellReportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_CellReportItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_CellReportItem_ExtIEs ** objPDUNGRAN_CellReportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs * objPDUNGRAN_RadioResourceStatus_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs * objPDUNGRAN_RadioResourceStatus_ExtIEs);
void __si_amf_debug_PDU_NGRAN_RadioResourceStatus_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs * objPDUNGRAN_RadioResourceStatus_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_RadioResourceStatus_ExtIEs( SI_AMF_DT_PDU_NGRAN_RadioResourceStatus_ExtIEs ** objPDUNGRAN_RadioResourceStatus_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_InterSystemHOReport_ExtIEs( SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs * objPDUInterSystemHOReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_InterSystemHOReport_ExtIEs( SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs * objPDUInterSystemHOReport_ExtIEs);
void __si_amf_debug_PDU_InterSystemHOReport_ExtIEs( char * key, SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs * objPDUInterSystemHOReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_InterSystemHOReport_ExtIEs( SI_AMF_DT_PDU_InterSystemHOReport_ExtIEs ** objPDUInterSystemHOReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_InterSystemHandoverReportType_ExtIEs( SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs * objPDUInterSystemHandoverReportType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_InterSystemHandoverReportType_ExtIEs( SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs * objPDUInterSystemHandoverReportType_ExtIEs);
void __si_amf_debug_PDU_InterSystemHandoverReportType_ExtIEs( char * key, SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs * objPDUInterSystemHandoverReportType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_InterSystemHandoverReportType_ExtIEs( SI_AMF_DT_PDU_InterSystemHandoverReportType_ExtIEs ** objPDUInterSystemHandoverReportType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs( SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs * objPDUIntersystemMobilityFailureforVoiceFallback_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs( SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs * objPDUIntersystemMobilityFailureforVoiceFallback_ExtIEs);
void __si_amf_debug_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs * objPDUIntersystemMobilityFailureforVoiceFallback_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs( SI_AMF_DT_PDU_IntersystemMobilityFailureforVoiceFallback_ExtIEs ** objPDUIntersystemMobilityFailureforVoiceFallback_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_IntersystemUnnecessaryHO_ExtIEs( SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs * objPDUIntersystemUnnecessaryHO_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_IntersystemUnnecessaryHO_ExtIEs( SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs * objPDUIntersystemUnnecessaryHO_ExtIEs);
void __si_amf_debug_PDU_IntersystemUnnecessaryHO_ExtIEs( char * key, SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs * objPDUIntersystemUnnecessaryHO_ExtIEs, int lvl);
int __si_amf_Decode_PDU_IntersystemUnnecessaryHO_ExtIEs( SI_AMF_DT_PDU_IntersystemUnnecessaryHO_ExtIEs ** objPDUIntersystemUnnecessaryHO_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LAI_ExtIEs( SI_AMF_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LAI_ExtIEs( SI_AMF_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs);
void __si_amf_debug_PDU_LAI_ExtIEs( char * key, SI_AMF_DT_PDU_LAI_ExtIEs * objPDULAI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LAI_ExtIEs( SI_AMF_DT_PDU_LAI_ExtIEs ** objPDULAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LastVisitedCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs * objPDULastVisitedCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LastVisitedCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs * objPDULastVisitedCellInformation_ExtIEs);
void __si_amf_debug_PDU_LastVisitedCellInformation_ExtIEs( char * key, SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs * objPDULastVisitedCellInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LastVisitedCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellInformation_ExtIEs ** objPDULastVisitedCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LastVisitedCellItem_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs * objPDULastVisitedCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LastVisitedCellItem_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs * objPDULastVisitedCellItem_ExtIEs);
void __si_amf_debug_PDU_LastVisitedCellItem_ExtIEs( char * key, SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs * objPDULastVisitedCellItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LastVisitedCellItem_ExtIEs( SI_AMF_DT_PDU_LastVisitedCellItem_ExtIEs ** objPDULastVisitedCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LastVisitedNGRANCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs * objPDULastVisitedNGRANCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LastVisitedNGRANCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs * objPDULastVisitedNGRANCellInformation_ExtIEs);
void __si_amf_debug_PDU_LastVisitedNGRANCellInformation_ExtIEs( char * key, SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs * objPDULastVisitedNGRANCellInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LastVisitedNGRANCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedNGRANCellInformation_ExtIEs ** objPDULastVisitedNGRANCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LastVisitedPSCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LastVisitedPSCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs);
void __si_amf_debug_PDU_LastVisitedPSCellInformation_ExtIEs( char * key, SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs * objPDULastVisitedPSCellInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LastVisitedPSCellInformation_ExtIEs( SI_AMF_DT_PDU_LastVisitedPSCellInformation_ExtIEs ** objPDULastVisitedPSCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LocationReportingRequestType_ExtIEs( SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs * objPDULocationReportingRequestType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LocationReportingRequestType_ExtIEs( SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs * objPDULocationReportingRequestType_ExtIEs);
void __si_amf_debug_PDU_LocationReportingRequestType_ExtIEs( char * key, SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs * objPDULocationReportingRequestType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LocationReportingRequestType_ExtIEs( SI_AMF_DT_PDU_LocationReportingRequestType_ExtIEs ** objPDULocationReportingRequestType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LoggedMDTNr_ExtIEs( SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs * objPDULoggedMDTNr_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LoggedMDTNr_ExtIEs( SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs * objPDULoggedMDTNr_ExtIEs);
void __si_amf_debug_PDU_LoggedMDTNr_ExtIEs( char * key, SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs * objPDULoggedMDTNr_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LoggedMDTNr_ExtIEs( SI_AMF_DT_PDU_LoggedMDTNr_ExtIEs ** objPDULoggedMDTNr_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LoggedMDTTrigger_ExtIEs( SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs * objPDULoggedMDTTrigger_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LoggedMDTTrigger_ExtIEs( SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs * objPDULoggedMDTTrigger_ExtIEs);
void __si_amf_debug_PDU_LoggedMDTTrigger_ExtIEs( char * key, SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs * objPDULoggedMDTTrigger_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LoggedMDTTrigger_ExtIEs( SI_AMF_DT_PDU_LoggedMDTTrigger_ExtIEs ** objPDULoggedMDTTrigger_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs);
void __si_amf_debug_PDU_LTEV2XServicesAuthorized_ExtIEs( char * key, SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTEV2XServicesAuthorized_ExtIEs ** objPDULTEV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDULTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDULTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs);
void __si_amf_debug_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( char * key, SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs * objPDULTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs( SI_AMF_DT_PDU_LTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs ** objPDULTEUE_Sidelink_Aggregate_MaximumBitrates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_LTE_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs * objPDULTE_A2X_ServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_LTE_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs * objPDULTE_A2X_ServicesAuthorized_ExtIEs);
void __si_amf_debug_PDU_LTE_A2X_ServicesAuthorized_ExtIEs( char * key, SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs * objPDULTE_A2X_ServicesAuthorized_ExtIEs, int lvl);
int __si_amf_Decode_PDU_LTE_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_LTE_A2X_ServicesAuthorized_ExtIEs ** objPDULTE_A2X_ServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs( SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs * objPDUMBS_DataForwardingResponseMRBItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs( SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs * objPDUMBS_DataForwardingResponseMRBItem_ExtIEs);
void __si_amf_debug_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs * objPDUMBS_DataForwardingResponseMRBItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs( SI_AMF_DT_PDU_MBS_DataForwardingResponseMRBItem_ExtIEs ** objPDUMBS_DataForwardingResponseMRBItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs( SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs * objPDUMBS_MappingandDataForwardingRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs( SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs * objPDUMBS_MappingandDataForwardingRequestItem_ExtIEs);
void __si_amf_debug_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs * objPDUMBS_MappingandDataForwardingRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs( SI_AMF_DT_PDU_MBS_MappingandDataForwardingRequestItem_ExtIEs ** objPDUMBS_MappingandDataForwardingRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MRB_ProgressInformation_ExtIEs( SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MRB_ProgressInformation_ExtIEs( SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs);
void __si_amf_debug_PDU_MRB_ProgressInformation_ExtIEs( char * key, SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MRB_ProgressInformation_ExtIEs( SI_AMF_DT_PDU_MRB_ProgressInformation_ExtIEs ** objPDUMRB_ProgressInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs( SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs * objPDUMBS_QoSFlowsToBeSetupItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs( SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs * objPDUMBS_QoSFlowsToBeSetupItem_ExtIEs);
void __si_amf_debug_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs * objPDUMBS_QoSFlowsToBeSetupItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs( SI_AMF_DT_PDU_MBS_QoSFlowsToBeSetupItem_ExtIEs ** objPDUMBS_QoSFlowsToBeSetupItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_ServiceArea_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_ServiceArea_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs);
void __si_amf_debug_PDU_MBS_ServiceArea_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_ServiceArea_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceArea_ExtIEs ** objPDUMBS_ServiceArea_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_ServiceAreaInformationItem_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs * objPDUMBS_ServiceAreaInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_ServiceAreaInformationItem_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs * objPDUMBS_ServiceAreaInformationItem_ExtIEs);
void __si_amf_debug_PDU_MBS_ServiceAreaInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs * objPDUMBS_ServiceAreaInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_ServiceAreaInformationItem_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformationItem_ExtIEs ** objPDUMBS_ServiceAreaInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs);
void __si_amf_debug_PDU_MBS_ServiceAreaInformation_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_AMF_DT_PDU_MBS_ServiceAreaInformation_ExtIEs ** objPDUMBS_ServiceAreaInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_SessionID_ExtIEs( SI_AMF_DT_PDU_MBS_SessionID_ExtIEs * objPDUMBS_SessionID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_SessionID_ExtIEs( SI_AMF_DT_PDU_MBS_SessionID_ExtIEs * objPDUMBS_SessionID_ExtIEs);
void __si_amf_debug_PDU_MBS_SessionID_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_SessionID_ExtIEs * objPDUMBS_SessionID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_SessionID_ExtIEs( SI_AMF_DT_PDU_MBS_SessionID_ExtIEs ** objPDUMBS_SessionID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionFailedtoSetupItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs * objPDUMBSSessionFailedtoSetupItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionFailedtoSetupItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs * objPDUMBSSessionFailedtoSetupItem_ExtIEs);
void __si_amf_debug_PDU_MBSSessionFailedtoSetupItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs * objPDUMBSSessionFailedtoSetupItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionFailedtoSetupItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionFailedtoSetupItem_ExtIEs ** objPDUMBSSessionFailedtoSetupItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs * objPDUMBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs * objPDUMBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs);
void __si_amf_debug_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs * objPDUMBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs ** objPDUMBS_ActiveSessionInformation_SourcetoTargetItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs * objPDUMBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs * objPDUMBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs);
void __si_amf_debug_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs * objPDUMBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs( SI_AMF_DT_PDU_MBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs ** objPDUMBS_ActiveSessionInformation_TargettoSourceItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs * objPDUMBSSessionSetupOrModFailureTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs * objPDUMBSSessionSetupOrModFailureTransfer_ExtIEs);
void __si_amf_debug_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs * objPDUMBSSessionSetupOrModFailureTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModFailureTransfer_ExtIEs ** objPDUMBSSessionSetupOrModFailureTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetupResponseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs * objPDUMBSSessionSetupResponseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetupResponseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs * objPDUMBSSessionSetupResponseItem_ExtIEs);
void __si_amf_debug_PDU_MBSSessionSetupResponseItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs * objPDUMBSSessionSetupResponseItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetupResponseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupResponseItem_ExtIEs ** objPDUMBSSessionSetupResponseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs * objPDUMBSSessionReleaseResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs * objPDUMBSSessionReleaseResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_MBSSessionReleaseResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs * objPDUMBSSessionReleaseResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionReleaseResponseTransfer_ExtIEs ** objPDUMBSSessionReleaseResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs * objPDUMBSSessionSetupOrModResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs * objPDUMBSSessionSetupOrModResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs * objPDUMBSSessionSetupOrModResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupOrModResponseTransfer_ExtIEs ** objPDUMBSSessionSetupOrModResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_SessionTNLInfo5GC_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs * objPDUMBS_SessionTNLInfo5GC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_SessionTNLInfo5GC_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs * objPDUMBS_SessionTNLInfo5GC_ExtIEs);
void __si_amf_debug_PDU_MBS_SessionTNLInfo5GC_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs * objPDUMBS_SessionTNLInfo5GC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_SessionTNLInfo5GC_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GC_ExtIEs ** objPDUMBS_SessionTNLInfo5GC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs * objPDUMBS_SessionTNLInfo5GCItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs * objPDUMBS_SessionTNLInfo5GCItem_ExtIEs);
void __si_amf_debug_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs * objPDUMBS_SessionTNLInfo5GCItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfo5GCItem_ExtIEs ** objPDUMBS_SessionTNLInfo5GCItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs * objPDUMBS_SessionTNLInfoNGRAN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs * objPDUMBS_SessionTNLInfoNGRAN_ExtIEs);
void __si_amf_debug_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs * objPDUMBS_SessionTNLInfoNGRAN_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRAN_ExtIEs ** objPDUMBS_SessionTNLInfoNGRAN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs * objPDUMBS_SessionTNLInfoNGRANItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs * objPDUMBS_SessionTNLInfoNGRANItem_ExtIEs);
void __si_amf_debug_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs * objPDUMBS_SessionTNLInfoNGRANItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs( SI_AMF_DT_PDU_MBS_SessionTNLInfoNGRANItem_ExtIEs ** objPDUMBS_SessionTNLInfoNGRANItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs * objPDUMBS_DistributionReleaseRequesTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs * objPDUMBS_DistributionReleaseRequesTransfer_ExtIEs);
void __si_amf_debug_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs * objPDUMBS_DistributionReleaseRequesTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionReleaseRequesTransfer_ExtIEs ** objPDUMBS_DistributionReleaseRequesTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs * objPDUMBS_DistributionSetupRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs * objPDUMBS_DistributionSetupRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs * objPDUMBS_DistributionSetupRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupRequestTransfer_ExtIEs ** objPDUMBS_DistributionSetupRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs * objPDUMBS_DistributionSetupResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs * objPDUMBS_DistributionSetupResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs * objPDUMBS_DistributionSetupResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupResponseTransfer_ExtIEs ** objPDUMBS_DistributionSetupResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs * objPDUMBS_DistributionSetupUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs * objPDUMBS_DistributionSetupUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs * objPDUMBS_DistributionSetupUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_MBS_DistributionSetupUnsuccessfulTransfer_ExtIEs ** objPDUMBS_DistributionSetupUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_NGUFailureIndication_ExtIEs( SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs * objPDUMBS_NGUFailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_NGUFailureIndication_ExtIEs( SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs * objPDUMBS_NGUFailureIndication_ExtIEs);
void __si_amf_debug_PDU_MBS_NGUFailureIndication_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs * objPDUMBS_NGUFailureIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_NGUFailureIndication_ExtIEs( SI_AMF_DT_PDU_MBS_NGUFailureIndication_ExtIEs ** objPDUMBS_NGUFailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBS_UP_FailureIndicationItem_ExtIEs( SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs * objPDUMBS_UP_FailureIndicationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBS_UP_FailureIndicationItem_ExtIEs( SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs * objPDUMBS_UP_FailureIndicationItem_ExtIEs);
void __si_amf_debug_PDU_MBS_UP_FailureIndicationItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs * objPDUMBS_UP_FailureIndicationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBS_UP_FailureIndicationItem_ExtIEs( SI_AMF_DT_PDU_MBS_UP_FailureIndicationItem_ExtIEs ** objPDUMBS_UP_FailureIndicationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs * objPDUMBSSessionSetupRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs * objPDUMBSSessionSetupRequestItem_ExtIEs);
void __si_amf_debug_PDU_MBSSessionSetupRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs * objPDUMBSSessionSetupRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetupRequestItem_ExtIEs ** objPDUMBSSessionSetupRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs * objPDUMBSSessionSetuporModifyRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs * objPDUMBSSessionSetuporModifyRequestItem_ExtIEs);
void __si_amf_debug_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs * objPDUMBSSessionSetuporModifyRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionSetuporModifyRequestItem_ExtIEs ** objPDUMBSSessionSetuporModifyRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionToReleaseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs * objPDUMBSSessionToReleaseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionToReleaseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs * objPDUMBSSessionToReleaseItem_ExtIEs);
void __si_amf_debug_PDU_MBSSessionToReleaseItem_ExtIEs( char * key, SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs * objPDUMBSSessionToReleaseItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MBSSessionToReleaseItem_ExtIEs( SI_AMF_DT_PDU_MBSSessionToReleaseItem_ExtIEs ** objPDUMBSSessionToReleaseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MobilityRestrictionList_ExtIEs( SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MobilityRestrictionList_ExtIEs( SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs);
void __si_amf_debug_PDU_MobilityRestrictionList_ExtIEs( char * key, SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MobilityRestrictionList_ExtIEs( SI_AMF_DT_PDU_MobilityRestrictionList_ExtIEs ** objPDUMobilityRestrictionList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDT_AlignmentInfo_ExtIEs( SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs * objPDUMDT_AlignmentInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDT_AlignmentInfo_ExtIEs( SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs * objPDUMDT_AlignmentInfo_ExtIEs);
void __si_amf_debug_PDU_MDT_AlignmentInfo_ExtIEs( char * key, SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs * objPDUMDT_AlignmentInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDT_AlignmentInfo_ExtIEs( SI_AMF_DT_PDU_MDT_AlignmentInfo_ExtIEs ** objPDUMDT_AlignmentInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDT_Configuration_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDT_Configuration_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs);
void __si_amf_debug_PDU_MDT_Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDT_Configuration_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_ExtIEs ** objPDUMDT_Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDT_Configuration_NR_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDT_Configuration_NR_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs);
void __si_amf_debug_PDU_MDT_Configuration_NR_ExtIEs( char * key, SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDT_Configuration_NR_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_NR_ExtIEs ** objPDUMDT_Configuration_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs);
void __si_amf_debug_PDU_MDT_Configuration_EUTRA_ExtIEs( char * key, SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_AMF_DT_PDU_MDT_Configuration_EUTRA_ExtIEs ** objPDUMDT_Configuration_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDTModeNr_ExtIEs( SI_AMF_DT_PDU_MDTModeNr_ExtIEs * objPDUMDTModeNr_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDTModeNr_ExtIEs( SI_AMF_DT_PDU_MDTModeNr_ExtIEs * objPDUMDTModeNr_ExtIEs);
void __si_amf_debug_PDU_MDTModeNr_ExtIEs( char * key, SI_AMF_DT_PDU_MDTModeNr_ExtIEs * objPDUMDTModeNr_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDTModeNr_ExtIEs( SI_AMF_DT_PDU_MDTModeNr_ExtIEs ** objPDUMDTModeNr_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MulticastSessionActivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs * objPDUMulticastSessionActivationRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MulticastSessionActivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs * objPDUMulticastSessionActivationRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_MulticastSessionActivationRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs * objPDUMulticastSessionActivationRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MulticastSessionActivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionActivationRequestTransfer_ExtIEs ** objPDUMulticastSessionActivationRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs * objPDUMulticastSessionDeactivationRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs * objPDUMulticastSessionDeactivationRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs * objPDUMulticastSessionDeactivationRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs( SI_AMF_DT_PDU_MulticastSessionDeactivationRequestTransfer_ExtIEs ** objPDUMulticastSessionDeactivationRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MulticastGroupPagingAreaItem_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs * objPDUMulticastGroupPagingAreaItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MulticastGroupPagingAreaItem_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs * objPDUMulticastGroupPagingAreaItem_ExtIEs);
void __si_amf_debug_PDU_MulticastGroupPagingAreaItem_ExtIEs( char * key, SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs * objPDUMulticastGroupPagingAreaItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MulticastGroupPagingAreaItem_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingAreaItem_ExtIEs ** objPDUMulticastGroupPagingAreaItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MulticastGroupPagingArea_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs * objPDUMulticastGroupPagingArea_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MulticastGroupPagingArea_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs * objPDUMulticastGroupPagingArea_ExtIEs);
void __si_amf_debug_PDU_MulticastGroupPagingArea_ExtIEs( char * key, SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs * objPDUMulticastGroupPagingArea_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MulticastGroupPagingArea_ExtIEs( SI_AMF_DT_PDU_MulticastGroupPagingArea_ExtIEs ** objPDUMulticastGroupPagingArea_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UE_PagingItem_ExtIEs( SI_AMF_DT_PDU_UE_PagingItem_ExtIEs * objPDUUE_PagingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UE_PagingItem_ExtIEs( SI_AMF_DT_PDU_UE_PagingItem_ExtIEs * objPDUUE_PagingItem_ExtIEs);
void __si_amf_debug_PDU_UE_PagingItem_ExtIEs( char * key, SI_AMF_DT_PDU_UE_PagingItem_ExtIEs * objPDUUE_PagingItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UE_PagingItem_ExtIEs( SI_AMF_DT_PDU_UE_PagingItem_ExtIEs ** objPDUUE_PagingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M1Configuration_ExtIEs( SI_AMF_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M1Configuration_ExtIEs( SI_AMF_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs);
void __si_amf_debug_PDU_M1Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M1Configuration_ExtIEs( SI_AMF_DT_PDU_M1Configuration_ExtIEs ** objPDUM1Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M1ThresholdEventA2_ExtIEs( SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M1ThresholdEventA2_ExtIEs( SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs);
void __si_amf_debug_PDU_M1ThresholdEventA2_ExtIEs( char * key, SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M1ThresholdEventA2_ExtIEs( SI_AMF_DT_PDU_M1ThresholdEventA2_ExtIEs ** objPDUM1ThresholdEventA2_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M1ThresholdType_ExtIEs( SI_AMF_DT_PDU_M1ThresholdType_ExtIEs * objPDUM1ThresholdType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M1ThresholdType_ExtIEs( SI_AMF_DT_PDU_M1ThresholdType_ExtIEs * objPDUM1ThresholdType_ExtIEs);
void __si_amf_debug_PDU_M1ThresholdType_ExtIEs( char * key, SI_AMF_DT_PDU_M1ThresholdType_ExtIEs * objPDUM1ThresholdType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M1ThresholdType_ExtIEs( SI_AMF_DT_PDU_M1ThresholdType_ExtIEs ** objPDUM1ThresholdType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M1PeriodicReporting_ExtIEs( SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M1PeriodicReporting_ExtIEs( SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs);
void __si_amf_debug_PDU_M1PeriodicReporting_ExtIEs( char * key, SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M1PeriodicReporting_ExtIEs( SI_AMF_DT_PDU_M1PeriodicReporting_ExtIEs ** objPDUM1PeriodicReporting_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M4Configuration_ExtIEs( SI_AMF_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M4Configuration_ExtIEs( SI_AMF_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs);
void __si_amf_debug_PDU_M4Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M4Configuration_ExtIEs( SI_AMF_DT_PDU_M4Configuration_ExtIEs ** objPDUM4Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M5Configuration_ExtIEs( SI_AMF_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M5Configuration_ExtIEs( SI_AMF_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs);
void __si_amf_debug_PDU_M5Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M5Configuration_ExtIEs( SI_AMF_DT_PDU_M5Configuration_ExtIEs ** objPDUM5Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M6Configuration_ExtIEs( SI_AMF_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M6Configuration_ExtIEs( SI_AMF_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs);
void __si_amf_debug_PDU_M6Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M6Configuration_ExtIEs( SI_AMF_DT_PDU_M6Configuration_ExtIEs ** objPDUM6Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_M7Configuration_ExtIEs( SI_AMF_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_M7Configuration_ExtIEs( SI_AMF_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs);
void __si_amf_debug_PDU_M7Configuration_ExtIEs( char * key, SI_AMF_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_M7Configuration_ExtIEs( SI_AMF_DT_PDU_M7Configuration_ExtIEs ** objPDUM7Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MDT_Location_Info_ExtIEs( SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs * objPDUMDT_Location_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MDT_Location_Info_ExtIEs( SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs * objPDUMDT_Location_Info_ExtIEs);
void __si_amf_debug_PDU_MDT_Location_Info_ExtIEs( char * key, SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs * objPDUMDT_Location_Info_ExtIEs, int lvl);
int __si_amf_Decode_PDU_MDT_Location_Info_ExtIEs( SI_AMF_DT_PDU_MDT_Location_Info_ExtIEs ** objPDUMDT_Location_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_N3IWF_ID_ExtIEs( SI_AMF_DT_PDU_N3IWF_ID_ExtIEs * objPDUN3IWF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_N3IWF_ID_ExtIEs( SI_AMF_DT_PDU_N3IWF_ID_ExtIEs * objPDUN3IWF_ID_ExtIEs);
void __si_amf_debug_PDU_N3IWF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_N3IWF_ID_ExtIEs * objPDUN3IWF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_N3IWF_ID_ExtIEs( SI_AMF_DT_PDU_N3IWF_ID_ExtIEs ** objPDUN3IWF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_N6JitterInformation_ExtIEs( SI_AMF_DT_PDU_N6JitterInformation_ExtIEs * objPDUN6JitterInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_N6JitterInformation_ExtIEs( SI_AMF_DT_PDU_N6JitterInformation_ExtIEs * objPDUN6JitterInformation_ExtIEs);
void __si_amf_debug_PDU_N6JitterInformation_ExtIEs( char * key, SI_AMF_DT_PDU_N6JitterInformation_ExtIEs * objPDUN6JitterInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_N6JitterInformation_ExtIEs( SI_AMF_DT_PDU_N6JitterInformation_ExtIEs ** objPDUN6JitterInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs( SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs * objPDUNB_IoT_Paging_eDRXInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs( SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs * objPDUNB_IoT_Paging_eDRXInfo_ExtIEs);
void __si_amf_debug_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs( char * key, SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs * objPDUNB_IoT_Paging_eDRXInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs( SI_AMF_DT_PDU_NB_IoT_Paging_eDRXInfo_ExtIEs ** objPDUNB_IoT_Paging_eDRXInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGAPIESupportInformationRequestItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs * objPDUNGAPIESupportInformationRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGAPIESupportInformationRequestItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs * objPDUNGAPIESupportInformationRequestItem_ExtIEs);
void __si_amf_debug_PDU_NGAPIESupportInformationRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs * objPDUNGAPIESupportInformationRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGAPIESupportInformationRequestItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationRequestItem_ExtIEs ** objPDUNGAPIESupportInformationRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGAPIESupportInformationResponseItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs * objPDUNGAPIESupportInformationResponseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGAPIESupportInformationResponseItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs * objPDUNGAPIESupportInformationResponseItem_ExtIEs);
void __si_amf_debug_PDU_NGAPIESupportInformationResponseItem_ExtIEs( char * key, SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs * objPDUNGAPIESupportInformationResponseItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGAPIESupportInformationResponseItem_ExtIEs( SI_AMF_DT_PDU_NGAPIESupportInformationResponseItem_ExtIEs ** objPDUNGAPIESupportInformationResponseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NgENB_ID_ExtIEs( SI_AMF_DT_PDU_NgENB_ID_ExtIEs * objPDUNgENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NgENB_ID_ExtIEs( SI_AMF_DT_PDU_NgENB_ID_ExtIEs * objPDUNgENB_ID_ExtIEs);
void __si_amf_debug_PDU_NgENB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_NgENB_ID_ExtIEs * objPDUNgENB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NgENB_ID_ExtIEs( SI_AMF_DT_PDU_NgENB_ID_ExtIEs ** objPDUNgENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_CGI_ExtIEs( SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs * objPDUNGRAN_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_CGI_ExtIEs( SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs * objPDUNGRAN_CGI_ExtIEs);
void __si_amf_debug_PDU_NGRAN_CGI_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs * objPDUNGRAN_CGI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_CGI_ExtIEs( SI_AMF_DT_PDU_NGRAN_CGI_ExtIEs ** objPDUNGRAN_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs * objPDUNGRAN_TNLAssociationToRemoveItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs * objPDUNGRAN_TNLAssociationToRemoveItem_ExtIEs);
void __si_amf_debug_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs( char * key, SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs * objPDUNGRAN_TNLAssociationToRemoveItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs( SI_AMF_DT_PDU_NGRAN_TNLAssociationToRemoveItem_ExtIEs ** objPDUNGRAN_TNLAssociationToRemoveItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs);
void __si_amf_debug_PDU_NonDynamic5QIDescriptor_ExtIEs( char * key, SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_AMF_DT_PDU_NonDynamic5QIDescriptor_ExtIEs ** objPDUNonDynamic5QIDescriptor_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NPN_AccessInformation_ExtIEs( SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs * objPDUNPN_AccessInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NPN_AccessInformation_ExtIEs( SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs * objPDUNPN_AccessInformation_ExtIEs);
void __si_amf_debug_PDU_NPN_AccessInformation_ExtIEs( char * key, SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs * objPDUNPN_AccessInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NPN_AccessInformation_ExtIEs( SI_AMF_DT_PDU_NPN_AccessInformation_ExtIEs ** objPDUNPN_AccessInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs * objPDUNPN_MobilityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs * objPDUNPN_MobilityInformation_ExtIEs);
void __si_amf_debug_PDU_NPN_MobilityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs * objPDUNPN_MobilityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_NPN_MobilityInformation_ExtIEs ** objPDUNPN_MobilityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NPN_PagingAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs * objPDUNPN_PagingAssistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NPN_PagingAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs * objPDUNPN_PagingAssistanceInformation_ExtIEs);
void __si_amf_debug_PDU_NPN_PagingAssistanceInformation_ExtIEs( char * key, SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs * objPDUNPN_PagingAssistanceInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NPN_PagingAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_NPN_PagingAssistanceInformation_ExtIEs ** objPDUNPN_PagingAssistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NPN_Support_ExtIEs( SI_AMF_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NPN_Support_ExtIEs( SI_AMF_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs);
void __si_amf_debug_PDU_NPN_Support_ExtIEs( char * key, SI_AMF_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NPN_Support_ExtIEs( SI_AMF_DT_PDU_NPN_Support_ExtIEs ** objPDUNPN_Support_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NR_CGI_ExtIEs( SI_AMF_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NR_CGI_ExtIEs( SI_AMF_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs);
void __si_amf_debug_PDU_NR_CGI_ExtIEs( char * key, SI_AMF_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NR_CGI_ExtIEs( SI_AMF_DT_PDU_NR_CGI_ExtIEs ** objPDUNR_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NR_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs * objPDUNR_PagingeDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NR_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs * objPDUNR_PagingeDRXInformation_ExtIEs);
void __si_amf_debug_PDU_NR_PagingeDRXInformation_ExtIEs( char * key, SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs * objPDUNR_PagingeDRXInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NR_PagingeDRXInformation_ExtIEs( SI_AMF_DT_PDU_NR_PagingeDRXInformation_ExtIEs ** objPDUNR_PagingeDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs( SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs * objPDUNR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs( SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs * objPDUNR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs);
void __si_amf_debug_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs( char * key, SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs * objPDUNR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs( SI_AMF_DT_PDU_NR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs ** objPDUNR_Paging_Long_eDRX_Information_for_RRC_INACTIVE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NRNTNTAIInformation_ExtIEs( SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs * objPDUNRNTNTAIInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NRNTNTAIInformation_ExtIEs( SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs * objPDUNRNTNTAIInformation_ExtIEs);
void __si_amf_debug_PDU_NRNTNTAIInformation_ExtIEs( char * key, SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs * objPDUNRNTNTAIInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NRNTNTAIInformation_ExtIEs( SI_AMF_DT_PDU_NRNTNTAIInformation_ExtIEs ** objPDUNRNTNTAIInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NRFrequencyBandItem_ExtIEs( SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NRFrequencyBandItem_ExtIEs( SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs);
void __si_amf_debug_PDU_NRFrequencyBandItem_ExtIEs( char * key, SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NRFrequencyBandItem_ExtIEs( SI_AMF_DT_PDU_NRFrequencyBandItem_ExtIEs ** objPDUNRFrequencyBandItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NRFrequencyInfo_ExtIEs( SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NRFrequencyInfo_ExtIEs( SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs);
void __si_amf_debug_PDU_NRFrequencyInfo_ExtIEs( char * key, SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NRFrequencyInfo_ExtIEs( SI_AMF_DT_PDU_NRFrequencyInfo_ExtIEs ** objPDUNRFrequencyInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NRV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs);
void __si_amf_debug_PDU_NRV2XServicesAuthorized_ExtIEs( char * key, SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NRV2XServicesAuthorized_ExtIEs ** objPDUNRV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs);
void __si_amf_debug_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( char * key, SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs( SI_AMF_DT_PDU_NRUESidelinkAggregateMaximumBitrate_ExtIEs ** objPDUNRUESidelinkAggregateMaximumBitrate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_NR_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs * objPDUNR_A2X_ServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_NR_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs * objPDUNR_A2X_ServicesAuthorized_ExtIEs);
void __si_amf_debug_PDU_NR_A2X_ServicesAuthorized_ExtIEs( char * key, SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs * objPDUNR_A2X_ServicesAuthorized_ExtIEs, int lvl);
int __si_amf_Decode_PDU_NR_A2X_ServicesAuthorized_ExtIEs( SI_AMF_DT_PDU_NR_A2X_ServicesAuthorized_ExtIEs ** objPDUNR_A2X_ServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_OverloadResponse_ExtIEs( SI_AMF_DT_PDU_OverloadResponse_ExtIEs * objPDUOverloadResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_OverloadResponse_ExtIEs( SI_AMF_DT_PDU_OverloadResponse_ExtIEs * objPDUOverloadResponse_ExtIEs);
void __si_amf_debug_PDU_OverloadResponse_ExtIEs( char * key, SI_AMF_DT_PDU_OverloadResponse_ExtIEs * objPDUOverloadResponse_ExtIEs, int lvl);
int __si_amf_Decode_PDU_OverloadResponse_ExtIEs( SI_AMF_DT_PDU_OverloadResponse_ExtIEs ** objPDUOverloadResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_OverloadStartNSSAIItem_ExtIEs( SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs * objPDUOverloadStartNSSAIItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_OverloadStartNSSAIItem_ExtIEs( SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs * objPDUOverloadStartNSSAIItem_ExtIEs);
void __si_amf_debug_PDU_OverloadStartNSSAIItem_ExtIEs( char * key, SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs * objPDUOverloadStartNSSAIItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_OverloadStartNSSAIItem_ExtIEs( SI_AMF_DT_PDU_OverloadStartNSSAIItem_ExtIEs ** objPDUOverloadStartNSSAIItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PacketErrorRate_ExtIEs( SI_AMF_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PacketErrorRate_ExtIEs( SI_AMF_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs);
void __si_amf_debug_PDU_PacketErrorRate_ExtIEs( char * key, SI_AMF_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PacketErrorRate_ExtIEs( SI_AMF_DT_PDU_PacketErrorRate_ExtIEs ** objPDUPacketErrorRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PagingAssisDataforCEcapabUE_ExtIEs( SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs * objPDUPagingAssisDataforCEcapabUE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PagingAssisDataforCEcapabUE_ExtIEs( SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs * objPDUPagingAssisDataforCEcapabUE_ExtIEs);
void __si_amf_debug_PDU_PagingAssisDataforCEcapabUE_ExtIEs( char * key, SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs * objPDUPagingAssisDataforCEcapabUE_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PagingAssisDataforCEcapabUE_ExtIEs( SI_AMF_DT_PDU_PagingAssisDataforCEcapabUE_ExtIEs ** objPDUPagingAssisDataforCEcapabUE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PagingAttemptInformation_ExtIEs( SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PagingAttemptInformation_ExtIEs( SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs);
void __si_amf_debug_PDU_PagingAttemptInformation_ExtIEs( char * key, SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs * objPDUPagingAttemptInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PagingAttemptInformation_ExtIEs( SI_AMF_DT_PDU_PagingAttemptInformation_ExtIEs ** objPDUPagingAttemptInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PagingPolicyDifferentiation_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs * objPDUPagingPolicyDifferentiation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PagingPolicyDifferentiation_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs * objPDUPagingPolicyDifferentiation_ExtIEs);
void __si_amf_debug_PDU_PagingPolicyDifferentiation_ExtIEs( char * key, SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs * objPDUPagingPolicyDifferentiation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PagingPolicyDifferentiation_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiation_ExtIEs ** objPDUPagingPolicyDifferentiation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionForPagingItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs * objPDUPDUSessionForPagingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionForPagingItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs * objPDUPDUSessionForPagingItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionForPagingItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs * objPDUPDUSessionForPagingItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionForPagingItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionForPagingItem_ExtIEs ** objPDUPDUSessionForPagingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PagingPolicyDifferentiationItem_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs * objPDUPagingPolicyDifferentiationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PagingPolicyDifferentiationItem_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs * objPDUPagingPolicyDifferentiationItem_ExtIEs);
void __si_amf_debug_PDU_PagingPolicyDifferentiationItem_ExtIEs( char * key, SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs * objPDUPagingPolicyDifferentiationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PagingPolicyDifferentiationItem_ExtIEs( SI_AMF_DT_PDU_PagingPolicyDifferentiationItem_ExtIEs ** objPDUPagingPolicyDifferentiationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PartiallyAllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs * objPDUPartiallyAllowedNSSAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PartiallyAllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs * objPDUPartiallyAllowedNSSAI_Item_ExtIEs);
void __si_amf_debug_PDU_PartiallyAllowedNSSAI_Item_ExtIEs( char * key, SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs * objPDUPartiallyAllowedNSSAI_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PartiallyAllowedNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_PartiallyAllowedNSSAI_Item_ExtIEs ** objPDUPartiallyAllowedNSSAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs * objPDUPathSwitchRequestAcknowledgeTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs * objPDUPathSwitchRequestAcknowledgeTransfer_ExtIEs);
void __si_amf_debug_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs * objPDUPathSwitchRequestAcknowledgeTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestAcknowledgeTransfer_ExtIEs ** objPDUPathSwitchRequestAcknowledgeTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs * objPDUPathSwitchRequestSetupFailedTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs * objPDUPathSwitchRequestSetupFailedTransfer_ExtIEs);
void __si_amf_debug_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs * objPDUPathSwitchRequestSetupFailedTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestSetupFailedTransfer_ExtIEs ** objPDUPathSwitchRequestSetupFailedTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PathSwitchRequestTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs * objPDUPathSwitchRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PathSwitchRequestTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs * objPDUPathSwitchRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_PathSwitchRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs * objPDUPathSwitchRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PathSwitchRequestTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestTransfer_ExtIEs ** objPDUPathSwitchRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs * objPDUPathSwitchRequestUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs * objPDUPathSwitchRequestUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs * objPDUPathSwitchRequestUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PathSwitchRequestUnsuccessfulTransfer_ExtIEs ** objPDUPathSwitchRequestUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs);
void __si_amf_debug_PDU_PC5QoSParameters_ExtIEs( char * key, SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PC5QoSParameters_ExtIEs( SI_AMF_DT_PDU_PC5QoSParameters_ExtIEs ** objPDUPC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs);
void __si_amf_debug_PDU_PC5QoSFlowItem_ExtIEs( char * key, SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PC5QoSFlowItem_ExtIEs( SI_AMF_DT_PDU_PC5QoSFlowItem_ExtIEs ** objPDUPC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs);
void __si_amf_debug_PDU_PC5FlowBitRates_ExtIEs( char * key, SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PC5FlowBitRates_ExtIEs( SI_AMF_DT_PDU_PC5FlowBitRates_ExtIEs ** objPDUPC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs);
void __si_amf_debug_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs ** objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceAdmittedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs * objPDUPDUSessionResourceAdmittedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceAdmittedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs * objPDUPDUSessionResourceAdmittedItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceAdmittedItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs * objPDUPDUSessionResourceAdmittedItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceAdmittedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceAdmittedItem_ExtIEs ** objPDUPDUSessionResourceAdmittedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModCfm_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModCfm_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModCfm_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModCfm_ExtIEs ** objPDUPDUSessionResourceFailedToModifyItemModCfm_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs * objPDUPDUSessionResourceFailedToModifyItemModRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToModifyItemModRes_ExtIEs ** objPDUPDUSessionResourceFailedToModifyItemModRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESReq_ExtIEs ** objPDUPDUSessionResourceFailedToResumeItemRESReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceFailedToResumeItemRESRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToResumeItemRESRes_ExtIEs ** objPDUPDUSessionResourceFailedToResumeItemRESRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtFail_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtFail_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtFail_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtFail_ExtIEs ** objPDUPDUSessionResourceFailedToSetupItemCxtFail_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemCxtRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemCxtRes_ExtIEs ** objPDUPDUSessionResourceFailedToSetupItemCxtRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemHOAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemHOAck_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemHOAck_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemHOAck_ExtIEs ** objPDUPDUSessionResourceFailedToSetupItemHOAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemPSReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemPSReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemPSReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemPSReq_ExtIEs ** objPDUPDUSessionResourceFailedToSetupItemPSReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemSURes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemSURes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs * objPDUPDUSessionResourceFailedToSetupItemSURes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceFailedToSetupItemSURes_ExtIEs ** objPDUPDUSessionResourceFailedToSetupItemSURes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceHandoverItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs * objPDUPDUSessionResourceHandoverItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceHandoverItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs * objPDUPDUSessionResourceHandoverItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceHandoverItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs * objPDUPDUSessionResourceHandoverItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceHandoverItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceHandoverItem_ExtIEs ** objPDUPDUSessionResourceHandoverItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceInformationItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs * objPDUPDUSessionResourceInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceInformationItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs * objPDUPDUSessionResourceInformationItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs * objPDUPDUSessionResourceInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceInformationItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceInformationItem_ExtIEs ** objPDUPDUSessionResourceInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs * objPDUPDUSessionResourceItemCxtRelCpl_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs * objPDUPDUSessionResourceItemCxtRelCpl_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs * objPDUPDUSessionResourceItemCxtRelCpl_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelCpl_ExtIEs ** objPDUPDUSessionResourceItemCxtRelCpl_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs * objPDUPDUSessionResourceItemCxtRelReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs * objPDUPDUSessionResourceItemCxtRelReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs * objPDUPDUSessionResourceItemCxtRelReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemCxtRelReq_ExtIEs ** objPDUPDUSessionResourceItemCxtRelReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceItemHORqd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs * objPDUPDUSessionResourceItemHORqd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceItemHORqd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs * objPDUPDUSessionResourceItemHORqd_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceItemHORqd_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs * objPDUPDUSessionResourceItemHORqd_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceItemHORqd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceItemHORqd_ExtIEs ** objPDUPDUSessionResourceItemHORqd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionListMTCommHReq_Item_ExtIEs( SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs * objPDUPDUSessionListMTCommHReq_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionListMTCommHReq_Item_ExtIEs( SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs * objPDUPDUSessionListMTCommHReq_Item_ExtIEs);
void __si_amf_debug_PDU_PDUSessionListMTCommHReq_Item_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs * objPDUPDUSessionListMTCommHReq_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionListMTCommHReq_Item_ExtIEs( SI_AMF_DT_PDU_PDUSessionListMTCommHReq_Item_ExtIEs ** objPDUPDUSessionListMTCommHReq_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs * objPDUPDUSessionResourceModifyConfirmTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs * objPDUPDUSessionResourceModifyConfirmTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs * objPDUPDUSessionResourceModifyConfirmTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirmTransfer_ExtIEs ** objPDUPDUSessionResourceModifyConfirmTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs ** objPDUPDUSessionResourceModifyIndicationUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs * objPDUPDUSessionResourceModifyResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs * objPDUPDUSessionResourceModifyResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs * objPDUPDUSessionResourceModifyResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyResponseTransfer_ExtIEs ** objPDUPDUSessionResourceModifyResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs * objPDUPDUSessionResourceModifyIndicationTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyIndicationTransfer_ExtIEs ** objPDUPDUSessionResourceModifyIndicationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceModifyItemModCfm_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceModifyItemModCfm_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs * objPDUPDUSessionResourceModifyItemModCfm_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModCfm_ExtIEs ** objPDUPDUSessionResourceModifyItemModCfm_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyItemModInd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs * objPDUPDUSessionResourceModifyItemModInd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyItemModInd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs * objPDUPDUSessionResourceModifyItemModInd_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyItemModInd_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs * objPDUPDUSessionResourceModifyItemModInd_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyItemModInd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModInd_ExtIEs ** objPDUPDUSessionResourceModifyItemModInd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyItemModReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs * objPDUPDUSessionResourceModifyItemModReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyItemModReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs * objPDUPDUSessionResourceModifyItemModReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyItemModReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs * objPDUPDUSessionResourceModifyItemModReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyItemModReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModReq_ExtIEs ** objPDUPDUSessionResourceModifyItemModReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs * objPDUPDUSessionResourceModifyItemModRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs * objPDUPDUSessionResourceModifyItemModRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyItemModRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs * objPDUPDUSessionResourceModifyItemModRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyItemModRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyItemModRes_ExtIEs ** objPDUPDUSessionResourceModifyItemModRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs ** objPDUPDUSessionResourceModifyUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceNotifyItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs * objPDUPDUSessionResourceNotifyItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceNotifyItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs * objPDUPDUSessionResourceNotifyItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceNotifyItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs * objPDUPDUSessionResourceNotifyItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceNotifyItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyItem_ExtIEs ** objPDUPDUSessionResourceNotifyItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs * objPDUPDUSessionResourceNotifyReleasedTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs * objPDUPDUSessionResourceNotifyReleasedTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs * objPDUPDUSessionResourceNotifyReleasedTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyReleasedTransfer_ExtIEs ** objPDUPDUSessionResourceNotifyReleasedTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceNotifyTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs * objPDUPDUSessionResourceNotifyTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceNotifyTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs * objPDUPDUSessionResourceNotifyTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceNotifyTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs * objPDUPDUSessionResourceNotifyTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceNotifyTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceNotifyTransfer_ExtIEs ** objPDUPDUSessionResourceNotifyTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs * objPDUPDUSessionResourceReleaseCommandTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs * objPDUPDUSessionResourceReleaseCommandTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs * objPDUPDUSessionResourceReleaseCommandTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommandTransfer_ExtIEs ** objPDUPDUSessionResourceReleaseCommandTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleasedItemNot_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs * objPDUPDUSessionResourceReleasedItemNot_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleasedItemNot_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs * objPDUPDUSessionResourceReleasedItemNot_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleasedItemNot_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs * objPDUPDUSessionResourceReleasedItemNot_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleasedItemNot_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemNot_ExtIEs ** objPDUPDUSessionResourceReleasedItemNot_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs * objPDUPDUSessionResourceReleasedItemPSAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs * objPDUPDUSessionResourceReleasedItemPSAck_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs * objPDUPDUSessionResourceReleasedItemPSAck_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSAck_ExtIEs ** objPDUPDUSessionResourceReleasedItemPSAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs * objPDUPDUSessionResourceReleasedItemPSFail_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs * objPDUPDUSessionResourceReleasedItemPSFail_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs * objPDUPDUSessionResourceReleasedItemPSFail_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemPSFail_ExtIEs ** objPDUPDUSessionResourceReleasedItemPSFail_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs * objPDUPDUSessionResourceReleasedItemRelRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs * objPDUPDUSessionResourceReleasedItemRelRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs * objPDUPDUSessionResourceReleasedItemRelRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleasedItemRelRes_ExtIEs ** objPDUPDUSessionResourceReleasedItemRelRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs * objPDUPDUSessionResourceReleaseResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs * objPDUPDUSessionResourceReleaseResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs * objPDUPDUSessionResourceReleaseResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponseTransfer_ExtIEs ** objPDUPDUSessionResourceReleaseResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceResumeItemRESReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceResumeItemRESReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs * objPDUPDUSessionResourceResumeItemRESReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESReq_ExtIEs ** objPDUPDUSessionResourceResumeItemRESReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceResumeItemRESRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceResumeItemRESRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs * objPDUPDUSessionResourceResumeItemRESRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceResumeItemRESRes_ExtIEs ** objPDUPDUSessionResourceResumeItemRESRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs ** objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs * objPDUPDUSessionResourceSetupItemCxtReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs * objPDUPDUSessionResourceSetupItemCxtReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs * objPDUPDUSessionResourceSetupItemCxtReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtReq_ExtIEs ** objPDUPDUSessionResourceSetupItemCxtReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceSetupItemCxtRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceSetupItemCxtRes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs * objPDUPDUSessionResourceSetupItemCxtRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemCxtRes_ExtIEs ** objPDUPDUSessionResourceSetupItemCxtRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs * objPDUPDUSessionResourceSetupItemHOReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs * objPDUPDUSessionResourceSetupItemHOReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs * objPDUPDUSessionResourceSetupItemHOReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemHOReq_ExtIEs ** objPDUPDUSessionResourceSetupItemHOReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs * objPDUPDUSessionResourceSetupItemSUReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs * objPDUPDUSessionResourceSetupItemSUReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs * objPDUPDUSessionResourceSetupItemSUReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSUReq_ExtIEs ** objPDUPDUSessionResourceSetupItemSUReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs * objPDUPDUSessionResourceSetupItemSURes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs * objPDUPDUSessionResourceSetupItemSURes_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupItemSURes_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs * objPDUPDUSessionResourceSetupItemSURes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupItemSURes_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupItemSURes_ExtIEs ** objPDUPDUSessionResourceSetupItemSURes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs * objPDUPDUSessionResourceSetupResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs * objPDUPDUSessionResourceSetupResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs * objPDUPDUSessionResourceSetupResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupResponseTransfer_ExtIEs ** objPDUPDUSessionResourceSetupResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs * objPDUPDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs ** objPDUPDUSessionResourceSetupUnsuccessfulTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs * objPDUPDUSessionResourceSuspendItemSUSReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs * objPDUPDUSessionResourceSuspendItemSUSReq_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs * objPDUPDUSessionResourceSuspendItemSUSReq_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSuspendItemSUSReq_ExtIEs ** objPDUPDUSessionResourceSuspendItemSUSReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSwitchedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs * objPDUPDUSessionResourceSwitchedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSwitchedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs * objPDUPDUSessionResourceSwitchedItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceSwitchedItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs * objPDUPDUSessionResourceSwitchedItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSwitchedItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceSwitchedItem_ExtIEs ** objPDUPDUSessionResourceSwitchedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs * objPDUPDUSessionResourceToBeSwitchedDLItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs * objPDUPDUSessionResourceToBeSwitchedDLItem_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs * objPDUPDUSessionResourceToBeSwitchedDLItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToBeSwitchedDLItem_ExtIEs ** objPDUPDUSessionResourceToBeSwitchedDLItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemHOCmd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemHOCmd_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemHOCmd_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemHOCmd_ExtIEs ** objPDUPDUSessionResourceToReleaseItemHOCmd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemRelCmd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemRelCmd_ExtIEs);
void __si_amf_debug_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs * objPDUPDUSessionResourceToReleaseItemRelCmd_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs( SI_AMF_DT_PDU_PDUSessionResourceToReleaseItemRelCmd_ExtIEs ** objPDUPDUSessionResourceToReleaseItemRelCmd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionUsageReport_ExtIEs( SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionUsageReport_ExtIEs( SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs);
void __si_amf_debug_PDU_PDUSessionUsageReport_ExtIEs( char * key, SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUSessionUsageReport_ExtIEs( SI_AMF_DT_PDU_PDUSessionUsageReport_ExtIEs ** objPDUPDUSessionUsageReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUsetQoSParameters_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs * objPDUPDUsetQoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUsetQoSParameters_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs * objPDUPDUsetQoSParameters_ExtIEs);
void __si_amf_debug_PDU_PDUsetQoSParameters_ExtIEs( char * key, SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs * objPDUPDUsetQoSParameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUsetQoSParameters_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSParameters_ExtIEs ** objPDUPDUsetQoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUsetQoSInformation_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs * objPDUPDUsetQoSInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUsetQoSInformation_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs * objPDUPDUsetQoSInformation_ExtIEs);
void __si_amf_debug_PDU_PDUsetQoSInformation_ExtIEs( char * key, SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs * objPDUPDUsetQoSInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PDUsetQoSInformation_ExtIEs( SI_AMF_DT_PDU_PDUsetQoSInformation_ExtIEs ** objPDUPDUsetQoSInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PEIPSassistanceInformation_ExtIEs( SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PEIPSassistanceInformation_ExtIEs( SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs);
void __si_amf_debug_PDU_PEIPSassistanceInformation_ExtIEs( char * key, SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PEIPSassistanceInformation_ExtIEs( SI_AMF_DT_PDU_PEIPSassistanceInformation_ExtIEs ** objPDUPEIPSassistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PeriodicityBound_ExtIEs( SI_AMF_DT_PDU_PeriodicityBound_ExtIEs * objPDUPeriodicityBound_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PeriodicityBound_ExtIEs( SI_AMF_DT_PDU_PeriodicityBound_ExtIEs * objPDUPeriodicityBound_ExtIEs);
void __si_amf_debug_PDU_PeriodicityBound_ExtIEs( char * key, SI_AMF_DT_PDU_PeriodicityBound_ExtIEs * objPDUPeriodicityBound_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PeriodicityBound_ExtIEs( SI_AMF_DT_PDU_PeriodicityBound_ExtIEs ** objPDUPeriodicityBound_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PeriodicityList_ExtIEs( SI_AMF_DT_PDU_PeriodicityList_ExtIEs * objPDUPeriodicityList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PeriodicityList_ExtIEs( SI_AMF_DT_PDU_PeriodicityList_ExtIEs * objPDUPeriodicityList_ExtIEs);
void __si_amf_debug_PDU_PeriodicityList_ExtIEs( char * key, SI_AMF_DT_PDU_PeriodicityList_ExtIEs * objPDUPeriodicityList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PeriodicityList_ExtIEs( SI_AMF_DT_PDU_PeriodicityList_ExtIEs ** objPDUPeriodicityList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PeriodicityRange_ExtIEs( SI_AMF_DT_PDU_PeriodicityRange_ExtIEs * objPDUPeriodicityRange_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PeriodicityRange_ExtIEs( SI_AMF_DT_PDU_PeriodicityRange_ExtIEs * objPDUPeriodicityRange_ExtIEs);
void __si_amf_debug_PDU_PeriodicityRange_ExtIEs( char * key, SI_AMF_DT_PDU_PeriodicityRange_ExtIEs * objPDUPeriodicityRange_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PeriodicityRange_ExtIEs( SI_AMF_DT_PDU_PeriodicityRange_ExtIEs ** objPDUPeriodicityRange_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PLMNAreaBasedQMC_ExtIEs( SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs);
void __si_amf_debug_PDU_PLMNAreaBasedQMC_ExtIEs( char * key, SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_AMF_DT_PDU_PLMNAreaBasedQMC_ExtIEs ** objPDUPLMNAreaBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PLMNSupportItem_ExtIEs( SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs * objPDUPLMNSupportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PLMNSupportItem_ExtIEs( SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs * objPDUPLMNSupportItem_ExtIEs);
void __si_amf_debug_PDU_PLMNSupportItem_ExtIEs( char * key, SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs * objPDUPLMNSupportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PLMNSupportItem_ExtIEs( SI_AMF_DT_PDU_PLMNSupportItem_ExtIEs ** objPDUPLMNSupportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PNI_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs * objPDUPNI_NPN_MobilityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PNI_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs * objPDUPNI_NPN_MobilityInformation_ExtIEs);
void __si_amf_debug_PDU_PNI_NPN_MobilityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs * objPDUPNI_NPN_MobilityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PNI_NPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_MobilityInformation_ExtIEs ** objPDUPNI_NPN_MobilityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PWSFailedCellIDList_ExtIEs( SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs * objPDUPWSFailedCellIDList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PWSFailedCellIDList_ExtIEs( SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs * objPDUPWSFailedCellIDList_ExtIEs);
void __si_amf_debug_PDU_PWSFailedCellIDList_ExtIEs( char * key, SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs * objPDUPWSFailedCellIDList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PWSFailedCellIDList_ExtIEs( SI_AMF_DT_PDU_PWSFailedCellIDList_ExtIEs ** objPDUPWSFailedCellIDList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs);
void __si_amf_debug_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( char * key, SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs ** objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PNI_NPNBasedMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PNI_NPNBasedMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs);
void __si_amf_debug_PDU_PNI_NPNBasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_PNI_NPNBasedMDT_ExtIEs( SI_AMF_DT_PDU_PNI_NPNBasedMDT_ExtIEs ** objPDUPNI_NPNBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QMCConfigInfo_ExtIEs( SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QMCConfigInfo_ExtIEs( SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs);
void __si_amf_debug_PDU_QMCConfigInfo_ExtIEs( char * key, SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QMCConfigInfo_ExtIEs( SI_AMF_DT_PDU_QMCConfigInfo_ExtIEs ** objPDUQMCConfigInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QMCDeactivation_ExtIEs( SI_AMF_DT_PDU_QMCDeactivation_ExtIEs * objPDUQMCDeactivation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QMCDeactivation_ExtIEs( SI_AMF_DT_PDU_QMCDeactivation_ExtIEs * objPDUQMCDeactivation_ExtIEs);
void __si_amf_debug_PDU_QMCDeactivation_ExtIEs( char * key, SI_AMF_DT_PDU_QMCDeactivation_ExtIEs * objPDUQMCDeactivation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QMCDeactivation_ExtIEs( SI_AMF_DT_PDU_QMCDeactivation_ExtIEs ** objPDUQMCDeactivation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QoERVQoEReportingPaths_ExtIEs( SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QoERVQoEReportingPaths_ExtIEs( SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs);
void __si_amf_debug_PDU_QoERVQoEReportingPaths_ExtIEs( char * key, SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QoERVQoEReportingPaths_ExtIEs( SI_AMF_DT_PDU_QoERVQoEReportingPaths_ExtIEs ** objPDUQoERVQoEReportingPaths_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosCharacteristics_ExtIEs( SI_AMF_DT_PDU_QosCharacteristics_ExtIEs * objPDUQosCharacteristics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosCharacteristics_ExtIEs( SI_AMF_DT_PDU_QosCharacteristics_ExtIEs * objPDUQosCharacteristics_ExtIEs);
void __si_amf_debug_PDU_QosCharacteristics_ExtIEs( char * key, SI_AMF_DT_PDU_QosCharacteristics_ExtIEs * objPDUQosCharacteristics_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosCharacteristics_ExtIEs( SI_AMF_DT_PDU_QosCharacteristics_ExtIEs ** objPDUQosCharacteristics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowAcceptedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs * objPDUQosFlowAcceptedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowAcceptedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs * objPDUQosFlowAcceptedItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowAcceptedItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs * objPDUQosFlowAcceptedItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowAcceptedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAcceptedItem_ExtIEs ** objPDUQosFlowAcceptedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs * objPDUQosFlowAdditionalInfoItemRelCom_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs * objPDUQosFlowAdditionalInfoItemRelCom_ExtIEs);
void __si_amf_debug_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs * objPDUQosFlowAdditionalInfoItemRelCom_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelCom_ExtIEs ** objPDUQosFlowAdditionalInfoItemRelCom_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs * objPDUQosFlowAdditionalInfoItemRelRes_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs * objPDUQosFlowAdditionalInfoItemRelRes_ExtIEs);
void __si_amf_debug_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs * objPDUQosFlowAdditionalInfoItemRelRes_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs( SI_AMF_DT_PDU_QosFlowAdditionalInfoItemRelRes_ExtIEs ** objPDUQosFlowAdditionalInfoItemRelRes_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowAddOrModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs * objPDUQosFlowAddOrModifyRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowAddOrModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs * objPDUQosFlowAddOrModifyRequestItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowAddOrModifyRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs * objPDUQosFlowAddOrModifyRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowAddOrModifyRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyRequestItem_ExtIEs ** objPDUQosFlowAddOrModifyRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowAddOrModifyResponseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs * objPDUQosFlowAddOrModifyResponseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowAddOrModifyResponseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs * objPDUQosFlowAddOrModifyResponseItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowAddOrModifyResponseItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs * objPDUQosFlowAddOrModifyResponseItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowAddOrModifyResponseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowAddOrModifyResponseItem_ExtIEs ** objPDUQosFlowAddOrModifyResponseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowFeedbackItem_ExtIEs( SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs * objPDUQosFlowFeedbackItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowFeedbackItem_ExtIEs( SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs * objPDUQosFlowFeedbackItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowFeedbackItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs * objPDUQosFlowFeedbackItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowFeedbackItem_ExtIEs( SI_AMF_DT_PDU_QosFlowFeedbackItem_ExtIEs ** objPDUQosFlowFeedbackItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs * objPDUQosFlowInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs * objPDUQosFlowInformationItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs * objPDUQosFlowInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowInformationItem_ExtIEs ** objPDUQosFlowInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowLevelQosParameters_ExtIEs( SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs * objPDUQosFlowLevelQosParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowLevelQosParameters_ExtIEs( SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs * objPDUQosFlowLevelQosParameters_ExtIEs);
void __si_amf_debug_PDU_QosFlowLevelQosParameters_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs * objPDUQosFlowLevelQosParameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowLevelQosParameters_ExtIEs( SI_AMF_DT_PDU_QosFlowLevelQosParameters_ExtIEs ** objPDUQosFlowLevelQosParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowWithCauseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs * objPDUQosFlowWithCauseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowWithCauseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs * objPDUQosFlowWithCauseItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowWithCauseItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs * objPDUQosFlowWithCauseItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowWithCauseItem_ExtIEs( SI_AMF_DT_PDU_QosFlowWithCauseItem_ExtIEs ** objPDUQosFlowWithCauseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowModifyConfirmItem_ExtIEs( SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs * objPDUQosFlowModifyConfirmItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowModifyConfirmItem_ExtIEs( SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs * objPDUQosFlowModifyConfirmItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowModifyConfirmItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs * objPDUQosFlowModifyConfirmItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowModifyConfirmItem_ExtIEs( SI_AMF_DT_PDU_QosFlowModifyConfirmItem_ExtIEs ** objPDUQosFlowModifyConfirmItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowNotifyItem_ExtIEs( SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs * objPDUQosFlowNotifyItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowNotifyItem_ExtIEs( SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs * objPDUQosFlowNotifyItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowNotifyItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs * objPDUQosFlowNotifyItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowNotifyItem_ExtIEs( SI_AMF_DT_PDU_QosFlowNotifyItem_ExtIEs ** objPDUQosFlowNotifyItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowParametersItem_ExtIEs( SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs * objPDUQosFlowParametersItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowParametersItem_ExtIEs( SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs * objPDUQosFlowParametersItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowParametersItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs * objPDUQosFlowParametersItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowParametersItem_ExtIEs( SI_AMF_DT_PDU_QosFlowParametersItem_ExtIEs ** objPDUQosFlowParametersItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowPerTNLInformation_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs * objPDUQosFlowPerTNLInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowPerTNLInformation_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs * objPDUQosFlowPerTNLInformation_ExtIEs);
void __si_amf_debug_PDU_QosFlowPerTNLInformation_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs * objPDUQosFlowPerTNLInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowPerTNLInformation_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformation_ExtIEs ** objPDUQosFlowPerTNLInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowPerTNLInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs * objPDUQosFlowPerTNLInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowPerTNLInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs * objPDUQosFlowPerTNLInformationItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowPerTNLInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs * objPDUQosFlowPerTNLInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowPerTNLInformationItem_ExtIEs( SI_AMF_DT_PDU_QosFlowPerTNLInformationItem_ExtIEs ** objPDUQosFlowPerTNLInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs * objPDUQosFlowSetupRequestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs * objPDUQosFlowSetupRequestItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowSetupRequestItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs * objPDUQosFlowSetupRequestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowSetupRequestItem_ExtIEs( SI_AMF_DT_PDU_QosFlowSetupRequestItem_ExtIEs ** objPDUQosFlowSetupRequestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowItemWithDataForwarding_ExtIEs( SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs * objPDUQosFlowItemWithDataForwarding_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowItemWithDataForwarding_ExtIEs( SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs * objPDUQosFlowItemWithDataForwarding_ExtIEs);
void __si_amf_debug_PDU_QosFlowItemWithDataForwarding_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs * objPDUQosFlowItemWithDataForwarding_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowItemWithDataForwarding_ExtIEs( SI_AMF_DT_PDU_QosFlowItemWithDataForwarding_ExtIEs ** objPDUQosFlowItemWithDataForwarding_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QosFlowToBeForwardedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs * objPDUQosFlowToBeForwardedItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QosFlowToBeForwardedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs * objPDUQosFlowToBeForwardedItem_ExtIEs);
void __si_amf_debug_PDU_QosFlowToBeForwardedItem_ExtIEs( char * key, SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs * objPDUQosFlowToBeForwardedItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QosFlowToBeForwardedItem_ExtIEs( SI_AMF_DT_PDU_QosFlowToBeForwardedItem_ExtIEs ** objPDUQosFlowToBeForwardedItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QoSFlowTSCItem_ExtIEs( SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs * objPDUQoSFlowTSCItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QoSFlowTSCItem_ExtIEs( SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs * objPDUQoSFlowTSCItem_ExtIEs);
void __si_amf_debug_PDU_QoSFlowTSCItem_ExtIEs( char * key, SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs * objPDUQoSFlowTSCItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QoSFlowTSCItem_ExtIEs( SI_AMF_DT_PDU_QoSFlowTSCItem_ExtIEs ** objPDUQoSFlowTSCItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs);
void __si_amf_debug_PDU_QoSFlowsUsageReport_Item_ExtIEs( char * key, SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_AMF_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs ** objPDUQoSFlowsUsageReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANfeedbacktype_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs * objPDURANfeedbacktype_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANfeedbacktype_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs * objPDURANfeedbacktype_ExtIEs);
void __si_amf_debug_PDU_RANfeedbacktype_ExtIEs( char * key, SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs * objPDURANfeedbacktype_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANfeedbacktype_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_ExtIEs ** objPDURANfeedbacktype_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANfeedbacktype_proactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs * objPDURANfeedbacktype_proactive_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANfeedbacktype_proactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs * objPDURANfeedbacktype_proactive_ExtIEs);
void __si_amf_debug_PDU_RANfeedbacktype_proactive_ExtIEs( char * key, SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs * objPDURANfeedbacktype_proactive_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANfeedbacktype_proactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_proactive_ExtIEs ** objPDURANfeedbacktype_proactive_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANfeedbacktype_reactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs * objPDURANfeedbacktype_reactive_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANfeedbacktype_reactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs * objPDURANfeedbacktype_reactive_ExtIEs);
void __si_amf_debug_PDU_RANfeedbacktype_reactive_ExtIEs( char * key, SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs * objPDURANfeedbacktype_reactive_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANfeedbacktype_reactive_ExtIEs( SI_AMF_DT_PDU_RANfeedbacktype_reactive_ExtIEs ** objPDURANfeedbacktype_reactive_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs * objPDURANStatusTransfer_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs * objPDURANStatusTransfer_TransparentContainer_ExtIEs);
void __si_amf_debug_PDU_RANStatusTransfer_TransparentContainer_ExtIEs( char * key, SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs * objPDURANStatusTransfer_TransparentContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANStatusTransfer_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_RANStatusTransfer_TransparentContainer_ExtIEs ** objPDURANStatusTransfer_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANTimingSynchronisationStatusInfo_ExtIEs( SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs * objPDURANTimingSynchronisationStatusInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANTimingSynchronisationStatusInfo_ExtIEs( SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs * objPDURANTimingSynchronisationStatusInfo_ExtIEs);
void __si_amf_debug_PDU_RANTimingSynchronisationStatusInfo_ExtIEs( char * key, SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs * objPDURANTimingSynchronisationStatusInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANTimingSynchronisationStatusInfo_ExtIEs( SI_AMF_DT_PDU_RANTimingSynchronisationStatusInfo_ExtIEs ** objPDURANTimingSynchronisationStatusInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RAN_TSSScope_ExtIEs( SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs * objPDURAN_TSSScope_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RAN_TSSScope_ExtIEs( SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs * objPDURAN_TSSScope_ExtIEs);
void __si_amf_debug_PDU_RAN_TSSScope_ExtIEs( char * key, SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs * objPDURAN_TSSScope_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RAN_TSSScope_ExtIEs( SI_AMF_DT_PDU_RAN_TSSScope_ExtIEs ** objPDURAN_TSSScope_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RANTSSCellItem_ExtIEs( SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs * objPDURANTSSCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RANTSSCellItem_ExtIEs( SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs * objPDURANTSSCellItem_ExtIEs);
void __si_amf_debug_PDU_RANTSSCellItem_ExtIEs( char * key, SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs * objPDURANTSSCellItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RANTSSCellItem_ExtIEs( SI_AMF_DT_PDU_RANTSSCellItem_ExtIEs ** objPDURANTSSCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RATRestrictions_Item_ExtIEs( SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs * objPDURATRestrictions_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RATRestrictions_Item_ExtIEs( SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs * objPDURATRestrictions_Item_ExtIEs);
void __si_amf_debug_PDU_RATRestrictions_Item_ExtIEs( char * key, SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs * objPDURATRestrictions_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RATRestrictions_Item_ExtIEs( SI_AMF_DT_PDU_RATRestrictions_Item_ExtIEs ** objPDURATRestrictions_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RecommendedCellsForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RecommendedCellsForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs);
void __si_amf_debug_PDU_RecommendedCellsForPaging_ExtIEs( char * key, SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs * objPDURecommendedCellsForPaging_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RecommendedCellsForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedCellsForPaging_ExtIEs ** objPDURecommendedCellsForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RecommendedCellItem_ExtIEs( SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs * objPDURecommendedCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RecommendedCellItem_ExtIEs( SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs * objPDURecommendedCellItem_ExtIEs);
void __si_amf_debug_PDU_RecommendedCellItem_ExtIEs( char * key, SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs * objPDURecommendedCellItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RecommendedCellItem_ExtIEs( SI_AMF_DT_PDU_RecommendedCellItem_ExtIEs ** objPDURecommendedCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RecommendedRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs * objPDURecommendedRANNodesForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RecommendedRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs * objPDURecommendedRANNodesForPaging_ExtIEs);
void __si_amf_debug_PDU_RecommendedRANNodesForPaging_ExtIEs( char * key, SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs * objPDURecommendedRANNodesForPaging_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RecommendedRANNodesForPaging_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodesForPaging_ExtIEs ** objPDURecommendedRANNodesForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RecommendedRANNodeItem_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs * objPDURecommendedRANNodeItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RecommendedRANNodeItem_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs * objPDURecommendedRANNodeItem_ExtIEs);
void __si_amf_debug_PDU_RecommendedRANNodeItem_ExtIEs( char * key, SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs * objPDURecommendedRANNodeItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RecommendedRANNodeItem_ExtIEs( SI_AMF_DT_PDU_RecommendedRANNodeItem_ExtIEs ** objPDURecommendedRANNodeItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RedundantPDUSessionInformation_ExtIEs( SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RedundantPDUSessionInformation_ExtIEs( SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs);
void __si_amf_debug_PDU_RedundantPDUSessionInformation_ExtIEs( char * key, SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RedundantPDUSessionInformation_ExtIEs( SI_AMF_DT_PDU_RedundantPDUSessionInformation_ExtIEs ** objPDURedundantPDUSessionInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ResetType_ExtIEs( SI_AMF_DT_PDU_ResetType_ExtIEs * objPDUResetType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ResetType_ExtIEs( SI_AMF_DT_PDU_ResetType_ExtIEs * objPDUResetType_ExtIEs);
void __si_amf_debug_PDU_ResetType_ExtIEs( char * key, SI_AMF_DT_PDU_ResetType_ExtIEs * objPDUResetType_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ResetType_ExtIEs( SI_AMF_DT_PDU_ResetType_ExtIEs ** objPDUResetType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RIMInformationTransfer_ExtIEs( SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs * objPDURIMInformationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RIMInformationTransfer_ExtIEs( SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs * objPDURIMInformationTransfer_ExtIEs);
void __si_amf_debug_PDU_RIMInformationTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs * objPDURIMInformationTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RIMInformationTransfer_ExtIEs( SI_AMF_DT_PDU_RIMInformationTransfer_ExtIEs ** objPDURIMInformationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RIMInformation_ExtIEs( SI_AMF_DT_PDU_RIMInformation_ExtIEs * objPDURIMInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RIMInformation_ExtIEs( SI_AMF_DT_PDU_RIMInformation_ExtIEs * objPDURIMInformation_ExtIEs);
void __si_amf_debug_PDU_RIMInformation_ExtIEs( char * key, SI_AMF_DT_PDU_RIMInformation_ExtIEs * objPDURIMInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RIMInformation_ExtIEs( SI_AMF_DT_PDU_RIMInformation_ExtIEs ** objPDURIMInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RSPPQoSFlowItem_ExtIEs( SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RSPPQoSFlowItem_ExtIEs( SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs);
void __si_amf_debug_PDU_RSPPQoSFlowItem_ExtIEs( char * key, SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RSPPQoSFlowItem_ExtIEs( SI_AMF_DT_PDU_RSPPQoSFlowItem_ExtIEs ** objPDURSPPQoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_RSPPFlowBitRates_ExtIEs( SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_RSPPFlowBitRates_ExtIEs( SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs);
void __si_amf_debug_PDU_RSPPFlowBitRates_ExtIEs( char * key, SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs, int lvl);
int __si_amf_Decode_PDU_RSPPFlowBitRates_ExtIEs( SI_AMF_DT_PDU_RSPPFlowBitRates_ExtIEs ** objPDURSPPFlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ScheduledCommunicationTime_ExtIEs( SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ScheduledCommunicationTime_ExtIEs( SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs);
void __si_amf_debug_PDU_ScheduledCommunicationTime_ExtIEs( char * key, SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs * objPDUScheduledCommunicationTime_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ScheduledCommunicationTime_ExtIEs( SI_AMF_DT_PDU_ScheduledCommunicationTime_ExtIEs ** objPDUScheduledCommunicationTime_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SecondaryRATUsageInformation_ExtIEs( SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SecondaryRATUsageInformation_ExtIEs( SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs);
void __si_amf_debug_PDU_SecondaryRATUsageInformation_ExtIEs( char * key, SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SecondaryRATUsageInformation_ExtIEs( SI_AMF_DT_PDU_SecondaryRATUsageInformation_ExtIEs ** objPDUSecondaryRATUsageInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs( SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs * objPDUSecondaryRATDataUsageReportTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs( SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs * objPDUSecondaryRATDataUsageReportTransfer_ExtIEs);
void __si_amf_debug_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs * objPDUSecondaryRATDataUsageReportTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs( SI_AMF_DT_PDU_SecondaryRATDataUsageReportTransfer_ExtIEs ** objPDUSecondaryRATDataUsageReportTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SecurityContext_ExtIEs( SI_AMF_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SecurityContext_ExtIEs( SI_AMF_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs);
void __si_amf_debug_PDU_SecurityContext_ExtIEs( char * key, SI_AMF_DT_PDU_SecurityContext_ExtIEs * objPDUSecurityContext_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SecurityContext_ExtIEs( SI_AMF_DT_PDU_SecurityContext_ExtIEs ** objPDUSecurityContext_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SecurityIndication_ExtIEs( SI_AMF_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SecurityIndication_ExtIEs( SI_AMF_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs);
void __si_amf_debug_PDU_SecurityIndication_ExtIEs( char * key, SI_AMF_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SecurityIndication_ExtIEs( SI_AMF_DT_PDU_SecurityIndication_ExtIEs ** objPDUSecurityIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SecurityResult_ExtIEs( SI_AMF_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SecurityResult_ExtIEs( SI_AMF_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs);
void __si_amf_debug_PDU_SecurityResult_ExtIEs( char * key, SI_AMF_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SecurityResult_ExtIEs( SI_AMF_DT_PDU_SecurityResult_ExtIEs ** objPDUSecurityResult_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SensorMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs);
void __si_amf_debug_PDU_SensorMeasurementConfiguration_ExtIEs( char * key, SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_SensorMeasurementConfiguration_ExtIEs ** objPDUSensorMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SensorMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SensorMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs);
void __si_amf_debug_PDU_SensorMeasConfigNameItem_ExtIEs( char * key, SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs * objPDUSensorMeasConfigNameItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SensorMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_SensorMeasConfigNameItem_ExtIEs ** objPDUSensorMeasConfigNameItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SensorNameConfig_ExtIEs( SI_AMF_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SensorNameConfig_ExtIEs( SI_AMF_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs);
void __si_amf_debug_PDU_SensorNameConfig_ExtIEs( char * key, SI_AMF_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SensorNameConfig_ExtIEs( SI_AMF_DT_PDU_SensorNameConfig_ExtIEs ** objPDUSensorNameConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ServedGUAMIItem_ExtIEs( SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs * objPDUServedGUAMIItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ServedGUAMIItem_ExtIEs( SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs * objPDUServedGUAMIItem_ExtIEs);
void __si_amf_debug_PDU_ServedGUAMIItem_ExtIEs( char * key, SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs * objPDUServedGUAMIItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ServedGUAMIItem_ExtIEs( SI_AMF_DT_PDU_ServedGUAMIItem_ExtIEs ** objPDUServedGUAMIItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_ServiceAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs * objPDUServiceAreaInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_ServiceAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs * objPDUServiceAreaInformation_Item_ExtIEs);
void __si_amf_debug_PDU_ServiceAreaInformation_Item_ExtIEs( char * key, SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs * objPDUServiceAreaInformation_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_ServiceAreaInformation_Item_ExtIEs( SI_AMF_DT_PDU_ServiceAreaInformation_Item_ExtIEs ** objPDUServiceAreaInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SharedNGU_MulticastTNLInformation_ExtIEs( SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs * objPDUSharedNGU_MulticastTNLInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SharedNGU_MulticastTNLInformation_ExtIEs( SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs * objPDUSharedNGU_MulticastTNLInformation_ExtIEs);
void __si_amf_debug_PDU_SharedNGU_MulticastTNLInformation_ExtIEs( char * key, SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs * objPDUSharedNGU_MulticastTNLInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SharedNGU_MulticastTNLInformation_ExtIEs( SI_AMF_DT_PDU_SharedNGU_MulticastTNLInformation_ExtIEs ** objPDUSharedNGU_MulticastTNLInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SliceOverloadItem_ExtIEs( SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs * objPDUSliceOverloadItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SliceOverloadItem_ExtIEs( SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs * objPDUSliceOverloadItem_ExtIEs);
void __si_amf_debug_PDU_SliceOverloadItem_ExtIEs( char * key, SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs * objPDUSliceOverloadItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SliceOverloadItem_ExtIEs( SI_AMF_DT_PDU_SliceOverloadItem_ExtIEs ** objPDUSliceOverloadItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SliceSupportItem_ExtIEs( SI_AMF_DT_PDU_SliceSupportItem_ExtIEs * objPDUSliceSupportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SliceSupportItem_ExtIEs( SI_AMF_DT_PDU_SliceSupportItem_ExtIEs * objPDUSliceSupportItem_ExtIEs);
void __si_amf_debug_PDU_SliceSupportItem_ExtIEs( char * key, SI_AMF_DT_PDU_SliceSupportItem_ExtIEs * objPDUSliceSupportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SliceSupportItem_ExtIEs( SI_AMF_DT_PDU_SliceSupportItem_ExtIEs ** objPDUSliceSupportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SliceSupportQMC_Item_ExtIEs( SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs * objPDUSliceSupportQMC_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SliceSupportQMC_Item_ExtIEs( SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs * objPDUSliceSupportQMC_Item_ExtIEs);
void __si_amf_debug_PDU_SliceSupportQMC_Item_ExtIEs( char * key, SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs * objPDUSliceSupportQMC_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SliceSupportQMC_Item_ExtIEs( SI_AMF_DT_PDU_SliceSupportQMC_Item_ExtIEs ** objPDUSliceSupportQMC_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs * objPDUSNPN_MobilityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs * objPDUSNPN_MobilityInformation_ExtIEs);
void __si_amf_debug_PDU_SNPN_MobilityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs * objPDUSNPN_MobilityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPN_MobilityInformation_ExtIEs( SI_AMF_DT_PDU_SNPN_MobilityInformation_ExtIEs ** objPDUSNPN_MobilityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_S_NSSAI_ExtIEs( SI_AMF_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_S_NSSAI_ExtIEs( SI_AMF_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs);
void __si_amf_debug_PDU_S_NSSAI_ExtIEs( char * key, SI_AMF_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_S_NSSAI_ExtIEs( SI_AMF_DT_PDU_S_NSSAI_ExtIEs ** objPDUS_NSSAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs);
void __si_amf_debug_PDU_SONConfigurationTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs * objPDUSONConfigurationTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SONConfigurationTransfer_ExtIEs( SI_AMF_DT_PDU_SONConfigurationTransfer_ExtIEs ** objPDUSONConfigurationTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SONInformation_ExtIEs( SI_AMF_DT_PDU_SONInformation_ExtIEs * objPDUSONInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SONInformation_ExtIEs( SI_AMF_DT_PDU_SONInformation_ExtIEs * objPDUSONInformation_ExtIEs);
void __si_amf_debug_PDU_SONInformation_ExtIEs( char * key, SI_AMF_DT_PDU_SONInformation_ExtIEs * objPDUSONInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SONInformation_ExtIEs( SI_AMF_DT_PDU_SONInformation_ExtIEs ** objPDUSONInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SONInformationReply_ExtIEs( SI_AMF_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SONInformationReply_ExtIEs( SI_AMF_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs);
void __si_amf_debug_PDU_SONInformationReply_ExtIEs( char * key, SI_AMF_DT_PDU_SONInformationReply_ExtIEs * objPDUSONInformationReply_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SONInformationReply_ExtIEs( SI_AMF_DT_PDU_SONInformationReply_ExtIEs ** objPDUSONInformationReply_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SONInformationReport_ExtIEs( SI_AMF_DT_PDU_SONInformationReport_ExtIEs * objPDUSONInformationReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SONInformationReport_ExtIEs( SI_AMF_DT_PDU_SONInformationReport_ExtIEs * objPDUSONInformationReport_ExtIEs);
void __si_amf_debug_PDU_SONInformationReport_ExtIEs( char * key, SI_AMF_DT_PDU_SONInformationReport_ExtIEs * objPDUSONInformationReport_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SONInformationReport_ExtIEs( SI_AMF_DT_PDU_SONInformationReport_ExtIEs ** objPDUSONInformationReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPN_CellBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPN_CellBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs);
void __si_amf_debug_PDU_SNPN_CellBasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPN_CellBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_CellBasedMDT_ExtIEs ** objPDUSNPN_CellBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPNCellIdListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs * objPDUSNPNCellIdListforMDTItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPNCellIdListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs * objPDUSNPNCellIdListforMDTItem_ExtIEs);
void __si_amf_debug_PDU_SNPNCellIdListforMDTItem_ExtIEs( char * key, SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs * objPDUSNPNCellIdListforMDTItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPNCellIdListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNCellIdListforMDTItem_ExtIEs ** objPDUSNPNCellIdListforMDTItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs);
void __si_amf_debug_PDU_SNPN_TAIBasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_TAIBasedMDT_ExtIEs ** objPDUSNPN_TAIBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPNTAIListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs * objPDUSNPNTAIListforMDTItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPNTAIListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs * objPDUSNPNTAIListforMDTItem_ExtIEs);
void __si_amf_debug_PDU_SNPNTAIListforMDTItem_ExtIEs( char * key, SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs * objPDUSNPNTAIListforMDTItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPNTAIListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNTAIListforMDTItem_ExtIEs ** objPDUSNPNTAIListforMDTItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPN_BasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPN_BasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs);
void __si_amf_debug_PDU_SNPN_BasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPN_BasedMDT_ExtIEs( SI_AMF_DT_PDU_SNPN_BasedMDT_ExtIEs ** objPDUSNPN_BasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SNPNListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs * objPDUSNPNListforMDTItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SNPNListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs * objPDUSNPNListforMDTItem_ExtIEs);
void __si_amf_debug_PDU_SNPNListforMDTItem_ExtIEs( char * key, SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs * objPDUSNPNListforMDTItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SNPNListforMDTItem_ExtIEs( SI_AMF_DT_PDU_SNPNListforMDTItem_ExtIEs ** objPDUSNPNListforMDTItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SuccessfulHandoverReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs * objPDUSuccessfulHandoverReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SuccessfulHandoverReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs * objPDUSuccessfulHandoverReport_Item_ExtIEs);
void __si_amf_debug_PDU_SuccessfulHandoverReport_Item_ExtIEs( char * key, SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs * objPDUSuccessfulHandoverReport_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SuccessfulHandoverReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulHandoverReport_Item_ExtIEs ** objPDUSuccessfulHandoverReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs * objPDUSuccessfulPSCellChangeReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs * objPDUSuccessfulPSCellChangeReport_Item_ExtIEs);
void __si_amf_debug_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs( char * key, SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs * objPDUSuccessfulPSCellChangeReport_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs( SI_AMF_DT_PDU_SuccessfulPSCellChangeReport_Item_ExtIEs ** objPDUSuccessfulPSCellChangeReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs * objPDUSourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs * objPDUSourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs);
void __si_amf_debug_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs( char * key, SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs * objPDUSourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_SourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs ** objPDUSourceNGRANNode_ToTargetNGRANNode_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SourceNodeID_ExtIEs( SI_AMF_DT_PDU_SourceNodeID_ExtIEs * objPDUSourceNodeID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SourceNodeID_ExtIEs( SI_AMF_DT_PDU_SourceNodeID_ExtIEs * objPDUSourceNodeID_ExtIEs);
void __si_amf_debug_PDU_SourceNodeID_ExtIEs( char * key, SI_AMF_DT_PDU_SourceNodeID_ExtIEs * objPDUSourceNodeID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SourceNodeID_ExtIEs( SI_AMF_DT_PDU_SourceNodeID_ExtIEs ** objPDUSourceNodeID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SourceRANNodeID_ExtIEs( SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs * objPDUSourceRANNodeID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SourceRANNodeID_ExtIEs( SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs * objPDUSourceRANNodeID_ExtIEs);
void __si_amf_debug_PDU_SourceRANNodeID_ExtIEs( char * key, SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs * objPDUSourceRANNodeID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SourceRANNodeID_ExtIEs( SI_AMF_DT_PDU_SourceRANNodeID_ExtIEs ** objPDUSourceRANNodeID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SourceToTarget_AMFInformationReroute_ExtIEs( SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs * objPDUSourceToTarget_AMFInformationReroute_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SourceToTarget_AMFInformationReroute_ExtIEs( SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs * objPDUSourceToTarget_AMFInformationReroute_ExtIEs);
void __si_amf_debug_PDU_SourceToTarget_AMFInformationReroute_ExtIEs( char * key, SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs * objPDUSourceToTarget_AMFInformationReroute_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SourceToTarget_AMFInformationReroute_ExtIEs( SI_AMF_DT_PDU_SourceToTarget_AMFInformationReroute_ExtIEs ** objPDUSourceToTarget_AMFInformationReroute_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SupportedTAItem_ExtIEs( SI_AMF_DT_PDU_SupportedTAItem_ExtIEs * objPDUSupportedTAItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SupportedTAItem_ExtIEs( SI_AMF_DT_PDU_SupportedTAItem_ExtIEs * objPDUSupportedTAItem_ExtIEs);
void __si_amf_debug_PDU_SupportedTAItem_ExtIEs( char * key, SI_AMF_DT_PDU_SupportedTAItem_ExtIEs * objPDUSupportedTAItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SupportedTAItem_ExtIEs( SI_AMF_DT_PDU_SupportedTAItem_ExtIEs ** objPDUSupportedTAItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SLPositioningRangingServiceInfo_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs * objPDUSLPositioningRangingServiceInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SLPositioningRangingServiceInfo_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs * objPDUSLPositioningRangingServiceInfo_ExtIEs);
void __si_amf_debug_PDU_SLPositioningRangingServiceInfo_ExtIEs( char * key, SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs * objPDUSLPositioningRangingServiceInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SLPositioningRangingServiceInfo_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingServiceInfo_ExtIEs ** objPDUSLPositioningRangingServiceInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_SLPositioningRangingQoSParameters_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs * objPDUSLPositioningRangingQoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_SLPositioningRangingQoSParameters_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs * objPDUSLPositioningRangingQoSParameters_ExtIEs);
void __si_amf_debug_PDU_SLPositioningRangingQoSParameters_ExtIEs( char * key, SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs * objPDUSLPositioningRangingQoSParameters_ExtIEs, int lvl);
int __si_amf_Decode_PDU_SLPositioningRangingQoSParameters_ExtIEs( SI_AMF_DT_PDU_SLPositioningRangingQoSParameters_ExtIEs ** objPDUSLPositioningRangingQoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAI_ExtIEs( SI_AMF_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAI_ExtIEs( SI_AMF_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs);
void __si_amf_debug_PDU_TAI_ExtIEs( char * key, SI_AMF_DT_PDU_TAI_ExtIEs * objPDUTAI_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAI_ExtIEs( SI_AMF_DT_PDU_TAI_ExtIEs ** objPDUTAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs * objPDUTAIBroadcastEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs * objPDUTAIBroadcastEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_TAIBroadcastEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs * objPDUTAIBroadcastEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIBroadcastEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastEUTRA_Item_ExtIEs ** objPDUTAIBroadcastEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs * objPDUTAIBroadcastNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs * objPDUTAIBroadcastNR_Item_ExtIEs);
void __si_amf_debug_PDU_TAIBroadcastNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs * objPDUTAIBroadcastNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIBroadcastNR_Item_ExtIEs( SI_AMF_DT_PDU_TAIBroadcastNR_Item_ExtIEs ** objPDUTAIBroadcastNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAICancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs * objPDUTAICancelledEUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAICancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs * objPDUTAICancelledEUTRA_Item_ExtIEs);
void __si_amf_debug_PDU_TAICancelledEUTRA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs * objPDUTAICancelledEUTRA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAICancelledEUTRA_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledEUTRA_Item_ExtIEs ** objPDUTAICancelledEUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAICancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs * objPDUTAICancelledNR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAICancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs * objPDUTAICancelledNR_Item_ExtIEs);
void __si_amf_debug_PDU_TAICancelledNR_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs * objPDUTAICancelledNR_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAICancelledNR_Item_ExtIEs( SI_AMF_DT_PDU_TAICancelledNR_Item_ExtIEs ** objPDUTAICancelledNR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIListForInactiveItem_ExtIEs( SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs * objPDUTAIListForInactiveItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIListForInactiveItem_ExtIEs( SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs * objPDUTAIListForInactiveItem_ExtIEs);
void __si_amf_debug_PDU_TAIListForInactiveItem_ExtIEs( char * key, SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs * objPDUTAIListForInactiveItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIListForInactiveItem_ExtIEs( SI_AMF_DT_PDU_TAIListForInactiveItem_ExtIEs ** objPDUTAIListForInactiveItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIListForPagingItem_ExtIEs( SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs * objPDUTAIListForPagingItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIListForPagingItem_ExtIEs( SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs * objPDUTAIListForPagingItem_ExtIEs);
void __si_amf_debug_PDU_TAIListForPagingItem_ExtIEs( char * key, SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs * objPDUTAIListForPagingItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIListForPagingItem_ExtIEs( SI_AMF_DT_PDU_TAIListForPagingItem_ExtIEs ** objPDUTAIListForPagingItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAINSAGSupportItem_ExtIEs( SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAINSAGSupportItem_ExtIEs( SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs);
void __si_amf_debug_PDU_TAINSAGSupportItem_ExtIEs( char * key, SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAINSAGSupportItem_ExtIEs( SI_AMF_DT_PDU_TAINSAGSupportItem_ExtIEs ** objPDUTAINSAGSupportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargeteNB_ID_ExtIEs( SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargeteNB_ID_ExtIEs( SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs);
void __si_amf_debug_PDU_TargeteNB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs * objPDUTargeteNB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargeteNB_ID_ExtIEs( SI_AMF_DT_PDU_TargeteNB_ID_ExtIEs ** objPDUTargeteNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetHomeENB_ID_ExtIEs( SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs * objPDUTargetHomeENB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetHomeENB_ID_ExtIEs( SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs * objPDUTargetHomeENB_ID_ExtIEs);
void __si_amf_debug_PDU_TargetHomeENB_ID_ExtIEs( char * key, SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs * objPDUTargetHomeENB_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetHomeENB_ID_ExtIEs( SI_AMF_DT_PDU_TargetHomeENB_ID_ExtIEs ** objPDUTargetHomeENB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetID_ExtIEs( SI_AMF_DT_PDU_TargetID_ExtIEs * objPDUTargetID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetID_ExtIEs( SI_AMF_DT_PDU_TargetID_ExtIEs * objPDUTargetID_ExtIEs);
void __si_amf_debug_PDU_TargetID_ExtIEs( char * key, SI_AMF_DT_PDU_TargetID_ExtIEs * objPDUTargetID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetID_ExtIEs( SI_AMF_DT_PDU_TargetID_ExtIEs ** objPDUTargetID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs);
void __si_amf_debug_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs( char * key, SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs ** objPDUTargetNGRANNode_ToSourceNGRANNode_TransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs);
void __si_amf_debug_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs( char * key, SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs * objPDUTargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs( SI_AMF_DT_PDU_TargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs ** objPDUTargetNGRANNode_ToSourceNGRANNode_FailureTransparentContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs * objPDUTargetNSSAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs * objPDUTargetNSSAI_Item_ExtIEs);
void __si_amf_debug_PDU_TargetNSSAI_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs * objPDUTargetNSSAI_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetNSSAI_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAI_Item_ExtIEs ** objPDUTargetNSSAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetNSSAIInformation_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs * objPDUTargetNSSAIInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetNSSAIInformation_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs * objPDUTargetNSSAIInformation_Item_ExtIEs);
void __si_amf_debug_PDU_TargetNSSAIInformation_Item_ExtIEs( char * key, SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs * objPDUTargetNSSAIInformation_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetNSSAIInformation_Item_ExtIEs( SI_AMF_DT_PDU_TargetNSSAIInformation_Item_ExtIEs ** objPDUTargetNSSAIInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetRANNodeID_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs * objPDUTargetRANNodeID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetRANNodeID_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs * objPDUTargetRANNodeID_ExtIEs);
void __si_amf_debug_PDU_TargetRANNodeID_ExtIEs( char * key, SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs * objPDUTargetRANNodeID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetRANNodeID_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_ExtIEs ** objPDUTargetRANNodeID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetRANNodeID_RIM_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs * objPDUTargetRANNodeID_RIM_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetRANNodeID_RIM_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs * objPDUTargetRANNodeID_RIM_ExtIEs);
void __si_amf_debug_PDU_TargetRANNodeID_RIM_ExtIEs( char * key, SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs * objPDUTargetRANNodeID_RIM_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetRANNodeID_RIM_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_RIM_ExtIEs ** objPDUTargetRANNodeID_RIM_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetRANNodeID_SON_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs * objPDUTargetRANNodeID_SON_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetRANNodeID_SON_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs * objPDUTargetRANNodeID_SON_ExtIEs);
void __si_amf_debug_PDU_TargetRANNodeID_SON_ExtIEs( char * key, SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs * objPDUTargetRANNodeID_SON_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetRANNodeID_SON_ExtIEs( SI_AMF_DT_PDU_TargetRANNodeID_SON_ExtIEs ** objPDUTargetRANNodeID_SON_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TargetRNC_ID_ExtIEs( SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TargetRNC_ID_ExtIEs( SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs);
void __si_amf_debug_PDU_TargetRNC_ID_ExtIEs( char * key, SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs * objPDUTargetRNC_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TargetRNC_ID_ExtIEs( SI_AMF_DT_PDU_TargetRNC_ID_ExtIEs ** objPDUTargetRNC_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TimeBasedHandoverInformation_ExtIEs( SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TimeBasedHandoverInformation_ExtIEs( SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs);
void __si_amf_debug_PDU_TimeBasedHandoverInformation_ExtIEs( char * key, SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs * objPDUTimeBasedHandoverInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TimeBasedHandoverInformation_ExtIEs( SI_AMF_DT_PDU_TimeBasedHandoverInformation_ExtIEs ** objPDUTimeBasedHandoverInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TimeSyncAssistanceInfo_ExtIEs( SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs * objPDUTimeSyncAssistanceInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TimeSyncAssistanceInfo_ExtIEs( SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs * objPDUTimeSyncAssistanceInfo_ExtIEs);
void __si_amf_debug_PDU_TimeSyncAssistanceInfo_ExtIEs( char * key, SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs * objPDUTimeSyncAssistanceInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TimeSyncAssistanceInfo_ExtIEs( SI_AMF_DT_PDU_TimeSyncAssistanceInfo_ExtIEs ** objPDUTimeSyncAssistanceInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TNGF_ID_ExtIEs( SI_AMF_DT_PDU_TNGF_ID_ExtIEs * objPDUTNGF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TNGF_ID_ExtIEs( SI_AMF_DT_PDU_TNGF_ID_ExtIEs * objPDUTNGF_ID_ExtIEs);
void __si_amf_debug_PDU_TNGF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_TNGF_ID_ExtIEs * objPDUTNGF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TNGF_ID_ExtIEs( SI_AMF_DT_PDU_TNGF_ID_ExtIEs ** objPDUTNGF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TNLAssociationItem_ExtIEs( SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs * objPDUTNLAssociationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TNLAssociationItem_ExtIEs( SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs * objPDUTNLAssociationItem_ExtIEs);
void __si_amf_debug_PDU_TNLAssociationItem_ExtIEs( char * key, SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs * objPDUTNLAssociationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TNLAssociationItem_ExtIEs( SI_AMF_DT_PDU_TNLAssociationItem_ExtIEs ** objPDUTNLAssociationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TooearlyIntersystemHO_ExtIEs( SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs * objPDUTooearlyIntersystemHO_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TooearlyIntersystemHO_ExtIEs( SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs * objPDUTooearlyIntersystemHO_ExtIEs);
void __si_amf_debug_PDU_TooearlyIntersystemHO_ExtIEs( char * key, SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs * objPDUTooearlyIntersystemHO_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TooearlyIntersystemHO_ExtIEs( SI_AMF_DT_PDU_TooearlyIntersystemHO_ExtIEs ** objPDUTooearlyIntersystemHO_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TraceActivation_ExtIEs( SI_AMF_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TraceActivation_ExtIEs( SI_AMF_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs);
void __si_amf_debug_PDU_TraceActivation_ExtIEs( char * key, SI_AMF_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TraceActivation_ExtIEs( SI_AMF_DT_PDU_TraceActivation_ExtIEs ** objPDUTraceActivation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs);
void __si_amf_debug_PDU_TAIBasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIBasedMDT_ExtIEs( SI_AMF_DT_PDU_TAIBasedMDT_ExtIEs ** objPDUTAIBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TAIBasedQMC_ExtIEs( SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TAIBasedQMC_ExtIEs( SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs);
void __si_amf_debug_PDU_TAIBasedQMC_ExtIEs( char * key, SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TAIBasedQMC_ExtIEs( SI_AMF_DT_PDU_TAIBasedQMC_ExtIEs ** objPDUTAIBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TABasedQMC_ExtIEs( SI_AMF_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TABasedQMC_ExtIEs( SI_AMF_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs);
void __si_amf_debug_PDU_TABasedQMC_ExtIEs( char * key, SI_AMF_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TABasedQMC_ExtIEs( SI_AMF_DT_PDU_TABasedQMC_ExtIEs ** objPDUTABasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TABasedMDT_ExtIEs( SI_AMF_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TABasedMDT_ExtIEs( SI_AMF_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs);
void __si_amf_debug_PDU_TABasedMDT_ExtIEs( char * key, SI_AMF_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TABasedMDT_ExtIEs( SI_AMF_DT_PDU_TABasedMDT_ExtIEs ** objPDUTABasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TWIF_ID_ExtIEs( SI_AMF_DT_PDU_TWIF_ID_ExtIEs * objPDUTWIF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TWIF_ID_ExtIEs( SI_AMF_DT_PDU_TWIF_ID_ExtIEs * objPDUTWIF_ID_ExtIEs);
void __si_amf_debug_PDU_TWIF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_TWIF_ID_ExtIEs * objPDUTWIF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TWIF_ID_ExtIEs( SI_AMF_DT_PDU_TWIF_ID_ExtIEs ** objPDUTWIF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TSCAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TSCAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs);
void __si_amf_debug_PDU_TSCAssistanceInformation_ExtIEs( char * key, SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TSCAssistanceInformation_ExtIEs( SI_AMF_DT_PDU_TSCAssistanceInformation_ExtIEs ** objPDUTSCAssistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TSCTrafficCharacteristics_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TSCTrafficCharacteristics_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs);
void __si_amf_debug_PDU_TSCTrafficCharacteristics_ExtIEs( char * key, SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TSCTrafficCharacteristics_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristics_ExtIEs ** objPDUTSCTrafficCharacteristics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs * objPDUTSCTrafficCharacteristicsFeedback_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs * objPDUTSCTrafficCharacteristicsFeedback_ExtIEs);
void __si_amf_debug_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs( char * key, SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs * objPDUTSCTrafficCharacteristicsFeedback_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs( SI_AMF_DT_PDU_TSCTrafficCharacteristicsFeedback_ExtIEs ** objPDUTSCTrafficCharacteristicsFeedback_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_TSCFeedbackInformation_ExtIEs( SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs * objPDUTSCFeedbackInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_TSCFeedbackInformation_ExtIEs( SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs * objPDUTSCFeedbackInformation_ExtIEs);
void __si_amf_debug_PDU_TSCFeedbackInformation_ExtIEs( char * key, SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs * objPDUTSCFeedbackInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_TSCFeedbackInformation_ExtIEs( SI_AMF_DT_PDU_TSCFeedbackInformation_ExtIEs ** objPDUTSCFeedbackInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs);
void __si_amf_debug_PDU_UEAggregateMaximumBitRate_ExtIEs( char * key, SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_AMF_DT_PDU_UEAggregateMaximumBitRate_ExtIEs ** objPDUUEAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEAppLayerMeasInfoItem_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs * objPDUUEAppLayerMeasInfoItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEAppLayerMeasInfoItem_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs * objPDUUEAppLayerMeasInfoItem_ExtIEs);
void __si_amf_debug_PDU_UEAppLayerMeasInfoItem_ExtIEs( char * key, SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs * objPDUUEAppLayerMeasInfoItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEAppLayerMeasInfoItem_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasInfoItem_ExtIEs ** objPDUUEAppLayerMeasInfoItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs);
void __si_amf_debug_PDU_UEAppLayerMeasConfigInfo_ExtIEs( char * key, SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_AMF_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs ** objPDUUEAppLayerMeasConfigInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs( SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs * objPDUUE_associatedLogicalNG_connectionItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs( SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs * objPDUUE_associatedLogicalNG_connectionItem_ExtIEs);
void __si_amf_debug_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs( char * key, SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs * objPDUUE_associatedLogicalNG_connectionItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs( SI_AMF_DT_PDU_UE_associatedLogicalNG_connectionItem_ExtIEs ** objPDUUE_associatedLogicalNG_connectionItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEContextResumeRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs * objPDUUEContextResumeRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEContextResumeRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs * objPDUUEContextResumeRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_UEContextResumeRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs * objPDUUEContextResumeRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEContextResumeRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeRequestTransfer_ExtIEs ** objPDUUEContextResumeRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEContextResumeResponseTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs * objPDUUEContextResumeResponseTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEContextResumeResponseTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs * objPDUUEContextResumeResponseTransfer_ExtIEs);
void __si_amf_debug_PDU_UEContextResumeResponseTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs * objPDUUEContextResumeResponseTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEContextResumeResponseTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextResumeResponseTransfer_ExtIEs ** objPDUUEContextResumeResponseTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEContextSuspendRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs * objPDUUEContextSuspendRequestTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEContextSuspendRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs * objPDUUEContextSuspendRequestTransfer_ExtIEs);
void __si_amf_debug_PDU_UEContextSuspendRequestTransfer_ExtIEs( char * key, SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs * objPDUUEContextSuspendRequestTransfer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEContextSuspendRequestTransfer_ExtIEs( SI_AMF_DT_PDU_UEContextSuspendRequestTransfer_ExtIEs ** objPDUUEContextSuspendRequestTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UE_DifferentiationInfo_ExtIEs( SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs * objPDUUE_DifferentiationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UE_DifferentiationInfo_ExtIEs( SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs * objPDUUE_DifferentiationInfo_ExtIEs);
void __si_amf_debug_PDU_UE_DifferentiationInfo_ExtIEs( char * key, SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs * objPDUUE_DifferentiationInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UE_DifferentiationInfo_ExtIEs( SI_AMF_DT_PDU_UE_DifferentiationInfo_ExtIEs ** objPDUUE_DifferentiationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs);
void __si_amf_debug_PDU_UEHistoryInformationFromTheUE_ExtIEs( char * key, SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_AMF_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs ** objPDUUEHistoryInformationFromTheUE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEIdentityIndexValue_ExtIEs( SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEIdentityIndexValue_ExtIEs( SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs);
void __si_amf_debug_PDU_UEIdentityIndexValue_ExtIEs( char * key, SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEIdentityIndexValue_ExtIEs( SI_AMF_DT_PDU_UEIdentityIndexValue_ExtIEs ** objPDUUEIdentityIndexValue_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UE_NGAP_IDs_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs * objPDUUE_NGAP_IDs_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UE_NGAP_IDs_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs * objPDUUE_NGAP_IDs_ExtIEs);
void __si_amf_debug_PDU_UE_NGAP_IDs_ExtIEs( char * key, SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs * objPDUUE_NGAP_IDs_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UE_NGAP_IDs_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_IDs_ExtIEs ** objPDUUE_NGAP_IDs_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UE_NGAP_ID_pair_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs * objPDUUE_NGAP_ID_pair_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UE_NGAP_ID_pair_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs * objPDUUE_NGAP_ID_pair_ExtIEs);
void __si_amf_debug_PDU_UE_NGAP_ID_pair_ExtIEs( char * key, SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs * objPDUUE_NGAP_ID_pair_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UE_NGAP_ID_pair_ExtIEs( SI_AMF_DT_PDU_UE_NGAP_ID_pair_ExtIEs ** objPDUUE_NGAP_ID_pair_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEPagingIdentity_ExtIEs( SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs * objPDUUEPagingIdentity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEPagingIdentity_ExtIEs( SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs * objPDUUEPagingIdentity_ExtIEs);
void __si_amf_debug_PDU_UEPagingIdentity_ExtIEs( char * key, SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs * objPDUUEPagingIdentity_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEPagingIdentity_ExtIEs( SI_AMF_DT_PDU_UEPagingIdentity_ExtIEs ** objPDUUEPagingIdentity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UEPresenceInAreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs * objPDUUEPresenceInAreaOfInterestItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UEPresenceInAreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs * objPDUUEPresenceInAreaOfInterestItem_ExtIEs);
void __si_amf_debug_PDU_UEPresenceInAreaOfInterestItem_ExtIEs( char * key, SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs * objPDUUEPresenceInAreaOfInterestItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UEPresenceInAreaOfInterestItem_ExtIEs( SI_AMF_DT_PDU_UEPresenceInAreaOfInterestItem_ExtIEs ** objPDUUEPresenceInAreaOfInterestItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UERadioCapabilityForPaging_ExtIEs( SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UERadioCapabilityForPaging_ExtIEs( SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs);
void __si_amf_debug_PDU_UERadioCapabilityForPaging_ExtIEs( char * key, SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UERadioCapabilityForPaging_ExtIEs( SI_AMF_DT_PDU_UERadioCapabilityForPaging_ExtIEs ** objPDUUERadioCapabilityForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UERLFReportContainer_ExtIEs( SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UERLFReportContainer_ExtIEs( SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs);
void __si_amf_debug_PDU_UERLFReportContainer_ExtIEs( char * key, SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UERLFReportContainer_ExtIEs( SI_AMF_DT_PDU_UERLFReportContainer_ExtIEs ** objPDUUERLFReportContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UESecurityCapabilities_ExtIEs( SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UESecurityCapabilities_ExtIEs( SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs);
void __si_amf_debug_PDU_UESecurityCapabilities_ExtIEs( char * key, SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UESecurityCapabilities_ExtIEs( SI_AMF_DT_PDU_UESecurityCapabilities_ExtIEs ** objPDUUESecurityCapabilities_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UESliceMaximumBitRateItem_ExtIEs( SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs * objPDUUESliceMaximumBitRateItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UESliceMaximumBitRateItem_ExtIEs( SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs * objPDUUESliceMaximumBitRateItem_ExtIEs);
void __si_amf_debug_PDU_UESliceMaximumBitRateItem_ExtIEs( char * key, SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs * objPDUUESliceMaximumBitRateItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UESliceMaximumBitRateItem_ExtIEs( SI_AMF_DT_PDU_UESliceMaximumBitRateItem_ExtIEs ** objPDUUESliceMaximumBitRateItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs);
void __si_amf_debug_PDU_UL_CP_SecurityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs * objPDUUL_CP_SecurityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UL_CP_SecurityInformation_ExtIEs( SI_AMF_DT_PDU_UL_CP_SecurityInformation_ExtIEs ** objPDUUL_CP_SecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs( SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs * objPDUUL_NGU_UP_TNLModifyItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs( SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs * objPDUUL_NGU_UP_TNLModifyItem_ExtIEs);
void __si_amf_debug_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs( char * key, SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs * objPDUUL_NGU_UP_TNLModifyItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs( SI_AMF_DT_PDU_UL_NGU_UP_TNLModifyItem_ExtIEs ** objPDUUL_NGU_UP_TNLModifyItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UnavailableGUAMIItem_ExtIEs( SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs * objPDUUnavailableGUAMIItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UnavailableGUAMIItem_ExtIEs( SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs * objPDUUnavailableGUAMIItem_ExtIEs);
void __si_amf_debug_PDU_UnavailableGUAMIItem_ExtIEs( char * key, SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs * objPDUUnavailableGUAMIItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UnavailableGUAMIItem_ExtIEs( SI_AMF_DT_PDU_UnavailableGUAMIItem_ExtIEs ** objPDUUnavailableGUAMIItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs);
void __si_amf_debug_PDU_UPTransportLayerInformation_ExtIEs( char * key, SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UPTransportLayerInformation_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformation_ExtIEs ** objPDUUPTransportLayerInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UPTransportLayerInformationItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs * objPDUUPTransportLayerInformationItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UPTransportLayerInformationItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs * objPDUUPTransportLayerInformationItem_ExtIEs);
void __si_amf_debug_PDU_UPTransportLayerInformationItem_ExtIEs( char * key, SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs * objPDUUPTransportLayerInformationItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UPTransportLayerInformationItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationItem_ExtIEs ** objPDUUPTransportLayerInformationItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UPTransportLayerInformationPairItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs * objPDUUPTransportLayerInformationPairItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UPTransportLayerInformationPairItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs * objPDUUPTransportLayerInformationPairItem_ExtIEs);
void __si_amf_debug_PDU_UPTransportLayerInformationPairItem_ExtIEs( char * key, SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs * objPDUUPTransportLayerInformationPairItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UPTransportLayerInformationPairItem_ExtIEs( SI_AMF_DT_PDU_UPTransportLayerInformationPairItem_ExtIEs ** objPDUUPTransportLayerInformationPairItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformation_ExtIEs( SI_AMF_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformation_ExtIEs( SI_AMF_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformation_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformation_ExtIEs * objPDUUserLocationInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformation_ExtIEs( SI_AMF_DT_PDU_UserLocationInformation_ExtIEs ** objPDUUserLocationInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationEUTRA_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs * objPDUUserLocationInformationEUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationEUTRA_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs * objPDUUserLocationInformationEUTRA_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationEUTRA_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs * objPDUUserLocationInformationEUTRA_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationEUTRA_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationEUTRA_ExtIEs ** objPDUUserLocationInformationEUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_with_PortNumber_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_with_PortNumber_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_with_PortNumber_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_with_PortNumber_ExtIEs ** objPDUUserLocationInformationN3IWF_with_PortNumber_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_without_PortNumber_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_without_PortNumber_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs * objPDUUserLocationInformationN3IWF_without_PortNumber_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationN3IWF_without_PortNumber_ExtIEs ** objPDUUserLocationInformationN3IWF_without_PortNumber_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationTNGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs * objPDUUserLocationInformationTNGF_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationTNGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs * objPDUUserLocationInformationTNGF_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationTNGF_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs * objPDUUserLocationInformationTNGF_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationTNGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTNGF_ExtIEs ** objPDUUserLocationInformationTNGF_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationTWIF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs * objPDUUserLocationInformationTWIF_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationTWIF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs * objPDUUserLocationInformationTWIF_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationTWIF_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs * objPDUUserLocationInformationTWIF_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationTWIF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationTWIF_ExtIEs ** objPDUUserLocationInformationTWIF_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationW_AGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs * objPDUUserLocationInformationW_AGF_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationW_AGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs * objPDUUserLocationInformationW_AGF_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationW_AGF_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs * objPDUUserLocationInformationW_AGF_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationW_AGF_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationW_AGF_ExtIEs ** objPDUUserLocationInformationW_AGF_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserLocationInformationNR_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs * objPDUUserLocationInformationNR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserLocationInformationNR_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs * objPDUUserLocationInformationNR_ExtIEs);
void __si_amf_debug_PDU_UserLocationInformationNR_ExtIEs( char * key, SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs * objPDUUserLocationInformationNR_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserLocationInformationNR_ExtIEs( SI_AMF_DT_PDU_UserLocationInformationNR_ExtIEs ** objPDUUserLocationInformationNR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserPlaneFailureIndication_ExtIEs( SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserPlaneFailureIndication_ExtIEs( SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs);
void __si_amf_debug_PDU_UserPlaneFailureIndication_ExtIEs( char * key, SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserPlaneFailureIndication_ExtIEs( SI_AMF_DT_PDU_UserPlaneFailureIndication_ExtIEs ** objPDUUserPlaneFailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_UserPlaneSecurityInformation_ExtIEs( SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs * objPDUUserPlaneSecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_UserPlaneSecurityInformation_ExtIEs( SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs * objPDUUserPlaneSecurityInformation_ExtIEs);
void __si_amf_debug_PDU_UserPlaneSecurityInformation_ExtIEs( char * key, SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs * objPDUUserPlaneSecurityInformation_ExtIEs, int lvl);
int __si_amf_Decode_PDU_UserPlaneSecurityInformation_ExtIEs( SI_AMF_DT_PDU_UserPlaneSecurityInformation_ExtIEs ** objPDUUserPlaneSecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_VolumeTimedReport_Item_ExtIEs( SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_VolumeTimedReport_Item_ExtIEs( SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs);
void __si_amf_debug_PDU_VolumeTimedReport_Item_ExtIEs( char * key, SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_VolumeTimedReport_Item_ExtIEs( SI_AMF_DT_PDU_VolumeTimedReport_Item_ExtIEs ** objPDUVolumeTimedReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_W_AGF_ID_ExtIEs( SI_AMF_DT_PDU_W_AGF_ID_ExtIEs * objPDUW_AGF_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_W_AGF_ID_ExtIEs( SI_AMF_DT_PDU_W_AGF_ID_ExtIEs * objPDUW_AGF_ID_ExtIEs);
void __si_amf_debug_PDU_W_AGF_ID_ExtIEs( char * key, SI_AMF_DT_PDU_W_AGF_ID_ExtIEs * objPDUW_AGF_ID_ExtIEs, int lvl);
int __si_amf_Decode_PDU_W_AGF_ID_ExtIEs( SI_AMF_DT_PDU_W_AGF_ID_ExtIEs ** objPDUW_AGF_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_WarningAreaList_ExtIEs( SI_AMF_DT_PDU_WarningAreaList_ExtIEs * objPDUWarningAreaList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_WarningAreaList_ExtIEs( SI_AMF_DT_PDU_WarningAreaList_ExtIEs * objPDUWarningAreaList_ExtIEs);
void __si_amf_debug_PDU_WarningAreaList_ExtIEs( char * key, SI_AMF_DT_PDU_WarningAreaList_ExtIEs * objPDUWarningAreaList_ExtIEs, int lvl);
int __si_amf_Decode_PDU_WarningAreaList_ExtIEs( SI_AMF_DT_PDU_WarningAreaList_ExtIEs ** objPDUWarningAreaList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_WLANMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs);
void __si_amf_debug_PDU_WLANMeasurementConfiguration_ExtIEs( char * key, SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, int lvl);
int __si_amf_Decode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_AMF_DT_PDU_WLANMeasurementConfiguration_ExtIEs ** objPDUWLANMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_WLANMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs * objPDUWLANMeasConfigNameItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_WLANMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs * objPDUWLANMeasConfigNameItem_ExtIEs);
void __si_amf_debug_PDU_WLANMeasConfigNameItem_ExtIEs( char * key, SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs * objPDUWLANMeasConfigNameItem_ExtIEs, int lvl);
int __si_amf_Decode_PDU_WLANMeasConfigNameItem_ExtIEs( SI_AMF_DT_PDU_WLANMeasConfigNameItem_ExtIEs ** objPDUWLANMeasConfigNameItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_WUS_Assistance_Information_ExtIEs( SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_WUS_Assistance_Information_ExtIEs( SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs);
void __si_amf_debug_PDU_WUS_Assistance_Information_ExtIEs( char * key, SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs * objPDUWUS_Assistance_Information_ExtIEs, int lvl);
int __si_amf_Decode_PDU_WUS_Assistance_Information_ExtIEs( SI_AMF_DT_PDU_WUS_Assistance_Information_ExtIEs ** objPDUWUS_Assistance_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_XnExtTLA_Item_ExtIEs( SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs * objPDUXnExtTLA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_XnExtTLA_Item_ExtIEs( SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs * objPDUXnExtTLA_Item_ExtIEs);
void __si_amf_debug_PDU_XnExtTLA_Item_ExtIEs( char * key, SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs * objPDUXnExtTLA_Item_ExtIEs, int lvl);
int __si_amf_Decode_PDU_XnExtTLA_Item_ExtIEs( SI_AMF_DT_PDU_XnExtTLA_Item_ExtIEs ** objPDUXnExtTLA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_XnTNLConfigurationInfo_ExtIEs( SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs * objPDUXnTNLConfigurationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_XnTNLConfigurationInfo_ExtIEs( SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs * objPDUXnTNLConfigurationInfo_ExtIEs);
void __si_amf_debug_PDU_XnTNLConfigurationInfo_ExtIEs( char * key, SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs * objPDUXnTNLConfigurationInfo_ExtIEs, int lvl);
int __si_amf_Decode_PDU_XnTNLConfigurationInfo_ExtIEs( SI_AMF_DT_PDU_XnTNLConfigurationInfo_ExtIEs ** objPDUXnTNLConfigurationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MBSSessionSetupOrModRequestTransfer( SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer * objPDUMBSSessionSetupOrModRequestTransfer, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MBSSessionSetupOrModRequestTransfer( SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer * objPDUMBSSessionSetupOrModRequestTransfer);
void __si_amf_debug_PDU_MBSSessionSetupOrModRequestTransfer( char * key, SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer * objPDUMBSSessionSetupOrModRequestTransfer, int lvl);
int __si_amf_Decode_PDU_MBSSessionSetupOrModRequestTransfer( SI_AMF_DT_PDU_MBSSessionSetupOrModRequestTransfer ** objPDUMBSSessionSetupOrModRequestTransfer, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_MulticastSessionUpdateRequestTransfer( SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer * objPDUMulticastSessionUpdateRequestTransfer, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_MulticastSessionUpdateRequestTransfer( SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer * objPDUMulticastSessionUpdateRequestTransfer);
void __si_amf_debug_PDU_MulticastSessionUpdateRequestTransfer( char * key, SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer * objPDUMulticastSessionUpdateRequestTransfer, int lvl);
int __si_amf_Decode_PDU_MulticastSessionUpdateRequestTransfer( SI_AMF_DT_PDU_MulticastSessionUpdateRequestTransfer ** objPDUMulticastSessionUpdateRequestTransfer, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer * objPDUPDUSessionResourceModifyRequestTransfer, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer * objPDUPDUSessionResourceModifyRequestTransfer);
void __si_amf_debug_PDU_PDUSessionResourceModifyRequestTransfer( char * key, SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer * objPDUPDUSessionResourceModifyRequestTransfer, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceModifyRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceModifyRequestTransfer ** objPDUPDUSessionResourceModifyRequestTransfer, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8361 NonEP-Decode 
int __si_amf_Encode_PDU_PDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer * objPDUPDUSessionResourceSetupRequestTransfer, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_amf_memfree_PDU_PDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer * objPDUPDUSessionResourceSetupRequestTransfer);
void __si_amf_debug_PDU_PDUSessionResourceSetupRequestTransfer( char * key, SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer * objPDUPDUSessionResourceSetupRequestTransfer, int lvl);
int __si_amf_Decode_PDU_PDUSessionResourceSetupRequestTransfer( SI_AMF_DT_PDU_PDUSessionResourceSetupRequestTransfer ** objPDUPDUSessionResourceSetupRequestTransfer, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

// ELEMENTARY-PROCEDURE = [0] aMFConfigurationUpdate  L:8387
// ProcedureCode = 0
// ProcedureCodeName = id-AMFConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_AMFConfigurationUpdate( SI_AMF_DT_PDU_AMFConfigurationUpdate * objPDUAMFConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_AMFConfigurationUpdate( SI_AMF_DT_PDU_AMFConfigurationUpdate * objPDUAMFConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_AMFConfigurationUpdate( SI_AMF_DT_PDU_AMFConfigurationUpdate * objPDUAMFConfigurationUpdate);

int __si_amf_memfree_pdu_AMFConfigurationUpdate( SI_AMF_DT_PDU_AMFConfigurationUpdate * objPDUAMFConfigurationUpdate);



// ELEMENTARY-PROCEDURE = [0] aMFConfigurationUpdate  L:8387
// ProcedureCode = 0
// ProcedureCodeName = id-AMFConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_AMFConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge * objPDUAMFConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_AMFConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge * objPDUAMFConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_AMFConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge * objPDUAMFConfigurationUpdateAcknowledge);

int __si_amf_memfree_pdu_AMFConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_AMFConfigurationUpdateAcknowledge * objPDUAMFConfigurationUpdateAcknowledge);



// ELEMENTARY-PROCEDURE = [0] aMFConfigurationUpdate  L:8387
// ProcedureCode = 0
// ProcedureCodeName = id-AMFConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_AMFConfigurationUpdateFailure( SI_AMF_DT_PDU_AMFConfigurationUpdateFailure * objPDUAMFConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_AMFConfigurationUpdateFailure( SI_AMF_DT_PDU_AMFConfigurationUpdateFailure * objPDUAMFConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_AMFConfigurationUpdateFailure( SI_AMF_DT_PDU_AMFConfigurationUpdateFailure * objPDUAMFConfigurationUpdateFailure);

int __si_amf_memfree_pdu_AMFConfigurationUpdateFailure( SI_AMF_DT_PDU_AMFConfigurationUpdateFailure * objPDUAMFConfigurationUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] aMFCPRelocationIndication  L:8387
// ProcedureCode = 64
// ProcedureCodeName = id-AMFCPRelocationIndication
// Criticality = reject

int __si_amf_encode_pdu_AMFCPRelocationIndication( SI_AMF_DT_PDU_AMFCPRelocationIndication * objPDUAMFCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_AMFCPRelocationIndication( SI_AMF_DT_PDU_AMFCPRelocationIndication * objPDUAMFCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_AMFCPRelocationIndication( SI_AMF_DT_PDU_AMFCPRelocationIndication * objPDUAMFCPRelocationIndication);

int __si_amf_memfree_pdu_AMFCPRelocationIndication( SI_AMF_DT_PDU_AMFCPRelocationIndication * objPDUAMFCPRelocationIndication);



// ELEMENTARY-PROCEDURE = [0] aMFStatusIndication  L:8387
// ProcedureCode = 1
// ProcedureCodeName = id-AMFStatusIndication
// Criticality = ignore

int __si_amf_encode_pdu_AMFStatusIndication( SI_AMF_DT_PDU_AMFStatusIndication * objPDUAMFStatusIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_AMFStatusIndication( SI_AMF_DT_PDU_AMFStatusIndication * objPDUAMFStatusIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_AMFStatusIndication( SI_AMF_DT_PDU_AMFStatusIndication * objPDUAMFStatusIndication);

int __si_amf_memfree_pdu_AMFStatusIndication( SI_AMF_DT_PDU_AMFStatusIndication * objPDUAMFStatusIndication);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionModification  L:8387
// ProcedureCode = 66
// ProcedureCodeName = id-BroadcastSessionModification
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionModificationRequest( SI_AMF_DT_PDU_BroadcastSessionModificationRequest * objPDUBroadcastSessionModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionModificationRequest( SI_AMF_DT_PDU_BroadcastSessionModificationRequest * objPDUBroadcastSessionModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionModificationRequest( SI_AMF_DT_PDU_BroadcastSessionModificationRequest * objPDUBroadcastSessionModificationRequest);

int __si_amf_memfree_pdu_BroadcastSessionModificationRequest( SI_AMF_DT_PDU_BroadcastSessionModificationRequest * objPDUBroadcastSessionModificationRequest);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionModification  L:8387
// ProcedureCode = 66
// ProcedureCodeName = id-BroadcastSessionModification
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionModificationResponse( SI_AMF_DT_PDU_BroadcastSessionModificationResponse * objPDUBroadcastSessionModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionModificationResponse( SI_AMF_DT_PDU_BroadcastSessionModificationResponse * objPDUBroadcastSessionModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionModificationResponse( SI_AMF_DT_PDU_BroadcastSessionModificationResponse * objPDUBroadcastSessionModificationResponse);

int __si_amf_memfree_pdu_BroadcastSessionModificationResponse( SI_AMF_DT_PDU_BroadcastSessionModificationResponse * objPDUBroadcastSessionModificationResponse);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionModification  L:8387
// ProcedureCode = 66
// ProcedureCodeName = id-BroadcastSessionModification
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionModificationFailure( SI_AMF_DT_PDU_BroadcastSessionModificationFailure * objPDUBroadcastSessionModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionModificationFailure( SI_AMF_DT_PDU_BroadcastSessionModificationFailure * objPDUBroadcastSessionModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionModificationFailure( SI_AMF_DT_PDU_BroadcastSessionModificationFailure * objPDUBroadcastSessionModificationFailure);

int __si_amf_memfree_pdu_BroadcastSessionModificationFailure( SI_AMF_DT_PDU_BroadcastSessionModificationFailure * objPDUBroadcastSessionModificationFailure);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionRelease  L:8387
// ProcedureCode = 67
// ProcedureCodeName = id-BroadcastSessionRelease
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionReleaseRequest( SI_AMF_DT_PDU_BroadcastSessionReleaseRequest * objPDUBroadcastSessionReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionReleaseRequest( SI_AMF_DT_PDU_BroadcastSessionReleaseRequest * objPDUBroadcastSessionReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionReleaseRequest( SI_AMF_DT_PDU_BroadcastSessionReleaseRequest * objPDUBroadcastSessionReleaseRequest);

int __si_amf_memfree_pdu_BroadcastSessionReleaseRequest( SI_AMF_DT_PDU_BroadcastSessionReleaseRequest * objPDUBroadcastSessionReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionRelease  L:8387
// ProcedureCode = 67
// ProcedureCodeName = id-BroadcastSessionRelease
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionReleaseResponse( SI_AMF_DT_PDU_BroadcastSessionReleaseResponse * objPDUBroadcastSessionReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionReleaseResponse( SI_AMF_DT_PDU_BroadcastSessionReleaseResponse * objPDUBroadcastSessionReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionReleaseResponse( SI_AMF_DT_PDU_BroadcastSessionReleaseResponse * objPDUBroadcastSessionReleaseResponse);

int __si_amf_memfree_pdu_BroadcastSessionReleaseResponse( SI_AMF_DT_PDU_BroadcastSessionReleaseResponse * objPDUBroadcastSessionReleaseResponse);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionReleaseRequired  L:8387
// ProcedureCode = 75
// ProcedureCodeName = id-BroadcastSessionReleaseRequired
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionReleaseRequired( SI_AMF_DT_PDU_BroadcastSessionReleaseRequired * objPDUBroadcastSessionReleaseRequired, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionReleaseRequired( SI_AMF_DT_PDU_BroadcastSessionReleaseRequired * objPDUBroadcastSessionReleaseRequired, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionReleaseRequired( SI_AMF_DT_PDU_BroadcastSessionReleaseRequired * objPDUBroadcastSessionReleaseRequired);

int __si_amf_memfree_pdu_BroadcastSessionReleaseRequired( SI_AMF_DT_PDU_BroadcastSessionReleaseRequired * objPDUBroadcastSessionReleaseRequired);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionSetup  L:8387
// ProcedureCode = 68
// ProcedureCodeName = id-BroadcastSessionSetup
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionSetupRequest( SI_AMF_DT_PDU_BroadcastSessionSetupRequest * objPDUBroadcastSessionSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionSetupRequest( SI_AMF_DT_PDU_BroadcastSessionSetupRequest * objPDUBroadcastSessionSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionSetupRequest( SI_AMF_DT_PDU_BroadcastSessionSetupRequest * objPDUBroadcastSessionSetupRequest);

int __si_amf_memfree_pdu_BroadcastSessionSetupRequest( SI_AMF_DT_PDU_BroadcastSessionSetupRequest * objPDUBroadcastSessionSetupRequest);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionSetup  L:8387
// ProcedureCode = 68
// ProcedureCodeName = id-BroadcastSessionSetup
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionSetupResponse( SI_AMF_DT_PDU_BroadcastSessionSetupResponse * objPDUBroadcastSessionSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionSetupResponse( SI_AMF_DT_PDU_BroadcastSessionSetupResponse * objPDUBroadcastSessionSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionSetupResponse( SI_AMF_DT_PDU_BroadcastSessionSetupResponse * objPDUBroadcastSessionSetupResponse);

int __si_amf_memfree_pdu_BroadcastSessionSetupResponse( SI_AMF_DT_PDU_BroadcastSessionSetupResponse * objPDUBroadcastSessionSetupResponse);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionSetup  L:8387
// ProcedureCode = 68
// ProcedureCodeName = id-BroadcastSessionSetup
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionSetupFailure( SI_AMF_DT_PDU_BroadcastSessionSetupFailure * objPDUBroadcastSessionSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionSetupFailure( SI_AMF_DT_PDU_BroadcastSessionSetupFailure * objPDUBroadcastSessionSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionSetupFailure( SI_AMF_DT_PDU_BroadcastSessionSetupFailure * objPDUBroadcastSessionSetupFailure);

int __si_amf_memfree_pdu_BroadcastSessionSetupFailure( SI_AMF_DT_PDU_BroadcastSessionSetupFailure * objPDUBroadcastSessionSetupFailure);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionTransport  L:8387
// ProcedureCode = 80
// ProcedureCodeName = id-BroadcastSessionTransport
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionTransportRequest( SI_AMF_DT_PDU_BroadcastSessionTransportRequest * objPDUBroadcastSessionTransportRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionTransportRequest( SI_AMF_DT_PDU_BroadcastSessionTransportRequest * objPDUBroadcastSessionTransportRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionTransportRequest( SI_AMF_DT_PDU_BroadcastSessionTransportRequest * objPDUBroadcastSessionTransportRequest);

int __si_amf_memfree_pdu_BroadcastSessionTransportRequest( SI_AMF_DT_PDU_BroadcastSessionTransportRequest * objPDUBroadcastSessionTransportRequest);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionTransport  L:8387
// ProcedureCode = 80
// ProcedureCodeName = id-BroadcastSessionTransport
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionTransportResponse( SI_AMF_DT_PDU_BroadcastSessionTransportResponse * objPDUBroadcastSessionTransportResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionTransportResponse( SI_AMF_DT_PDU_BroadcastSessionTransportResponse * objPDUBroadcastSessionTransportResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionTransportResponse( SI_AMF_DT_PDU_BroadcastSessionTransportResponse * objPDUBroadcastSessionTransportResponse);

int __si_amf_memfree_pdu_BroadcastSessionTransportResponse( SI_AMF_DT_PDU_BroadcastSessionTransportResponse * objPDUBroadcastSessionTransportResponse);



// ELEMENTARY-PROCEDURE = [0] broadcastSessionTransport  L:8387
// ProcedureCode = 80
// ProcedureCodeName = id-BroadcastSessionTransport
// Criticality = reject

int __si_amf_encode_pdu_BroadcastSessionTransportFailure( SI_AMF_DT_PDU_BroadcastSessionTransportFailure * objPDUBroadcastSessionTransportFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_BroadcastSessionTransportFailure( SI_AMF_DT_PDU_BroadcastSessionTransportFailure * objPDUBroadcastSessionTransportFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_BroadcastSessionTransportFailure( SI_AMF_DT_PDU_BroadcastSessionTransportFailure * objPDUBroadcastSessionTransportFailure);

int __si_amf_memfree_pdu_BroadcastSessionTransportFailure( SI_AMF_DT_PDU_BroadcastSessionTransportFailure * objPDUBroadcastSessionTransportFailure);



// ELEMENTARY-PROCEDURE = [0] cellTrafficTrace  L:8387
// ProcedureCode = 2
// ProcedureCodeName = id-CellTrafficTrace
// Criticality = ignore

int __si_amf_encode_pdu_CellTrafficTrace( SI_AMF_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_CellTrafficTrace( SI_AMF_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_CellTrafficTrace( SI_AMF_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);

int __si_amf_memfree_pdu_CellTrafficTrace( SI_AMF_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);



// ELEMENTARY-PROCEDURE = [0] connectionEstablishmentIndication  L:8387
// ProcedureCode = 65
// ProcedureCodeName = id-ConnectionEstablishmentIndication
// Criticality = reject

int __si_amf_encode_pdu_ConnectionEstablishmentIndication( SI_AMF_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_ConnectionEstablishmentIndication( SI_AMF_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_ConnectionEstablishmentIndication( SI_AMF_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication);

int __si_amf_memfree_pdu_ConnectionEstablishmentIndication( SI_AMF_DT_PDU_ConnectionEstablishmentIndication * objPDUConnectionEstablishmentIndication);



// ELEMENTARY-PROCEDURE = [0] deactivateTrace  L:8387
// ProcedureCode = 3
// ProcedureCodeName = id-DeactivateTrace
// Criticality = ignore

int __si_amf_encode_pdu_DeactivateTrace( SI_AMF_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DeactivateTrace( SI_AMF_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DeactivateTrace( SI_AMF_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);

int __si_amf_memfree_pdu_DeactivateTrace( SI_AMF_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);



// ELEMENTARY-PROCEDURE = [0] distributionSetup  L:8387
// ProcedureCode = 69
// ProcedureCodeName = id-DistributionSetup
// Criticality = reject

int __si_amf_encode_pdu_DistributionSetupRequest( SI_AMF_DT_PDU_DistributionSetupRequest * objPDUDistributionSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DistributionSetupRequest( SI_AMF_DT_PDU_DistributionSetupRequest * objPDUDistributionSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DistributionSetupRequest( SI_AMF_DT_PDU_DistributionSetupRequest * objPDUDistributionSetupRequest);

int __si_amf_memfree_pdu_DistributionSetupRequest( SI_AMF_DT_PDU_DistributionSetupRequest * objPDUDistributionSetupRequest);



// ELEMENTARY-PROCEDURE = [0] distributionSetup  L:8387
// ProcedureCode = 69
// ProcedureCodeName = id-DistributionSetup
// Criticality = reject

int __si_amf_encode_pdu_DistributionSetupResponse( SI_AMF_DT_PDU_DistributionSetupResponse * objPDUDistributionSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DistributionSetupResponse( SI_AMF_DT_PDU_DistributionSetupResponse * objPDUDistributionSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DistributionSetupResponse( SI_AMF_DT_PDU_DistributionSetupResponse * objPDUDistributionSetupResponse);

int __si_amf_memfree_pdu_DistributionSetupResponse( SI_AMF_DT_PDU_DistributionSetupResponse * objPDUDistributionSetupResponse);



// ELEMENTARY-PROCEDURE = [0] distributionSetup  L:8387
// ProcedureCode = 69
// ProcedureCodeName = id-DistributionSetup
// Criticality = reject

int __si_amf_encode_pdu_DistributionSetupFailure( SI_AMF_DT_PDU_DistributionSetupFailure * objPDUDistributionSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DistributionSetupFailure( SI_AMF_DT_PDU_DistributionSetupFailure * objPDUDistributionSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DistributionSetupFailure( SI_AMF_DT_PDU_DistributionSetupFailure * objPDUDistributionSetupFailure);

int __si_amf_memfree_pdu_DistributionSetupFailure( SI_AMF_DT_PDU_DistributionSetupFailure * objPDUDistributionSetupFailure);



// ELEMENTARY-PROCEDURE = [0] distributionRelease  L:8387
// ProcedureCode = 70
// ProcedureCodeName = id-DistributionRelease
// Criticality = reject

int __si_amf_encode_pdu_DistributionReleaseRequest( SI_AMF_DT_PDU_DistributionReleaseRequest * objPDUDistributionReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DistributionReleaseRequest( SI_AMF_DT_PDU_DistributionReleaseRequest * objPDUDistributionReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DistributionReleaseRequest( SI_AMF_DT_PDU_DistributionReleaseRequest * objPDUDistributionReleaseRequest);

int __si_amf_memfree_pdu_DistributionReleaseRequest( SI_AMF_DT_PDU_DistributionReleaseRequest * objPDUDistributionReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] distributionRelease  L:8387
// ProcedureCode = 70
// ProcedureCodeName = id-DistributionRelease
// Criticality = reject

int __si_amf_encode_pdu_DistributionReleaseResponse( SI_AMF_DT_PDU_DistributionReleaseResponse * objPDUDistributionReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DistributionReleaseResponse( SI_AMF_DT_PDU_DistributionReleaseResponse * objPDUDistributionReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DistributionReleaseResponse( SI_AMF_DT_PDU_DistributionReleaseResponse * objPDUDistributionReleaseResponse);

int __si_amf_memfree_pdu_DistributionReleaseResponse( SI_AMF_DT_PDU_DistributionReleaseResponse * objPDUDistributionReleaseResponse);



// ELEMENTARY-PROCEDURE = [0] downlinkNASTransport  L:8387
// ProcedureCode = 4
// ProcedureCodeName = id-DownlinkNASTransport
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkNASTransport( SI_AMF_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkNASTransport( SI_AMF_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkNASTransport( SI_AMF_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport);

int __si_amf_memfree_pdu_DownlinkNASTransport( SI_AMF_DT_PDU_DownlinkNASTransport * objPDUDownlinkNASTransport);



// ELEMENTARY-PROCEDURE = [0] downlinkNonUEAssociatedNRPPaTransport  L:8387
// ProcedureCode = 5
// ProcedureCodeName = id-DownlinkNonUEAssociatedNRPPaTransport
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport * objPDUDownlinkNonUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport * objPDUDownlinkNonUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport * objPDUDownlinkNonUEAssociatedNRPPaTransport);

int __si_amf_memfree_pdu_DownlinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkNonUEAssociatedNRPPaTransport * objPDUDownlinkNonUEAssociatedNRPPaTransport);



// ELEMENTARY-PROCEDURE = [0] downlinkRANConfigurationTransfer  L:8387
// ProcedureCode = 6
// ProcedureCodeName = id-DownlinkRANConfigurationTransfer
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkRANConfigurationTransfer( SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer * objPDUDownlinkRANConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkRANConfigurationTransfer( SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer * objPDUDownlinkRANConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkRANConfigurationTransfer( SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer * objPDUDownlinkRANConfigurationTransfer);

int __si_amf_memfree_pdu_DownlinkRANConfigurationTransfer( SI_AMF_DT_PDU_DownlinkRANConfigurationTransfer * objPDUDownlinkRANConfigurationTransfer);



// ELEMENTARY-PROCEDURE = [0] downlinkRANEarlyStatusTransfer  L:8387
// ProcedureCode = 63
// ProcedureCodeName = id-DownlinkRANEarlyStatusTransfer
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer * objPDUDownlinkRANEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer * objPDUDownlinkRANEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer * objPDUDownlinkRANEarlyStatusTransfer);

int __si_amf_memfree_pdu_DownlinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_DownlinkRANEarlyStatusTransfer * objPDUDownlinkRANEarlyStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] downlinkRANStatusTransfer  L:8387
// ProcedureCode = 7
// ProcedureCodeName = id-DownlinkRANStatusTransfer
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkRANStatusTransfer( SI_AMF_DT_PDU_DownlinkRANStatusTransfer * objPDUDownlinkRANStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkRANStatusTransfer( SI_AMF_DT_PDU_DownlinkRANStatusTransfer * objPDUDownlinkRANStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkRANStatusTransfer( SI_AMF_DT_PDU_DownlinkRANStatusTransfer * objPDUDownlinkRANStatusTransfer);

int __si_amf_memfree_pdu_DownlinkRANStatusTransfer( SI_AMF_DT_PDU_DownlinkRANStatusTransfer * objPDUDownlinkRANStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] downlinkUEAssociatedNRPPaTransport  L:8387
// ProcedureCode = 8
// ProcedureCodeName = id-DownlinkUEAssociatedNRPPaTransport
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport * objPDUDownlinkUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport * objPDUDownlinkUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport * objPDUDownlinkUEAssociatedNRPPaTransport);

int __si_amf_memfree_pdu_DownlinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_DownlinkUEAssociatedNRPPaTransport * objPDUDownlinkUEAssociatedNRPPaTransport);



// ELEMENTARY-PROCEDURE = [0] errorIndication  L:8387
// ProcedureCode = 9
// ProcedureCodeName = id-ErrorIndication
// Criticality = ignore

int __si_amf_encode_pdu_ErrorIndication( SI_AMF_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_ErrorIndication( SI_AMF_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_ErrorIndication( SI_AMF_DT_PDU_ErrorIndication * objPDUErrorIndication);

int __si_amf_memfree_pdu_ErrorIndication( SI_AMF_DT_PDU_ErrorIndication * objPDUErrorIndication);



// ELEMENTARY-PROCEDURE = [0] handoverCancel  L:8387
// ProcedureCode = 10
// ProcedureCodeName = id-HandoverCancel
// Criticality = reject

int __si_amf_encode_pdu_HandoverCancel( SI_AMF_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverCancel( SI_AMF_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverCancel( SI_AMF_DT_PDU_HandoverCancel * objPDUHandoverCancel);

int __si_amf_memfree_pdu_HandoverCancel( SI_AMF_DT_PDU_HandoverCancel * objPDUHandoverCancel);



// ELEMENTARY-PROCEDURE = [0] handoverCancel  L:8387
// ProcedureCode = 10
// ProcedureCodeName = id-HandoverCancel
// Criticality = reject

int __si_amf_encode_pdu_HandoverCancelAcknowledge( SI_AMF_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverCancelAcknowledge( SI_AMF_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverCancelAcknowledge( SI_AMF_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge);

int __si_amf_memfree_pdu_HandoverCancelAcknowledge( SI_AMF_DT_PDU_HandoverCancelAcknowledge * objPDUHandoverCancelAcknowledge);



// ELEMENTARY-PROCEDURE = [0] handoverNotification  L:8387
// ProcedureCode = 11
// ProcedureCodeName = id-HandoverNotification
// Criticality = ignore

int __si_amf_encode_pdu_HandoverNotify( SI_AMF_DT_PDU_HandoverNotify * objPDUHandoverNotify, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverNotify( SI_AMF_DT_PDU_HandoverNotify * objPDUHandoverNotify, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverNotify( SI_AMF_DT_PDU_HandoverNotify * objPDUHandoverNotify);

int __si_amf_memfree_pdu_HandoverNotify( SI_AMF_DT_PDU_HandoverNotify * objPDUHandoverNotify);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8387
// ProcedureCode = 12
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_amf_encode_pdu_HandoverRequired( SI_AMF_DT_PDU_HandoverRequired * objPDUHandoverRequired, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverRequired( SI_AMF_DT_PDU_HandoverRequired * objPDUHandoverRequired, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverRequired( SI_AMF_DT_PDU_HandoverRequired * objPDUHandoverRequired);

int __si_amf_memfree_pdu_HandoverRequired( SI_AMF_DT_PDU_HandoverRequired * objPDUHandoverRequired);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8387
// ProcedureCode = 12
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_amf_encode_pdu_HandoverCommand( SI_AMF_DT_PDU_HandoverCommand * objPDUHandoverCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverCommand( SI_AMF_DT_PDU_HandoverCommand * objPDUHandoverCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverCommand( SI_AMF_DT_PDU_HandoverCommand * objPDUHandoverCommand);

int __si_amf_memfree_pdu_HandoverCommand( SI_AMF_DT_PDU_HandoverCommand * objPDUHandoverCommand);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation  L:8387
// ProcedureCode = 12
// ProcedureCodeName = id-HandoverPreparation
// Criticality = reject

int __si_amf_encode_pdu_HandoverPreparationFailure( SI_AMF_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverPreparationFailure( SI_AMF_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverPreparationFailure( SI_AMF_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);

int __si_amf_memfree_pdu_HandoverPreparationFailure( SI_AMF_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8387
// ProcedureCode = 13
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_amf_encode_pdu_HandoverRequest( SI_AMF_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverRequest( SI_AMF_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverRequest( SI_AMF_DT_PDU_HandoverRequest * objPDUHandoverRequest);

int __si_amf_memfree_pdu_HandoverRequest( SI_AMF_DT_PDU_HandoverRequest * objPDUHandoverRequest);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8387
// ProcedureCode = 13
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_amf_encode_pdu_HandoverRequestAcknowledge( SI_AMF_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverRequestAcknowledge( SI_AMF_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverRequestAcknowledge( SI_AMF_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);

int __si_amf_memfree_pdu_HandoverRequestAcknowledge( SI_AMF_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] handoverResourceAllocation  L:8387
// ProcedureCode = 13
// ProcedureCodeName = id-HandoverResourceAllocation
// Criticality = reject

int __si_amf_encode_pdu_HandoverFailure( SI_AMF_DT_PDU_HandoverFailure * objPDUHandoverFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverFailure( SI_AMF_DT_PDU_HandoverFailure * objPDUHandoverFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverFailure( SI_AMF_DT_PDU_HandoverFailure * objPDUHandoverFailure);

int __si_amf_memfree_pdu_HandoverFailure( SI_AMF_DT_PDU_HandoverFailure * objPDUHandoverFailure);



// ELEMENTARY-PROCEDURE = [0] handoverSuccess  L:8387
// ProcedureCode = 61
// ProcedureCodeName = id-HandoverSuccess
// Criticality = ignore

int __si_amf_encode_pdu_HandoverSuccess( SI_AMF_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_HandoverSuccess( SI_AMF_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_HandoverSuccess( SI_AMF_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);

int __si_amf_memfree_pdu_HandoverSuccess( SI_AMF_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8387
// ProcedureCode = 14
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_amf_encode_pdu_InitialContextSetupRequest( SI_AMF_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_InitialContextSetupRequest( SI_AMF_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_InitialContextSetupRequest( SI_AMF_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest);

int __si_amf_memfree_pdu_InitialContextSetupRequest( SI_AMF_DT_PDU_InitialContextSetupRequest * objPDUInitialContextSetupRequest);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8387
// ProcedureCode = 14
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_amf_encode_pdu_InitialContextSetupResponse( SI_AMF_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_InitialContextSetupResponse( SI_AMF_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_InitialContextSetupResponse( SI_AMF_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse);

int __si_amf_memfree_pdu_InitialContextSetupResponse( SI_AMF_DT_PDU_InitialContextSetupResponse * objPDUInitialContextSetupResponse);



// ELEMENTARY-PROCEDURE = [0] initialContextSetup  L:8387
// ProcedureCode = 14
// ProcedureCodeName = id-InitialContextSetup
// Criticality = reject

int __si_amf_encode_pdu_InitialContextSetupFailure( SI_AMF_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_InitialContextSetupFailure( SI_AMF_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_InitialContextSetupFailure( SI_AMF_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure);

int __si_amf_memfree_pdu_InitialContextSetupFailure( SI_AMF_DT_PDU_InitialContextSetupFailure * objPDUInitialContextSetupFailure);



// ELEMENTARY-PROCEDURE = [0] initialUEMessage  L:8387
// ProcedureCode = 15
// ProcedureCodeName = id-InitialUEMessage
// Criticality = ignore

int __si_amf_encode_pdu_InitialUEMessage( SI_AMF_DT_PDU_InitialUEMessage * objPDUInitialUEMessage, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_InitialUEMessage( SI_AMF_DT_PDU_InitialUEMessage * objPDUInitialUEMessage, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_InitialUEMessage( SI_AMF_DT_PDU_InitialUEMessage * objPDUInitialUEMessage);

int __si_amf_memfree_pdu_InitialUEMessage( SI_AMF_DT_PDU_InitialUEMessage * objPDUInitialUEMessage);



// ELEMENTARY-PROCEDURE = [0] locationReport  L:8387
// ProcedureCode = 18
// ProcedureCodeName = id-LocationReport
// Criticality = ignore

int __si_amf_encode_pdu_LocationReport( SI_AMF_DT_PDU_LocationReport * objPDULocationReport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_LocationReport( SI_AMF_DT_PDU_LocationReport * objPDULocationReport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_LocationReport( SI_AMF_DT_PDU_LocationReport * objPDULocationReport);

int __si_amf_memfree_pdu_LocationReport( SI_AMF_DT_PDU_LocationReport * objPDULocationReport);



// ELEMENTARY-PROCEDURE = [0] locationReportingControl  L:8387
// ProcedureCode = 16
// ProcedureCodeName = id-LocationReportingControl
// Criticality = ignore

int __si_amf_encode_pdu_LocationReportingControl( SI_AMF_DT_PDU_LocationReportingControl * objPDULocationReportingControl, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_LocationReportingControl( SI_AMF_DT_PDU_LocationReportingControl * objPDULocationReportingControl, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_LocationReportingControl( SI_AMF_DT_PDU_LocationReportingControl * objPDULocationReportingControl);

int __si_amf_memfree_pdu_LocationReportingControl( SI_AMF_DT_PDU_LocationReportingControl * objPDULocationReportingControl);



// ELEMENTARY-PROCEDURE = [0] locationReportingFailureIndication  L:8387
// ProcedureCode = 17
// ProcedureCodeName = id-LocationReportingFailureIndication
// Criticality = ignore

int __si_amf_encode_pdu_LocationReportingFailureIndication( SI_AMF_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_LocationReportingFailureIndication( SI_AMF_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_LocationReportingFailureIndication( SI_AMF_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication);

int __si_amf_memfree_pdu_LocationReportingFailureIndication( SI_AMF_DT_PDU_LocationReportingFailureIndication * objPDULocationReportingFailureIndication);



// ELEMENTARY-PROCEDURE = [0] mTCommunicationHandling  L:8387
// ProcedureCode = 78
// ProcedureCodeName = id-MTCommunicationHandling
// Criticality = reject

int __si_amf_encode_pdu_MTCommunicationHandlingRequest( SI_AMF_DT_PDU_MTCommunicationHandlingRequest * objPDUMTCommunicationHandlingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MTCommunicationHandlingRequest( SI_AMF_DT_PDU_MTCommunicationHandlingRequest * objPDUMTCommunicationHandlingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MTCommunicationHandlingRequest( SI_AMF_DT_PDU_MTCommunicationHandlingRequest * objPDUMTCommunicationHandlingRequest);

int __si_amf_memfree_pdu_MTCommunicationHandlingRequest( SI_AMF_DT_PDU_MTCommunicationHandlingRequest * objPDUMTCommunicationHandlingRequest);



// ELEMENTARY-PROCEDURE = [0] mTCommunicationHandling  L:8387
// ProcedureCode = 78
// ProcedureCodeName = id-MTCommunicationHandling
// Criticality = reject

int __si_amf_encode_pdu_MTCommunicationHandlingResponse( SI_AMF_DT_PDU_MTCommunicationHandlingResponse * objPDUMTCommunicationHandlingResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MTCommunicationHandlingResponse( SI_AMF_DT_PDU_MTCommunicationHandlingResponse * objPDUMTCommunicationHandlingResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MTCommunicationHandlingResponse( SI_AMF_DT_PDU_MTCommunicationHandlingResponse * objPDUMTCommunicationHandlingResponse);

int __si_amf_memfree_pdu_MTCommunicationHandlingResponse( SI_AMF_DT_PDU_MTCommunicationHandlingResponse * objPDUMTCommunicationHandlingResponse);



// ELEMENTARY-PROCEDURE = [0] mTCommunicationHandling  L:8387
// ProcedureCode = 78
// ProcedureCodeName = id-MTCommunicationHandling
// Criticality = reject

int __si_amf_encode_pdu_MTCommunicationHandlingFailure( SI_AMF_DT_PDU_MTCommunicationHandlingFailure * objPDUMTCommunicationHandlingFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MTCommunicationHandlingFailure( SI_AMF_DT_PDU_MTCommunicationHandlingFailure * objPDUMTCommunicationHandlingFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MTCommunicationHandlingFailure( SI_AMF_DT_PDU_MTCommunicationHandlingFailure * objPDUMTCommunicationHandlingFailure);

int __si_amf_memfree_pdu_MTCommunicationHandlingFailure( SI_AMF_DT_PDU_MTCommunicationHandlingFailure * objPDUMTCommunicationHandlingFailure);



// ELEMENTARY-PROCEDURE = [0] multicastSessionActivation  L:8387
// ProcedureCode = 71
// ProcedureCodeName = id-MulticastSessionActivation
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionActivationRequest( SI_AMF_DT_PDU_MulticastSessionActivationRequest * objPDUMulticastSessionActivationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionActivationRequest( SI_AMF_DT_PDU_MulticastSessionActivationRequest * objPDUMulticastSessionActivationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionActivationRequest( SI_AMF_DT_PDU_MulticastSessionActivationRequest * objPDUMulticastSessionActivationRequest);

int __si_amf_memfree_pdu_MulticastSessionActivationRequest( SI_AMF_DT_PDU_MulticastSessionActivationRequest * objPDUMulticastSessionActivationRequest);



// ELEMENTARY-PROCEDURE = [0] multicastSessionActivation  L:8387
// ProcedureCode = 71
// ProcedureCodeName = id-MulticastSessionActivation
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionActivationResponse( SI_AMF_DT_PDU_MulticastSessionActivationResponse * objPDUMulticastSessionActivationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionActivationResponse( SI_AMF_DT_PDU_MulticastSessionActivationResponse * objPDUMulticastSessionActivationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionActivationResponse( SI_AMF_DT_PDU_MulticastSessionActivationResponse * objPDUMulticastSessionActivationResponse);

int __si_amf_memfree_pdu_MulticastSessionActivationResponse( SI_AMF_DT_PDU_MulticastSessionActivationResponse * objPDUMulticastSessionActivationResponse);



// ELEMENTARY-PROCEDURE = [0] multicastSessionActivation  L:8387
// ProcedureCode = 71
// ProcedureCodeName = id-MulticastSessionActivation
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionActivationFailure( SI_AMF_DT_PDU_MulticastSessionActivationFailure * objPDUMulticastSessionActivationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionActivationFailure( SI_AMF_DT_PDU_MulticastSessionActivationFailure * objPDUMulticastSessionActivationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionActivationFailure( SI_AMF_DT_PDU_MulticastSessionActivationFailure * objPDUMulticastSessionActivationFailure);

int __si_amf_memfree_pdu_MulticastSessionActivationFailure( SI_AMF_DT_PDU_MulticastSessionActivationFailure * objPDUMulticastSessionActivationFailure);



// ELEMENTARY-PROCEDURE = [0] multicastSessionDeactivation  L:8387
// ProcedureCode = 72
// ProcedureCodeName = id-MulticastSessionDeactivation
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionDeactivationRequest( SI_AMF_DT_PDU_MulticastSessionDeactivationRequest * objPDUMulticastSessionDeactivationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionDeactivationRequest( SI_AMF_DT_PDU_MulticastSessionDeactivationRequest * objPDUMulticastSessionDeactivationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionDeactivationRequest( SI_AMF_DT_PDU_MulticastSessionDeactivationRequest * objPDUMulticastSessionDeactivationRequest);

int __si_amf_memfree_pdu_MulticastSessionDeactivationRequest( SI_AMF_DT_PDU_MulticastSessionDeactivationRequest * objPDUMulticastSessionDeactivationRequest);



// ELEMENTARY-PROCEDURE = [0] multicastSessionDeactivation  L:8387
// ProcedureCode = 72
// ProcedureCodeName = id-MulticastSessionDeactivation
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionDeactivationResponse( SI_AMF_DT_PDU_MulticastSessionDeactivationResponse * objPDUMulticastSessionDeactivationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionDeactivationResponse( SI_AMF_DT_PDU_MulticastSessionDeactivationResponse * objPDUMulticastSessionDeactivationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionDeactivationResponse( SI_AMF_DT_PDU_MulticastSessionDeactivationResponse * objPDUMulticastSessionDeactivationResponse);

int __si_amf_memfree_pdu_MulticastSessionDeactivationResponse( SI_AMF_DT_PDU_MulticastSessionDeactivationResponse * objPDUMulticastSessionDeactivationResponse);



// ELEMENTARY-PROCEDURE = [0] multicastSessionUpdate  L:8387
// ProcedureCode = 73
// ProcedureCodeName = id-MulticastSessionUpdate
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionUpdateRequest( SI_AMF_DT_PDU_MulticastSessionUpdateRequest * objPDUMulticastSessionUpdateRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionUpdateRequest( SI_AMF_DT_PDU_MulticastSessionUpdateRequest * objPDUMulticastSessionUpdateRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionUpdateRequest( SI_AMF_DT_PDU_MulticastSessionUpdateRequest * objPDUMulticastSessionUpdateRequest);

int __si_amf_memfree_pdu_MulticastSessionUpdateRequest( SI_AMF_DT_PDU_MulticastSessionUpdateRequest * objPDUMulticastSessionUpdateRequest);



// ELEMENTARY-PROCEDURE = [0] multicastSessionUpdate  L:8387
// ProcedureCode = 73
// ProcedureCodeName = id-MulticastSessionUpdate
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionUpdateResponse( SI_AMF_DT_PDU_MulticastSessionUpdateResponse * objPDUMulticastSessionUpdateResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionUpdateResponse( SI_AMF_DT_PDU_MulticastSessionUpdateResponse * objPDUMulticastSessionUpdateResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionUpdateResponse( SI_AMF_DT_PDU_MulticastSessionUpdateResponse * objPDUMulticastSessionUpdateResponse);

int __si_amf_memfree_pdu_MulticastSessionUpdateResponse( SI_AMF_DT_PDU_MulticastSessionUpdateResponse * objPDUMulticastSessionUpdateResponse);



// ELEMENTARY-PROCEDURE = [0] multicastSessionUpdate  L:8387
// ProcedureCode = 73
// ProcedureCodeName = id-MulticastSessionUpdate
// Criticality = reject

int __si_amf_encode_pdu_MulticastSessionUpdateFailure( SI_AMF_DT_PDU_MulticastSessionUpdateFailure * objPDUMulticastSessionUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastSessionUpdateFailure( SI_AMF_DT_PDU_MulticastSessionUpdateFailure * objPDUMulticastSessionUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastSessionUpdateFailure( SI_AMF_DT_PDU_MulticastSessionUpdateFailure * objPDUMulticastSessionUpdateFailure);

int __si_amf_memfree_pdu_MulticastSessionUpdateFailure( SI_AMF_DT_PDU_MulticastSessionUpdateFailure * objPDUMulticastSessionUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] multicastGroupPaging  L:8387
// ProcedureCode = 74
// ProcedureCodeName = id-MulticastGroupPaging
// Criticality = ignore

int __si_amf_encode_pdu_MulticastGroupPaging( SI_AMF_DT_PDU_MulticastGroupPaging * objPDUMulticastGroupPaging, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_MulticastGroupPaging( SI_AMF_DT_PDU_MulticastGroupPaging * objPDUMulticastGroupPaging, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_MulticastGroupPaging( SI_AMF_DT_PDU_MulticastGroupPaging * objPDUMulticastGroupPaging);

int __si_amf_memfree_pdu_MulticastGroupPaging( SI_AMF_DT_PDU_MulticastGroupPaging * objPDUMulticastGroupPaging);



// ELEMENTARY-PROCEDURE = [0] nASNonDeliveryIndication  L:8387
// ProcedureCode = 19
// ProcedureCodeName = id-NASNonDeliveryIndication
// Criticality = ignore

int __si_amf_encode_pdu_NASNonDeliveryIndication( SI_AMF_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NASNonDeliveryIndication( SI_AMF_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NASNonDeliveryIndication( SI_AMF_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication);

int __si_amf_memfree_pdu_NASNonDeliveryIndication( SI_AMF_DT_PDU_NASNonDeliveryIndication * objPDUNASNonDeliveryIndication);



// ELEMENTARY-PROCEDURE = [0] nGReset  L:8387
// ProcedureCode = 20
// ProcedureCodeName = id-NGReset
// Criticality = reject

int __si_amf_encode_pdu_NGReset( SI_AMF_DT_PDU_NGReset * objPDUNGReset, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NGReset( SI_AMF_DT_PDU_NGReset * objPDUNGReset, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NGReset( SI_AMF_DT_PDU_NGReset * objPDUNGReset);

int __si_amf_memfree_pdu_NGReset( SI_AMF_DT_PDU_NGReset * objPDUNGReset);



// ELEMENTARY-PROCEDURE = [0] nGReset  L:8387
// ProcedureCode = 20
// ProcedureCodeName = id-NGReset
// Criticality = reject

int __si_amf_encode_pdu_NGResetAcknowledge( SI_AMF_DT_PDU_NGResetAcknowledge * objPDUNGResetAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NGResetAcknowledge( SI_AMF_DT_PDU_NGResetAcknowledge * objPDUNGResetAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NGResetAcknowledge( SI_AMF_DT_PDU_NGResetAcknowledge * objPDUNGResetAcknowledge);

int __si_amf_memfree_pdu_NGResetAcknowledge( SI_AMF_DT_PDU_NGResetAcknowledge * objPDUNGResetAcknowledge);



// ELEMENTARY-PROCEDURE = [0] nGSetup  L:8387
// ProcedureCode = 21
// ProcedureCodeName = id-NGSetup
// Criticality = reject

int __si_amf_encode_pdu_NGSetupRequest( SI_AMF_DT_PDU_NGSetupRequest * objPDUNGSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NGSetupRequest( SI_AMF_DT_PDU_NGSetupRequest * objPDUNGSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NGSetupRequest( SI_AMF_DT_PDU_NGSetupRequest * objPDUNGSetupRequest);

int __si_amf_memfree_pdu_NGSetupRequest( SI_AMF_DT_PDU_NGSetupRequest * objPDUNGSetupRequest);



// ELEMENTARY-PROCEDURE = [0] nGSetup  L:8387
// ProcedureCode = 21
// ProcedureCodeName = id-NGSetup
// Criticality = reject

int __si_amf_encode_pdu_NGSetupResponse( SI_AMF_DT_PDU_NGSetupResponse * objPDUNGSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NGSetupResponse( SI_AMF_DT_PDU_NGSetupResponse * objPDUNGSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NGSetupResponse( SI_AMF_DT_PDU_NGSetupResponse * objPDUNGSetupResponse);

int __si_amf_memfree_pdu_NGSetupResponse( SI_AMF_DT_PDU_NGSetupResponse * objPDUNGSetupResponse);



// ELEMENTARY-PROCEDURE = [0] nGSetup  L:8387
// ProcedureCode = 21
// ProcedureCodeName = id-NGSetup
// Criticality = reject

int __si_amf_encode_pdu_NGSetupFailure( SI_AMF_DT_PDU_NGSetupFailure * objPDUNGSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_NGSetupFailure( SI_AMF_DT_PDU_NGSetupFailure * objPDUNGSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_NGSetupFailure( SI_AMF_DT_PDU_NGSetupFailure * objPDUNGSetupFailure);

int __si_amf_memfree_pdu_NGSetupFailure( SI_AMF_DT_PDU_NGSetupFailure * objPDUNGSetupFailure);



// ELEMENTARY-PROCEDURE = [0] overloadStart  L:8387
// ProcedureCode = 22
// ProcedureCodeName = id-OverloadStart
// Criticality = ignore

int __si_amf_encode_pdu_OverloadStart( SI_AMF_DT_PDU_OverloadStart * objPDUOverloadStart, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_OverloadStart( SI_AMF_DT_PDU_OverloadStart * objPDUOverloadStart, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_OverloadStart( SI_AMF_DT_PDU_OverloadStart * objPDUOverloadStart);

int __si_amf_memfree_pdu_OverloadStart( SI_AMF_DT_PDU_OverloadStart * objPDUOverloadStart);



// ELEMENTARY-PROCEDURE = [0] overloadStop  L:8387
// ProcedureCode = 23
// ProcedureCodeName = id-OverloadStop
// Criticality = reject

int __si_amf_encode_pdu_OverloadStop( SI_AMF_DT_PDU_OverloadStop * objPDUOverloadStop, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_OverloadStop( SI_AMF_DT_PDU_OverloadStop * objPDUOverloadStop, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_OverloadStop( SI_AMF_DT_PDU_OverloadStop * objPDUOverloadStop);

int __si_amf_memfree_pdu_OverloadStop( SI_AMF_DT_PDU_OverloadStop * objPDUOverloadStop);



// ELEMENTARY-PROCEDURE = [0] paging  L:8387
// ProcedureCode = 24
// ProcedureCodeName = id-Paging
// Criticality = ignore

int __si_amf_encode_pdu_Paging( SI_AMF_DT_PDU_Paging * objPDUPaging, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_Paging( SI_AMF_DT_PDU_Paging * objPDUPaging, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_Paging( SI_AMF_DT_PDU_Paging * objPDUPaging);

int __si_amf_memfree_pdu_Paging( SI_AMF_DT_PDU_Paging * objPDUPaging);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8387
// ProcedureCode = 25
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_amf_encode_pdu_PathSwitchRequest( SI_AMF_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PathSwitchRequest( SI_AMF_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PathSwitchRequest( SI_AMF_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest);

int __si_amf_memfree_pdu_PathSwitchRequest( SI_AMF_DT_PDU_PathSwitchRequest * objPDUPathSwitchRequest);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8387
// ProcedureCode = 25
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_amf_encode_pdu_PathSwitchRequestAcknowledge( SI_AMF_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PathSwitchRequestAcknowledge( SI_AMF_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PathSwitchRequestAcknowledge( SI_AMF_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge);

int __si_amf_memfree_pdu_PathSwitchRequestAcknowledge( SI_AMF_DT_PDU_PathSwitchRequestAcknowledge * objPDUPathSwitchRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] pathSwitchRequest  L:8387
// ProcedureCode = 25
// ProcedureCodeName = id-PathSwitchRequest
// Criticality = reject

int __si_amf_encode_pdu_PathSwitchRequestFailure( SI_AMF_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PathSwitchRequestFailure( SI_AMF_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PathSwitchRequestFailure( SI_AMF_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure);

int __si_amf_memfree_pdu_PathSwitchRequestFailure( SI_AMF_DT_PDU_PathSwitchRequestFailure * objPDUPathSwitchRequestFailure);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceModify  L:8387
// ProcedureCode = 26
// ProcedureCodeName = id-PDUSessionResourceModify
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceModifyRequest( SI_AMF_DT_PDU_PDUSessionResourceModifyRequest * objPDUPDUSessionResourceModifyRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceModifyRequest( SI_AMF_DT_PDU_PDUSessionResourceModifyRequest * objPDUPDUSessionResourceModifyRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceModifyRequest( SI_AMF_DT_PDU_PDUSessionResourceModifyRequest * objPDUPDUSessionResourceModifyRequest);

int __si_amf_memfree_pdu_PDUSessionResourceModifyRequest( SI_AMF_DT_PDU_PDUSessionResourceModifyRequest * objPDUPDUSessionResourceModifyRequest);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceModify  L:8387
// ProcedureCode = 26
// ProcedureCodeName = id-PDUSessionResourceModify
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceModifyResponse( SI_AMF_DT_PDU_PDUSessionResourceModifyResponse * objPDUPDUSessionResourceModifyResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceModifyResponse( SI_AMF_DT_PDU_PDUSessionResourceModifyResponse * objPDUPDUSessionResourceModifyResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceModifyResponse( SI_AMF_DT_PDU_PDUSessionResourceModifyResponse * objPDUPDUSessionResourceModifyResponse);

int __si_amf_memfree_pdu_PDUSessionResourceModifyResponse( SI_AMF_DT_PDU_PDUSessionResourceModifyResponse * objPDUPDUSessionResourceModifyResponse);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceModifyIndication  L:8387
// ProcedureCode = 27
// ProcedureCodeName = id-PDUSessionResourceModifyIndication
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceModifyIndication( SI_AMF_DT_PDU_PDUSessionResourceModifyIndication * objPDUPDUSessionResourceModifyIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceModifyIndication( SI_AMF_DT_PDU_PDUSessionResourceModifyIndication * objPDUPDUSessionResourceModifyIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceModifyIndication( SI_AMF_DT_PDU_PDUSessionResourceModifyIndication * objPDUPDUSessionResourceModifyIndication);

int __si_amf_memfree_pdu_PDUSessionResourceModifyIndication( SI_AMF_DT_PDU_PDUSessionResourceModifyIndication * objPDUPDUSessionResourceModifyIndication);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceModifyIndication  L:8387
// ProcedureCode = 27
// ProcedureCodeName = id-PDUSessionResourceModifyIndication
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceModifyConfirm( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm * objPDUPDUSessionResourceModifyConfirm, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceModifyConfirm( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm * objPDUPDUSessionResourceModifyConfirm, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceModifyConfirm( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm * objPDUPDUSessionResourceModifyConfirm);

int __si_amf_memfree_pdu_PDUSessionResourceModifyConfirm( SI_AMF_DT_PDU_PDUSessionResourceModifyConfirm * objPDUPDUSessionResourceModifyConfirm);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceNotify  L:8387
// ProcedureCode = 30
// ProcedureCodeName = id-PDUSessionResourceNotify
// Criticality = ignore

int __si_amf_encode_pdu_PDUSessionResourceNotify( SI_AMF_DT_PDU_PDUSessionResourceNotify * objPDUPDUSessionResourceNotify, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceNotify( SI_AMF_DT_PDU_PDUSessionResourceNotify * objPDUPDUSessionResourceNotify, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceNotify( SI_AMF_DT_PDU_PDUSessionResourceNotify * objPDUPDUSessionResourceNotify);

int __si_amf_memfree_pdu_PDUSessionResourceNotify( SI_AMF_DT_PDU_PDUSessionResourceNotify * objPDUPDUSessionResourceNotify);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceRelease  L:8387
// ProcedureCode = 28
// ProcedureCodeName = id-PDUSessionResourceRelease
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceReleaseCommand( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand * objPDUPDUSessionResourceReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceReleaseCommand( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand * objPDUPDUSessionResourceReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceReleaseCommand( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand * objPDUPDUSessionResourceReleaseCommand);

int __si_amf_memfree_pdu_PDUSessionResourceReleaseCommand( SI_AMF_DT_PDU_PDUSessionResourceReleaseCommand * objPDUPDUSessionResourceReleaseCommand);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceRelease  L:8387
// ProcedureCode = 28
// ProcedureCodeName = id-PDUSessionResourceRelease
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceReleaseResponse( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse * objPDUPDUSessionResourceReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceReleaseResponse( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse * objPDUPDUSessionResourceReleaseResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceReleaseResponse( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse * objPDUPDUSessionResourceReleaseResponse);

int __si_amf_memfree_pdu_PDUSessionResourceReleaseResponse( SI_AMF_DT_PDU_PDUSessionResourceReleaseResponse * objPDUPDUSessionResourceReleaseResponse);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceSetup  L:8387
// ProcedureCode = 29
// ProcedureCodeName = id-PDUSessionResourceSetup
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceSetupRequest( SI_AMF_DT_PDU_PDUSessionResourceSetupRequest * objPDUPDUSessionResourceSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceSetupRequest( SI_AMF_DT_PDU_PDUSessionResourceSetupRequest * objPDUPDUSessionResourceSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceSetupRequest( SI_AMF_DT_PDU_PDUSessionResourceSetupRequest * objPDUPDUSessionResourceSetupRequest);

int __si_amf_memfree_pdu_PDUSessionResourceSetupRequest( SI_AMF_DT_PDU_PDUSessionResourceSetupRequest * objPDUPDUSessionResourceSetupRequest);



// ELEMENTARY-PROCEDURE = [0] pDUSessionResourceSetup  L:8387
// ProcedureCode = 29
// ProcedureCodeName = id-PDUSessionResourceSetup
// Criticality = reject

int __si_amf_encode_pdu_PDUSessionResourceSetupResponse( SI_AMF_DT_PDU_PDUSessionResourceSetupResponse * objPDUPDUSessionResourceSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PDUSessionResourceSetupResponse( SI_AMF_DT_PDU_PDUSessionResourceSetupResponse * objPDUPDUSessionResourceSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PDUSessionResourceSetupResponse( SI_AMF_DT_PDU_PDUSessionResourceSetupResponse * objPDUPDUSessionResourceSetupResponse);

int __si_amf_memfree_pdu_PDUSessionResourceSetupResponse( SI_AMF_DT_PDU_PDUSessionResourceSetupResponse * objPDUPDUSessionResourceSetupResponse);



// ELEMENTARY-PROCEDURE = [0] privateMessage  L:8387
// ProcedureCode = 31
// ProcedureCodeName = id-PrivateMessage
// Criticality = ignore

int __si_amf_encode_pdu_PrivateMessage( SI_AMF_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PrivateMessage( SI_AMF_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PrivateMessage( SI_AMF_DT_PDU_PrivateMessage * objPDUPrivateMessage);

int __si_amf_memfree_pdu_PrivateMessage( SI_AMF_DT_PDU_PrivateMessage * objPDUPrivateMessage);



// ELEMENTARY-PROCEDURE = [0] pWSCancel  L:8387
// ProcedureCode = 32
// ProcedureCodeName = id-PWSCancel
// Criticality = reject

int __si_amf_encode_pdu_PWSCancelRequest( SI_AMF_DT_PDU_PWSCancelRequest * objPDUPWSCancelRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PWSCancelRequest( SI_AMF_DT_PDU_PWSCancelRequest * objPDUPWSCancelRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PWSCancelRequest( SI_AMF_DT_PDU_PWSCancelRequest * objPDUPWSCancelRequest);

int __si_amf_memfree_pdu_PWSCancelRequest( SI_AMF_DT_PDU_PWSCancelRequest * objPDUPWSCancelRequest);



// ELEMENTARY-PROCEDURE = [0] pWSCancel  L:8387
// ProcedureCode = 32
// ProcedureCodeName = id-PWSCancel
// Criticality = reject

int __si_amf_encode_pdu_PWSCancelResponse( SI_AMF_DT_PDU_PWSCancelResponse * objPDUPWSCancelResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PWSCancelResponse( SI_AMF_DT_PDU_PWSCancelResponse * objPDUPWSCancelResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PWSCancelResponse( SI_AMF_DT_PDU_PWSCancelResponse * objPDUPWSCancelResponse);

int __si_amf_memfree_pdu_PWSCancelResponse( SI_AMF_DT_PDU_PWSCancelResponse * objPDUPWSCancelResponse);



// ELEMENTARY-PROCEDURE = [0] pWSFailureIndication  L:8387
// ProcedureCode = 33
// ProcedureCodeName = id-PWSFailureIndication
// Criticality = ignore

int __si_amf_encode_pdu_PWSFailureIndication( SI_AMF_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PWSFailureIndication( SI_AMF_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PWSFailureIndication( SI_AMF_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication);

int __si_amf_memfree_pdu_PWSFailureIndication( SI_AMF_DT_PDU_PWSFailureIndication * objPDUPWSFailureIndication);



// ELEMENTARY-PROCEDURE = [0] pWSRestartIndication  L:8387
// ProcedureCode = 34
// ProcedureCodeName = id-PWSRestartIndication
// Criticality = ignore

int __si_amf_encode_pdu_PWSRestartIndication( SI_AMF_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_PWSRestartIndication( SI_AMF_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_PWSRestartIndication( SI_AMF_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication);

int __si_amf_memfree_pdu_PWSRestartIndication( SI_AMF_DT_PDU_PWSRestartIndication * objPDUPWSRestartIndication);



// ELEMENTARY-PROCEDURE = [0] rANConfigurationUpdate  L:8387
// ProcedureCode = 35
// ProcedureCodeName = id-RANConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_RANConfigurationUpdate( SI_AMF_DT_PDU_RANConfigurationUpdate * objPDURANConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RANConfigurationUpdate( SI_AMF_DT_PDU_RANConfigurationUpdate * objPDURANConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RANConfigurationUpdate( SI_AMF_DT_PDU_RANConfigurationUpdate * objPDURANConfigurationUpdate);

int __si_amf_memfree_pdu_RANConfigurationUpdate( SI_AMF_DT_PDU_RANConfigurationUpdate * objPDURANConfigurationUpdate);



// ELEMENTARY-PROCEDURE = [0] rANConfigurationUpdate  L:8387
// ProcedureCode = 35
// ProcedureCodeName = id-RANConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_RANConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge * objPDURANConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RANConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge * objPDURANConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RANConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge * objPDURANConfigurationUpdateAcknowledge);

int __si_amf_memfree_pdu_RANConfigurationUpdateAcknowledge( SI_AMF_DT_PDU_RANConfigurationUpdateAcknowledge * objPDURANConfigurationUpdateAcknowledge);



// ELEMENTARY-PROCEDURE = [0] rANConfigurationUpdate  L:8387
// ProcedureCode = 35
// ProcedureCodeName = id-RANConfigurationUpdate
// Criticality = reject

int __si_amf_encode_pdu_RANConfigurationUpdateFailure( SI_AMF_DT_PDU_RANConfigurationUpdateFailure * objPDURANConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RANConfigurationUpdateFailure( SI_AMF_DT_PDU_RANConfigurationUpdateFailure * objPDURANConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RANConfigurationUpdateFailure( SI_AMF_DT_PDU_RANConfigurationUpdateFailure * objPDURANConfigurationUpdateFailure);

int __si_amf_memfree_pdu_RANConfigurationUpdateFailure( SI_AMF_DT_PDU_RANConfigurationUpdateFailure * objPDURANConfigurationUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] rANCPRelocationIndication  L:8387
// ProcedureCode = 57
// ProcedureCodeName = id-RANCPRelocationIndication
// Criticality = reject

int __si_amf_encode_pdu_RANCPRelocationIndication( SI_AMF_DT_PDU_RANCPRelocationIndication * objPDURANCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RANCPRelocationIndication( SI_AMF_DT_PDU_RANCPRelocationIndication * objPDURANCPRelocationIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RANCPRelocationIndication( SI_AMF_DT_PDU_RANCPRelocationIndication * objPDURANCPRelocationIndication);

int __si_amf_memfree_pdu_RANCPRelocationIndication( SI_AMF_DT_PDU_RANCPRelocationIndication * objPDURANCPRelocationIndication);



// ELEMENTARY-PROCEDURE = [0] rANPagingRequest  L:8387
// ProcedureCode = 79
// ProcedureCodeName = id-RANPagingRequest
// Criticality = ignore

int __si_amf_encode_pdu_RANPagingRequest( SI_AMF_DT_PDU_RANPagingRequest * objPDURANPagingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RANPagingRequest( SI_AMF_DT_PDU_RANPagingRequest * objPDURANPagingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RANPagingRequest( SI_AMF_DT_PDU_RANPagingRequest * objPDURANPagingRequest);

int __si_amf_memfree_pdu_RANPagingRequest( SI_AMF_DT_PDU_RANPagingRequest * objPDURANPagingRequest);



// ELEMENTARY-PROCEDURE = [0] rerouteNASRequest  L:8387
// ProcedureCode = 36
// ProcedureCodeName = id-RerouteNASRequest
// Criticality = reject

int __si_amf_encode_pdu_RerouteNASRequest( SI_AMF_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RerouteNASRequest( SI_AMF_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RerouteNASRequest( SI_AMF_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest);

int __si_amf_memfree_pdu_RerouteNASRequest( SI_AMF_DT_PDU_RerouteNASRequest * objPDURerouteNASRequest);



// ELEMENTARY-PROCEDURE = [0] retrieveUEInformation  L:8387
// ProcedureCode = 55
// ProcedureCodeName = id-RetrieveUEInformation
// Criticality = reject

int __si_amf_encode_pdu_RetrieveUEInformation( SI_AMF_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RetrieveUEInformation( SI_AMF_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RetrieveUEInformation( SI_AMF_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation);

int __si_amf_memfree_pdu_RetrieveUEInformation( SI_AMF_DT_PDU_RetrieveUEInformation * objPDURetrieveUEInformation);



// ELEMENTARY-PROCEDURE = [0] rRCInactiveTransitionReport  L:8387
// ProcedureCode = 37
// ProcedureCodeName = id-RRCInactiveTransitionReport
// Criticality = ignore

int __si_amf_encode_pdu_RRCInactiveTransitionReport( SI_AMF_DT_PDU_RRCInactiveTransitionReport * objPDURRCInactiveTransitionReport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_RRCInactiveTransitionReport( SI_AMF_DT_PDU_RRCInactiveTransitionReport * objPDURRCInactiveTransitionReport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_RRCInactiveTransitionReport( SI_AMF_DT_PDU_RRCInactiveTransitionReport * objPDURRCInactiveTransitionReport);

int __si_amf_memfree_pdu_RRCInactiveTransitionReport( SI_AMF_DT_PDU_RRCInactiveTransitionReport * objPDURRCInactiveTransitionReport);



// ELEMENTARY-PROCEDURE = [0] secondaryRATDataUsageReport  L:8387
// ProcedureCode = 52
// ProcedureCodeName = id-SecondaryRATDataUsageReport
// Criticality = ignore

int __si_amf_encode_pdu_SecondaryRATDataUsageReport( SI_AMF_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_SecondaryRATDataUsageReport( SI_AMF_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_SecondaryRATDataUsageReport( SI_AMF_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);

int __si_amf_memfree_pdu_SecondaryRATDataUsageReport( SI_AMF_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);



// ELEMENTARY-PROCEDURE = [0] timingSynchronisationStatus  L:8387
// ProcedureCode = 76
// ProcedureCodeName = id-TimingSynchronisationStatus
// Criticality = reject

int __si_amf_encode_pdu_TimingSynchronisationStatusRequest( SI_AMF_DT_PDU_TimingSynchronisationStatusRequest * objPDUTimingSynchronisationStatusRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TimingSynchronisationStatusRequest( SI_AMF_DT_PDU_TimingSynchronisationStatusRequest * objPDUTimingSynchronisationStatusRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TimingSynchronisationStatusRequest( SI_AMF_DT_PDU_TimingSynchronisationStatusRequest * objPDUTimingSynchronisationStatusRequest);

int __si_amf_memfree_pdu_TimingSynchronisationStatusRequest( SI_AMF_DT_PDU_TimingSynchronisationStatusRequest * objPDUTimingSynchronisationStatusRequest);



// ELEMENTARY-PROCEDURE = [0] timingSynchronisationStatus  L:8387
// ProcedureCode = 76
// ProcedureCodeName = id-TimingSynchronisationStatus
// Criticality = reject

int __si_amf_encode_pdu_TimingSynchronisationStatusResponse( SI_AMF_DT_PDU_TimingSynchronisationStatusResponse * objPDUTimingSynchronisationStatusResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TimingSynchronisationStatusResponse( SI_AMF_DT_PDU_TimingSynchronisationStatusResponse * objPDUTimingSynchronisationStatusResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TimingSynchronisationStatusResponse( SI_AMF_DT_PDU_TimingSynchronisationStatusResponse * objPDUTimingSynchronisationStatusResponse);

int __si_amf_memfree_pdu_TimingSynchronisationStatusResponse( SI_AMF_DT_PDU_TimingSynchronisationStatusResponse * objPDUTimingSynchronisationStatusResponse);



// ELEMENTARY-PROCEDURE = [0] timingSynchronisationStatus  L:8387
// ProcedureCode = 76
// ProcedureCodeName = id-TimingSynchronisationStatus
// Criticality = reject

int __si_amf_encode_pdu_TimingSynchronisationStatusFailure( SI_AMF_DT_PDU_TimingSynchronisationStatusFailure * objPDUTimingSynchronisationStatusFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TimingSynchronisationStatusFailure( SI_AMF_DT_PDU_TimingSynchronisationStatusFailure * objPDUTimingSynchronisationStatusFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TimingSynchronisationStatusFailure( SI_AMF_DT_PDU_TimingSynchronisationStatusFailure * objPDUTimingSynchronisationStatusFailure);

int __si_amf_memfree_pdu_TimingSynchronisationStatusFailure( SI_AMF_DT_PDU_TimingSynchronisationStatusFailure * objPDUTimingSynchronisationStatusFailure);



// ELEMENTARY-PROCEDURE = [0] timingSynchronisationStatusReport  L:8387
// ProcedureCode = 77
// ProcedureCodeName = id-TimingSynchronisationStatusReport
// Criticality = ignore

int __si_amf_encode_pdu_TimingSynchronisationStatusReport( SI_AMF_DT_PDU_TimingSynchronisationStatusReport * objPDUTimingSynchronisationStatusReport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TimingSynchronisationStatusReport( SI_AMF_DT_PDU_TimingSynchronisationStatusReport * objPDUTimingSynchronisationStatusReport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TimingSynchronisationStatusReport( SI_AMF_DT_PDU_TimingSynchronisationStatusReport * objPDUTimingSynchronisationStatusReport);

int __si_amf_memfree_pdu_TimingSynchronisationStatusReport( SI_AMF_DT_PDU_TimingSynchronisationStatusReport * objPDUTimingSynchronisationStatusReport);



// ELEMENTARY-PROCEDURE = [0] traceFailureIndication  L:8387
// ProcedureCode = 38
// ProcedureCodeName = id-TraceFailureIndication
// Criticality = ignore

int __si_amf_encode_pdu_TraceFailureIndication( SI_AMF_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TraceFailureIndication( SI_AMF_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TraceFailureIndication( SI_AMF_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication);

int __si_amf_memfree_pdu_TraceFailureIndication( SI_AMF_DT_PDU_TraceFailureIndication * objPDUTraceFailureIndication);



// ELEMENTARY-PROCEDURE = [0] traceStart  L:8387
// ProcedureCode = 39
// ProcedureCodeName = id-TraceStart
// Criticality = ignore

int __si_amf_encode_pdu_TraceStart( SI_AMF_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_TraceStart( SI_AMF_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_TraceStart( SI_AMF_DT_PDU_TraceStart * objPDUTraceStart);

int __si_amf_memfree_pdu_TraceStart( SI_AMF_DT_PDU_TraceStart * objPDUTraceStart);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8387
// ProcedureCode = 40
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_amf_encode_pdu_UEContextModificationRequest( SI_AMF_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextModificationRequest( SI_AMF_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextModificationRequest( SI_AMF_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest);

int __si_amf_memfree_pdu_UEContextModificationRequest( SI_AMF_DT_PDU_UEContextModificationRequest * objPDUUEContextModificationRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8387
// ProcedureCode = 40
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_amf_encode_pdu_UEContextModificationResponse( SI_AMF_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextModificationResponse( SI_AMF_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextModificationResponse( SI_AMF_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse);

int __si_amf_memfree_pdu_UEContextModificationResponse( SI_AMF_DT_PDU_UEContextModificationResponse * objPDUUEContextModificationResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextModification  L:8387
// ProcedureCode = 40
// ProcedureCodeName = id-UEContextModification
// Criticality = reject

int __si_amf_encode_pdu_UEContextModificationFailure( SI_AMF_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextModificationFailure( SI_AMF_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextModificationFailure( SI_AMF_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure);

int __si_amf_memfree_pdu_UEContextModificationFailure( SI_AMF_DT_PDU_UEContextModificationFailure * objPDUUEContextModificationFailure);



// ELEMENTARY-PROCEDURE = [0] uEContextRelease  L:8387
// ProcedureCode = 41
// ProcedureCodeName = id-UEContextRelease
// Criticality = reject

int __si_amf_encode_pdu_UEContextReleaseCommand( SI_AMF_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextReleaseCommand( SI_AMF_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextReleaseCommand( SI_AMF_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand);

int __si_amf_memfree_pdu_UEContextReleaseCommand( SI_AMF_DT_PDU_UEContextReleaseCommand * objPDUUEContextReleaseCommand);



// ELEMENTARY-PROCEDURE = [0] uEContextRelease  L:8387
// ProcedureCode = 41
// ProcedureCodeName = id-UEContextRelease
// Criticality = reject

int __si_amf_encode_pdu_UEContextReleaseComplete( SI_AMF_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextReleaseComplete( SI_AMF_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextReleaseComplete( SI_AMF_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete);

int __si_amf_memfree_pdu_UEContextReleaseComplete( SI_AMF_DT_PDU_UEContextReleaseComplete * objPDUUEContextReleaseComplete);



// ELEMENTARY-PROCEDURE = [0] uEContextReleaseRequest  L:8387
// ProcedureCode = 42
// ProcedureCodeName = id-UEContextReleaseRequest
// Criticality = ignore

int __si_amf_encode_pdu_UEContextReleaseRequest( SI_AMF_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextReleaseRequest( SI_AMF_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextReleaseRequest( SI_AMF_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest);

int __si_amf_memfree_pdu_UEContextReleaseRequest( SI_AMF_DT_PDU_UEContextReleaseRequest * objPDUUEContextReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8387
// ProcedureCode = 58
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_amf_encode_pdu_UEContextResumeRequest( SI_AMF_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextResumeRequest( SI_AMF_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextResumeRequest( SI_AMF_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest);

int __si_amf_memfree_pdu_UEContextResumeRequest( SI_AMF_DT_PDU_UEContextResumeRequest * objPDUUEContextResumeRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8387
// ProcedureCode = 58
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_amf_encode_pdu_UEContextResumeResponse( SI_AMF_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextResumeResponse( SI_AMF_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextResumeResponse( SI_AMF_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse);

int __si_amf_memfree_pdu_UEContextResumeResponse( SI_AMF_DT_PDU_UEContextResumeResponse * objPDUUEContextResumeResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextResume  L:8387
// ProcedureCode = 58
// ProcedureCodeName = id-UEContextResume
// Criticality = reject

int __si_amf_encode_pdu_UEContextResumeFailure( SI_AMF_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextResumeFailure( SI_AMF_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextResumeFailure( SI_AMF_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure);

int __si_amf_memfree_pdu_UEContextResumeFailure( SI_AMF_DT_PDU_UEContextResumeFailure * objPDUUEContextResumeFailure);



// ELEMENTARY-PROCEDURE = [0] uEContextSuspend  L:8387
// ProcedureCode = 59
// ProcedureCodeName = id-UEContextSuspend
// Criticality = reject

int __si_amf_encode_pdu_UEContextSuspendRequest( SI_AMF_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextSuspendRequest( SI_AMF_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextSuspendRequest( SI_AMF_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest);

int __si_amf_memfree_pdu_UEContextSuspendRequest( SI_AMF_DT_PDU_UEContextSuspendRequest * objPDUUEContextSuspendRequest);



// ELEMENTARY-PROCEDURE = [0] uEContextSuspend  L:8387
// ProcedureCode = 59
// ProcedureCodeName = id-UEContextSuspend
// Criticality = reject

int __si_amf_encode_pdu_UEContextSuspendResponse( SI_AMF_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextSuspendResponse( SI_AMF_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextSuspendResponse( SI_AMF_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse);

int __si_amf_memfree_pdu_UEContextSuspendResponse( SI_AMF_DT_PDU_UEContextSuspendResponse * objPDUUEContextSuspendResponse);



// ELEMENTARY-PROCEDURE = [0] uEContextSuspend  L:8387
// ProcedureCode = 59
// ProcedureCodeName = id-UEContextSuspend
// Criticality = reject

int __si_amf_encode_pdu_UEContextSuspendFailure( SI_AMF_DT_PDU_UEContextSuspendFailure * objPDUUEContextSuspendFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEContextSuspendFailure( SI_AMF_DT_PDU_UEContextSuspendFailure * objPDUUEContextSuspendFailure, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEContextSuspendFailure( SI_AMF_DT_PDU_UEContextSuspendFailure * objPDUUEContextSuspendFailure);

int __si_amf_memfree_pdu_UEContextSuspendFailure( SI_AMF_DT_PDU_UEContextSuspendFailure * objPDUUEContextSuspendFailure);



// ELEMENTARY-PROCEDURE = [0] uEInformationTransfer  L:8387
// ProcedureCode = 56
// ProcedureCodeName = id-UEInformationTransfer
// Criticality = reject

int __si_amf_encode_pdu_UEInformationTransfer( SI_AMF_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UEInformationTransfer( SI_AMF_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UEInformationTransfer( SI_AMF_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer);

int __si_amf_memfree_pdu_UEInformationTransfer( SI_AMF_DT_PDU_UEInformationTransfer * objPDUUEInformationTransfer);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityCheck  L:8387
// ProcedureCode = 43
// ProcedureCodeName = id-UERadioCapabilityCheck
// Criticality = reject

int __si_amf_encode_pdu_UERadioCapabilityCheckRequest( SI_AMF_DT_PDU_UERadioCapabilityCheckRequest * objPDUUERadioCapabilityCheckRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UERadioCapabilityCheckRequest( SI_AMF_DT_PDU_UERadioCapabilityCheckRequest * objPDUUERadioCapabilityCheckRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UERadioCapabilityCheckRequest( SI_AMF_DT_PDU_UERadioCapabilityCheckRequest * objPDUUERadioCapabilityCheckRequest);

int __si_amf_memfree_pdu_UERadioCapabilityCheckRequest( SI_AMF_DT_PDU_UERadioCapabilityCheckRequest * objPDUUERadioCapabilityCheckRequest);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityCheck  L:8387
// ProcedureCode = 43
// ProcedureCodeName = id-UERadioCapabilityCheck
// Criticality = reject

int __si_amf_encode_pdu_UERadioCapabilityCheckResponse( SI_AMF_DT_PDU_UERadioCapabilityCheckResponse * objPDUUERadioCapabilityCheckResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UERadioCapabilityCheckResponse( SI_AMF_DT_PDU_UERadioCapabilityCheckResponse * objPDUUERadioCapabilityCheckResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UERadioCapabilityCheckResponse( SI_AMF_DT_PDU_UERadioCapabilityCheckResponse * objPDUUERadioCapabilityCheckResponse);

int __si_amf_memfree_pdu_UERadioCapabilityCheckResponse( SI_AMF_DT_PDU_UERadioCapabilityCheckResponse * objPDUUERadioCapabilityCheckResponse);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityIDMapping  L:8387
// ProcedureCode = 60
// ProcedureCodeName = id-UERadioCapabilityIDMapping
// Criticality = reject

int __si_amf_encode_pdu_UERadioCapabilityIDMappingRequest( SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UERadioCapabilityIDMappingRequest( SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UERadioCapabilityIDMappingRequest( SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest);

int __si_amf_memfree_pdu_UERadioCapabilityIDMappingRequest( SI_AMF_DT_PDU_UERadioCapabilityIDMappingRequest * objPDUUERadioCapabilityIDMappingRequest);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityIDMapping  L:8387
// ProcedureCode = 60
// ProcedureCodeName = id-UERadioCapabilityIDMapping
// Criticality = reject

int __si_amf_encode_pdu_UERadioCapabilityIDMappingResponse( SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UERadioCapabilityIDMappingResponse( SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UERadioCapabilityIDMappingResponse( SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse);

int __si_amf_memfree_pdu_UERadioCapabilityIDMappingResponse( SI_AMF_DT_PDU_UERadioCapabilityIDMappingResponse * objPDUUERadioCapabilityIDMappingResponse);



// ELEMENTARY-PROCEDURE = [0] uERadioCapabilityInfoIndication  L:8387
// ProcedureCode = 44
// ProcedureCodeName = id-UERadioCapabilityInfoIndication
// Criticality = ignore

int __si_amf_encode_pdu_UERadioCapabilityInfoIndication( SI_AMF_DT_PDU_UERadioCapabilityInfoIndication * objPDUUERadioCapabilityInfoIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UERadioCapabilityInfoIndication( SI_AMF_DT_PDU_UERadioCapabilityInfoIndication * objPDUUERadioCapabilityInfoIndication, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UERadioCapabilityInfoIndication( SI_AMF_DT_PDU_UERadioCapabilityInfoIndication * objPDUUERadioCapabilityInfoIndication);

int __si_amf_memfree_pdu_UERadioCapabilityInfoIndication( SI_AMF_DT_PDU_UERadioCapabilityInfoIndication * objPDUUERadioCapabilityInfoIndication);



// ELEMENTARY-PROCEDURE = [0] uETNLABindingRelease  L:8387
// ProcedureCode = 45
// ProcedureCodeName = id-UETNLABindingRelease
// Criticality = ignore

int __si_amf_encode_pdu_UETNLABindingReleaseRequest( SI_AMF_DT_PDU_UETNLABindingReleaseRequest * objPDUUETNLABindingReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UETNLABindingReleaseRequest( SI_AMF_DT_PDU_UETNLABindingReleaseRequest * objPDUUETNLABindingReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UETNLABindingReleaseRequest( SI_AMF_DT_PDU_UETNLABindingReleaseRequest * objPDUUETNLABindingReleaseRequest);

int __si_amf_memfree_pdu_UETNLABindingReleaseRequest( SI_AMF_DT_PDU_UETNLABindingReleaseRequest * objPDUUETNLABindingReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] uplinkNASTransport  L:8387
// ProcedureCode = 46
// ProcedureCodeName = id-UplinkNASTransport
// Criticality = ignore

int __si_amf_encode_pdu_UplinkNASTransport( SI_AMF_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkNASTransport( SI_AMF_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkNASTransport( SI_AMF_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport);

int __si_amf_memfree_pdu_UplinkNASTransport( SI_AMF_DT_PDU_UplinkNASTransport * objPDUUplinkNASTransport);



// ELEMENTARY-PROCEDURE = [0] uplinkNonUEAssociatedNRPPaTransport  L:8387
// ProcedureCode = 47
// ProcedureCodeName = id-UplinkNonUEAssociatedNRPPaTransport
// Criticality = ignore

int __si_amf_encode_pdu_UplinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport * objPDUUplinkNonUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport * objPDUUplinkNonUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport * objPDUUplinkNonUEAssociatedNRPPaTransport);

int __si_amf_memfree_pdu_UplinkNonUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkNonUEAssociatedNRPPaTransport * objPDUUplinkNonUEAssociatedNRPPaTransport);



// ELEMENTARY-PROCEDURE = [0] uplinkRANConfigurationTransfer  L:8387
// ProcedureCode = 48
// ProcedureCodeName = id-UplinkRANConfigurationTransfer
// Criticality = ignore

int __si_amf_encode_pdu_UplinkRANConfigurationTransfer( SI_AMF_DT_PDU_UplinkRANConfigurationTransfer * objPDUUplinkRANConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkRANConfigurationTransfer( SI_AMF_DT_PDU_UplinkRANConfigurationTransfer * objPDUUplinkRANConfigurationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkRANConfigurationTransfer( SI_AMF_DT_PDU_UplinkRANConfigurationTransfer * objPDUUplinkRANConfigurationTransfer);

int __si_amf_memfree_pdu_UplinkRANConfigurationTransfer( SI_AMF_DT_PDU_UplinkRANConfigurationTransfer * objPDUUplinkRANConfigurationTransfer);



// ELEMENTARY-PROCEDURE = [0] uplinkRANEarlyStatusTransfer  L:8387
// ProcedureCode = 62
// ProcedureCodeName = id-UplinkRANEarlyStatusTransfer
// Criticality = reject

int __si_amf_encode_pdu_UplinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer * objPDUUplinkRANEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer * objPDUUplinkRANEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer * objPDUUplinkRANEarlyStatusTransfer);

int __si_amf_memfree_pdu_UplinkRANEarlyStatusTransfer( SI_AMF_DT_PDU_UplinkRANEarlyStatusTransfer * objPDUUplinkRANEarlyStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] uplinkRANStatusTransfer  L:8387
// ProcedureCode = 49
// ProcedureCodeName = id-UplinkRANStatusTransfer
// Criticality = ignore

int __si_amf_encode_pdu_UplinkRANStatusTransfer( SI_AMF_DT_PDU_UplinkRANStatusTransfer * objPDUUplinkRANStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkRANStatusTransfer( SI_AMF_DT_PDU_UplinkRANStatusTransfer * objPDUUplinkRANStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkRANStatusTransfer( SI_AMF_DT_PDU_UplinkRANStatusTransfer * objPDUUplinkRANStatusTransfer);

int __si_amf_memfree_pdu_UplinkRANStatusTransfer( SI_AMF_DT_PDU_UplinkRANStatusTransfer * objPDUUplinkRANStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] uplinkUEAssociatedNRPPaTransport  L:8387
// ProcedureCode = 50
// ProcedureCodeName = id-UplinkUEAssociatedNRPPaTransport
// Criticality = ignore

int __si_amf_encode_pdu_UplinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport * objPDUUplinkUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport * objPDUUplinkUEAssociatedNRPPaTransport, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport * objPDUUplinkUEAssociatedNRPPaTransport);

int __si_amf_memfree_pdu_UplinkUEAssociatedNRPPaTransport( SI_AMF_DT_PDU_UplinkUEAssociatedNRPPaTransport * objPDUUplinkUEAssociatedNRPPaTransport);



// ELEMENTARY-PROCEDURE = [0] writeReplaceWarning  L:8387
// ProcedureCode = 51
// ProcedureCodeName = id-WriteReplaceWarning
// Criticality = reject

int __si_amf_encode_pdu_WriteReplaceWarningRequest( SI_AMF_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_WriteReplaceWarningRequest( SI_AMF_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_WriteReplaceWarningRequest( SI_AMF_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest);

int __si_amf_memfree_pdu_WriteReplaceWarningRequest( SI_AMF_DT_PDU_WriteReplaceWarningRequest * objPDUWriteReplaceWarningRequest);



// ELEMENTARY-PROCEDURE = [0] writeReplaceWarning  L:8387
// ProcedureCode = 51
// ProcedureCodeName = id-WriteReplaceWarning
// Criticality = reject

int __si_amf_encode_pdu_WriteReplaceWarningResponse( SI_AMF_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_WriteReplaceWarningResponse( SI_AMF_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_WriteReplaceWarningResponse( SI_AMF_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse);

int __si_amf_memfree_pdu_WriteReplaceWarningResponse( SI_AMF_DT_PDU_WriteReplaceWarningResponse * objPDUWriteReplaceWarningResponse);



// ELEMENTARY-PROCEDURE = [0] uplinkRIMInformationTransfer  L:8387
// ProcedureCode = 53
// ProcedureCodeName = id-UplinkRIMInformationTransfer
// Criticality = ignore

int __si_amf_encode_pdu_UplinkRIMInformationTransfer( SI_AMF_DT_PDU_UplinkRIMInformationTransfer * objPDUUplinkRIMInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_UplinkRIMInformationTransfer( SI_AMF_DT_PDU_UplinkRIMInformationTransfer * objPDUUplinkRIMInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_UplinkRIMInformationTransfer( SI_AMF_DT_PDU_UplinkRIMInformationTransfer * objPDUUplinkRIMInformationTransfer);

int __si_amf_memfree_pdu_UplinkRIMInformationTransfer( SI_AMF_DT_PDU_UplinkRIMInformationTransfer * objPDUUplinkRIMInformationTransfer);



// ELEMENTARY-PROCEDURE = [0] downlinkRIMInformationTransfer  L:8387
// ProcedureCode = 54
// ProcedureCodeName = id-DownlinkRIMInformationTransfer
// Criticality = ignore

int __si_amf_encode_pdu_DownlinkRIMInformationTransfer( SI_AMF_DT_PDU_DownlinkRIMInformationTransfer * objPDUDownlinkRIMInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_decode_pdu_DownlinkRIMInformationTransfer( SI_AMF_DT_PDU_DownlinkRIMInformationTransfer * objPDUDownlinkRIMInformationTransfer, SI_ASN_CodingContext * codingContext);

int __si_amf_debug_pdu_DownlinkRIMInformationTransfer( SI_AMF_DT_PDU_DownlinkRIMInformationTransfer * objPDUDownlinkRIMInformationTransfer);

int __si_amf_memfree_pdu_DownlinkRIMInformationTransfer( SI_AMF_DT_PDU_DownlinkRIMInformationTransfer * objPDUDownlinkRIMInformationTransfer);












#pragma pack(pop)
#endif


